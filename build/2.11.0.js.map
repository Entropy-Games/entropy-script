{"version":3,"file":"2.11.0.js","mappings":"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","sources":["webpack://es/webpack/universalModuleDefinition","webpack://es/webpack/bootstrap","webpack://es/webpack/runtime/define property getters","webpack://es/webpack/runtime/hasOwnProperty shorthand","webpack://es/webpack/runtime/make namespace object","webpack://es/./src/position.ts","webpack://es/./src/constants.ts","webpack://es/./src/runtime/primitives/primitive.ts","webpack://es/./src/runtime/primitives/esprimitive.ts","webpack://es/./src/runtime/primitives/esnumber.ts","webpack://es/./src/runtime/primitives/esboolean.ts","webpack://es/./src/runtime/primitives/eserrorprimitive.ts","webpack://es/./src/runtime/instantiator.ts","webpack://es/./src/runtime/primitives/estype.ts","webpack://es/./src/runtime/primitives/esobject.ts","webpack://es/./src/runtime/primitives/esnamespace.ts","webpack://es/./src/runtime/primitives/esjsbinding.ts","webpack://es/./src/runtime/primitiveTypes.ts","webpack://es/./src/runtime/primitives/esfunction.ts","webpack://es/./src/runtime/functionCaller.ts","webpack://es/./src/runtime/context.ts","webpack://es/./src/runtime/primitives/esundefined.ts","webpack://es/./src/runtime/primitives/esarray.ts","webpack://es/./src/runtime/primitives/esstring.ts","webpack://es/./src/runtime/symbol.ts","webpack://es/./src/runtime/primitives/wrapStrip.ts","webpack://es/./src/util/colours.ts","webpack://es/./src/built-in/builtInFunctions.ts","webpack://es/./src/built-in/built-in-modules/json.ts","webpack://es/./src/built-in/builtInModules.ts","webpack://es/./src/built-in/built-in-modules/ascii.ts","webpack://es/./src/init.ts","webpack://es/./src/built-in/globalConstants.ts","webpack://es/./src/built-in/built-in-modules/promise.ts","webpack://es/./src/built-in/built-in-modules/time.ts","webpack://es/./src/built-in/built-in-modules/dom.ts","webpack://es/./src/runtime/argument.ts","webpack://es/./src/runtime/nodes.ts","webpack://es/./src/util/util.ts","webpack://es/./src/errors.ts","webpack://es/./src/parse/tokens.ts","webpack://es/./src/parse/lexer.ts","webpack://es/./src/parse/parser.ts","webpack://es/./src/index.ts","webpack://es/./src/built-in/nodeLibs.ts","webpack://es/./src/built-in/compiledSTD/std.txt.js","webpack://es/./src/built-in/compiledSTD/std.txt.py"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"es\"] = factory();\n\telse\n\t\troot[\"es\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Position {\n    constructor(idx, ln, col, file = '(unknown)') {\n        this.idx = idx;\n        this.ln = ln;\n        this.col = col;\n        this.file = file;\n    }\n    advance(currentChar = '') {\n        this.idx++;\n        this.col++;\n        if (currentChar === '\\n') {\n            this.ln++;\n            this.col = 0;\n        }\n        return this;\n    }\n    get clone() {\n        return new Position(this.idx, this.ln, this.col, this.file);\n    }\n    get str() {\n        return `File ${this.file}, ${this.ln + 1}:${this.col + 1}`;\n    }\n    get isUnknown() {\n        return this.idx === -2;\n    }\n    static get void() {\n        return new Position(-2, -2, -2, '(unknown)');\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const digits = '0123456789';\nexport const identifierChars = '_$abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nexport const singleLineComment = '//';\nexport const multiLineCommentStart = '/*';\nexport const multiLineCommentEnd = '*/';\nexport let global;\nexport const setGlobalContext = (c) => void (global = c);\nexport const stringSurrounds = ['\\'', '`', '\"'];\nexport let IS_NODE_INSTANCE = typeof window === 'undefined';\nexport const runningInNode = () => void (IS_NODE_INSTANCE = true);\nexport const VAR_DECLARE_KEYWORDS = ['var', 'let', 'global', 'mutable', 'const', 'local'];\nimport PACKAGE_JSON from '../package.json';\nexport const VERSION = PACKAGE_JSON['version'];\nexport let permissions = {\n    networking: false,\n    imports: true,\n    accessDOM: false,\n    useSTD: true,\n    fileSystem: false,\n};\nexport function updatePermissions(newPermissions) {\n    permissions = Object.assign(Object.assign({}, permissions), newPermissions);\n}\nexport const libs = {\n    print: console.log\n};\nexport const catchBlockErrorSymbolName = 'err';\nexport const KEYWORDS = [\n    'var',\n    'let',\n    'global',\n    'local',\n    'mutable',\n    'const',\n    'if',\n    'else',\n    'while',\n    'for',\n    'in',\n    'continue',\n    'break',\n    'func',\n    'return',\n    'yield',\n    'class',\n    'extends',\n    'namespace',\n    'export',\n    'try',\n    'catch'\n];\nexport let now = () => 0;\nexport function refreshPerformanceNow(IS_NODE_INSTANCE) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (IS_NODE_INSTANCE) {\n            now = () => Date.now();\n        }\n        else {\n            now = () => {\n                try {\n                    return performance === null || performance === void 0 ? void 0 : performance.now();\n                }\n                catch (e) {\n                    return 0;\n                }\n            };\n        }\n    });\n}\nrefreshPerformanceNow(IS_NODE_INSTANCE);\nexport var tokenType;\n(function (tokenType) {\n    tokenType[tokenType[\"NUMBER\"] = 0] = \"NUMBER\";\n    tokenType[tokenType[\"STRING\"] = 1] = \"STRING\";\n    tokenType[tokenType[\"ENDSTATEMENT\"] = 2] = \"ENDSTATEMENT\";\n    tokenType[tokenType[\"IDENTIFIER\"] = 3] = \"IDENTIFIER\";\n    tokenType[tokenType[\"KEYWORD\"] = 4] = \"KEYWORD\";\n    tokenType[tokenType[\"COMMA\"] = 5] = \"COMMA\";\n    tokenType[tokenType[\"ASSIGN\"] = 6] = \"ASSIGN\";\n    tokenType[tokenType[\"ADD\"] = 7] = \"ADD\";\n    tokenType[tokenType[\"SUB\"] = 8] = \"SUB\";\n    tokenType[tokenType[\"MUL\"] = 9] = \"MUL\";\n    tokenType[tokenType[\"DIV\"] = 10] = \"DIV\";\n    tokenType[tokenType[\"POW\"] = 11] = \"POW\";\n    tokenType[tokenType[\"MOD\"] = 12] = \"MOD\";\n    tokenType[tokenType[\"OPAREN\"] = 13] = \"OPAREN\";\n    tokenType[tokenType[\"CPAREN\"] = 14] = \"CPAREN\";\n    tokenType[tokenType[\"OBRACES\"] = 15] = \"OBRACES\";\n    tokenType[tokenType[\"CBRACES\"] = 16] = \"CBRACES\";\n    tokenType[tokenType[\"OSQUARE\"] = 17] = \"OSQUARE\";\n    tokenType[tokenType[\"CSQUARE\"] = 18] = \"CSQUARE\";\n    tokenType[tokenType[\"EQUALS\"] = 19] = \"EQUALS\";\n    tokenType[tokenType[\"NOTEQUALS\"] = 20] = \"NOTEQUALS\";\n    tokenType[tokenType[\"NOT\"] = 21] = \"NOT\";\n    tokenType[tokenType[\"GT\"] = 22] = \"GT\";\n    tokenType[tokenType[\"LT\"] = 23] = \"LT\";\n    tokenType[tokenType[\"GTE\"] = 24] = \"GTE\";\n    tokenType[tokenType[\"LTE\"] = 25] = \"LTE\";\n    tokenType[tokenType[\"AND\"] = 26] = \"AND\";\n    tokenType[tokenType[\"OR\"] = 27] = \"OR\";\n    tokenType[tokenType[\"COLON\"] = 28] = \"COLON\";\n    tokenType[tokenType[\"DOT\"] = 29] = \"DOT\";\n    tokenType[tokenType[\"EOF\"] = 30] = \"EOF\";\n    tokenType[tokenType[\"PIPE\"] = 31] = \"PIPE\";\n    tokenType[tokenType[\"APMERSAND\"] = 32] = \"APMERSAND\";\n    tokenType[tokenType[\"BITWISE_NOT\"] = 33] = \"BITWISE_NOT\";\n})(tokenType || (tokenType = {}));\nexport let tt = tokenType;\nexport const tokenTypeString = {\n    [tt.NUMBER]: 'Number',\n    [tt.STRING]: 'String',\n    [tt.ENDSTATEMENT]: ';',\n    [tt.IDENTIFIER]: 'Identifier',\n    [tt.KEYWORD]: 'Keyword',\n    [tt.COMMA]: ',',\n    [tt.OBRACES]: '{',\n    [tt.CBRACES]: '}',\n    [tt.OPAREN]: '(',\n    [tt.CPAREN]: ')',\n    [tt.OSQUARE]: '[',\n    [tt.CSQUARE]: ']',\n    [tt.ASSIGN]: '=',\n    [tt.ADD]: '+',\n    [tt.SUB]: '-',\n    [tt.MUL]: '*',\n    [tt.DIV]: '/',\n    [tt.POW]: '^',\n    [tt.MOD]: '%',\n    [tt.EQUALS]: '==',\n    [tt.NOTEQUALS]: '!=',\n    [tt.NOT]: '!',\n    [tt.GT]: '>',\n    [tt.LT]: '<',\n    [tt.GTE]: '>=',\n    [tt.LTE]: '<=',\n    [tt.AND]: '&&',\n    [tt.OR]: '||',\n    [tt.COLON]: ':',\n    [tt.DOT]: '.',\n    [tt.EOF]: 'End of File',\n    [tt.APMERSAND]: '&',\n    [tt.PIPE]: '|',\n    [tt.BITWISE_NOT]: '~',\n};\nexport const singleCharTokens = {\n    '*': tt.MUL,\n    '/': tt.DIV,\n    '+': tt.ADD,\n    '-': tt.SUB,\n    '(': tt.OPAREN,\n    ')': tt.CPAREN,\n    '^': tt.POW,\n    '%': tt.MOD,\n    '{': tt.OBRACES,\n    '}': tt.CBRACES,\n    ',': tt.COMMA,\n    '[': tt.OSQUARE,\n    ']': tt.CSQUARE,\n    ';': tt.ENDSTATEMENT,\n    ':': tt.COLON,\n    '.': tt.DOT,\n    '=': tt.ASSIGN,\n    '>': tt.GT,\n    '<': tt.LT,\n    '!': tt.NOT,\n    '|': tt.PIPE,\n    '&': tt.APMERSAND,\n    '~': tt.BITWISE_NOT\n};\nexport const doubleCharTokens = {\n    '==': tt.EQUALS,\n    '!=': tt.NOTEQUALS,\n    '>=': tt.GTE,\n    '<=': tt.LTE,\n    '+=': tt.ASSIGN,\n    '-=': tt.ASSIGN,\n    '*=': tt.ASSIGN,\n    '/=': tt.ASSIGN,\n    '&&': tt.AND,\n    '||': tt.OR\n};\nexport const tripleCharTokens = {};\nexport const primitiveMethods = [\n    '__add__',\n    '__subtract__',\n    '__multiply__',\n    '__divide__',\n    '__pow__',\n    '__eq__',\n    '__gt__',\n    '__lt__',\n    '__and__',\n    '__or__',\n    '__bool__',\n    '__setProperty__',\n    '__getProperty__',\n    '__call__',\n];\n","export const types = {};\n","import { InvalidOperationError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { types } from './primitive';\nimport { str } from '../../util/util';\nimport { strip } from './wrapStrip';\nexport class ESPrimitive {\n    constructor(value, type = types.any) {\n        this.self = this;\n        this.isa = (props, type) => {\n            return new ESBoolean(type === this.__type__);\n        };\n        this.is = (props, obj) => {\n            return new ESBoolean(obj === this);\n        };\n        this.valueOf = () => this.__value__;\n        this.typeName = () => this.__type__.__name__;\n        this.hasProperty = (props, key) => new ESBoolean(this.hasOwnProperty(str(key)));\n        this.describe = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            this.info.description = str(info);\n        };\n        this.detail = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            const res = strip(info, props);\n            if (typeof res !== 'object') {\n                return new TypeError(Position.void, 'object', this.typeName(), str(this));\n            }\n            this.info = Object.assign(Object.assign({}, this.info), res);\n            this.info.isBuiltIn = false;\n        };\n        this.__type__ = type || this;\n        this.__value__ = value;\n        this.info = {};\n    }\n    __add__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __subtract__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __multiply__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __divide__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __pow__(props, n) {\n        return new InvalidOperationError('__pow__', this);\n    }\n    __mod__(props, n) {\n        return new InvalidOperationError('__mod__', this);\n    }\n    __eq__(props, n) {\n        return new InvalidOperationError('__eq__', this);\n    }\n    __gt__(props, n) {\n        return new InvalidOperationError('__gt__', this);\n    }\n    __lt__(props, n) {\n        return new InvalidOperationError('__lt__', this);\n    }\n    __and__(props, n) {\n        return new InvalidOperationError('__and__', this);\n    }\n    __or__(props, n) {\n        return new InvalidOperationError('__or__', this);\n    }\n    __bool__(props) {\n        return new InvalidOperationError('__bool__', this);\n    }\n    __pipe__(props, n) {\n        return new InvalidOperationError('__pipe__', this);\n    }\n    __ampersand__(props, n) {\n        return new InvalidOperationError('__ampersand__', this);\n    }\n    __setProperty__(props, key, value) {\n        return new InvalidOperationError('__setProperty__', this, `[${str(key)}] = ${str(value)}`);\n    }\n    __call__(props, ...parameters) {\n        return new InvalidOperationError('__call__', this);\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nexport class ESNumber extends ESPrimitive {\n    constructor(value = 0) {\n        super(value, types.number);\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return this;\n                case types.string:\n                    return this.str();\n                case types.array:\n                    return new ESArray(new Array(this.valueOf()));\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(this.valueOf().toString());\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() + n.valueOf());\n        };\n        this.__subtract__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() - n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() * n.valueOf());\n        };\n        this.__divide__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() / n.valueOf());\n        };\n        this.__pow__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESNumber(Math.pow(this.valueOf(), n.valueOf()));\n        };\n        this.__mod__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESNumber(this.valueOf() % n.valueOf());\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new ESBoolean(false);\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() > n.valueOf());\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() < n.valueOf());\n        };\n        this.__bool__ = () => {\n            return new ESBoolean(this.valueOf() > 0);\n        };\n        this.bool = this.__bool__;\n        this.clone = () => new ESNumber(this.valueOf());\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nexport class ESBoolean extends ESPrimitive {\n    constructor(val = false) {\n        super(Boolean(val), types.bool);\n        this.__getProperty__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESBoolean)) {\n                return new TypeError(Position.void, 'Boolean', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__bool__ = () => this;\n        this.__and__ = (props, n) => new ESBoolean(this.valueOf() && n.bool().valueOf());\n        this.__or__ = (props, n) => {\n            return new ESBoolean(this.valueOf() || n.bool().valueOf());\n        };\n        this.str = () => new ESString(this.valueOf() ? 'true' : 'false');\n        this.clone = () => new ESBoolean(this.valueOf());\n        this.bool = () => this;\n        this.info = {\n            name: str(val),\n            description: `Boolean global constant which evaluates to ${str(val)}, the opposite of ${str(!val)}`,\n            file: 'built-in',\n            isBuiltIn: true,\n            helpLink: 'https://en.wikipedia.org/wiki/Boolean_expression'\n        };\n    }\n}\n","import { ESPrimitive } from './esprimitive';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nimport { str } from \"../../util/util\";\nimport { ESArray } from \"./esarray\";\nexport class ESErrorPrimitive extends ESPrimitive {\n    constructor(error = new ESError(Position.void, 'Unknown', 'Error not specified')) {\n        super(error, types.error);\n        this.__getProperty__ = (props, key) => {\n            switch (str(key)) {\n                case 'name':\n                    return new ESString(this.valueOf().name);\n                case 'details':\n                    return new ESString(this.valueOf().details);\n                case 'traceback':\n                    return new ESArray(this.valueOf().traceback\n                        .map(s => new ESString(`${s.position.str} : ${s.line}`)));\n                default:\n                    if (this.self.hasOwnProperty(str(key))) {\n                        return wrap(this.self[str(key)], true);\n                    }\n                    return new IndexError(Position.void, key.valueOf(), this);\n            }\n        };\n        this.cast = () => new ESError(Position.void, 'TypeError', `Cannot cast type 'error'`);\n        this.str = () => new ESString(`<Error: ${this.valueOf().str}>`);\n        this.__eq__ = (props, n) => new ESBoolean(n instanceof ESErrorPrimitive &&\n            this.valueOf().constructor === n.valueOf().constructor);\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.clone = () => new ESErrorPrimitive(this.valueOf());\n    }\n}\n","import { primitiveMethods } from '../constants';\nimport { Context } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESFunction, ESNumber, ESObject, ESString, ESType, ESUndefined } from \"./primitiveTypes\";\nfunction dealWithExtends(context, class_, instance, this_, callContext) {\n    if (!(class_ instanceof ESType)) {\n        return new TypeError(Position.void, 'Type', typeof class_, class_);\n    }\n    const superFunc = new ESFunction(({ context }, ...args) => {\n        const newContext = new Context();\n        newContext.parent = context;\n        if (class_.__extends__) {\n            let _a = dealWithExtends(newContext, class_.__extends__, instance, this_, callContext);\n            if (_a instanceof ESError) {\n                return _a;\n            }\n        }\n        const initFunc = class_ === null || class_ === void 0 ? void 0 : class_.__init__;\n        if (!initFunc) {\n            return;\n        }\n        initFunc.this_ = this_;\n        initFunc.__closure__ = newContext;\n        const res_ = initFunc.__call__({ context: newContext }, ...args);\n        if (res_ instanceof ESError) {\n            return res_;\n        }\n    }, undefined, 'super', this_);\n    let setRes = context.setOwn('super', superFunc);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    const res = createInstance(class_, { context }, [], false, instance);\n    if (res instanceof ESError) {\n        return res;\n    }\n}\nexport function createInstance(type, { context }, params, runInit = true, on = {}) {\n    var _b;\n    if (type.primitive) {\n        if (params.length < 1) {\n            return new ESUndefined();\n        }\n        switch (type.__name__) {\n            case 'Undefined':\n            case 'Type':\n                if (params.length < 1) {\n                    return new ESType();\n                }\n                else {\n                    return new ESString(params[0].__type__.__name__);\n                }\n            case 'String':\n                return new ESString(params[0].str().valueOf());\n            case 'Array':\n                return new ESArray(params);\n            case 'Number':\n                return new ESNumber(params[0].valueOf());\n            case 'Function':\n                return new ESFunction(params[0].valueOf());\n            case 'Boolean':\n                return new ESBoolean(params[0].bool().valueOf());\n            default:\n                return wrap(params[0]);\n        }\n    }\n    const newContext = new Context();\n    newContext.parent = (_b = type.__init__) === null || _b === void 0 ? void 0 : _b.__closure__;\n    const instance = new ESObject();\n    if (type.__extends__) {\n        let res = dealWithExtends(newContext, type.__extends__, on, instance, context);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__value__ = on;\n    for (let method of type.__methods__) {\n        const methodClone = method.clone();\n        methodClone.this_ = instance;\n        on[method.name] = methodClone;\n        if (primitiveMethods.indexOf(method.name) !== -1) {\n            instance[method.name] = methodClone.__call__;\n        }\n    }\n    if (runInit && type.__init__) {\n        type.__init__.this_ = instance;\n        type.__init__.__closure__ = newContext;\n        const res = type.__init__.__call__({ context: newContext }, ...params);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__type__ = type;\n    type.__instances__.push(instance);\n    return instance;\n}\n","import { IndexError, InvalidOperationError, TypeError } from '../../errors';\nimport { createInstance } from '../instantiator';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nimport { Position } from \"../../position\";\nimport { str } from \"../../util/util\";\nexport class ESType extends ESPrimitive {\n    constructor(isPrimitive = false, name = '(anon)', __methods__ = [], __extends__, __init__) {\n        super(undefined, types === null || types === void 0 ? void 0 : types.type);\n        this.__instances__ = [];\n        this.clone = () => {\n            return new ESType(this.primitive, this.__name__, this.__methods__, this.__extends__, this.__init__);\n        };\n        this.isa = (props, type) => {\n            return new ESBoolean(type === types.type);\n        };\n        this.cast = (props, type) => {\n            return new InvalidOperationError('cast', this);\n        };\n        this.resolve = (props, t) => {\n            var _a, _b, _c, _d, _e, _f;\n            if (this.__eq__(props, types.any).bool().valueOf() ||\n                t.__eq__(props, types.any).bool().valueOf() ||\n                (((_a = this.__extends__) === null || _a === void 0 ? void 0 : _a.__eq__(props, t).valueOf()) === true) ||\n                (((_b = this.__extends__) === null || _b === void 0 ? void 0 : _b.__eq__(props, types.any).valueOf()) === true) ||\n                (((_c = this.__extends__) === null || _c === void 0 ? void 0 : _c.resolve(props, t).valueOf()) === true) ||\n                (((_d = t.__extends__) === null || _d === void 0 ? void 0 : _d.__eq__(props, this).valueOf()) === true) ||\n                (((_e = t.__extends__) === null || _e === void 0 ? void 0 : _e.__eq__(props, types.any).valueOf()) === true) ||\n                (((_f = t.__extends__) === null || _f === void 0 ? void 0 : _f.resolve(props, this).valueOf()) === true)) {\n                return new ESBoolean(true);\n            }\n            return this.__eq__(props, t);\n        };\n        this.__eq__ = (props, t) => {\n            if (!(t instanceof ESType)) {\n                return new ESBoolean();\n            }\n            return new ESBoolean(t.__name__ === this.__name__ &&\n                t.primitive === this.primitive &&\n                Object.is(this.valueOf(), t.valueOf()));\n        };\n        this.__call__ = (props, ...params) => {\n            return createInstance(this, props, params || []);\n        };\n        this.str = () => new ESString(`<Type: ${this.__name__}>`);\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, k) => {\n            if (!(k instanceof ESString)) {\n                return new TypeError(Position.void, 'string', k.typeName(), str(k));\n            }\n            const key = k.valueOf();\n            if (this.self.hasOwnProperty(key)) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key, this);\n        };\n        this.primitive = isPrimitive;\n        this.__name__ = name;\n        this.info.name = name;\n        this.__extends__ = __extends__;\n        this.__methods__ = __methods__;\n        if (__init__) {\n            __init__.name = name;\n            this.__init__ = __init__;\n        }\n        if (!types.type) {\n            this.__type__ = this;\n        }\n    }\n    __pipe__(props, n) {\n        if (!(n instanceof ESType)) {\n            return new TypeError(Position.void, 'type', n.typeName(), str(n));\n        }\n        return new ESTypeUnion(this, n);\n    }\n}\nexport class ESTypeUnion extends ESType {\n    constructor(left, right) {\n        super(false, `(${left.__name__}) | (${right.__name__})`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.resolve = (props, t) => {\n            return new ESBoolean(this.__left__.resolve(props, t).valueOf() ||\n                this.__right__.resolve(props, t).valueOf());\n        };\n        this.clone = () => {\n            return new ESTypeUnion(this.__left__, this.__right__);\n        };\n        this.__left__ = left;\n        this.__right__ = right;\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { types } from './primitive';\nimport { strip, wrap } from './wrapStrip';\nexport class ESObject extends ESPrimitive {\n    constructor(val = {}) {\n        super(val, types.object);\n        this.isa = (props, type) => {\n            if (type === types.object) {\n                return new ESBoolean(true);\n            }\n            if (!(type instanceof ESType)) {\n                return new TypeError(Position.void, 'TypeError', 'type', str(type.typeName()), str(type));\n            }\n            return this.__type__.resolve(props, type);\n        };\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => {\n            let val = str(this.valueOf());\n            if (val[val.length - 1] === '\\n')\n                val = val.substr(0, val.length - 1);\n            return new ESString(`<ESObject ${val}>`);\n        };\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new ESBoolean();\n            }\n            if (n.keys.length !== this.keys.length) {\n                return new ESBoolean();\n            }\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const thisElement = this.valueOf()[key];\n                const nElement = n.valueOf()[key];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new TypeError(Position.void, 'object', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const res = this.__getProperty__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            for (let k of n.keys) {\n                const key = k.valueOf();\n                if (newOb.hasOwnProperty(key)) {\n                    continue;\n                }\n                const res = n.__getProperty__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            return new ESObject(newOb);\n        };\n        this.__subtract__ = (props, n) => {\n            let keysToRemove = [];\n            if (n instanceof ESString) {\n                keysToRemove = [str(n)];\n            }\n            else if (n instanceof ESArray) {\n                keysToRemove = strip(n, props);\n            }\n            else {\n                return new TypeError(Position.void, 'array | string', n.typeName().valueOf(), n);\n            }\n            if (!Array.isArray(keysToRemove)) {\n                return new TypeError(Position.void, 'array | string', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                if (keysToRemove.indexOf(key) === -1) {\n                    let res = this.__getProperty__(props, k);\n                    if (res instanceof ESError) {\n                        return res;\n                    }\n                    newOb[key] = res;\n                }\n            }\n            return new ESObject(newOb);\n        };\n        this.__getProperty__ = (props, k) => {\n            if (!(k instanceof ESString) && !(k instanceof ESNumber)) {\n                return new TypeError(Position.void, 'string | number', k.typeName(), str(k));\n            }\n            const key = k.valueOf();\n            if (this.valueOf().hasOwnProperty(key)) {\n                return this.valueOf()[key];\n            }\n            if (this.self.hasOwnProperty(key)) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new ESUndefined();\n        };\n        this.__setProperty__ = ({}, key, value) => {\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.void, 'string', key.typeName(), str(key));\n            }\n            this.__value__[key.valueOf()] = value;\n        };\n        this.hasProperty = (props, k) => {\n            const key = str(k);\n            if (this.valueOf().hasOwnProperty(str(key))) {\n                return new ESBoolean(true);\n            }\n            return new ESBoolean(this.hasOwnProperty(key));\n        };\n        this.clone = () => {\n            const res = new ESObject();\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            res.__value__ = obj;\n            return res;\n        };\n    }\n    get keys() {\n        return Object.keys(this.valueOf()).map(s => new ESString(s));\n    }\n    set keys(val) { }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { wrap } from './wrapStrip';\nexport class ESNamespace extends ESPrimitive {\n    constructor(name, value, mutable = false) {\n        super(value, types.object);\n        this.cast = ({}) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast type 'namespace'`);\n        };\n        this.clone = () => {\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            return new ESNamespace(this.name, obj);\n        };\n        this.str = () => {\n            const keys = Object.keys(this.valueOf());\n            return new ESString(`<Namespace ${str(this.name)}${keys.length > 0 ? ': ' : ''}${keys.slice(0, 5)}${keys.length >= 5 ? '...' : ''}>`);\n        };\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.valueOf().hasOwnProperty(key.valueOf())) {\n                const symbol = this.valueOf()[key.valueOf()];\n                if (symbol.isAccessible) {\n                    return symbol.value;\n                }\n            }\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.void, 'string', key.typeName());\n            }\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this.self);\n        };\n        this.info.name = str(name);\n        this.mutable = mutable;\n    }\n    get name() {\n        return new ESString(this.info.name);\n    }\n    set name(v) {\n        this.info.name = v.valueOf();\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESString)) {\n            return new TypeError(Position.void, 'string', key.typeName().valueOf(), str(key));\n        }\n        let idx = str(key);\n        if (!this.mutable) {\n            return new TypeError(Position.void, 'mutable', 'immutable', `${str(this.name)}`);\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        const symbol = this.__value__[idx];\n        if (!symbol) {\n            return new ESError(Position.void, 'SymbolError', `Symbol ${idx} is not declared in namespace ${str(this.name)}.`);\n        }\n        if (symbol.isConstant) {\n            return new TypeError(Position.void, 'mutable', 'immutable', `${str(this.name)}[${idx}]`);\n        }\n        if (!symbol.isAccessible) {\n            return new TypeError(Position.void, 'accessible', 'inaccessible', `${str(this.name)}[${idx}]`);\n        }\n        symbol.value = value;\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { strip, wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESJSBinding extends ESPrimitive {\n    constructor(value, name = '<AnonNative>', functionsTakeProps = false) {\n        super(value, types.object);\n        this.cast = (props) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast native object`);\n        };\n        this.clone = () => new ESJSBinding(this.__value__);\n        this.str = () => {\n            try {\n                return new ESString(JSON.stringify(this.__value__));\n            }\n            catch (e) {\n                return new ESString(`${this.__value__}`);\n            }\n        };\n        this.__eq__ = ({}, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, k) => {\n            const key = str(k);\n            const val = this.valueOf();\n            const res = val[key];\n            if (res === undefined) {\n                if (this.self.hasOwnProperty(key)) {\n                    return wrap(this.self[str(key)], true);\n                }\n                return new IndexError(Position.void, key, this);\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            if (typeof res === 'function') {\n                let fTakesProps = this.functionsTakeProps;\n                return new ESFunction((props, ...args) => {\n                    if (!fTakesProps) {\n                        args = args.map(o => strip(o, props));\n                        const res = val[key](...args);\n                        return wrap(res);\n                    }\n                    else {\n                        return val[key](props, ...args);\n                    }\n                });\n            }\n            return wrap(res);\n        };\n        this.__call__ = (props, ...args) => {\n            if (typeof this.__value__ !== 'function') {\n                return new TypeError(Position.void, 'function', typeof this.__value__, str(this));\n            }\n            let res;\n            if (this.functionsTakeProps) {\n                try {\n                    res = new this.__value__(props, ...args);\n                }\n                catch (_a) {\n                    res = this.__value__(props, ...args);\n                }\n            }\n            else {\n                try {\n                    res = new this.__value__(...args.map(o => strip(o, props)));\n                }\n                catch (_b) {\n                    res = this.__value__(...args.map(o => strip(o, props)));\n                }\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            return wrap(res);\n        };\n        this.hasProperty = (props, key) => {\n            return new ESBoolean(!(this.__getProperty__(props, key) instanceof ESError));\n        };\n        this.info.name = str(name);\n        this.functionsTakeProps = functionsTakeProps;\n    }\n}\n","import { types } from './primitives/primitive';\nimport { ESPrimitive } from './primitives/esprimitive';\nimport { ESArray } from './primitives/esarray';\nimport { ESBoolean } from './primitives/esboolean';\nimport { ESErrorPrimitive } from './primitives/eserrorprimitive';\nimport { ESFunction } from './primitives/esfunction';\nimport { ESNumber } from './primitives/esnumber';\nimport { ESObject } from './primitives/esobject';\nimport { ESString } from './primitives/esstring';\nimport { ESType } from './primitives/estype';\nimport { ESUndefined } from './primitives/esundefined';\nimport { ESNamespace } from './primitives/esnamespace';\nimport { ESJSBinding } from \"./primitives/esjsbinding\";\nexport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNumber, ESPrimitive, ESString, ESObject, ESType, ESUndefined, ESNamespace, ESJSBinding, types };\ntypes.type = new ESType(true, 'Type');\ntypes.undefined = new ESType(true, 'Undefined');\ntypes.string = new ESType(true, 'String');\ntypes.array = new ESType(true, 'Array');\ntypes.number = new ESType(true, 'Number');\ntypes.any = new ESType(true, 'Any');\ntypes.function = new ESType(true, 'Function');\ntypes.bool = new ESType(true, 'Boolean');\ntypes.object = new ESType(true, 'Object');\ntypes.error = new ESType(true, 'Error');\ntypes.any.info = {\n    name: 'any',\n    description: 'Matches any other type',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.number.info = {\n    name: 'any',\n    description: 'The ES Number type. Is a a double-precision 64-bit binary format IEEE 754 value, like double in Java and C#',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.string.info = {\n    name: 'string',\n    description: 'The ES String type. Holds an array of characters, and can be defined with any of \\', \" and `. Can be indexed like an array.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.bool.info = {\n    name: 'bool',\n    description: 'The ES Bool type. Exactly two instances exist, true and false.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.function.info = {\n    name: 'function',\n    description: 'The ES Function type. Is a block of code which executes when called and takes in 0+ parameters.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.array.info = {\n    name: 'array',\n    description: 'The ES Array type. Defines a set of items of any type which can be accessed by an index with [].',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.object.info = {\n    name: 'object',\n    description: 'The ES Object type. Similar to JS objects or python dictionaries.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.error.info = {\n    name: 'error',\n    description: 'The ES Error type. Call to throw an error.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.type.info = {\n    name: 'type',\n    description: 'The ES Type type. Call to get the type of a value at a string.',\n    file: 'built-in',\n    isBuiltIn: true\n};\n","import { ESPrimitive } from './esprimitive';\nimport { global } from '../../constants';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { Context } from '../context';\nimport { call } from '../functionCaller';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nexport class ESFunction extends ESPrimitive {\n    constructor(func = (() => { }), arguments_ = [], name = '(anon)', this_ = new ESObject(), returnType = types.any, closure) {\n        super(func, types.function);\n        this.cast = (props, type) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast type 'function'`);\n        };\n        this.clone = () => {\n            return new ESFunction(this.__value__, this.arguments_, this.name, this.this_, this.returnType, this.__closure__);\n        };\n        this.valueOf = () => this;\n        this.str = () => new ESString(`<Func: ${this.name}>`);\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESFunction))\n                return new ESBoolean(false);\n            return new ESBoolean(this.__value__ === n.__value__);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__call__ = ({ context }, ...params) => {\n            this.__closure__.path = context.path;\n            return call(this.__closure__, this, params);\n        };\n        this.__getProperty__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.arguments_ = arguments_;\n        this.info.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        if (closure) {\n            this.__closure__ = closure;\n        }\n        else {\n            this.__closure__ = new Context();\n            this.__closure__.parent = global;\n        }\n        this.info.returnType = str(returnType);\n        this.info.args = arguments_.map(arg => ({\n            name: arg.name,\n            defaultValue: str(arg.defaultValue),\n            type: arg.type.info.name,\n            required: true\n        }));\n    }\n    get name() {\n        var _a;\n        return (_a = this.info.name) !== null && _a !== void 0 ? _a : '(anonymous)';\n    }\n    set name(v) {\n        this.info.name = v;\n    }\n}\n","import { Node } from \"./nodes\";\nimport { generateESFunctionCallContext } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { ESObject, ESPrimitive, ESUndefined, types } from \"./primitiveTypes\";\nfunction callNode(self, context, params, fn) {\n    var _a, _b, _c, _d;\n    const res = fn.interpret(context);\n    if (res.error)\n        return res.error;\n    if (res.funcReturn !== undefined) {\n        res.val = res.funcReturn;\n        res.funcReturn = undefined;\n    }\n    if (self.returnType.resolve({ context }, (_b = (_a = res.val) === null || _a === void 0 ? void 0 : _a.__type__) !== null && _b !== void 0 ? _b : types.any).valueOf() === false) {\n        return new TypeError(Position.void, self.returnType.__name__, ((_c = res.val) === null || _c === void 0 ? void 0 : _c.typeName().valueOf()) || 'undefined', (_d = res.val) === null || _d === void 0 ? void 0 : _d.str().valueOf(), '(from function return)');\n    }\n    if (res.val) {\n        return res.val;\n    }\n    else {\n        return new ESUndefined();\n    }\n}\nfunction callNative(self, context, params, fn) {\n    for (let i = params.length; i < fn.length; i++)\n        params.push(new ESUndefined());\n    const res = fn({\n        context\n    }, ...params);\n    if (res instanceof ESError || res instanceof ESPrimitive) {\n        return res;\n    }\n    return new ESUndefined();\n}\nexport function call(context, self, params) {\n    var _a;\n    let callContext = context;\n    context = self.__closure__;\n    context.path = callContext.path;\n    const fn = self.__value__;\n    const newContext = generateESFunctionCallContext(params, self, context);\n    if (newContext instanceof ESError) {\n        return newContext;\n    }\n    let this_ = (_a = self.this_) !== null && _a !== void 0 ? _a : new ESObject();\n    if (!(this_ instanceof ESObject))\n        return new TypeError(Position.void, 'object', typeof this_, this_, '\\'this\\' must be an object');\n    let setRes = newContext.setOwn('this', this_);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    if (fn instanceof Node) {\n        return callNode(self, newContext, params, fn);\n    }\n    else if (typeof fn === 'function') {\n        return callNative(self, newContext, params, fn);\n    }\n    else {\n        return new TypeError(Position.void, 'function', typeof fn);\n    }\n}\n","import { initialise } from \"../init\";\nimport { ESError, TypeError, ReferenceError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESPrimitive, ESType, ESUndefined, types } from \"./primitiveTypes\";\nimport { str } from \"../util/util\";\nimport { ESSymbol } from './symbol';\nimport chalk from \"../util/colours\";\nexport class Context {\n    constructor() {\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        this.deleted = false;\n        this.path_ = '';\n    }\n    get path() {\n        if (this.path_ || !this.parent) {\n            return this.path_;\n        }\n        return this.parent.path;\n    }\n    set path(val) {\n        this.path_ = val;\n    }\n    get parent() {\n        return this.parent_;\n    }\n    set parent(val) {\n        if (val == this) {\n            console.error(chalk.red(`Setting context parent to self`));\n            return;\n        }\n        this.parent_ = val;\n    }\n    has(identifier) {\n        if (!identifier)\n            return false;\n        return this.get(identifier) !== undefined;\n    }\n    hasOwn(identifier) {\n        return this.symbolTable[identifier] instanceof ESSymbol;\n    }\n    get(identifier) {\n        let symbol = this.getSymbol(identifier);\n        if (symbol instanceof ESError || symbol == undefined) {\n            return symbol;\n        }\n        return symbol.value;\n    }\n    getRawSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key].value;\n        return symbols;\n    }\n    getSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key];\n        return symbols;\n    }\n    getSymbol(identifier) {\n        let symbol = this.symbolTable[identifier];\n        if (symbol !== undefined && !symbol.isAccessible)\n            return new TypeError(Position.void, 'assessable', 'inaccessible', symbol.identifier);\n        if (symbol === undefined && this.parent) {\n            let res = this.parent.getSymbol(identifier);\n            if (res instanceof ESError)\n                return res;\n            if (!res)\n                return new ReferenceError(Position.void, identifier);\n            symbol = res;\n        }\n        return symbol;\n    }\n    set(identifier, value, options = {}) {\n        let context = this;\n        if (options.global) {\n            context = this.root;\n        }\n        else {\n            while (!context.hasOwn(identifier) && context.parent !== undefined) {\n                context = context.parent;\n            }\n            if (!context.hasOwn(identifier)) {\n                context = this;\n            }\n        }\n        return context.setOwn(identifier, value, options);\n    }\n    setOwn(identifier, value, options = {}) {\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        if (options.global && !this.initialisedAsGlobal) {\n            options.global = false;\n        }\n        if (!options.forceThroughConst) {\n            let symbol = this.symbolTable[identifier];\n            if (symbol === null || symbol === void 0 ? void 0 : symbol.isConstant)\n                return new TypeError(Position.void, 'dynamic', 'constant', identifier);\n        }\n        this.symbolTable[identifier] = new ESSymbol(value, identifier, options);\n    }\n    remove(identifier) {\n        delete this.symbolTable[identifier];\n    }\n    clear() {\n        for (let symbol in this.symbolTable) {\n            this.remove(symbol);\n        }\n        this.parent = undefined;\n        this.deleted = true;\n    }\n    get root() {\n        let parent = this;\n        while (parent.parent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    get keys() {\n        return Object.keys(this.symbolTable);\n    }\n    resetAsGlobal() {\n        var _a, _b;\n        if (!this.initialisedAsGlobal)\n            return;\n        const printFunc = this.root.get('print');\n        const inputFunc = this.root.get('input');\n        if (!(printFunc instanceof ESPrimitive) || !(inputFunc instanceof ESPrimitive)) {\n            console.error('Error with print and input functions.');\n            return;\n        }\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        initialise(this, ((_a = printFunc.valueOf()) === null || _a === void 0 ? void 0 : _a.func) || console.log, ((_b = inputFunc.valueOf()) === null || _b === void 0 ? void 0 : _b.func) || (() => { }));\n    }\n    clone() {\n        const newContext = new Context();\n        newContext.parent = this.parent;\n        newContext.deleted = this.deleted;\n        newContext.initialisedAsGlobal = this.initialisedAsGlobal;\n        newContext.symbolTable = Object.assign(Object.assign({}, newContext.symbolTable), this.symbolTable);\n        return newContext;\n    }\n    deepClone() {\n        var _a;\n        let clone = this.clone();\n        clone.parent = (_a = clone.parent) === null || _a === void 0 ? void 0 : _a.deepClone();\n        return clone;\n    }\n    log() {\n        console.log('---- CONTEXT ----');\n        for (let key in this.symbolTable) {\n            const symbol = this.symbolTable[key];\n            let out = key;\n            if (symbol.isConstant)\n                out += ' (CONST)';\n            if (!symbol.isAccessible)\n                out += ' (INACCESSIBLE)';\n            out += ': ';\n            out += str(this.symbolTable[key].value);\n            console.log(out);\n        }\n        console.log('-----------------');\n    }\n}\nexport function generateESFunctionCallContext(params, self, parent) {\n    const newContext = new Context();\n    newContext.parent = parent;\n    let max = Math.max(params.length, self.arguments_.length);\n    for (let i = 0; i < max; i++) {\n        let value = new ESUndefined();\n        let type = types.any;\n        if (!self.arguments_[i]) {\n            continue;\n        }\n        const arg = self.arguments_[i];\n        if (!(arg.type instanceof ESType)) {\n            return new TypeError(Position.void, 'Type', typeof arg.type, arg.type);\n        }\n        if (params[i] instanceof ESPrimitive) {\n            type = params[i].__type__;\n            value = params[i];\n        }\n        const typeIncludes = arg.type.resolve({ context: parent }, type).bool().valueOf();\n        if (!typeIncludes) {\n            return new TypeError(Position.void, arg.type.__name__, type.__name__, str(value));\n        }\n        newContext.setOwn(arg.name, value, {\n            forceThroughConst: true\n        });\n    }\n    let setRes = newContext.setOwn('args', new ESArray(params), {\n        forceThroughConst: true\n    });\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    return newContext;\n}\n","import { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { str } from '../../util/util';\nimport { wrap } from \"./wrapStrip\";\nexport class ESUndefined extends ESPrimitive {\n    constructor() {\n        super(undefined, types.undefined);\n        this.cast = ({ context }, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber();\n                case types.string:\n                    return new ESString();\n                case types.array:\n                    return new ESArray();\n                case types.undefined:\n                    return new ESUndefined();\n                case types.type:\n                    return new ESType();\n                case types.error:\n                    return new ESErrorPrimitive();\n                case types.object:\n                case types.any:\n                    return new ESObject();\n                case types.function:\n                    return new ESFunction(() => { });\n                case types.boolean:\n                    return new ESBoolean();\n                default:\n                    if (!(type instanceof ESType)) {\n                        return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n                    }\n                    return type.__call__({ context });\n            }\n        };\n        this.str = () => new ESString('<Undefined>');\n        this.__eq__ = (props, n) => new ESBoolean(n instanceof ESUndefined ||\n            typeof n === 'undefined' ||\n            typeof n.valueOf() === 'undefined');\n        this.__bool__ = () => new ESBoolean();\n        this.bool = this.__bool__;\n        this.clone = () => new ESUndefined();\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.info = {\n            name: 'undefined',\n            description: 'Not defined, not a value.',\n            file: 'built-in',\n            isBuiltIn: true\n        };\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { types } from './primitive';\nimport { wrap } from './wrapStrip';\nexport class ESArray extends ESPrimitive {\n    constructor(values = []) {\n        super(values, types.array);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.len);\n                case types.boolean:\n                    return this.bool();\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(str(this.valueOf()));\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESArray)) {\n                return new ESBoolean();\n            }\n            if (n.len !== this.len) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.len; i++) {\n                const thisElement = this.valueOf()[i];\n                const nElement = n.valueOf()[i];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESArray)) {\n                return new TypeError(Position.void, 'array', n.typeName().valueOf(), n);\n            }\n            return new ESArray([...this.valueOf(), ...n.valueOf()]);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESUndefined();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return this.valueOf()[idx];\n            }\n            return new ESUndefined();\n        };\n        this.add = (props, val, idx = new ESNumber(this.len - 1)) => {\n            if (!(val instanceof ESPrimitive))\n                throw 'adding non-primitive to array: ' + str(val);\n            this.len++;\n            this.__value__.splice(idx.valueOf(), 0, val);\n            return new ESNumber(this.len);\n        };\n        this.contains = (props, val) => {\n            for (let element of this.__value__) {\n                if (val.__eq__(props, element)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        this.clone = () => {\n            const newArr = [];\n            for (let element of this.valueOf()) {\n                newArr.push(element);\n            }\n            return new ESArray(newArr);\n        };\n        this.len = values.length;\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESNumber)) {\n            return;\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        let idx = key.valueOf();\n        while (idx < 0) {\n            idx = this.valueOf().length + idx;\n        }\n        this.__value__[idx] = value;\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { wrap } from './wrapStrip';\nexport class ESString extends ESPrimitive {\n    constructor(value = '') {\n        super(value, types.string);\n        this.str = () => this;\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    const num = parseFloat(this.valueOf());\n                    if (isNaN(num))\n                        return new ESError(Position.void, 'TypeError', `This string is not a valid number`);\n                    return new ESNumber(num);\n                case types.string:\n                    return this;\n                case types.array:\n                    return new ESArray(this.valueOf().split('').map(s => new ESString(s)));\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESString(this.valueOf() + n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESString(this.valueOf().repeat(n.valueOf()));\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new ESBoolean(false);\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf().length > n.valueOf().length);\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf().length < n.valueOf().length);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.len = () => {\n            return new ESNumber(this.valueOf().length);\n        };\n        this.clone = () => new ESString(this.valueOf());\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESString();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return new ESString(this.valueOf()[idx]);\n            }\n            return new ESString();\n        };\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESNumber))\n            return;\n        if (!(value instanceof ESString))\n            value = new ESString(str(value));\n        let idx = key.valueOf();\n        while (idx < 0)\n            idx = this.valueOf().length + idx;\n        const strToInsert = value.str().valueOf();\n        let firstPart = this.__value__.substr(0, idx);\n        let lastPart = this.__value__.substr(idx + strToInsert.length);\n        this.__value__ = firstPart + strToInsert + lastPart;\n    }\n}\n","import { ESString } from './primitives/esstring';\nimport { types } from \"./primitives/primitive\";\nexport class ESSymbol {\n    constructor(value, identifier, options = {}) {\n        var _a, _b, _c;\n        this.clone = () => {\n            return new ESSymbol(this.value.clone(), this.identifier, {\n                isConstant: this.isConstant,\n                isAccessible: this.isAccessible\n            });\n        };\n        this.str = () => new ESString(`<Symbol: ${this.identifier}>`);\n        this.value = value;\n        this.identifier = identifier;\n        this.isConstant = (_a = options.isConstant) !== null && _a !== void 0 ? _a : false;\n        this.isAccessible = (_b = options.isAccessible) !== null && _b !== void 0 ? _b : true;\n        this.type = (_c = options.type) !== null && _c !== void 0 ? _c : types.any;\n    }\n}\n","import { ESError } from '../../errors';\nimport { ESSymbol } from '../symbol';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESPrimitive } from './esprimitive';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESUndefined } from './esundefined';\nimport { ESJSBinding } from \"./esjsbinding\";\nexport function wrap(thing, functionsTakeProps = false) {\n    if (thing instanceof ESPrimitive) {\n        return thing;\n    }\n    else if (thing === undefined || thing === null) {\n        return new ESUndefined();\n    }\n    else if (thing instanceof ESError) {\n        return new ESErrorPrimitive(thing);\n    }\n    else if (thing instanceof ESSymbol) {\n        return thing.value;\n    }\n    else if (typeof thing === 'number') {\n        return new ESNumber(thing);\n    }\n    else if (typeof thing === 'string') {\n        return new ESString(thing);\n    }\n    else if (typeof thing === 'boolean') {\n        return new ESBoolean(thing);\n    }\n    else if (typeof thing === 'bigint') {\n        return new ESNumber(Number(thing));\n    }\n    else if (typeof thing === 'symbol') {\n        return new ESString(String(thing));\n    }\n    return new ESJSBinding(thing, undefined, functionsTakeProps);\n}\nexport function strip(thing, props) {\n    if (thing == undefined) {\n        return undefined;\n    }\n    else if (!(thing instanceof ESPrimitive)) {\n        return thing;\n    }\n    else if (thing instanceof ESArray) {\n        return thing.valueOf().map(m => strip(m, props), props);\n    }\n    else if (thing instanceof ESObject) {\n        let val = {};\n        for (let key in thing.valueOf()) {\n            val[key] = strip(thing.valueOf()[key], props);\n        }\n        return val;\n    }\n    else if (thing instanceof ESUndefined) {\n        return undefined;\n    }\n    else if (thing instanceof ESFunction) {\n        return (...args) => {\n            const res = thing.__call__(props, ...args.map(a => wrap(a)));\n            if (res instanceof ESError) {\n                return res;\n            }\n            return strip(res, props);\n        };\n    }\n    else if (thing instanceof ESType) {\n        return thing;\n    }\n    return thing.valueOf();\n}\n","import { IS_NODE_INSTANCE } from \"../constants\";\nconst codes = {\n    red: 31,\n    yellow: 33,\n    green: 32,\n    cyan: 36,\n    blue: 34,\n    grey: 2\n};\nconst c = {};\nfor (let code of Object.keys(codes)) {\n    c[code] = (s) => {\n        s || (s = '');\n        if (IS_NODE_INSTANCE) {\n            return `\\x1b[${codes[code]}m` + s + '\\x1b[0m';\n        }\n        return `<span style=\"color: ${code}\">${s}</span>`;\n    };\n}\nexport default c;\n","import { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from '../runtime/primitives/wrapStrip';\nimport { ESArray, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESUndefined } from '../runtime/primitiveTypes';\nimport { indent, sleep, str } from '../util/util';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport chalk from \"../util/colours\";\nexport const builtInFunctions = {\n    'range': [({ context }, minP, maxP, stepP) => {\n            if (!(minP instanceof ESNumber)) {\n                return new ESArray();\n            }\n            const min = minP.valueOf();\n            if (maxP instanceof ESUndefined) {\n                try {\n                    return new ESArray([...Array(min).keys()].map(n => new ESNumber(n)));\n                }\n                catch (e) {\n                    return new ESError(Position.void, 'RangeError', `Cannot make range of length '${str(min)}'`);\n                }\n            }\n            let step = 1;\n            if (!(maxP instanceof ESNumber)) {\n                return new TypeError(Position.void, 'number', maxP.typeName(), str(maxP));\n            }\n            let max = maxP.valueOf();\n            if (!(stepP instanceof ESUndefined)) {\n                if (!(stepP instanceof ESNumber)) {\n                    return new TypeError(Position.void, 'number', stepP.typeName(), str(stepP));\n                }\n                step = stepP.valueOf();\n            }\n            let arr = [];\n            let i = min;\n            while (i < max) {\n                arr.push(new ESNumber(i));\n                i += step;\n            }\n            return new ESArray(arr);\n        }, {\n            args: [{\n                    name: 'N',\n                    type: 'Number',\n                }],\n            description: 'Generates an array of integers given N. Starts at 0 and goes to N-1. Can be used like for i in range(10) ..., similarly to python.',\n            returns: 'array of numbers from 0 to N-1',\n            returnType: 'number[] | RangeError'\n        }],\n    'log': [({ context }, ...msgs) => {\n            console.log(...msgs.map(m => str(m)));\n        }, {\n            args: [{\n                    name: '...values',\n                    type: 'any[]'\n                }],\n            description: 'Uses console.log to log all values',\n            returnType: 'void'\n        }],\n    'parseNum': [({ context }, num) => {\n            try {\n                const val = parseFloat(str(num));\n                if (isNaN(val)) {\n                    return new ESError(Position.void, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n                }\n                return new ESNumber(val);\n            }\n            catch (e) {\n                return new ESError(Position.void, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n            }\n        }, {\n            args: [{\n                    name: 'num',\n                    type: 'any'\n                }],\n            description: `Converts a string of digits into a number. Works with decimals and integers. Calls .str() on value before using native JS 'parseFloat' function. Returns TypeError if the string can't be converted into a number.`,\n            returnType: 'number | TypeError'\n        }],\n    'help': [({ context }, ...things) => {\n            if (!things.length) {\n                return new ESString('Visit https://entropygames.io/entropy-script for help with Entropy Script!\\n' +\n                    'Try \\'help(<anything>)\\' for help about a particular object.');\n            }\n            let out = '';\n            for (const thing of things) {\n                if (!(thing instanceof ESPrimitive)) {\n                    console.log('Invalid arg not primitive: ' + str(thing));\n                    return;\n                }\n                const info = thing.info;\n                out += `${chalk.yellow(`Help on '${info.name || '(anonymous)'}'`)}:\n    \n    ${chalk.yellow('Value')}: ${indent(indent(str(thing)))}\n    ${chalk.yellow('Type')}: '${str(thing.typeName())}'\n    ${chalk.yellow('Location')}: ${info.file || chalk.yellow('(unknown)')}\n    \n        ${chalk.green(info.description) || `No description.`}\n        \n    ${info.helpLink ? chalk.cyan(info.helpLink + '\\n\\n') : ''}\n`;\n                if (info.args && thing instanceof ESFunction) {\n                    const total = info.args.length;\n                    const required = info.args.filter(a => a.required).length;\n                    if (total == required)\n                        out += chalk.yellow(`    Arguments (${total}): \\n`);\n                    else\n                        out += chalk.yellow(`    Arguments (${required}-${total}): \\n`);\n                    for (const [idx, arg] of info.args.entries()) {\n                        if (typeof arg !== 'object')\n                            out += `        ${idx + 1}. INVALID ARG INFO`;\n                        else\n                            out += `        ${idx + 1}. ${arg.name}${arg.required === false ? chalk.yellow(' (optional) ') : ' '}{${arg.type}} ${arg.description || ''}\\n`;\n                    }\n                    out += `\\n\\n`;\n                    if (info.returns)\n                        out += `    Returns: ${info.returns}\\n\\n`;\n                    if (info.returnType)\n                        out += `    Return Type: ${info.returnType}\\n\\n`;\n                }\n                if (info.contents && (thing instanceof ESObject || thing instanceof ESNamespace)) {\n                    out += '    Properties: \\n      ';\n                    for (let contents of info.contents)\n                        out += contents.name + '\\n      ';\n                }\n            }\n            console.log(out);\n            if (things.length > 1) {\n                return new ESArray(things);\n            }\n            if (things) {\n                return things[0];\n            }\n        }, {\n            args: [{\n                    name: 'value',\n                    type: 'any'\n                }],\n            description: 'logs info on value',\n            returns: 'value passed in'\n        }],\n    'delete': [({ context }, name) => {\n            const id = str(name);\n            if (!context.has(id)) {\n                return new ESError(Position.void, 'DeleteError', `Identifier '${id}' not found in the current context`);\n            }\n            context.set(id, new ESUndefined());\n        }, {\n            name: 'delete',\n            args: [{ name: 'identifier', type: 'string' }],\n            description: 'Deletes a variable from the current context'\n        }],\n    '__path': [({ context }) => {\n            return new ESString(context.path);\n        }, {\n            name: '__path',\n            args: [],\n            description: 'Returns the current path'\n        }],\n    '__symbols': [({ context }) => {\n            return wrap(context.keys);\n        }, {\n            name: '__allSymbols',\n            args: [],\n            description: 'Returns an array of the names of all symbols in the current context'\n        }],\n    'using': [({ context }, module, global_) => {\n            if (!(module instanceof ESNamespace) && !(module instanceof ESJSBinding)) {\n                return new TypeError(Position.void, 'Namespace', str(module.typeName()));\n            }\n            let global = true;\n            if (global_) {\n                if (!global_.bool().valueOf()) {\n                    global = false;\n                }\n            }\n            const values = module.valueOf();\n            if (global) {\n                context = context.root;\n            }\n            else if (context.parent) {\n                context = context.parent;\n            }\n            for (const key of Object.keys(values)) {\n                context.setOwn(key, values[key].value, {\n                    isConstant: values[key].isConstant,\n                    isAccessible: values[key].isAccessible,\n                    forceThroughConst: true\n                });\n            }\n        }, {\n            name: 'using',\n            args: [\n                { name: 'module', type: 'namespace' },\n                { name: 'global', type: 'bool' }\n            ],\n            description: 'Adds contents of a namespace to the global context'\n        }],\n    'sleep': [({ context }, time, cb) => {\n            if (!(time instanceof ESNumber)) {\n                return new TypeError(Position.void, 'number', str(time.typeName()), str(time));\n            }\n            sleep(time.valueOf())\n                .then(() => {\n                const res = cb.__call__({ context });\n                if (res instanceof ESError) {\n                    console.log(res.str);\n                }\n            });\n        }, {\n            name: 'sleep',\n            args: [{ name: 'n', type: 'number' }, { name: 'callback', type: 'function' }],\n            description: 'Waits n milliseconds and then executes the callback'\n        }],\n    'throw': [({ context }, name, details) => {\n            return new ESError(Position.void, str(name), str(details));\n        }, {\n            name: 'throw',\n            args: [{ name: 'name', type: 'string' }, { name: 'details', type: 'string' }]\n        }],\n};\n","import { Position } from '../../position';\nimport { strip } from '../../runtime/primitives/wrapStrip';\nimport { ESObject, ESString } from '../../runtime/primitiveTypes';\nimport { str } from '../../util/util';\nimport { TypeError } from '../../errors';\nconst module = {\n    parse: (props, json) => {\n        return new ESObject(JSON.parse(str(json)));\n    },\n    stringify: (props, json) => {\n        if (!(json instanceof ESObject)) {\n            return new TypeError(Position.void, 'object', str(json.typeName()), str(json));\n        }\n        return new ESString(JSON.stringify(strip(json, props)));\n    }\n};\nexport default module;\n","import { IS_NODE_INSTANCE, libs } from '../constants';\nimport { ESError } from '../errors';\nimport { wrap } from '../runtime/primitives/wrapStrip';\nimport { ESSymbol } from '../runtime/symbol';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport ascii from './built-in-modules/ascii';\nimport json from './built-in-modules/json';\nimport dom from './built-in-modules/dom';\nimport Promise from './built-in-modules/promise';\nimport time from './built-in-modules/time';\nconst modules = {\n    ascii, json\n};\nconst processedModules = {};\nexport function initModules() {\n    processedModules['math'] = new ESJSBinding(Math);\n    processedModules['Promise'] = new ESJSBinding(Promise);\n    processedModules['time'] = new ESJSBinding(time(libs));\n    if (!IS_NODE_INSTANCE) {\n        const domRes = dom(libs);\n        if (!(domRes instanceof ESError)) {\n            modules['dom'] = domRes;\n        }\n        else {\n            return domRes;\n        }\n    }\n}\nexport function processRawModule(module, name) {\n    const moduleDict = {};\n    const moduleRaw = module.valueOf();\n    for (const key of Object.keys(moduleRaw)) {\n        moduleDict[key] = new ESSymbol(moduleRaw[key], key);\n    }\n    return new ESJSBinding(moduleDict, name);\n}\nexport function moduleExist(name) {\n    return name in modules || name in processedModules;\n}\nexport function addModule(name, body) {\n    modules[name] = {};\n    processedModules[name] = body;\n}\nexport function addModuleFromObj(name, raw) {\n    addModule(name, processRawModule(wrap(raw), name));\n}\nexport function getModule(name) {\n    if (name in processedModules) {\n        return processedModules[name];\n    }\n    if (name in modules) {\n        const res = new ESJSBinding(modules[name]);\n        const processed = processRawModule(res, name);\n        processedModules[name] = processed;\n        return processed;\n    }\n}\n","import { TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESNumber, ESString } from '../../runtime/primitiveTypes';\nimport { str } from '../../util/util';\nconst module = {\n    asciiToChar: (props, number) => {\n        if (!(number instanceof ESNumber)) {\n            return new TypeError(Position.void, 'number', str(number.typeName()), str(number));\n        }\n        return new ESString(String.fromCharCode(number.valueOf()));\n    },\n    charToAscii: (props, char) => {\n        if (!(char instanceof ESString)) {\n            return new TypeError(Position.void, 'string', str(char.typeName()), str(char));\n        }\n        return new ESNumber(str(char).charCodeAt(0));\n    },\n};\nexport default module;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { builtInFunctions } from \"./built-in/builtInFunctions\";\nimport { getModule, initModules, moduleExist } from './built-in/builtInModules';\nimport { Context } from \"./runtime/context\";\nimport { ESError, ImportError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { run } from \"./index\";\nimport { IS_NODE_INSTANCE } from \"./constants\";\nimport { str } from \"./util/util\";\nimport { ESFunction, ESNamespace, ESString } from './runtime/primitiveTypes';\nimport loadGlobalConstants from \"./built-in/globalConstants\";\nexport function initialise(globalContext, printFunc, inputFunc) {\n    builtInFunctions['import'] = [({ context }, rawUrl, callback) => {\n            if (IS_NODE_INSTANCE) {\n                return new ESError(Position.void, 'ImportError', 'Is running in node instance but trying to run browser import function');\n            }\n            const url = rawUrl.str();\n            if (moduleExist(str(url))) {\n                return getModule(str(url));\n            }\n            try {\n                fetch(str(url))\n                    .then(c => c.text())\n                    .then((code) => __awaiter(this, void 0, void 0, function* () {\n                    const env = new Context();\n                    env.parent = globalContext;\n                    const res = yield run(code);\n                    if (res.error) {\n                        printFunc(new ImportError(Position.void, str(url), res.error.str).str);\n                        return;\n                    }\n                    if (!(callback instanceof ESFunction))\n                        return;\n                    callback.__call__({ context }, new ESNamespace(url, env.getSymbolTableAsDict()));\n                }));\n            }\n            catch (E) {\n                return new ESError(Position.void, 'ImportError', E.toString());\n            }\n        }, {}];\n    builtInFunctions['print'] = [({ context }, ...args) => {\n            let out = ``;\n            for (let arg of args)\n                out += str(arg);\n            printFunc(out);\n        }, {}];\n    builtInFunctions['input'] = [({ context }, msg, cbRaw) => {\n            inputFunc(msg.valueOf(), (msg) => {\n                let cb = cbRaw === null || cbRaw === void 0 ? void 0 : cbRaw.valueOf();\n                if (cb instanceof ESFunction) {\n                    let res = cb.__call__({ context }, new ESString(msg));\n                    if (res instanceof ESError) {\n                        console.log(res.str);\n                    }\n                }\n                else if (typeof cb === 'function')\n                    cb(msg);\n                return new ESString('\\'input()\\' does not return anything. Pass in a function as the second argument, which will take the user input as an argument.');\n            });\n        }, {}];\n    for (let builtIn in builtInFunctions) {\n        const fn = new ESFunction(builtInFunctions[builtIn][0], [], builtIn, undefined, undefined, globalContext);\n        fn.info = builtInFunctions[builtIn][1];\n        fn.info.name = builtIn;\n        fn.info.isBuiltIn = true;\n        fn.info.file = 'built-in';\n        globalContext.set(builtIn, fn, {\n            global: true,\n            isConstant: true\n        });\n    }\n    loadGlobalConstants(globalContext);\n    const initModRes = initModules();\n    if (initModRes) {\n        return initModRes;\n    }\n    globalContext.initialisedAsGlobal = true;\n}\n","import { ESBoolean, ESUndefined, types } from '../runtime/primitiveTypes';\nexport default function load(context) {\n    const globalConstants = {\n        'false': new ESBoolean(false),\n        'true': new ESBoolean(true),\n        'nil': new ESUndefined(),\n        'any': types.any,\n        'number': types.number,\n        'string': types.string,\n        'bool': types.bool,\n        'function': types.function,\n        'array': types.array,\n        'object': types.object,\n        'type': types.type,\n        'error': types.error,\n        'undefined': types.undefined\n    };\n    for (let constant in globalConstants) {\n        const value = globalConstants[constant];\n        context.set(constant, value, {\n            global: true,\n            isConstant: true\n        });\n    }\n}\n","export default class {\n    constructor(cb) {\n        this.thens = [];\n        this.resolved = false;\n        cb((value) => {\n            if (this.resolved) {\n                return;\n            }\n            this.resolved = true;\n            for (let then of this.thens) {\n                then(value);\n            }\n        }, (error) => {\n            if (this.resolved) {\n                return;\n            }\n            this.resolved = true;\n            if (this.catch_) {\n                this.catch_(error);\n            }\n        });\n    }\n    then(cb) {\n        if (this.resolved) {\n            return;\n        }\n        this.thens.push(cb);\n        return this;\n    }\n    catch(cb) {\n        if (this.resolved) {\n            return;\n        }\n        this.catch_ = cb;\n        return this;\n    }\n}\n;\n","import { now } from '../../constants';\nimport { ESFunction } from '../../runtime/primitives/esfunction';\nimport { ESJSBinding } from '../../runtime/primitives/esjsbinding';\nimport { ESNumber } from '../../runtime/primitives/esnumber';\nconst module = (config) => ({\n    now: new ESFunction(() => new ESNumber(now())),\n    date: new ESJSBinding(Date)\n});\nexport default module;\n","import { IS_NODE_INSTANCE, permissions } from '../../constants';\nimport { ReferenceError, InvalidRuntimeError, PermissionRequiredError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESJSBinding } from \"../../runtime/primitives/esjsbinding\";\nconst module = () => {\n    if (!permissions.accessDOM) {\n        return new PermissionRequiredError('No access to DOM');\n    }\n    if (IS_NODE_INSTANCE) {\n        return new InvalidRuntimeError();\n    }\n    const w = window;\n    if (typeof w === 'undefined' || !('$' in w)) {\n        return new ReferenceError(Position.void, '$ must be property of window to use dom library');\n    }\n    const $ = new ESJSBinding(w['$'], 'jquery');\n    return {\n        $,\n        window: new ESJSBinding(w, 'window'),\n        document: new ESJSBinding(w['document'], 'document'),\n    };\n};\nexport default module;\n","import { ESPrimitive, ESType } from \"./primitiveTypes\";\nimport { TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nexport function interpretArgument(arg, context) {\n    var _a;\n    let type;\n    const typeRes = arg.type.interpret(context);\n    if (typeRes.error)\n        return typeRes.error;\n    if (typeRes.val instanceof ESType)\n        type = typeRes.val;\n    else\n        return new TypeError(Position.void, 'Type', typeof typeRes.val, typeRes.val, 'Argument can\\'t be undefined');\n    let defaultValue;\n    if (arg.defaultValue) {\n        let defaultValRes = (_a = arg.defaultValue) === null || _a === void 0 ? void 0 : _a.interpret(context);\n        if (defaultValRes.error)\n            return defaultValRes.error;\n        if (defaultValRes.val instanceof ESPrimitive)\n            defaultValue = defaultValRes.val;\n    }\n    return {\n        name: arg.name,\n        type, defaultValue\n    };\n}\n","import { ESError, InvalidSyntaxError, ReferenceError, TypeError } from \"../errors\";\nimport { Context } from './context';\nimport { Position } from \"../position\";\nimport { catchBlockErrorSymbolName, now, tokenTypeString, tt } from \"../constants\";\nimport { interpretArgument } from \"./argument\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESType, ESUndefined, types } from \"./primitiveTypes\";\nimport { generateRandomSymbol, str } from '../util/util';\nexport class interpretResult {\n    constructor() {\n        this.val = new ESUndefined();\n        this.shouldBreak = false;\n        this.shouldContinue = false;\n    }\n}\nexport class compileResult {\n    constructor(val) {\n        this.val = '';\n        this.hoisted = '';\n        if (typeof val === 'string') {\n            this.val = val;\n        }\n        else if (val) {\n            this.error = val;\n        }\n    }\n    register(node, config) {\n        const res = node.compilePy(config);\n        this.hoisted += res.hoisted;\n        if (res.error) {\n            this.error = res.error;\n            return '';\n        }\n        return res.val;\n    }\n}\nexport class Node {\n    constructor(pos, isTerminal = false) {\n        this.pos = pos;\n        this.isTerminal = isTerminal;\n    }\n    interpret(context) {\n        var _a;\n        const start = now();\n        const res = new interpretResult;\n        const val = this.interpret_(context);\n        if (val instanceof ESError) {\n            res.error = val;\n        }\n        else if (val instanceof interpretResult) {\n            res.val = val.val;\n            res.error = val.error;\n            res.funcReturn = val.funcReturn;\n            res.shouldBreak = val.shouldBreak;\n            res.shouldContinue = val.shouldContinue;\n        }\n        else {\n            res.val = val;\n        }\n        if (res.error && res.error.pos.isUnknown) {\n            res.error.pos = this.pos;\n        }\n        if (!(res.val instanceof ESPrimitive)) {\n            res.error = new TypeError(Position.void, 'Primitive', 'Native JS value', str(res.val));\n            res.val = new ESUndefined();\n        }\n        (_a = res.val.info).file || (_a.file = this.pos.file);\n        Node.interprets++;\n        let time = now() - start;\n        Node.totalTime += time;\n        if (time > Node.maxTime)\n            Node.maxTime = time;\n        return res;\n    }\n}\nNode.interprets = 0;\nNode.totalTime = 0;\nNode.maxTime = 0;\nexport class N_binOp extends Node {\n    constructor(pos, left, opTok, right) {\n        super(pos);\n        this.left = left;\n        this.opTok = opTok;\n        this.right = right;\n    }\n    interpret_(context) {\n        const left = this.left.interpret(context);\n        if (left.error)\n            return left.error;\n        const right = this.right.interpret(context);\n        if (right.error)\n            return right.error;\n        const l = left.val;\n        const r = right.val;\n        if (typeof l === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', l, 'N_binOp.interpret_');\n        }\n        if (typeof r === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', r, 'N_binOp.interpret_');\n        }\n        switch (this.opTok.type) {\n            case tt.LTE: {\n                const lt = l.__lt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (lt instanceof ESError)\n                    return lt;\n                if (eq instanceof ESError)\n                    return eq;\n                return lt.__or__({ context }, eq);\n            }\n            case tt.GTE: {\n                const gt = l.__gt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (gt instanceof ESError)\n                    return gt;\n                if (eq instanceof ESError)\n                    return eq;\n                return gt.__or__({ context }, eq);\n            }\n            case tt.NOTEQUALS: {\n                const res = l.__eq__({ context }, r);\n                if (res instanceof ESError)\n                    return res;\n                return new ESBoolean(!res.bool().valueOf());\n            }\n            case tt.ADD:\n                return l.__add__({ context }, r);\n            case tt.SUB:\n                return l.__subtract__({ context }, r);\n            case tt.MUL:\n                return l.__multiply__({ context }, r);\n            case tt.DIV:\n                return l.__divide__({ context }, r);\n            case tt.POW:\n                return l.__pow__({ context }, r);\n            case tt.MOD:\n                return l.__mod__({ context }, r);\n            case tt.EQUALS:\n                return l.__eq__({ context }, r);\n            case tt.LT:\n                return l.__lt__({ context }, r);\n            case tt.GT:\n                return l.__gt__({ context }, r);\n            case tt.AND:\n                return l.__and__({ context }, r);\n            case tt.OR:\n                return l.__or__({ context }, r);\n            case tt.APMERSAND:\n                return l.__ampersand__({ context }, r);\n            case tt.PIPE:\n                return l.__pipe__({ context }, r);\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid binary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(config) {\n        const left = this.left.compileJS(config);\n        if (left.error)\n            return left;\n        const right = this.right.compileJS(config);\n        if (right.error)\n            return right;\n        if (config.minify) {\n            return new compileResult(`${left.val}${tokenTypeString[this.opTok.type]}${right.val}`);\n        }\n        return new compileResult(`${left.val} ${tokenTypeString[this.opTok.type]} ${right.val}`);\n    }\n    compilePy(config) {\n        const left = this.left.compilePy(config);\n        if (left.error)\n            return left;\n        const right = this.right.compilePy(config);\n        if (right.error)\n            return right;\n        const switchers = {\n            '&&': 'and',\n            '||': 'or',\n            '^': '**',\n        };\n        let op = tokenTypeString[this.opTok.type];\n        if (op in switchers) {\n            op = switchers[op];\n        }\n        return new compileResult(`${left.val} ${op} ${right.val}`);\n    }\n}\nexport class N_unaryOp extends Node {\n    constructor(pos, a, opTok) {\n        super(pos);\n        this.a = a;\n        this.opTok = opTok;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const res = this.a.interpret(context);\n        if (res.error)\n            return res.error;\n        switch (this.opTok.type) {\n            case tt.SUB:\n            case tt.ADD:\n                if (!(res.val instanceof ESNumber)) {\n                    return new TypeError(this.pos, 'Number', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().toString()) || 'undefined_', (_b = res.val) === null || _b === void 0 ? void 0 : _b.valueOf());\n                }\n                const numVal = res.val.valueOf();\n                return new ESNumber(this.opTok.type === tt.SUB ? -numVal : Math.abs(numVal));\n            case tt.NOT:\n                return new ESBoolean(!((_c = res === null || res === void 0 ? void 0 : res.val) === null || _c === void 0 ? void 0 : _c.bool().valueOf()));\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid unary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(config) {\n        const val = this.a.compileJS(config);\n        if (val.error)\n            return val;\n        return new compileResult(`${tokenTypeString[this.opTok.type]}${val.val}`);\n    }\n    compilePy(config) {\n        const val = this.a.compilePy(config);\n        if (val.error)\n            return val;\n        return new compileResult(`${tokenTypeString[this.opTok.type]}${val.val}`);\n    }\n}\nexport class N_varAssign extends Node {\n    constructor(pos, varNameTok, value, assignType = '=', isGlobal = false, isLocal = false, isConstant = false, isDeclaration = false, type = types.any) {\n        super(pos);\n        this.value = value;\n        this.varNameTok = varNameTok;\n        this.isGlobal = isGlobal;\n        this.assignType = assignType;\n        this.isConstant = isConstant;\n        this.isDeclaration = isDeclaration;\n        this.isLocal = isLocal;\n        if (type instanceof ESType) {\n            this.type = new N_primitiveWrapper(type);\n        }\n        else\n            this.type = type;\n    }\n    interpret_(context) {\n        var _a, _b, _c, _d, _e;\n        if (this.isDeclaration && context.hasOwn(this.varNameTok.value)) {\n            return new InvalidSyntaxError(this.pos, `Symbol '${this.varNameTok.value}' already exists, and cannot be redeclared`);\n        }\n        const res = this.value.interpret(context);\n        const typeRes = this.type.interpret(context);\n        if (res.error)\n            return res.error;\n        if (typeRes.error)\n            return typeRes.error;\n        if (!typeRes.val || !(typeRes.val instanceof ESType)) {\n            return new TypeError(this.varNameTok.pos, 'Type', (_b = (_a = typeRes.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) !== null && _b !== void 0 ? _b : 'undefined', (_c = typeRes.val) === null || _c === void 0 ? void 0 : _c.str(), `@ !typeRes.val || !(typeRes.val instanceof ESType)`);\n        }\n        if (!res.val) {\n            return new TypeError(this.varNameTok.pos, '~undefined', 'undefined', 'N_varAssign.interpret_');\n        }\n        if (!typeRes.val.resolve({ context }, res.val.__type__).bool().valueOf()) {\n            return new TypeError(this.varNameTok.pos, str(typeRes.val), str((_d = res.val) === null || _d === void 0 ? void 0 : _d.typeName()), str(res.val));\n        }\n        if (this.isDeclaration) {\n            if (this.assignType !== '=') {\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            }\n            if (context.hasOwn(this.varNameTok.value)) {\n                return new InvalidSyntaxError(this.pos, `Cannot redeclare variable which exists in the current scope`);\n            }\n            context.setOwn(this.varNameTok.value, res.val, {\n                global: false,\n                isConstant: this.isConstant,\n                type: typeRes.val\n            });\n            return res.val;\n        }\n        if (context.has(this.varNameTok.value)) {\n            const symbol = context.getSymbol(this.varNameTok.value);\n            if (symbol instanceof ESError)\n                return symbol;\n            if (symbol) {\n                if (!symbol.type.resolve({ context }, res.val.__type__).valueOf()) {\n                    return new TypeError(this.varNameTok.pos, str(symbol.type), (_e = res.val) === null || _e === void 0 ? void 0 : _e.typeName(), str(res.val));\n                }\n            }\n        }\n        if (this.assignType === '=') {\n            let value = res.val;\n            if (value === undefined) {\n                value = new ESUndefined();\n            }\n            const type = context.getSymbol(this.varNameTok.value);\n            if (type instanceof ESError) {\n                return type;\n            }\n            if (!type) {\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable without keyword`);\n            }\n            if (!type.type.resolve({ context }, res.val.__type__).bool().valueOf()) {\n                return new TypeError(Position.void, type.type.__name__, res.val.__type__.__name__, str(res.val));\n            }\n            const setRes = context.set(this.varNameTok.value, value, {\n                global: this.isGlobal,\n                isConstant: this.isConstant,\n                type: res.val.__type__\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n        }\n        else {\n            const currentVal = context.get(this.varNameTok.value);\n            if (currentVal instanceof ESError)\n                return currentVal;\n            if (currentVal == undefined)\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            let newVal;\n            let assignVal = res.val;\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError) {\n                return newVal;\n            }\n            let setRes = context.set(this.varNameTok.value, newVal, {\n                global: this.isGlobal,\n                isConstant: this.isConstant,\n                type: newVal.__type__\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n            res.val = newVal;\n        }\n        if (res.val.info.name === '(anonymous)' || !res.val.info.name) {\n            res.val.info.name = this.varNameTok.value;\n        }\n        return res;\n    }\n    compileJS(config) {\n        const val = this.value.compileJS(config);\n        if (val.error)\n            return val;\n        let declaration = '';\n        if (this.isDeclaration) {\n            if (this.isGlobal) {\n                declaration = 'var';\n            }\n            else if (this.isConstant) {\n                declaration = 'const';\n            }\n            else {\n                declaration = 'let';\n            }\n        }\n        let assign = this.assignType;\n        if (assign !== '=') {\n            assign += '=';\n        }\n        if (config.minify) {\n            return new compileResult(`${declaration} ${this.varNameTok.value}${assign}${val.val}`);\n        }\n        return new compileResult(`${declaration} ${this.varNameTok.value} ${assign} ${val.val}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const val = this.value.compilePy(config);\n        if (val.error)\n            return val;\n        res.hoisted += val.hoisted;\n        let assign = this.assignType;\n        if (assign !== '=') {\n            assign += '=';\n        }\n        if (this.isGlobal) {\n            res.hoisted += `${this.varNameTok.value}=None`;\n        }\n        if (config.minify) {\n            res.val = `${this.varNameTok.value}${assign}${val.val}`;\n        }\n        else {\n            res.val = `${this.varNameTok.value} ${assign} ${val.val}`;\n        }\n        return res;\n    }\n}\nexport class N_if extends Node {\n    constructor(pos, comparison, ifTrue, ifFalse) {\n        super(pos);\n        this.comparison = comparison;\n        this.ifFalse = ifFalse;\n        this.ifTrue = ifTrue;\n    }\n    interpret_(context) {\n        var _a;\n        let newContext = new Context();\n        newContext.parent = context;\n        let res = new interpretResult();\n        let compRes = this.comparison.interpret(context);\n        if (compRes.error)\n            return compRes;\n        if ((_a = compRes.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            res = this.ifTrue.interpret(newContext);\n            res.val = new ESUndefined();\n            if (res.error)\n                return res;\n        }\n        else if (this.ifFalse) {\n            res = this.ifFalse.interpret(newContext);\n            res.val = new ESUndefined();\n            if (res.error)\n                return res;\n        }\n        return res;\n    }\n    compileJS(config) {\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 4);\n        config.indent += 4;\n        const statementRes = this.comparison.compileJS(config);\n        if (statementRes.error)\n            return statementRes;\n        const ifTrueRes = this.ifTrue.compileJS(config);\n        if (ifTrueRes.error)\n            return ifTrueRes;\n        if (!this.ifFalse) {\n            if (config.minify) {\n                return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}\\n}`);\n            }\n            return new compileResult(`if (${statementRes.val}) {\\n${ifTrueRes.val}\\n}`);\n        }\n        config.indent = highIndent.length;\n        let ifFalseRes = this.ifFalse.compileJS(config);\n        if (ifFalseRes.error)\n            return ifFalseRes;\n        if (!(this.ifFalse instanceof N_statements)) {\n            ifFalseRes.val = highIndent + ifFalseRes.val;\n        }\n        if (config.minify) {\n            return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}}else{${ifFalseRes.val}}`);\n        }\n        return new compileResult(`if (${statementRes.val}) {\\n${ifTrueRes.val}\\n${indent}} else {\\n${ifFalseRes.val}\\n${indent}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 4);\n        config.indent += 4;\n        const statementRes = this.comparison.compilePy(config);\n        if (statementRes.error)\n            return statementRes;\n        res.hoisted += statementRes.hoisted;\n        const ifTrueRes = this.ifTrue.compilePy(config);\n        if (ifTrueRes.error)\n            return ifTrueRes;\n        res.hoisted += ifTrueRes.hoisted;\n        if (!this.ifFalse) {\n            return new compileResult(`if ${statementRes.val}:\\n${highIndent}${ifTrueRes.val}`);\n        }\n        const ifFalseRes = this.ifFalse.compilePy(config);\n        if (ifFalseRes.error)\n            return ifFalseRes;\n        res.hoisted += ifFalseRes.hoisted;\n        if (!(this.ifFalse instanceof N_statements)) {\n            ifFalseRes.val = highIndent + ifFalseRes.val;\n        }\n        return new compileResult(`if ${statementRes.val}:\\n${ifTrueRes.val}\\n${indent}else:\\n${ifFalseRes.val}\\n${indent}`);\n    }\n}\nexport class N_while extends Node {\n    constructor(pos, comparison, loop) {\n        super(pos);\n        this.comparison = comparison;\n        this.loop = loop;\n    }\n    interpret_(context) {\n        var _a, _b;\n        let newContext = new Context();\n        newContext.parent = context;\n        while (true) {\n            let shouldLoop = this.comparison.interpret(context);\n            if (shouldLoop.error)\n                return shouldLoop;\n            if (!((_b = (_a = shouldLoop.val) === null || _a === void 0 ? void 0 : _a.bool()) === null || _b === void 0 ? void 0 : _b.valueOf()))\n                break;\n            let potentialError = this.loop.interpret(newContext);\n            if (potentialError.error)\n                return potentialError;\n            if (potentialError.shouldBreak)\n                break;\n        }\n        return new ESUndefined();\n    }\n    compileJS(config) {\n        config.indent += 4;\n        const comparisonRes = this.comparison.compileJS(config);\n        if (comparisonRes.error)\n            return comparisonRes;\n        const bodyRes = this.loop.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        if (config.minify) {\n            return new compileResult(`while(${comparisonRes.val}){${bodyRes.val}}`);\n        }\n        return new compileResult(`while (${comparisonRes.val}) {\\n${bodyRes.val}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const highIndent = ' '.repeat(config.indent || 0);\n        const comparisonRes = this.comparison.compilePy(config);\n        if (comparisonRes.error)\n            return comparisonRes;\n        res.hoisted += comparisonRes.hoisted;\n        const bodyRes = this.loop.compilePy(config);\n        if (bodyRes.error)\n            return bodyRes;\n        res.hoisted += bodyRes.hoisted;\n        return new compileResult(`while ${comparisonRes.val}:\\n${highIndent}${bodyRes.val}`);\n    }\n}\nexport class N_for extends Node {\n    constructor(pos, body, array, identifier, isGlobalIdentifier, isConstIdentifier) {\n        super(pos);\n        this.body = body;\n        this.array = array;\n        this.identifier = identifier;\n        this.isGlobalId = isGlobalIdentifier;\n        this.isConstId = isConstIdentifier;\n    }\n    interpret_(context) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        const array = this.array.interpret(context);\n        if (array.error)\n            return array;\n        if (['Array', 'Number', 'Object', 'String', 'Any'].indexOf(((_a = array.val) === null || _a === void 0 ? void 0 : _a.typeName()) || '') === -1) {\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val + ' | ' + ((_b = array.val) === null || _b === void 0 ? void 0 : _b.typeName()));\n        }\n        function iteration(body, id, element, isGlobal, isConstant) {\n            let newContext = new Context();\n            newContext.parent = context;\n            newContext.set(id, element, {\n                global: isGlobal,\n                isConstant\n            });\n            const res = body.interpret(newContext);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (res.shouldBreak) {\n                res.shouldBreak = false;\n                return 'break';\n            }\n            if (res.shouldContinue)\n                res.shouldContinue = false;\n        }\n        if (array.val instanceof ESNumber || typeof ((_c = array.val) === null || _c === void 0 ? void 0 : _c.valueOf()) == 'number') {\n            for (let i = 0; i < array.val.valueOf(); i++) {\n                const res = iteration(this.body, this.identifier.value, new ESNumber(i), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESObject ||\n            (typeof ((_d = array.val) === null || _d === void 0 ? void 0 : _d.valueOf()) == 'number' && !Array.isArray((_e = array.val) === null || _e === void 0 ? void 0 : _e.valueOf()))) {\n            for (let element in (_f = array.val) === null || _f === void 0 ? void 0 : _f.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, new ESString(element), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESArray || Array.isArray((_g = array.val) === null || _g === void 0 ? void 0 : _g.valueOf())) {\n            for (let element of (_h = array.val) === null || _h === void 0 ? void 0 : _h.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, element, this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val);\n        return new ESUndefined();\n    }\n    compileJS(config) {\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const iteratorRes = this.array.compileJS(config);\n        if (iteratorRes.error)\n            return iteratorRes;\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        let declaration = 'let';\n        if (this.isGlobalId) {\n            declaration = 'var';\n        }\n        else if (this.isConstId) {\n            declaration = 'const';\n        }\n        if (config.minify) {\n            return new compileResult(`for(${declaration} ${this.identifier.value} of ${iteratorRes.val}){${bodyRes.val}\\n${indent}}`);\n        }\n        return new compileResult(`for (${declaration} ${this.identifier.value} of ${iteratorRes.val}) {\\n${bodyRes.val}\\n${indent}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        config.indent += 4;\n        const iteratorRes = res.register(this.array, config);\n        if (res.error)\n            return res;\n        const bodyRes = res.register(this.body, config);\n        if (res.error)\n            return res;\n        if (this.isGlobalId) {\n            res.hoisted += `${this.identifier.value}=None`;\n        }\n        res.val = `for ${this.identifier.value} in ${iteratorRes}:\\n${bodyRes}`;\n        return res;\n    }\n}\nexport class N_array extends Node {\n    constructor(pos, items, shouldClone = false) {\n        super(pos);\n        this.items = items;\n        this.shouldClone = shouldClone;\n    }\n    interpret_(context) {\n        let result = new interpretResult();\n        let interpreted = [];\n        for (let item of this.items) {\n            const res = item.interpret(context);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (!res.val)\n                continue;\n            let val = res.val;\n            if (this.shouldClone) {\n                val = val.clone();\n            }\n            interpreted.push(val);\n        }\n        result.val = new ESArray(interpreted);\n        return result;\n    }\n    compileJS(config) {\n        const res = new compileResult('[');\n        for (let item of this.items) {\n            const itemRes = item.compileJS(config);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ',';\n        }\n        res.val += ']';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult('[');\n        for (let item of this.items) {\n            const itemRes = res.register(item, config);\n            if (res.error)\n                return res;\n            res.val += itemRes + ',';\n        }\n        res.val += ']';\n        return res;\n    }\n}\nexport class N_objectLiteral extends Node {\n    constructor(pos, properties) {\n        super(pos);\n        this.properties = properties;\n    }\n    interpret_(context) {\n        let interpreted = {};\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.interpret(context);\n            if (value.error)\n                return value.error;\n            const key = keyNode.interpret(context);\n            if (key.error)\n                return key.error;\n            if (key.val && value.val) {\n                interpreted[key.val.valueOf()] = value.val;\n            }\n        }\n        return new ESObject(interpreted);\n    }\n    compileJS(config) {\n        const res = new compileResult('{');\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.compileJS(config);\n            if (value.error)\n                return value;\n            const key = keyNode.compileJS(config);\n            if (key.error)\n                return key;\n            if (key.val && value.val) {\n                res.val += `[${key.val}]: ${value.val},`;\n            }\n        }\n        res.val += '}';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult('{');\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = res.register(valueNode, config);\n            if (res.error)\n                return res;\n            const key = res.register(keyNode, config);\n            if (res.error)\n                return res;\n            if (key && value) {\n                res.val += `${key}: ${value},`;\n            }\n        }\n        res.val += '}';\n        return res;\n    }\n}\nexport class N_statements extends Node {\n    constructor(pos, items, topLevel = false) {\n        super(pos);\n        this.items = items;\n        this.topLevel = topLevel;\n    }\n    interpret_(context) {\n        if (!this.topLevel) {\n            let last;\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (typeof res.funcReturn !== 'undefined') || res.shouldBreak || res.shouldContinue)\n                    return res;\n                last = res.val;\n            }\n            if (last)\n                return last;\n            return new ESUndefined();\n        }\n        else {\n            let result = new interpretResult();\n            let interpreted = [];\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (res.funcReturn !== undefined))\n                    return res;\n                if (!res.val)\n                    continue;\n                let val = res.val.clone();\n                interpreted.push(val);\n            }\n            result.val = new ESArray(interpreted);\n            return result;\n        }\n    }\n    compileJS(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        res.val += indent;\n        for (let item of this.items) {\n            const itemRes = item.compileJS(config);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ';';\n            if (!config.minify) {\n                res.val += '\\n' + indent;\n            }\n        }\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        res.val += indent;\n        for (let item of this.items) {\n            const itemRes = res.register(item, config);\n            if (res.error)\n                return res;\n            res.val += itemRes;\n            res.val += '\\n' + indent;\n        }\n        return res;\n    }\n}\nexport class N_functionCall extends Node {\n    constructor(pos, to, args) {\n        super(pos);\n        this.arguments = args;\n        this.to = to;\n    }\n    interpret_(context) {\n        let { val, error } = this.to.interpret(context);\n        if (error) {\n            return error;\n        }\n        if (!val) {\n            return new TypeError(this.pos, 'any', 'undefined', undefined, 'On function call');\n        }\n        let params = [];\n        for (let arg of this.arguments) {\n            const res = arg.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (res.val) {\n                params.push(res.val);\n            }\n        }\n        const res = val.__call__({ context }, ...params);\n        if (res instanceof ESError) {\n            res.traceback.push({\n                position: this.pos,\n                line: `${val.info.name || '<AnonFunction>'}(${params.map(str).join(', ')})`\n            });\n        }\n        return res;\n    }\n    compileJS(config) {\n        const res = new compileResult;\n        const funcRes = this.to.compileJS(config);\n        if (funcRes.error)\n            return funcRes;\n        res.val = funcRes.val + '(';\n        for (let arg of this.arguments) {\n            const argRes = arg.compileJS(config);\n            if (argRes.error)\n                return argRes;\n            res.val += argRes.val;\n            if (arg !== this.arguments[this.arguments.length - 1]) {\n                res.val += ',';\n                if (!config.minify) {\n                    res.val += ' ';\n                }\n            }\n        }\n        res.val += ')';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const funcRes = res.register(this.to, config);\n        if (res.error)\n            return res;\n        res.val = funcRes + '(';\n        for (let arg of this.arguments) {\n            const argRes = res.register(arg, config);\n            if (res.error)\n                return res;\n            res.val += argRes;\n            if (arg !== this.arguments[this.arguments.length - 1]) {\n                res.val += ',';\n                if (!config.minify) {\n                    res.val += ' ';\n                }\n            }\n        }\n        res.val += ')';\n        return res;\n    }\n}\nexport class N_functionDefinition extends Node {\n    constructor(pos, body, argNames, returnType, name = '(anon)', this_ = new ESObject(), description = '') {\n        super(pos);\n        this.arguments = argNames;\n        this.body = body;\n        this.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        this.description = description;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        let args = [];\n        for (let arg of this.arguments) {\n            const res = interpretArgument(arg, context);\n            if (res instanceof ESError)\n                return res;\n            args.push(res);\n        }\n        const returnTypeRes = this.returnType.interpret(context);\n        if (returnTypeRes.error)\n            return returnTypeRes.error;\n        if (!(returnTypeRes.val instanceof ESType))\n            return new TypeError(this.returnType.pos, 'Type', (_b = (_a = returnTypeRes.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) !== null && _b !== void 0 ? _b : '<Undefined>', (_c = returnTypeRes.val) === null || _c === void 0 ? void 0 : _c.str().valueOf(), `On func '${this.name}' return type`);\n        return new ESFunction(this.body, args, this.name, this.this_, returnTypeRes.val, context);\n    }\n    compileJS(config) {\n        const res = new compileResult('function(');\n        for (let param of this.arguments) {\n            res.val += param.name + ',';\n            if (!config.minify) {\n                res.val += ' ';\n            }\n        }\n        if (config.minify) {\n            res.val += '){';\n        }\n        else {\n            res.val += ') {\\n';\n        }\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        res.val += `${bodyRes.val}\\n${indent}}`;\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const hoistedName = generateRandomSymbol(config.symbols);\n        res.hoisted = `def ${hoistedName}(`;\n        for (let param of this.arguments) {\n            res.hoisted += param.name + ',';\n            if (!config.minify) {\n                res.hoisted += ' ';\n            }\n        }\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const body = this.body.compilePy(config);\n        if (body.error)\n            return body;\n        res.hoisted += `):\\n${indent}${body.val}`;\n        res.hoisted = body.hoisted + res.hoisted;\n        res.val = hoistedName;\n        return res;\n    }\n}\nexport class N_return extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        res.funcReturn = val.val;\n        return res;\n    }\n    compileJS(config) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(config);\n        if (valRes === null || valRes === void 0 ? void 0 : valRes.error)\n            return valRes;\n        return new compileResult(`return(${valRes === null || valRes === void 0 ? void 0 : valRes.val})`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        if (!this.value) {\n            return new compileResult('return');\n        }\n        const valRes = res.register(this.value, config);\n        if (res.error)\n            return res;\n        return new compileResult(`return ${valRes}`);\n    }\n}\nexport class N_yield extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        var _a;\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        if ((_a = val.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            res.funcReturn = val.val;\n        }\n        return res;\n    }\n    compileJS(config) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(config);\n        if (!valRes || !valRes.val) {\n            return new compileResult('');\n        }\n        return new compileResult(`if(_=${valRes.val}){return(_))`);\n    }\n    compilePy(config) {\n        if (!this.value) {\n            return new compileResult('');\n        }\n        const res = new compileResult;\n        const valRes = res.register(this.value, config);\n        if (!valRes) {\n            return new compileResult('');\n        }\n        return new compileResult(`if _ := ${valRes}: return _`);\n    }\n}\nexport class N_indexed extends Node {\n    constructor(pos, base, index) {\n        super(pos);\n        this.base = base;\n        this.index = index;\n    }\n    interpret_(context) {\n        var _a;\n        let baseRes = this.base.interpret(context);\n        if (baseRes.error)\n            return baseRes;\n        let indexRes = this.index.interpret(context);\n        if (indexRes.error)\n            return indexRes;\n        const index = indexRes.val;\n        const base = baseRes.val;\n        if (!base || !index)\n            return new ESUndefined();\n        if (this.value !== undefined) {\n            let valRes = this.value.interpret(context);\n            if (valRes.error)\n                return valRes;\n            const currentVal = wrap(base.__getProperty__({ context }, index));\n            let newVal;\n            let assignVal = valRes.val;\n            (_a = this.assignType) !== null && _a !== void 0 ? _a : (this.assignType = '=');\n            if (!assignVal) {\n                return new TypeError(this.pos, '~undefined', 'undefined', 'undefined', 'N_indexed.interpret_');\n            }\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                case '=':\n                    newVal = assignVal;\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError)\n                return newVal;\n            if (!base.__setProperty__)\n                return new TypeError(this.pos, 'mutable', 'immutable', base.valueOf());\n            const res = base.__setProperty__({ context }, index, newVal !== null && newVal !== void 0 ? newVal : new ESUndefined());\n            if (res instanceof ESError)\n                return res;\n        }\n        return base.__getProperty__({ context }, index);\n    }\n    compileJS(config) {\n        const objectRes = this.base.compileJS(config);\n        if (objectRes.error)\n            return objectRes;\n        const keyRes = this.index.compileJS(config);\n        if (keyRes.error)\n            return keyRes;\n        if (!this.value) {\n            return new compileResult(`${objectRes.val}[${keyRes.val}]`);\n        }\n        const valRes = this.value.compileJS(config);\n        if (valRes.error)\n            return valRes;\n        return new compileResult(`${objectRes.val}[${keyRes.val}]${this.assignType || '='}${valRes.val}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const objectRes = res.register(this.base, config);\n        if (res.error)\n            return res;\n        const keyRes = res.register(this.index, config);\n        if (res.error)\n            return res;\n        if (!this.value) {\n            res.val = `${objectRes}[${keyRes}]`;\n            return res;\n        }\n        const valRes = res.register(this.value, config);\n        if (res.error)\n            return res;\n        res.val = `${objectRes}[${keyRes}] ${this.assignType || '='} ${valRes}`;\n        return res;\n    }\n}\nexport class N_class extends Node {\n    constructor(pos, methods, extends_, init, name = '<anon class>') {\n        super(pos);\n        this.init = init;\n        this.methods = methods;\n        this.name = name;\n        this.extends_ = extends_;\n        this.instances = [];\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const methods = [];\n        for (let method of this.methods) {\n            const res = method.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (!(res.val instanceof ESFunction))\n                return new TypeError(this.pos, 'Function', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            methods.push(res.val);\n        }\n        let extends_;\n        if (this.extends_) {\n            const extendsRes = this.extends_.interpret(context);\n            if (extendsRes.error) {\n                return extendsRes.error;\n            }\n            if (!(extendsRes.val instanceof ESType))\n                return new TypeError(this.pos, 'Function', ((_b = extendsRes.val) === null || _b === void 0 ? void 0 : _b.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            extends_ = extendsRes.val;\n        }\n        let init;\n        if (this.init) {\n            const initRes = this.init.interpret(context);\n            if (initRes.error) {\n                return initRes.error;\n            }\n            if (!(initRes.val instanceof ESFunction)) {\n                return new TypeError(this.pos, 'Function', ((_c = initRes.val) === null || _c === void 0 ? void 0 : _c.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            init = initRes.val;\n        }\n        return new ESType(false, this.name, methods, extends_, init);\n    }\n    compileJS(config) {\n        return new compileResult('function(){return{};}');\n    }\n    compilePy(config) {\n        return new compileResult(`class ${this.name}:\\n${' '.repeat(config.indent)}pass`);\n    }\n}\nexport class N_namespace extends Node {\n    constructor(pos, statements, name = '(anon)', mutable = false) {\n        super(pos);\n        this.name = name;\n        this.statements = statements;\n        this.mutable = mutable;\n    }\n    interpret_(context) {\n        const newContext = new Context();\n        newContext.parent = context;\n        const res = this.statements.interpret(newContext);\n        if (res.error)\n            return res;\n        return new ESNamespace(new ESString(this.name), newContext.getSymbolTableAsDict(), this.mutable);\n    }\n    compileJS(config) {\n        const bodyRes = this.statements.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        return new compileResult(`(() => {${bodyRes.val}})()`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const bodyRes = res.register(this.statements, config);\n        if (res.error)\n            return res;\n        res.val = `'namespace'`;\n        return res;\n    }\n}\nexport class N_tryCatch extends Node {\n    constructor(pos, body, catchBlock) {\n        super(pos, true);\n        this.body = body;\n        this.catchBlock = catchBlock;\n    }\n    interpret_(context) {\n        const res = this.body.interpret(context);\n        if (res.error) {\n            const newContext = new Context();\n            newContext.parent = context;\n            newContext.setOwn(catchBlockErrorSymbolName, new ESErrorPrimitive(res.error), {\n                isConstant: true\n            });\n            const catchRes = this.catchBlock.interpret(newContext);\n            if (catchRes.error)\n                return catchRes.error;\n        }\n        return new interpretResult();\n    }\n    compileJS(config) {\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        const catchRes = this.catchBlock.compileJS(config);\n        if (catchRes.error)\n            return catchRes;\n        return new compileResult(`try{${bodyRes.val}}catch(${catchBlockErrorSymbolName}){${catchRes.val}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const bodyRes = res.register(this.body, config);\n        if (res.error)\n            return res;\n        const catchRes = res.register(this.catchBlock, config);\n        if (res.error)\n            return res;\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 1);\n        res.val = `try:\\n${highIndent}${bodyRes}\\n${indent}except:\\n${highIndent}${catchRes}`;\n        return res;\n    }\n}\nexport class N_number extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        const res = new interpretResult();\n        res.val = new ESNumber(val);\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult(this.a.value.toString());\n    }\n    compilePy(config) {\n        return new compileResult(this.a.value.toString());\n    }\n}\nexport class N_string extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        const res = new interpretResult();\n        res.val = new ESString(val);\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult(`'${this.a.value}'`);\n    }\n    compilePy(config) {\n        return new compileResult(`'${this.a.value}'`);\n    }\n}\nexport class N_variable extends Node {\n    constructor(a) {\n        super(a.pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        if (!context.has(this.a.value)) {\n            return new ReferenceError(this.a.pos, this.a.value);\n        }\n        let res = new interpretResult();\n        let symbol = context.getSymbol(this.a.value);\n        if (!symbol) {\n            return new ESUndefined();\n        }\n        if (symbol instanceof ESError) {\n            return symbol;\n        }\n        res.val = symbol.value;\n        return res;\n    }\n    compileJS(config) {\n        let val = this.a.value.toString();\n        if (val === 'import') {\n            val = 'import_';\n        }\n        return new compileResult(val);\n    }\n    compilePy(config) {\n        let val = this.a.value.toString();\n        if (val === 'import') {\n            val = 'import_';\n        }\n        return new compileResult(val);\n    }\n}\nexport class N_undefined extends Node {\n    constructor(pos = Position.void) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.val = new ESUndefined();\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('undefined');\n    }\n    compilePy(config) {\n        return new compileResult('None');\n    }\n}\nexport class N_break extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldBreak = true;\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('break');\n    }\n    compilePy(config) {\n        return new compileResult('break');\n    }\n}\nexport class N_continue extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldContinue = true;\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('continue');\n    }\n    compilePy(config) {\n        return new compileResult('continue');\n    }\n}\nexport class N_primitiveWrapper extends Node {\n    constructor(val, pos = Position.void) {\n        super(pos, true);\n        this.value = val;\n    }\n    interpret_(context) {\n        return this.value;\n    }\n    compileJS(config) {\n        return new compileResult(JSON.stringify(this.value.valueOf()));\n    }\n    compilePy(config) {\n        return new compileResult(JSON.stringify(this.value.valueOf()));\n    }\n}\n","import { Node } from \"../runtime/nodes\";\nimport { ESPrimitive } from '../runtime/primitiveTypes';\nexport function deepClone(obj, hash = new WeakMap()) {\n    let result;\n    if (Object(obj) !== obj || obj instanceof Function) {\n        return obj;\n    }\n    if (hash.has(obj)) {\n        return hash.get(obj);\n    }\n    try {\n        result = new obj.constructor();\n    }\n    catch (e) {\n        result = Object.create(Object.getPrototypeOf(obj));\n    }\n    if (obj instanceof Map) {\n        Array.from(obj, ([key, val]) => result.set(deepClone(key, hash), deepClone(val, hash)));\n    }\n    else if (obj instanceof Set) {\n        Array.from(obj, (key) => result.add(deepClone(key, hash)));\n    }\n    hash.set(obj, result);\n    return Object.assign(result, ...Object.keys(obj).map(key => ({ [key]: deepClone(obj[key], hash) })));\n}\nexport function str(val, depth = 0) {\n    if (typeof val === 'string') {\n        if (depth > 0) {\n            return `'${val}'`;\n        }\n        return val;\n    }\n    if (depth > 20) {\n        return '...';\n    }\n    let result = '';\n    if (typeof val === 'undefined') {\n        return 'undefined';\n    }\n    if (val instanceof ESPrimitive) {\n        return val.str().valueOf();\n    }\n    if (val instanceof Node) {\n        return `<RunTimeNode: ${val.constructor.name}>`;\n    }\n    switch (typeof val) {\n        case 'object':\n            if (Array.isArray(val)) {\n                result += '[';\n                for (let item of val) {\n                    try {\n                        result += str(item, depth + 1) + `, `;\n                    }\n                    catch (e) {\n                        result += '<large property>, ';\n                    }\n                }\n                if (val.length) {\n                    result = result.substring(0, result.length - 2);\n                }\n                result += ']';\n            }\n            else {\n                try {\n                    result += val.constructor.name;\n                }\n                catch (e) {\n                    result += 'UNKNOWN_CONSTRUCTOR';\n                }\n                result += ': {\\n';\n                let i = 0;\n                for (let item in val) {\n                    i++;\n                    if (!val.hasOwnProperty || !val.hasOwnProperty(item)) {\n                        continue;\n                    }\n                    result += `  ${item}: ${str(val[item], depth + 1) || ''}, \\n`;\n                }\n                if (i > 0) {\n                    result = result.substring(0, result.length - 3);\n                }\n                result += '\\n}\\n';\n            }\n            break;\n        case 'string':\n            result = `'${val}'`;\n            break;\n        case \"bigint\":\n        case \"number\":\n        case \"boolean\":\n            result = `${val}`;\n            break;\n        case \"undefined\":\n            result = '<NativeUndefined>';\n            break;\n        case \"function\":\n            result = `<NativeFunction ${val.name}>`;\n            break;\n    }\n    for (let i = 0; i < depth; i++)\n        result = indent(result);\n    return result;\n}\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms));\nexport function indent(str) {\n    return str.replace(/\\n/g, '\\n    ');\n}\nexport function generateRandomSymbol(symbols, length = 10) {\n    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_';\n    const gen = () => {\n        let result = '';\n        for (let i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * characters.length));\n        }\n        return result;\n    };\n    let symbol = gen();\n    while (symbols.indexOf(symbol) !== -1) {\n        symbol = gen();\n    }\n    return symbol;\n}\n","import { IS_NODE_INSTANCE } from './constants';\nimport { Position } from \"./position\";\nimport { str } from \"./util/util\";\nimport chalk from \"./util/colours\";\nexport class ESError {\n    constructor(pos, name, details) {\n        this.traceback = [];\n        this.pos = pos;\n        this.name = name;\n        this.details = details;\n    }\n    get colouredStr() {\n        let out = '';\n        if (this.traceback.length) {\n            out = chalk.yellow('Error Traceback (most recent call last):\\n');\n            for (let pos of [...this.traceback].reverse())\n                out += `    ${chalk.cyan(pos.position.str)}:\\n        ${pos.line}\\n`;\n        }\n        out += `${chalk.red(this.name)}: ${this.details} \\n at ${chalk.cyan(this.pos.str)}`;\n        return out;\n    }\n    get str() {\n        return `${this.name}: ${this.details} \\n at ${this.pos.str}`;\n    }\n}\nexport class IllegalCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'IllegalCharError', `'${char}'`);\n    }\n}\nexport class InvalidSyntaxError extends ESError {\n    constructor(pos, details) {\n        super(pos, 'InvalidSyntaxError', details);\n    }\n}\nexport class ExpectedCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'ExpectedCharError', `'${char}'`);\n    }\n}\nexport class TypeError extends ESError {\n    constructor(pos, expectedType, actualType, value = '', detail = '') {\n        super(pos, 'TypeError', `Expected type '${expectedType}', got type '${actualType}' ${typeof value === 'undefined' ? '' : ` on value '${str(value)}'`} ${!detail ? '' : detail}`);\n    }\n}\nexport class ImportError extends ESError {\n    constructor(pos, url, detail = '') {\n        super(pos, 'ImportError', `Could not import ${url}: ${detail}`);\n    }\n}\nexport class ReferenceError extends ESError {\n    constructor(pos, ref) {\n        super(pos, 'ReferenceError', `${ref} is not defined`);\n    }\n}\nexport class IndexError extends ESError {\n    constructor(pos, ref, object) {\n        var _a;\n        super(pos, 'IndexError', `'${ref}' is not a property of '${((_a = object === null || object === void 0 ? void 0 : object.info) === null || _a === void 0 ? void 0 : _a.name) || str(object)}'`);\n    }\n}\nexport class InvalidOperationError extends ESError {\n    constructor(op, value, detail = '', pos = Position.void) {\n        var _a;\n        super(pos, 'TypeError', `Cannot perform '${op}' on value ${((_a = value === null || value === void 0 ? void 0 : value.info) === null || _a === void 0 ? void 0 : _a.name) || str(value)}: ${detail}`);\n    }\n}\nexport class InvalidRuntimeError extends ESError {\n    constructor() {\n        super(Position.void, 'InvalidRuntimeError', `Required runtime of ${IS_NODE_INSTANCE ? 'browser' : 'node'}`);\n    }\n}\nexport class TestFailed extends ESError {\n    constructor(detail) {\n        super(Position.void, 'TestFailed', detail);\n    }\n}\nexport class PermissionRequiredError extends ESError {\n    constructor(detail) {\n        super(Position.void, 'PermissionRequiredError', detail);\n    }\n}\n","export class Token {\n    constructor(pos, type, value) {\n        this.type = type;\n        this.value = value;\n        this.pos = pos;\n    }\n    matches(type, val) {\n        return this.type === type && this.value === val;\n    }\n}\n","import { Position } from \"../position\";\nimport { digits, doubleCharTokens, identifierChars, KEYWORDS, multiLineCommentEnd, multiLineCommentStart, singleCharTokens, singleLineComment, stringSurrounds, tripleCharTokens, tt, } from '../constants';\nimport { IllegalCharError } from \"../errors\";\nimport { Token } from \"./tokens\";\nexport class Lexer {\n    constructor(program, fileName) {\n        this.text = program;\n        this.position = new Position(-1, 0, -1, fileName);\n        this.advance();\n    }\n    advance() {\n        this.position.advance(this.currentChar);\n        this.currentChar = this.text[this.position.idx];\n    }\n    generate() {\n        if (!this.text) {\n            return [new Token(this.position, tt.EOF, undefined)];\n        }\n        const tokens = [];\n        while (this.currentChar !== undefined) {\n            if (' \\t\\n'.includes(this.currentChar)) {\n                this.advance();\n            }\n            else if (digits.includes(this.currentChar)) {\n                tokens.push(this.makeNumber());\n            }\n            else if (this.currentChar === singleLineComment[0] &&\n                this.text[this.position.idx + 1] === singleLineComment[1]) {\n                this.singleLineComment();\n            }\n            else if (this.currentChar === multiLineCommentStart[0] &&\n                this.text[this.position.idx + 1] === multiLineCommentStart[1]) {\n                this.multiLineComment();\n            }\n            else if (identifierChars.includes(this.currentChar)) {\n                tokens.push(this.makeIdentifier());\n            }\n            else if (stringSurrounds.indexOf(this.currentChar) !== -1) {\n                tokens.push(this.makeString());\n            }\n            else {\n                const possibleAssignFirstChar = this.currentChar;\n                let token = this.unknownChar();\n                if (token) {\n                    if (token.type === tt.ASSIGN) {\n                        token.value = possibleAssignFirstChar;\n                    }\n                    tokens.push(token);\n                }\n                else {\n                    let pos = this.position.clone;\n                    let char = this.currentChar;\n                    this.advance();\n                    return new IllegalCharError(pos, char);\n                }\n            }\n        }\n        tokens.push(new Token(this.position, tt.EOF, undefined));\n        return tokens;\n    }\n    makeNumber() {\n        const pos = this.position.clone;\n        let numStr = '';\n        let dotCount = 0;\n        while (this.currentChar !== undefined && (digits + '._').includes(this.currentChar)) {\n            if (this.currentChar === '.') {\n                if (dotCount === 1) {\n                    break;\n                }\n                dotCount++;\n                numStr += '.';\n            }\n            else if (this.currentChar !== '_') {\n                numStr += this.currentChar;\n            }\n            this.advance();\n        }\n        return new Token(pos, tt.NUMBER, parseFloat(numStr));\n    }\n    makeString() {\n        const pos = this.position.clone;\n        let str = '';\n        let strClose = this.currentChar;\n        this.advance();\n        while (this.currentChar !== strClose && this.currentChar !== undefined) {\n            if (this.currentChar === '\\\\') {\n                this.advance();\n                if (this.currentChar === 'n') {\n                    str += '\\n';\n                    this.advance();\n                    continue;\n                }\n            }\n            str += this.currentChar;\n            this.advance();\n        }\n        this.advance();\n        return new Token(pos, tt.STRING, str);\n    }\n    makeIdentifier() {\n        let idStr = '';\n        const posStart = this.position.clone;\n        while (this.currentChar !== undefined && (identifierChars + digits).includes(this.currentChar)) {\n            idStr += this.currentChar;\n            this.advance();\n        }\n        let tokType = tt.IDENTIFIER;\n        if (KEYWORDS.indexOf(idStr) !== -1) {\n            tokType = tt.KEYWORD;\n        }\n        return new Token(posStart, tokType, idStr);\n    }\n    unknownChar() {\n        if (this.currentChar === undefined) {\n            return undefined;\n        }\n        for (let triple in tripleCharTokens) {\n            if (triple[0] === this.currentChar)\n                if (triple[1] === this.text[this.position.idx + 1])\n                    if (triple[2] === this.text[this.position.idx + 2]) {\n                        const pos = this.position.clone;\n                        this.advance();\n                        this.advance();\n                        this.advance();\n                        return new Token(pos, tripleCharTokens[triple], undefined);\n                    }\n        }\n        for (let double in doubleCharTokens) {\n            if (double[0] === this.currentChar)\n                if (double[1] === this.text[this.position.idx + 1]) {\n                    const pos = this.position.clone;\n                    this.advance();\n                    this.advance();\n                    return new Token(pos, doubleCharTokens[double], undefined);\n                }\n        }\n        if (singleCharTokens.hasOwnProperty(this.currentChar)) {\n            let pos = this.position.clone;\n            let val = singleCharTokens[this.currentChar];\n            this.advance();\n            return new Token(pos, val, undefined);\n        }\n        return undefined;\n    }\n    singleLineComment() {\n        this.advance();\n        while (this.currentChar !== '\\n' && this.currentChar !== undefined) {\n            this.advance();\n        }\n        this.advance();\n    }\n    multiLineComment() {\n        this.advance();\n        while (!(this.currentChar === multiLineCommentEnd[0] &&\n            this.text[this.position.idx + 1] === multiLineCommentEnd[1])) {\n            this.advance();\n        }\n        this.advance();\n        this.advance();\n    }\n}\n","import { tokenType, tokenTypeString, tt, VAR_DECLARE_KEYWORDS } from '../constants';\nimport { Token } from \"./tokens\";\nimport * as n from '../runtime/nodes';\nimport { N_functionDefinition, N_namespace, N_tryCatch, N_undefined, N_variable } from '../runtime/nodes';\nimport { ESError, InvalidSyntaxError } from \"../errors\";\nimport { types } from \"../runtime/primitiveTypes\";\nexport class ParseResults {\n    constructor() {\n        this.advanceCount = 0;\n        this.lastRegisteredAdvanceCount = 0;\n        this.reverseCount = 0;\n    }\n    registerAdvance() {\n        this.advanceCount = 1;\n        this.lastRegisteredAdvanceCount++;\n    }\n    register(res) {\n        this.lastRegisteredAdvanceCount = res.advanceCount;\n        this.advanceCount += res.advanceCount;\n        if (res.error) {\n            this.error = res.error;\n        }\n        if (!res.node) {\n            return new N_undefined();\n        }\n        return res.node;\n    }\n    tryRegister(res) {\n        if (res.error) {\n            this.reverseCount += res.advanceCount;\n            return;\n        }\n        return this.register(res);\n    }\n    success(node) {\n        this.node = node;\n        return this;\n    }\n    failure(error) {\n        this.error = error;\n        return this;\n    }\n}\nexport class Parser {\n    constructor(tokens) {\n        this.tokens = tokens;\n        this.tokenIdx = -1;\n        this.currentToken = tokens[0];\n        this.advance();\n    }\n    parse() {\n        var _a;\n        if (!this.currentToken || !this.tokens || (this.tokens.length === 1 && this.tokens[0].type === tt.EOF)) {\n            return new ParseResults();\n        }\n        const res = this.statements(true);\n        if (!res.error && this.currentToken.type !== tokenType.EOF) {\n            return res.failure(new InvalidSyntaxError((_a = this.currentToken) === null || _a === void 0 ? void 0 : _a.pos, `Expected 'End of File', got token of type '${tokenTypeString[this.currentToken.type]}'`));\n        }\n        return res;\n    }\n    advance(res) {\n        if (res)\n            res.registerAdvance();\n        this.tokenIdx++;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    reverse(amount = 1) {\n        this.tokenIdx -= amount;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    consume(res, type, errorMsg) {\n        if (this.currentToken.type !== type)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, errorMsg !== null && errorMsg !== void 0 ? errorMsg : `Expected '${tokenTypeString[type]}' but got '${tokenTypeString[this.currentToken.type]}'`));\n        this.advance(res);\n    }\n    clearEndStatements(res) {\n        while (this.currentToken.type === tt.ENDSTATEMENT) {\n            this.advance(res);\n        }\n    }\n    statements(topLevel = false) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let statements = [];\n        this.clearEndStatements(res);\n        const firstStatement = res.register(this.statement());\n        if (!firstStatement) {\n            return res;\n        }\n        statements.push(firstStatement);\n        if (res.error) {\n            return res;\n        }\n        let moreStatements = true;\n        while (true) {\n            let newLineCount = 0;\n            while (this.currentToken.type === tt.ENDSTATEMENT) {\n                this.advance(res);\n                newLineCount++;\n            }\n            if (newLineCount === 0) {\n                moreStatements = false;\n            }\n            if (!moreStatements) {\n                break;\n            }\n            const statement = res.tryRegister(this.statement());\n            if (!statement) {\n                this.reverse(res.reverseCount);\n                continue;\n            }\n            statements.push(statement);\n        }\n        this.clearEndStatements(res);\n        let node = new n.N_statements(pos, statements, topLevel);\n        return res.success(node);\n    }\n    statement() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        if (this.currentToken.matches(tt.KEYWORD, 'return')) {\n            return this.returnStatement(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'yield')) {\n            return this.returnStatement(res, true);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'break')) {\n            this.advance(res);\n            return res.success(new n.N_break(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'continue')) {\n            this.advance(res);\n            return res.success(new n.N_continue(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'try')) {\n            return this.tryCatch();\n        }\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    returnStatement(res, isYield = false) {\n        const pos = this.currentToken.pos;\n        this.advance(res);\n        let expr = new N_undefined(this.currentToken.pos);\n        if (this.currentToken.type !== tt.ENDSTATEMENT) {\n            let exprRes = res.register(this.expr());\n            if (!exprRes) {\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'Expected end of statement'));\n            }\n            expr = exprRes;\n        }\n        if (isYield) {\n            return res.success(new n.N_yield(pos, expr));\n        }\n        return res.success(new n.N_return(pos, expr));\n    }\n    atom() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        const pos = this.currentToken.pos;\n        switch (tok.type) {\n            case tt.NUMBER:\n                this.advance(res);\n                return res.success(new n.N_number(pos, tok));\n            case tt.STRING:\n                this.advance(res);\n                return res.success(new n.N_string(pos, tok));\n            case tt.IDENTIFIER:\n                return this.atomIdentifier(res, pos, tok);\n            case tt.OPAREN:\n                this.advance(res);\n                const expr = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type == tt.CPAREN) {\n                    this.advance(res);\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ')'\"));\n            case tt.OSQUARE:\n                let arrayExpr = res.register(this.array());\n                if (res.error)\n                    return res;\n                return res.success(arrayExpr);\n            case tt.OBRACES:\n                let objectExpr = res.register(this.object());\n                if (res.error)\n                    return res;\n                return res.success(objectExpr);\n            case tt.KEYWORD:\n                if (tok.value === 'if') {\n                    const expr = res.register(this.ifExpr());\n                    if (res.error)\n                        return res;\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Invalid Identifier ${tok.value}`));\n            default:\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected number, identifier, '(', '+' or '-'`));\n        }\n    }\n    atomIdentifier(res, pos, tok) {\n        this.advance(res);\n        let node = new n.N_variable(tok);\n        let prevNode = new n.N_undefined(pos);\n        let functionCall = false;\n        while ([tt.OPAREN, tt.OSQUARE, tt.DOT].indexOf(this.currentToken.type) !== -1) {\n            switch (this.currentToken.type) {\n                case tt.OPAREN:\n                    functionCall = true;\n                    const tempNode = node;\n                    node = res.register(this.makeFunctionCall(node));\n                    prevNode = tempNode;\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.OSQUARE:\n                    prevNode = node;\n                    node = res.register(this.makeIndex(node));\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.DOT:\n                    this.advance(res);\n                    if (this.currentToken.type !== tt.IDENTIFIER)\n                        return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected identifier after '.'`));\n                    prevNode = node;\n                    node = new n.N_indexed(this.currentToken.pos, node, new n.N_string(this.currentToken.pos, this.currentToken));\n                    this.advance(res);\n            }\n        }\n        if (this.currentToken.type === tt.ASSIGN) {\n            let assignType = this.currentToken.value;\n            if (functionCall) {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot assign to return value of function`));\n            }\n            this.advance(res);\n            const value = res.register(this.expr());\n            if (node instanceof n.N_variable) {\n                node = new n.N_varAssign(pos, node.a, value, assignType, false);\n            }\n            else if (node instanceof n.N_indexed) {\n                node.value = value;\n                node.assignType = assignType;\n            }\n            else {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot have node of type ${this.currentToken.constructor.name}.\n                            Expected either index or variable node.`));\n            }\n            if (res.error)\n                return res;\n        }\n        return res.success(node);\n    }\n    power() {\n        return this.binOp(() => this.atom(), [tt.POW, tt.MOD, tt.APMERSAND, tt.PIPE], () => this.factor());\n    }\n    factor() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        if (tok.type == tt.ADD || tok.type === tt.SUB) {\n            this.advance(res);\n            const factor = res.register(this.factor());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(tok.pos, factor, tok));\n        }\n        return this.power();\n    }\n    term() {\n        return this.binOp(() => this.factor(), [tt.MUL, tt.DIV]);\n    }\n    arithmeticExpr() {\n        return this.binOp(() => this.term(), [tt.ADD, tt.SUB]);\n    }\n    comparisonExpr() {\n        const res = new ParseResults();\n        if (this.currentToken.type === tt.NOT) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            let node = res.register(this.expr());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(opTok.pos, node, opTok));\n        }\n        let node = res.register(this.binOp(() => this.arithmeticExpr(), [tt.EQUALS, tt.NOTEQUALS, tt.GT, tt.GTE, tt.LTE, tt.LT]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    expr() {\n        const res = new ParseResults();\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.KEYWORD && VAR_DECLARE_KEYWORDS.indexOf(this.currentToken.value) !== -1) {\n            return this.initiateVar(res);\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'if')) {\n            return this.ifExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'while')) {\n            return this.whileExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'for')) {\n            return this.forExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'func')) {\n            return this.funcExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'class')) {\n            return this.classExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'namespace')) {\n            return this.namespace();\n        }\n        let node = res.register(this.binOp(() => this.comparisonExpr(), [tt.AND, tt.OR]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    binOp(func, ops, funcB = func) {\n        const res = new ParseResults();\n        let left = res.register(func());\n        if (res.error)\n            return res;\n        while (ops.indexOf(this.currentToken.type) !== -1\n            || ops.indexOf([this.currentToken.type, this.currentToken.value]) !== -1) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            const right = res.register(funcB());\n            if (res.error)\n                return res;\n            left = new n.N_binOp(left.pos, left, opTok, right);\n        }\n        return res.success(left);\n    }\n    makeFunctionCall(to) {\n        const res = new ParseResults();\n        let args = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OPAREN)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '['\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n            return res.success(new n.N_functionCall(pos, to, []));\n        }\n        args.push(res.register(this.expr()));\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid argument\"));\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            args.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CPAREN)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n        this.advance(res);\n        return res.success(new n.N_functionCall(pos, to, args));\n    }\n    makeIndex(to) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const base = to;\n        if (this.currentToken.type !== tt.OSQUARE)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, `Cannot index without expression`));\n        }\n        let index = res.register(this.expr());\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid index\"));\n        if (this.currentToken.type !== tt.CSQUARE)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ']'\"));\n        this.advance(res);\n        return res.success(new n.N_indexed(pos, base, index));\n    }\n    typeExpr(res) {\n        if (this.currentToken.type === tt.IDENTIFIER) {\n            const tok = this.currentToken;\n            this.advance(res);\n            return res.success(new N_variable(tok));\n        }\n        return this.expr();\n    }\n    initiateVar(res) {\n        let pos = this.currentToken.pos;\n        let isConst = false;\n        let isLocal = false;\n        let isGlobal = false;\n        let isDeclaration = false;\n        if (this.currentToken.type === tt.KEYWORD &&\n            ['var', 'let'].indexOf(this.currentToken.value) !== -1) {\n            isDeclaration = true;\n            isLocal = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD &&\n            ['global', 'local'].indexOf(this.currentToken.value) !== -1) {\n            isDeclaration = true;\n            if (this.currentToken.value === 'global')\n                isGlobal = true;\n            else\n                isLocal = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD &&\n            ['const', 'mutable'].indexOf(this.currentToken.value) !== -1) {\n            isDeclaration = true;\n            if (this.currentToken.value === 'const')\n                isConst = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected variable declaration keyword, not ${this.currentToken.value}`));\n        }\n        if (this.currentToken.type !== tokenType.IDENTIFIER) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected Identifier or Keyword`));\n        }\n        const varName = this.currentToken;\n        this.advance(res);\n        let type = types.any;\n        if (this.currentToken.type === tt.COLON) {\n            isDeclaration = true;\n            this.consume(res, tt.COLON);\n            type = res.register(this.typeExpr(res));\n        }\n        if (this.currentToken.type !== tt.ASSIGN) {\n            if (isConst)\n                return res.failure(new InvalidSyntaxError(pos, 'Cannot initialise constant to undefined'));\n            return res.success(new n.N_varAssign(pos, varName, new n.N_undefined(this.currentToken.pos), '=', isGlobal, isLocal, isConst, isDeclaration, type));\n        }\n        let assignType = this.currentToken.value;\n        this.advance(res);\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        if (expr instanceof n.N_class || expr instanceof n.N_functionDefinition) {\n            expr.name = varName.value;\n        }\n        if (expr instanceof N_namespace) {\n            expr.name = varName.value;\n            expr.mutable = !isConst;\n        }\n        return res.success(new n.N_varAssign(pos, varName, expr, assignType, isGlobal, isLocal, isConst, isDeclaration, type));\n    }\n    bracesExp() {\n        const res = new ParseResults();\n        this.consume(res, tt.OBRACES);\n        if (res.error) {\n            return res;\n        }\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_undefined(this.currentToken.pos));\n        }\n        const expr = res.register(this.statements());\n        if (res.error) {\n            return res;\n        }\n        this.consume(res, tt.CBRACES);\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    addEndStatement(res) {\n        this.tokens.splice(this.tokenIdx, 0, new Token(this.currentToken.pos, tt.ENDSTATEMENT, undefined));\n        this.reverse();\n        this.advance(res);\n    }\n    ifExpr() {\n        const res = new ParseResults();\n        let ifTrue;\n        let ifFalse;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'if'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'if'\"));\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        ifTrue = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.clearEndStatements(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'else')) {\n            this.advance(res);\n            if (this.currentToken.type == tt.OBRACES) {\n                ifFalse = res.register(this.bracesExp());\n                if (res.error)\n                    return res;\n            }\n            else {\n                ifFalse = res.register(this.statement());\n                if (res.error)\n                    return res;\n            }\n        }\n        this.addEndStatement(res);\n        return res.success(new n.N_if(pos, condition, ifTrue, ifFalse));\n    }\n    whileExpr() {\n        const res = new ParseResults();\n        let loop;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'while')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'while'\"));\n        }\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        loop = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        return res.success(new n.N_while(pos, condition, loop));\n    }\n    parameter(res) {\n        let name;\n        let type = new n.N_primitiveWrapper(types.any);\n        if (this.currentToken.type !== tt.IDENTIFIER)\n            return new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\");\n        name = this.currentToken.value;\n        this.advance(res);\n        if (this.currentToken.type === tt.COLON) {\n            this.consume(res, tt.COLON);\n            if (res.error)\n                return res.error;\n            type = res.register(this.typeExpr(res));\n            if (res.error)\n                return res.error;\n        }\n        return { name, type };\n    }\n    funcCore() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, args = [], returnType = new n.N_primitiveWrapper(types.any);\n        this.consume(res, tt.OPAREN);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n        }\n        else {\n            let param = this.parameter(res);\n            if (param instanceof ESError)\n                return res.failure(param);\n            args.push(param);\n            while (this.currentToken.type === tt.COMMA) {\n                this.advance(res);\n                let param = this.parameter(res);\n                if (param instanceof ESError)\n                    return res.failure(param);\n                args.push(param);\n            }\n            if (this.currentToken.type !== tt.CPAREN)\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n            this.advance(res);\n        }\n        if (this.currentToken.type === tt.COLON) {\n            this.advance(res);\n            returnType = res.register(this.typeExpr(res));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.OBRACES) {\n            body = new n.N_return(this.currentToken.pos, res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        else {\n            this.consume(res, tt.OBRACES);\n            if (res.error)\n                return res;\n            if (this.currentToken.type !== tt.CBRACES)\n                body = res.register(this.statements());\n            else\n                body = new n.N_undefined(this.currentToken.pos);\n            this.consume(res, tt.CBRACES);\n            if (res.error)\n                return res;\n        }\n        return res.success(new n.N_functionDefinition(pos, body, args, returnType));\n    }\n    funcExpr() {\n        const res = new ParseResults();\n        if (!this.currentToken.matches(tt.KEYWORD, 'func'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'func'\"));\n        this.advance(res);\n        const func = res.register(this.funcCore());\n        if (res.error)\n            return res;\n        return res.success(func);\n    }\n    classExpr(name) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const methods = [];\n        let init;\n        let extends_;\n        if (!this.currentToken.matches(tt.KEYWORD, 'class'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'class'\"));\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'extends')) {\n            this.advance(res);\n            extends_ = res.register(this.expr());\n            if (res.error)\n                return res;\n        }\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_class(pos, [], undefined, undefined, name));\n        }\n        while (true) {\n            if (this.currentToken.type !== tt.IDENTIFIER) {\n                break;\n            }\n            let methodId = this.currentToken.value;\n            this.advance(res);\n            const func = res.register(this.funcCore());\n            if (res.error)\n                return res;\n            if (!(func instanceof N_functionDefinition)) {\n                return res.failure(new ESError(this.currentToken.pos, 'ParseError', `Tried to get function, but got ${func} instead`));\n            }\n            func.name = methodId;\n            if (methodId === 'init') {\n                init = func;\n            }\n            else {\n                methods.push(func);\n            }\n        }\n        this.consume(res, tt.CBRACES);\n        return res.success(new n.N_class(pos, methods, extends_, init, name));\n    }\n    forExpr() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, array, identifier, isGlobalIdentifier = false, isConstIdentifier = false;\n        if (!this.currentToken.matches(tt.KEYWORD, 'for'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'for'\"));\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'global')) {\n            isGlobalIdentifier = true;\n            this.advance(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'const')) {\n            isConstIdentifier = true;\n            this.advance(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'var') || this.currentToken.matches(tt.KEYWORD, 'let')) {\n            this.advance(res);\n        }\n        if (this.currentToken.type !== tt.IDENTIFIER)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\"));\n        identifier = this.currentToken;\n        this.advance(res);\n        if (!this.currentToken.matches(tt.KEYWORD, 'in'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected keyword 'in\"));\n        this.advance(res);\n        array = res.register(this.expr());\n        if (res.error)\n            return res;\n        body = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new n.N_for(pos, body, array, identifier, isGlobalIdentifier, isConstIdentifier));\n    }\n    array() {\n        const res = new ParseResults();\n        let elements = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            this.advance(res);\n            return res.success(new n.N_array(pos, []));\n        }\n        elements.push(res.register(this.expr()));\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ']', 'var', 'if', 'for', 'while', number, identifier, '+', '-', '(', '[' or '!' 2\"));\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            elements.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ']'\"));\n        }\n        this.advance(res);\n        return res.success(new n.N_array(pos, elements));\n    }\n    object() {\n        const res = new ParseResults();\n        let properties = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OBRACES) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '{\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_objectLiteral(pos, []));\n        }\n        while (true) {\n            let keyType, key, value;\n            if (this.currentToken.type === tt.IDENTIFIER) {\n                keyType = 'id';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.STRING) {\n                keyType = 'string';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.OSQUARE) {\n                keyType = 'value';\n                this.advance(res);\n                key = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.CSQUARE) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ']', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                this.advance(res);\n            }\n            else {\n                break;\n            }\n            if (this.currentToken.type === tt.COLON) {\n                this.advance(res);\n                value = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                if (this.currentToken.type === tt.COMMA) {\n                    this.advance(res);\n                }\n            }\n            else {\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                if (keyType !== 'id') {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `You must specify a value when initialising an object literal with a key that is not an identifier.\n                        Try using \\`key: value\\` syntax.`));\n                }\n                this.reverse();\n                value = new n.N_variable(this.currentToken);\n                this.advance(res);\n                if (this.currentToken.type === tt.COMMA) {\n                    this.advance(res);\n                }\n            }\n            properties.push([key, value]);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CBRACES)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier, ',' or '}'\"));\n        this.advance(res);\n        return res.success(new n.N_objectLiteral(pos, properties));\n    }\n    namespace() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_namespace(pos, new n.N_undefined()));\n        }\n        const statements = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        return res.success(new n.N_namespace(pos, statements));\n    }\n    tryCatch() {\n        const res = new ParseResults();\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'No empty try block'));\n        }\n        const body = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.value !== 'catch') {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'try block requires catch'));\n        }\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.success(new N_tryCatch(this.currentToken.pos, body, new N_undefined()));\n        }\n        const catchBlock = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new N_tryCatch(this.currentToken.pos, body, catchBlock));\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Lexer } from \"./parse/lexer\";\nimport { Parser } from \"./parse/parser\";\nimport { global, libs as allLibs, now, refreshPerformanceNow, runningInNode, setGlobalContext, VERSION } from \"./constants\";\nimport { initialise } from \"./init\";\nimport { ESError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { compileResult, interpretResult, Node } from \"./runtime/nodes\";\nimport { ESArray } from \"./runtime/primitiveTypes\";\nimport { Context } from \"./runtime/context\";\nimport addNodeLibs from \"./built-in/nodeLibs\";\nimport colours from './util/colours';\nimport JS_STD_TXT_RAW from 'raw-loader!./built-in/compiledSTD/std.txt.js';\nimport PY_STD_TXT_RAW from 'raw-loader!./built-in/compiledSTD/std.txt.py';\nexport { Context, colours };\nexport * from './runtime/primitiveTypes';\nexport * from './constants';\nexport * from './errors';\nexport * from './runtime/nodes';\nexport * from './util/util';\nexport * from './runtime/primitives/wrapStrip';\nexport * from './runtime/symbol';\nexport function init(printFunc = console.log, inputFunc, node = true, libs = { print: console.log }, context = new Context(), path = '') {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const res = initialise(context, printFunc, inputFunc);\n        if (res instanceof ESError) {\n            return res;\n        }\n        setGlobalContext(context);\n        (_a = libs['context']) !== null && _a !== void 0 ? _a : (libs['context'] = context);\n        if (path) {\n            context.path = path;\n        }\n        if (libs.print) {\n            allLibs.print = libs.print;\n        }\n        if (node) {\n            runningInNode();\n            yield refreshPerformanceNow(true);\n            addNodeLibs(libs, context);\n        }\n    });\n}\nexport function run(msg, { env = global, measurePerformance = false, fileName = '(unknown)', currentDir = '' } = {}) {\n    if (currentDir) {\n        env.path = currentDir;\n    }\n    Node.maxTime = 0;\n    Node.totalTime = 0;\n    Node.interprets = 0;\n    const timeData = {\n        total: 0,\n        lexerTotal: 0,\n        parserTotal: 0,\n        interpretTotal: 0,\n        nodeMax: 0,\n        nodeAvg: 0,\n        nodeTotal: 0,\n        interprets: 0,\n    };\n    let start = now();\n    if (!env.root.initialisedAsGlobal) {\n        const res = new interpretResult();\n        res.error = new ESError(Position.void, 'Uninitialised', 'Global context has not been initialised with global values');\n        return res;\n    }\n    const lexer = new Lexer(msg, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        const res_ = new interpretResult();\n        res_.error = lexerRes;\n        return res_;\n    }\n    timeData.lexerTotal = now() - start;\n    start = now();\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        const res_ = new interpretResult();\n        res_.error = res.error;\n        return res_;\n    }\n    timeData.parserTotal = now() - start;\n    start = now();\n    if (!res.node) {\n        const res = new interpretResult();\n        res.val = new ESArray([]);\n        return res;\n    }\n    const finalRes = res.node.interpret(env);\n    timeData.interpretTotal = now() - start;\n    timeData.total = now() - start;\n    timeData.nodeMax = Node.maxTime;\n    timeData.nodeTotal = Node.totalTime;\n    timeData.nodeAvg = Node.totalTime / Node.interprets;\n    timeData.interprets = Node.interprets;\n    if (measurePerformance) {\n        console.log(timeData);\n    }\n    return Object.assign(Object.assign({}, finalRes), { timeData });\n}\nexport function parse(code, { fileName = '(unknown)', currentDir = '' } = {}) {\n    const lexer = new Lexer(code, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        return {\n            error: lexerRes\n        };\n    }\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        return {\n            error: res.error\n        };\n    }\n    if (!res.node) {\n        return {\n            error: new ESError(Position.void, 'Error', 'no output')\n        };\n    }\n    return {\n        compileToJavaScript: (config) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            const comment = `// Generated by EntropyScript->JavaScript compiler v${VERSION}\\n`;\n            const stdStr = JS_STD_TXT_RAW.toString().replace(/(\\r\\n|\\n|\\r|\\t| )+/gm, ' ') + '\\n';\n            const out = res.node.compileJS(config);\n            if (out.error)\n                return out;\n            if (config.minify) {\n                out.val = out.val.replace(/(\\r\\n|\\n|\\r|\\t| )+/gm, ' ');\n            }\n            return new compileResult(comment + stdStr + out.val);\n        },\n        compileToPython: (config) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            const comment = `# Generated by EntropyScript->Python compiler v${VERSION}\\n\\n`;\n            const stdStr = PY_STD_TXT_RAW.toString() + '\\n';\n            const out = res.node.compilePy(config);\n            if (out.error)\n                return out;\n            return new compileResult(comment + stdStr + out.hoisted + '\\n' + out.val);\n        },\n        interpret: (env = global) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            if (currentDir) {\n                env.path = currentDir;\n            }\n            if (!env.root.initialisedAsGlobal) {\n                const res = new interpretResult();\n                res.error = new ESError(Position.void, 'Uninitialised', 'Global context has not been initialised with global values');\n                return res;\n            }\n            return res.node.interpret(env);\n        },\n    };\n}\n","import { Position } from \"../position\";\nimport { Context } from \"../runtime/context\";\nimport { ESError, ImportError, PermissionRequiredError } from '../errors';\nimport { ESFunction, ESNamespace, ESObject, ESString, types } from '../runtime/primitiveTypes';\nimport { str } from \"../util/util\";\nimport { permissions, run } from '../index';\nimport { addModuleFromObj, getModule, moduleExist } from './builtInModules';\nimport { global } from \"../constants\";\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nfunction addNodeLibs(options, context) {\n    const { fs, path } = options;\n    for (let libName in options) {\n        if (options.hasOwnProperty(libName)) {\n            addModuleFromObj(libName, new ESJSBinding(options[libName], libName));\n        }\n    }\n    context.set('import', new ESFunction(({ context }, rawPath) => {\n        if (!permissions.imports) {\n            return new PermissionRequiredError('Imports not allowed');\n        }\n        if (!permissions.imports) {\n            return new PermissionRequiredError('Imports not allowed');\n        }\n        let scriptPath = str(rawPath);\n        if (permissions.useSTD && moduleExist(scriptPath)) {\n            return getModule(scriptPath);\n        }\n        scriptPath = path.join(context.path, scriptPath);\n        try {\n            if (!fs.existsSync(scriptPath)) {\n                if (fs.existsSync('./particles/' + scriptPath)) {\n                    if (fs.existsSync('particles/' + scriptPath + '/main.es')) {\n                        scriptPath = 'particles/' + scriptPath + '/main.es';\n                    }\n                    else {\n                        return new ESError(Position.void, 'ImportError', `Module '${scriptPath}' has no entry point. Requires 'main.es'.`);\n                    }\n                }\n                else {\n                    return new ESError(Position.void, 'ImportError', `Can't find file '${scriptPath}' to import.`);\n                }\n            }\n            const exDir = path.dirname(scriptPath);\n            const code = fs.readFileSync(scriptPath, 'utf-8');\n            const env = new Context();\n            env.parent = global;\n            env.path = exDir;\n            const n = new ESNamespace(new ESString(scriptPath), {});\n            const res = run(code, {\n                env,\n                measurePerformance: false,\n                fileName: scriptPath,\n                currentDir: exDir,\n            });\n            n.__value__ = env.getSymbolTableAsDict();\n            if (res.error) {\n                return res.error;\n            }\n            return n;\n        }\n        catch (E) {\n            return new ESError(Position.void, 'ImportError', E.toString());\n        }\n    }, [{ name: 'path', type: types.string }], 'import', undefined, types.object), {\n        forceThroughConst: true,\n        isConstant: true\n    });\n    context.setOwn('open', new ESFunction(({ context }, path_, encoding_) => {\n        if (!permissions.fileSystem) {\n            return new PermissionRequiredError('No access to file system');\n        }\n        const path = str(path_);\n        const encoding = str(encoding_) || 'utf-8';\n        if (!fs.existsSync(path)) {\n            return new ImportError(Position.void, path);\n        }\n        return new ESObject({\n            str: new ESFunction(({ context }) => {\n                return new ESString(fs.readFileSync(context.path + path, encoding));\n            }, [], 'str', undefined, types.string),\n            write: new ESFunction(({ context }, data) => {\n                fs.writeFileSync(context.path + path, str(data));\n            }, [{ name: 'path', type: types.string }]),\n            append: new ESFunction(({ context }, data) => {\n                fs.appendFileSync(context.path + path, str(data));\n            }, [{ name: 'path', type: types.string }]),\n        });\n    }));\n}\nexport default addNodeLibs;\n","export default \"Array.prototype.contains = function (element) {\\n\\treturn this.indexOf(element) !== -1;\\n};\\n\\nfunction parseNum (str) {\\n\\treturn parseFloat(str);\\n}\\n\\nconst print = console.log;\\n\\nNumber.prototype[Symbol.iterator] = function () {\\n\\treturn {\\n\\t\\tcurrent: 0,\\n\\t\\tlast: this,\\n\\t\\tnext() {\\n\\t\\t\\tif (this.current <= this.last) {\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\tdone: false,\\n\\t\\t\\t\\t\\tvalue: this.current++\\n\\t\\t\\t\\t};\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn { done: true };\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n};\\n\\nconst __private__ = {\\n\\tbims: {\\n\\t\\tmath: Math,\\n\\t\\ttime: {\\n\\t\\t\\tdate: Date,\\n\\t\\t\\tnow: Date.now,\\n\\t\\t},\\n\\t},\\n};\\n\\nif (typeof performance !== 'undefined') {\\n\\t__private__.bims.time.now = performance.now;\\n}\\n\\nfunction import_ (path) {\\n\\tif (__private__.bims.hasOwnProperty(path)) {\\n\\t\\treturn __private__.bims[path];\\n\\t}\\n}\\n\\nfunction range (minP, maxP, stepP) {\\n\\tif (typeof minP !== 'number') {\\n\\t\\treturn [];\\n\\t}\\n\\n\\tconst min = minP.valueOf();\\n\\n\\tif (typeof maxP === 'undefined') {\\n\\t\\ttry {\\n\\t\\t\\treturn [...Array(min).keys()];\\n\\t\\t} catch (e) {\\n\\t\\t\\tthrow `RangeError: Cannot make range of length '${min}'`;\\n\\t\\t}\\n\\t}\\n\\n\\tlet step = 1;\\n\\n\\tif (typeof maxP !== 'number') {\\n\\t\\tthrow 'TypeError: Expected number';\\n\\t}\\n\\n\\tlet max = maxP.valueOf();\\n\\n\\tif (typeof stepP !== 'undefined') {\\n\\t\\tif (typeof stepP !== 'number') {\\n\\t\\t\\tthrow 'TypeError: Expected number';\\n\\t\\t}\\n\\t\\tstep = stepP.valueOf();\\n\\t}\\n\\n\\tlet arr = [];\\n\\n\\tlet i = min;\\n\\twhile (i < max) {\\n\\t\\tarr.push(i);\\n\\t\\ti += step;\\n\\t}\\n\\n\\treturn arr;\\n}\";","export default \"\\n###############################\\n# START OF ENTROPY SCRIPT STD #\\n###############################\\nimport time\\n\\nlog = print\\nparseNum = float\\n\\ndef help(thing):\\n    return 'Help is not available in ES compiled Python'\\n\\n\\ndef GENERATE_PRIVATE():\\n    return {\\n        'modules': {\\n            'ascii': {\\n\\n            },\\n            'time': {\\n                'now': lambda: time.time_ns() / (10 ** 6)\\n            }\\n        }\\n    }\\n\\nPRIVATE = GENERATE_PRIVATE()\\n\\ndef import_ (path):\\n    if path in PRIVATE['modules']:\\n        return PRIVATE['modules'][path]\\n\\n\\n#############################\\n# END OF ENTROPY SCRIPT STD #\\n#############################\";"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Position","constructor","idx","ln","col","file","advance","currentChar","clone","str","isUnknown","void","digits","identifierChars","singleLineComment","multiLineCommentStart","multiLineCommentEnd","global","setGlobalContext","c","stringSurrounds","IS_NODE_INSTANCE","window","runningInNode","VAR_DECLARE_KEYWORDS","VERSION","permissions","networking","imports","accessDOM","useSTD","fileSystem","updatePermissions","newPermissions","assign","print","console","log","catchBlockErrorSymbolName","KEYWORDS","now","refreshPerformanceNow","thisArg","_arguments","generator","Date","performance","e","P","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","tokenType","tt","tokenTypeString","NUMBER","STRING","ENDSTATEMENT","IDENTIFIER","KEYWORD","COMMA","OBRACES","CBRACES","OPAREN","CPAREN","OSQUARE","CSQUARE","ASSIGN","ADD","SUB","MUL","DIV","POW","MOD","EQUALS","NOTEQUALS","NOT","GT","LT","GTE","LTE","AND","OR","COLON","DOT","EOF","APMERSAND","PIPE","BITWISE_NOT","singleCharTokens","doubleCharTokens","tripleCharTokens","primitiveMethods","types","ESPrimitive","type","any","self","isa","props","ESBoolean","__type__","is","valueOf","__value__","typeName","__name__","hasProperty","describe","info","isBuiltIn","description","detail","res","strip","TypeError","__add__","n","InvalidOperationError","__subtract__","__multiply__","__divide__","__pow__","__mod__","__eq__","__gt__","__lt__","__and__","__or__","__bool__","__pipe__","__ampersand__","__setProperty__","__call__","parameters","ESNumber","super","number","cast","string","array","ESArray","Array","ESError","ESString","toString","Math","pow","bool","__getProperty__","wrap","IndexError","val","Boolean","name","helpLink","ESErrorPrimitive","error","details","traceback","map","s","position","line","dealWithExtends","context","class_","instance","this_","callContext","ESType","superFunc","ESFunction","args","newContext","Context","parent","__extends__","_a","initFunc","__init__","__closure__","res_","undefined","setRes","setOwn","createInstance","params","runInit","on","_b","primitive","length","ESUndefined","ESObject","method","__methods__","methodClone","indexOf","__instances__","push","isPrimitive","t","_c","_d","_e","_f","k","ESTypeUnion","left","right","__left__","__right__","object","substr","keys","thisElement","nElement","newOb","keysToRemove","isArray","toClone","ESNamespace","mutable","slice","symbol","isAccessible","v","isConstant","ESJSBinding","functionsTakeProps","JSON","stringify","fTakesProps","func","arguments_","returnType","closure","path","fn","max","i","arg","forceThroughConst","generateESFunctionCallContext","Node","interpret","funcReturn","callNode","callNative","defaultValue","required","boolean","values","len","add","splice","contains","element","newArr","num","parseFloat","isNaN","split","repeat","strToInsert","firstPart","lastPart","ESSymbol","identifier","options","thing","Number","String","m","a","codes","red","yellow","green","cyan","blue","grey","code","builtInFunctions","minP","maxP","stepP","min","arr","returns","msgs","things","out","indent","total","filter","entries","contents","id","has","set","global_","time","cb","sleep","parse","json","modules","ascii","asciiToChar","fromCharCode","charToAscii","char","charCodeAt","processedModules","processRawModule","moduleDict","moduleRaw","moduleExist","getModule","processed","initialise","globalContext","printFunc","inputFunc","rawUrl","callback","url","fetch","text","env","run","ImportError","getSymbolTableAsDict","E","msg","cbRaw","builtIn","globalConstants","constant","load","initModRes","thens","resolved","catch_","catch","date","domRes","PermissionRequiredError","InvalidRuntimeError","w","$","document","ReferenceError","dom","initModules","initialisedAsGlobal","symbolTable","deleted","path_","parent_","hasOwn","getSymbol","getRawSymbolTableAsDict","symbols","remove","clear","resetAsGlobal","deepClone","interpretArgument","typeRes","defaultValRes","interpretResult","shouldBreak","shouldContinue","compileResult","hoisted","register","node","config","compilePy","pos","isTerminal","start","interpret_","interprets","totalTime","maxTime","N_binOp","opTok","l","r","lt","eq","gt","InvalidSyntaxError","compileJS","minify","switchers","op","N_unaryOp","numVal","abs","N_varAssign","varNameTok","assignType","isGlobal","isLocal","isDeclaration","N_primitiveWrapper","currentVal","newVal","assignVal","declaration","N_if","comparison","ifTrue","ifFalse","compRes","highIndent","statementRes","ifTrueRes","ifFalseRes","N_statements","N_while","loop","shouldLoop","potentialError","comparisonRes","bodyRes","N_for","body","isGlobalIdentifier","isConstIdentifier","isGlobalId","isConstId","_g","_h","iteration","iteratorRes","N_array","items","shouldClone","interpreted","item","itemRes","N_objectLiteral","properties","keyNode","valueNode","topLevel","last","N_functionCall","to","arguments","join","funcRes","argRes","N_functionDefinition","argNames","returnTypeRes","param","hoistedName","generateRandomSymbol","N_return","valRes","N_yield","N_indexed","base","index","baseRes","indexRes","objectRes","keyRes","N_class","methods","extends_","init","instances","extendsRes","initRes","N_namespace","statements","N_tryCatch","catchBlock","catchRes","N_number","N_string","N_variable","N_undefined","N_break","N_continue","hash","WeakMap","Function","create","getPrototypeOf","Map","from","Set","depth","substring","ms","setTimeout","replace","characters","gen","charAt","floor","random","colouredStr","reverse","IllegalCharError","ExpectedCharError","expectedType","actualType","ref","TestFailed","Token","matches","Lexer","program","fileName","generate","tokens","includes","makeNumber","multiLineComment","makeIdentifier","makeString","possibleAssignFirstChar","token","unknownChar","numStr","dotCount","strClose","idStr","posStart","tokType","triple","double","ParseResults","advanceCount","lastRegisteredAdvanceCount","reverseCount","registerAdvance","tryRegister","success","failure","Parser","tokenIdx","currentToken","amount","consume","errorMsg","clearEndStatements","firstStatement","statement","moreStatements","newLineCount","returnStatement","tryCatch","expr","isYield","exprRes","atom","tok","atomIdentifier","arrayExpr","objectExpr","ifExpr","prevNode","functionCall","tempNode","makeFunctionCall","makeIndex","power","binOp","factor","term","arithmeticExpr","comparisonExpr","initiateVar","whileExpr","forExpr","funcExpr","classExpr","namespace","ops","funcB","typeExpr","isConst","varName","bracesExp","addEndStatement","condition","parameter","funcCore","methodId","elements","keyType","libs","fs","libName","raw","addModule","rawPath","scriptPath","existsSync","exDir","dirname","readFileSync","measurePerformance","currentDir","encoding_","encoding","write","data","writeFileSync","append","appendFileSync","timeData","lexerTotal","parserTotal","interpretTotal","nodeMax","nodeAvg","nodeTotal","lexerRes","finalRes","compileToJavaScript","comment","stdStr","compileToPython"],"sourceRoot":""}