{"version":3,"file":"2.13.2.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAY,GAAID,IAEhBD,EAAS,GAAIC,IARf,CASGK,MAAM,WACT,M,mBCTA,IAAIC,EAAsB,CCA1BA,EAAwB,CAACL,EAASM,KACjC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAER,EAASO,IAC5EE,OAAOC,eAAeV,EAASO,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EF,EAAwB,CAACQ,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFT,EAAyBL,IACH,oBAAXkB,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeV,EAASkB,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeV,EAAS,aAAc,CAAEoB,OAAO,M,01CCLhD,MAAMC,EACTC,YAAYC,EAAKC,EAAIC,EAAKC,EAAO,aAC7BtB,KAAKmB,IAAMA,EACXnB,KAAKoB,GAAKA,EACVpB,KAAKqB,IAAMA,EACXrB,KAAKsB,KAAOA,EAEhBC,QAAQC,EAAc,IAOlB,OANAxB,KAAKmB,MACLnB,KAAKqB,MACe,OAAhBG,IACAxB,KAAKoB,KACLpB,KAAKqB,IAAM,GAERrB,KAEPyB,YACA,OAAO,IAAIR,EAASjB,KAAKmB,IAAKnB,KAAKoB,GAAIpB,KAAKqB,IAAKrB,KAAKsB,MAEtDI,UACA,MAAO,QAAQ1B,KAAKsB,SAAStB,KAAKoB,GAAK,KAAKpB,KAAKqB,IAAM,IAEvDM,gBACA,OAAqB,IAAd3B,KAAKmB,IAELS,kBACP,OAAO,IAAIX,GAAU,GAAI,GAAI,EAAG,cChBjC,MAAMY,EAAS,aACTC,EAAkB,yDAIxB,IAAIC,EACJ,MAAMC,EAAoBC,IAAYF,EAASE,GACzCC,EAAkB,CAAC,IAAM,IAAK,KACpC,IAAIC,EAAqC,oBAAXC,OAC9B,MAAMC,EAAgB,KAAYF,GAAmB,GAC/CG,EAAuB,CAAC,MAAO,MAAO,UACtCC,E,SACN,IAAIC,EAAc,CACrBC,YAAY,EACZC,SAAS,EACTC,WAAW,EACXC,QAAQ,EACRC,YAAY,GAET,SAASC,EAAkBC,GAC9BP,EAAcnC,OAAO2C,OAAO3C,OAAO2C,OAAO,GAAIR,GAAcO,GAEzD,MAAM,EAAO,CAChBE,MAAOC,QAAQC,KAGNC,EAAW,CACpB,MACA,MACA,SACA,QACA,UACA,QACA,KACA,OACA,QACA,MACA,KACA,WACA,QACA,OACA,SACA,QACA,QACA,UACA,YACA,SACA,MACA,SAEG,IAAIC,EAAM,IAAM,EAChB,SAASC,EAAsBnB,GAClC,OA9DkDoB,EA8DjCvD,KA9D0CwD,OA8DpC,EA9DmDC,EA8DnC,YAE/BJ,EADAlB,EACM,IAAMuB,KAAKL,MAGX,KACF,IACI,OAAuB,OAAhBM,kBAAwC,IAAhBA,iBAAyB,EAASA,YAAYN,MAEjF,MAAOO,GACH,OAAO,KAtEhB,KAFgEC,OA8DxC,KA5DbA,EAAIC,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUjD,GAAS,IAAMkD,EAAKT,EAAUU,KAAKnD,IAAW,MAAO4C,GAAKI,EAAOJ,IACpF,SAASQ,EAASpD,GAAS,IAAMkD,EAAKT,EAAiB,MAAEzC,IAAW,MAAO4C,GAAKI,EAAOJ,IACvF,SAASM,EAAKG,GAJlB,IAAerD,EAIaqD,EAAOC,KAAOP,EAAQM,EAAOrD,QAJ1CA,EAIyDqD,EAAOrD,MAJhDA,aAAiB6C,EAAI7C,EAAQ,IAAI6C,GAAE,SAAUE,GAAWA,EAAQ/C,OAITuD,KAAKN,EAAWG,GAClGF,GAAMT,EAAYA,EAAUe,MAAMjB,EAASC,GAAc,KAAKW,WAN1B,IAAUZ,EAASC,EAAYK,EAAGJ,EA+EvE,IAAIgB,EADXnB,EAAsBnB,GAEtB,SAAWsC,GACPA,EAAUA,EAAkB,OAAI,GAAK,SACrCA,EAAUA,EAAkB,OAAI,GAAK,SACrCA,EAAUA,EAAwB,aAAI,GAAK,eAC3CA,EAAUA,EAAsB,WAAI,GAAK,aACzCA,EAAUA,EAAmB,QAAI,GAAK,UACtCA,EAAUA,EAAiB,MAAI,GAAK,QACpCA,EAAUA,EAAkB,OAAI,GAAK,SACrCA,EAAUA,EAAe,IAAI,GAAK,MAClCA,EAAUA,EAAe,IAAI,GAAK,MAClCA,EAAUA,EAAe,IAAI,GAAK,MAClCA,EAAUA,EAAe,IAAI,IAAM,MACnCA,EAAUA,EAAe,IAAI,IAAM,MACnCA,EAAUA,EAAe,IAAI,IAAM,MACnCA,EAAUA,EAAkB,OAAI,IAAM,SACtCA,EAAUA,EAAkB,OAAI,IAAM,SACtCA,EAAUA,EAAmB,QAAI,IAAM,UACvCA,EAAUA,EAAmB,QAAI,IAAM,UACvCA,EAAUA,EAAmB,QAAI,IAAM,UACvCA,EAAUA,EAAmB,QAAI,IAAM,UACvCA,EAAUA,EAAkB,OAAI,IAAM,SACtCA,EAAUA,EAAqB,UAAI,IAAM,YACzCA,EAAUA,EAAe,IAAI,IAAM,MACnCA,EAAUA,EAAc,GAAI,IAAM,KAClCA,EAAUA,EAAc,GAAI,IAAM,KAClCA,EAAUA,EAAe,IAAI,IAAM,MACnCA,EAAUA,EAAe,IAAI,IAAM,MACnCA,EAAUA,EAAe,IAAI,IAAM,MACnCA,EAAUA,EAAc,GAAI,IAAM,KAClCA,EAAUA,EAAiB,MAAI,IAAM,QACrCA,EAAUA,EAAe,IAAI,IAAM,MACnCA,EAAUA,EAAe,IAAI,IAAM,MACnCA,EAAUA,EAAgB,KAAI,IAAM,OACpCA,EAAUA,EAAqB,UAAI,IAAM,YACzCA,EAAUA,EAAuB,YAAI,IAAM,cAlC/C,CAmCGA,IAAcA,EAAY,KACtB,IAAIC,EAAKD,EACT,MAAME,EAAkB,CAC3B,CAACD,EAAGE,QAAS,SACb,CAACF,EAAGG,QAAS,SACb,CAACH,EAAGI,cAAe,IACnB,CAACJ,EAAGK,YAAa,aACjB,CAACL,EAAGM,SAAU,UACd,CAACN,EAAGO,OAAQ,IACZ,CAACP,EAAGQ,SAAU,IACd,CAACR,EAAGS,SAAU,IACd,CAACT,EAAGU,QAAS,IACb,CAACV,EAAGW,QAAS,IACb,CAACX,EAAGY,SAAU,IACd,CAACZ,EAAGa,SAAU,IACd,CAACb,EAAGc,QAAS,IACb,CAACd,EAAGe,KAAM,IACV,CAACf,EAAGgB,KAAM,IACV,CAAChB,EAAGiB,KAAM,IACV,CAACjB,EAAGkB,KAAM,IACV,CAAClB,EAAGmB,KAAM,IACV,CAACnB,EAAGoB,KAAM,IACV,CAACpB,EAAGqB,QAAS,KACb,CAACrB,EAAGsB,WAAY,KAChB,CAACtB,EAAGuB,KAAM,IACV,CAACvB,EAAGwB,IAAK,IACT,CAACxB,EAAGyB,IAAK,IACT,CAACzB,EAAG0B,KAAM,KACV,CAAC1B,EAAG2B,KAAM,KACV,CAAC3B,EAAG4B,KAAM,KACV,CAAC5B,EAAG6B,IAAK,KACT,CAAC7B,EAAG8B,OAAQ,IACZ,CAAC9B,EAAG+B,KAAM,IACV,CAAC/B,EAAGgC,KAAM,cACV,CAAChC,EAAGiC,WAAY,IAChB,CAACjC,EAAGkC,MAAO,IACX,CAAClC,EAAGmC,aAAc,KAETC,EAAmB,CAC5B,IAAKpC,EAAGiB,IACR,IAAKjB,EAAGkB,IACR,IAAKlB,EAAGe,IACR,IAAKf,EAAGgB,IACR,IAAKhB,EAAGU,OACR,IAAKV,EAAGW,OACR,IAAKX,EAAGmB,IACR,IAAKnB,EAAGoB,IACR,IAAKpB,EAAGQ,QACR,IAAKR,EAAGS,QACR,IAAKT,EAAGO,MACR,IAAKP,EAAGY,QACR,IAAKZ,EAAGa,QACR,IAAKb,EAAGI,aACR,IAAKJ,EAAG8B,MACR,IAAK9B,EAAG+B,IACR,IAAK/B,EAAGc,OACR,IAAKd,EAAGwB,GACR,IAAKxB,EAAGyB,GACR,IAAKzB,EAAGuB,IACR,IAAKvB,EAAGkC,KACR,IAAKlC,EAAGiC,UACR,IAAKjC,EAAGmC,aAECE,EAAmB,CAC5B,KAAMrC,EAAGqB,OACT,KAAMrB,EAAGsB,UACT,KAAMtB,EAAG0B,IACT,KAAM1B,EAAG2B,IACT,KAAM3B,EAAGc,OACT,KAAMd,EAAGc,OACT,KAAMd,EAAGc,OACT,KAAMd,EAAGc,OACT,KAAMd,EAAG4B,IACT,KAAM5B,EAAG6B,IAEAS,EAAmB,GACnBC,EAAmB,CAC5B,UACA,eACA,eACA,aACA,UACA,SACA,SACA,SACA,UACA,SACA,WACA,gBACA,WACA,kBACA,kBACA,YAESC,EAAQ,GC3Md,MAAMC,EACTjG,YAAYF,EAAOoG,EAAOF,EAAMG,KAC5BrH,KAAKsH,KAAOtH,KACZA,KAAKuH,IAAM,CAACC,EAAOJ,IACRA,EAAKK,UAAUD,EAAOxH,MAEjCA,KAAK0H,GAAK,CAACF,EAAO/G,IACP,IAAIkH,EAAUlH,IAAQT,MAEjCA,KAAK4H,QAAU,IAAM5H,KAAK6H,UAC1B7H,KAAK8H,SAAW,IAAMpG,GAAI1B,KAAK+H,UAC/B/H,KAAKgI,YAAc,CAACR,EAAOrH,IAAQ,IAAIwH,EAAU3H,KAAKY,eAAec,GAAIvB,KACzEH,KAAKiI,SAAW,CAACT,EAAOU,KAChBlI,KAAKkI,KAAKC,YAGdnI,KAAKkI,KAAKE,YAAc1G,GAAIwG,KAEhClI,KAAKqI,OAAS,CAACb,EAAOU,KAClB,GAAIlI,KAAKkI,KAAKC,UACV,OAEJ,MAAMG,EAAMC,EAAML,EAAMV,GACxB,GAAmB,iBAARc,EACP,OAAO,IAAIE,GAAUvH,EAAA,KAAe,SAAUjB,KAAK8H,WAAYpG,GAAI1B,OAEvEA,KAAKkI,KAAO7H,OAAO2C,OAAO3C,OAAO2C,OAAO,GAAIhD,KAAKkI,MAAOI,GACxDtI,KAAKkI,KAAKC,WAAY,GAE1BnI,KAAK+H,SAAWX,GAAQpH,KACxBA,KAAK6H,UAAY7G,EACjBhB,KAAKkI,KAAO,GAEhBO,QAAQjB,EAAOkB,GACX,OAAO,IAAIC,GAAsB,GAAI3I,MAEzC4I,aAAapB,EAAOkB,GAChB,OAAO,IAAIC,GAAsB,GAAI3I,MAEzC6I,aAAarB,EAAOkB,GAChB,OAAO,IAAIC,GAAsB,GAAI3I,MAEzC8I,WAAWtB,EAAOkB,GACd,OAAO,IAAIC,GAAsB,GAAI3I,MAEzC+I,QAAQvB,EAAOkB,GACX,OAAO,IAAIC,GAAsB,UAAW3I,MAEhDgJ,QAAQxB,EAAOkB,GACX,OAAO,IAAIC,GAAsB,UAAW3I,MAEhDiJ,OAAOzB,EAAOkB,GACV,OAAO,IAAIC,GAAsB,SAAU3I,MAE/CkJ,OAAO1B,EAAOkB,GACV,OAAO,IAAIC,GAAsB,SAAU3I,MAE/CmJ,OAAO3B,EAAOkB,GACV,OAAO,IAAIC,GAAsB,SAAU3I,MAE/CoJ,QAAQ5B,EAAOkB,GACX,OAAO,IAAIC,GAAsB,UAAW3I,MAEhDqJ,OAAO7B,EAAOkB,GACV,OAAO,IAAIC,GAAsB,SAAU3I,MAE/CsJ,SAAS9B,GACL,OAAO,IAAImB,GAAsB,WAAY3I,MAEjDuJ,SAAS/B,EAAOkB,GACZ,OAAO,IAAIC,GAAsB,WAAY3I,MAEjDwJ,cAAchC,EAAOkB,GACjB,OAAO,IAAIC,GAAsB,gBAAiB3I,MAEtDyJ,gBAAgBjC,EAAOrH,EAAKa,GACxB,OAAO,IAAI2H,GAAsB,kBAAmB3I,KAAM,IAAI0B,GAAIvB,SAAWuB,GAAIV,MAErF0I,SAASlC,KAAUmC,GACf,OAAO,IAAIhB,GAAsB,WAAY3I,OC3E9C,MAAM4J,UAAyBzC,EAClCjG,YAAY2I,EAAQ,IAAIC,GAAQ7I,EAAA,KAAe,UAAW,wBACtD8I,MAAMF,EAAO3C,EAAM2C,OACnB7J,KAAKgK,gBAAkB,CAACxC,EAAOrH,KAC3B,OAAQuB,GAAIvB,IACR,IAAK,OACD,OAAO,IAAI8J,EAASjK,KAAK4H,UAAUsC,MACvC,IAAK,UACD,OAAO,IAAID,EAASjK,KAAK4H,UAAUuC,SACvC,IAAK,YACD,OAAO,IAAIC,EAAQpK,KAAK4H,UAAUyC,UAC7BC,KAAIC,GAAK,IAAIN,EAAS,GAAGM,EAAEC,SAAS9I,SAAS6I,EAAEE,WACxD,QACI,OAAIzK,KAAKsH,KAAK1G,eAAec,GAAIvB,IACtBuK,EAAK1K,KAAKsH,KAAK5F,GAAIvB,KAAO,GAE9B,IAAIwK,GAAW1J,EAAA,KAAed,EAAIyH,UAAW5H,QAGhEA,KAAK4K,KAAO,IAAM,IAAId,GAAQ7I,EAAA,KAAe,YAAa,4BAC1DjB,KAAK0B,IAAM,IAAM,IAAIuI,EAAS,WAAWjK,KAAK4H,UAAUlG,QACxD1B,KAAKiJ,OAAS,CAACzB,EAAOkB,IACX,IAAIf,EAAUe,aAAakB,GAC9B5J,KAAK4H,UAAU1G,cAAgBwH,EAAEd,UAAU1G,aAEnDlB,KAAKsJ,SAAW,IAAM,IAAI3B,GAAU,GACpC3H,KAAK6K,KAAO7K,KAAKsJ,SACjBtJ,KAAKyB,MAAQ,IAAM,IAAImI,EAAiB5J,KAAK4H,WAC7C5H,KAAKyH,UAAYzH,KAAKiJ,OAE1BM,SAAS/B,EAAOkB,GACZ,OAAO,IAAIoC,EAAY9K,KAAM0I,GAEjCc,cAAchC,EAAOkB,GACjB,OAAO,IAAIqC,EAAmB/K,KAAM0I,IC9BrC,MAAMsC,UAAoB7D,EAC7BjG,cACI6I,WAAMkB,EAAW/D,EAAM+D,WACvBjL,KAAK4K,KAAO,EAAGM,QAAAA,GAAW9D,KACtB,OAAQA,GACJ,KAAKF,EAAMiE,OACP,OAAO,IAAIC,EACf,KAAKlE,EAAMmE,OACP,OAAO,IAAIpB,EACf,KAAK/C,EAAMoE,MACP,OAAO,IAAIlB,EACf,KAAKlD,EAAM+D,UACP,OAAO,IAAID,EACf,KAAK9D,EAAME,KACP,OAAO,IAAImE,EACf,KAAKrE,EAAM2C,MACP,OAAO,IAAID,EACf,KAAK1C,EAAMsE,OACX,KAAKtE,EAAMG,IACP,OAAO,IAAIoE,EACf,KAAKvE,EAAA,SACD,OAAO,IAAIwE,GAAW,SAC1B,KAAKxE,EAAMyE,QACP,OAAO,IAAIhE,EACf,QACI,OAAMP,aAAgBmE,EAGfnE,EAAKsC,SAAS,CAAEwB,QAAAA,IAFZ,IAAIpB,GAAQ7I,EAAA,KAAe,YAAa,wBAAwBS,GAAI0F,EAAKU,kBAKhG9H,KAAK0B,IAAM,IAAM,IAAIuI,EAAS,eAC9BjK,KAAKiJ,OAAS,CAACzB,EAAOkB,IACX,IAAIf,EAAUe,aAAasC,QACjB,IAANtC,QACgB,IAAhBA,EAAEd,WAEjB5H,KAAKsJ,SAAW,IAAM,IAAI3B,EAC1B3H,KAAK6K,KAAO7K,KAAKsJ,SACjBtJ,KAAKyB,MAAQ,IAAM,IAAIuJ,EACvBhL,KAAKgK,gBAAkB,IAAK7J,IACpBH,KAAKsH,KAAK1G,eAAec,GAAIvB,IACtBuK,EAAK1K,KAAKsH,KAAK5F,GAAIvB,KAAO,GAE9B,IAAIwK,GAAW1J,EAAA,KAAed,EAAIyH,UAAW5H,MAExDA,KAAKyH,UAAYzH,KAAKiJ,OACtBjJ,KAAKkI,KAAO,CACRgC,KAAM,YACN9B,YAAa,4BACb9G,KAAM,WACN6G,WAAW,GAGnBoB,SAAS/B,EAAOkB,GACZ,OAAO,IAAIoC,EAAY9K,KAAM0I,GAEjCc,cAAchC,EAAOkB,GACjB,OAAO,IAAIqC,EAAmB/K,KAAM0I,IC5DrC,MAAM+C,UAAiBtE,EAC1BjG,YAAY0K,EAAM,IACd7B,MAAM6B,EAAK1E,EAAMsE,QACjBxL,KAAK4K,KAAO,IAAKxD,IACLA,IACCF,EAAMiE,OACA,IAAIC,EAASpL,KAAK4H,UAAY,EAAI,GAElC,IAAIkC,GAAQ7I,EAAA,KAAe,YAAa,gCAAgCS,GAAI0F,EAAKU,gBAGpG9H,KAAK0B,IAAM,KACP,IAAIkK,EAAMlK,GAAI1B,KAAK4H,WAInB,MAH4B,OAAxBgE,EAAIA,EAAIC,OAAS,KACjBD,EAAMA,EAAIE,OAAO,EAAGF,EAAIC,OAAS,IAE9B,IAAI5B,EAAS,aAAa2B,OAErC5L,KAAKiJ,OAAS,EAAGiC,QAAAA,GAAWxC,KACxB,KAAMA,aAAa+C,GACf,OAAO,IAAI9D,EAEf,GAAIe,EAAEqD,KAAKF,SAAW7L,KAAK+L,KAAKF,OAC5B,OAAO,IAAIlE,EAEf,IAAK,IAAIqE,KAAKhM,KAAK+L,KAAM,CACrB,MAAM5L,EAAM6L,EAAEpE,UACRqE,EAAcjM,KAAK4H,UAAUzH,GAC7B+L,EAAWxD,EAAEd,UAAUzH,GAC7B,IAAK8L,EAAa,CACd,GAAIC,EACA,OAAO,IAAIvE,EAEf,SAEJ,IAAKsE,EAAYhD,OACb,OAAO,IAAItB,EAEf,MAAMW,EAAM2D,EAAYhD,OAAO,CAAEiC,QAAAA,GAAWgB,GAC5C,GAAI5D,aAAewB,GACf,OAAOxB,EAEX,IAAKA,EAAIV,UACL,OAAO,IAAID,EAGnB,OAAO,IAAIA,GAAU,IAEzB3H,KAAKsJ,SAAW,IAAM,IAAI3B,GAAU,GACpC3H,KAAK6K,KAAO7K,KAAKsJ,SACjBtJ,KAAKyI,QAAU,EAAGyC,QAAAA,GAAWxC,KACzB,KAAMA,aAAa+C,GACf,OAAO,IAAIjD,GAAUvH,EAAA,KAAe,SAAUyH,EAAEZ,WAAWF,UAAWc,GAE1E,IAAIyD,EAAQ,GACZ,IAAK,IAAIH,KAAKhM,KAAK+L,KAAM,CACrB,MAAM5L,EAAM6L,EAAEpE,UACRU,EAAMtI,KAAKgK,gBAAgB,CAAEkB,QAAAA,GAAWc,GAC9C,GAAI1D,aAAewB,GACf,OAAOxB,EAEX6D,EAAMhM,GAAOmI,EAEjB,IAAK,IAAI0D,KAAKtD,EAAEqD,KAAM,CAClB,MAAM5L,EAAM6L,EAAEpE,UACd,GAAIuE,EAAMvL,eAAeT,GACrB,SAEJ,MAAMmI,EAAMI,EAAEsB,gBAAgB,CAAEkB,QAAAA,GAAWc,GAC3C,GAAI1D,aAAewB,GACf,OAAOxB,EAEX6D,EAAMhM,GAAOmI,EAEjB,OAAO,IAAImD,EAASU,IAExBnM,KAAK4I,aAAe,CAACpB,EAAOkB,KACxB,IAAI0D,EAAe,GACnB,GAAI1D,aAAauB,EACbmC,EAAe,CAAC1K,GAAIgH,QAEnB,MAAIA,aAAa0B,GAIlB,OAAO,IAAI5B,GAAUvH,EAAA,KAAe,iBAAkByH,EAAEZ,WAAWF,UAAWc,GAH9E0D,EAAe7D,EAAMG,EAAGlB,GAK5B,IAAK6E,MAAMC,QAAQF,GACf,OAAO,IAAI5D,GAAUvH,EAAA,KAAe,iBAAkByH,EAAEZ,WAAWF,UAAWc,GAElF,IAAIyD,EAAQ,GACZ,IAAK,IAAIH,KAAKhM,KAAK+L,KAAM,CACrB,MAAM5L,EAAM6L,EAAEpE,UACd,IAAmC,IAA/BwE,EAAaG,QAAQpM,GAAa,CAClC,IAAImI,EAAMtI,KAAKgK,gBAAgBxC,EAAOwE,GACtC,GAAI1D,aAAewB,GACf,OAAOxB,EAEX6D,EAAMhM,GAAOmI,GAGrB,OAAO,IAAImD,EAASU,IAExBnM,KAAKgK,gBAAkB,CAACxC,EAAOwE,KAC3B,KAAMA,aAAa/B,GAAe+B,aAAaZ,GAC3C,OAAO,IAAI5C,GAAUvH,EAAA,KAAe,kBAAmB+K,EAAElE,WAAYpG,GAAIsK,IAE7E,MAAM7L,EAAM6L,EAAEpE,UACd,OAAI5H,KAAK4H,UAAUhH,eAAeT,GACvBH,KAAK4H,UAAUzH,GAEtBH,KAAKsH,KAAK1G,eAAeT,GAClBuK,EAAK1K,KAAKsH,KAAK5F,GAAIvB,KAAO,GAE9B,IAAI6K,GAEfhL,KAAKyJ,gBAAkB,IAAKtJ,EAAKa,KAC7B,KAAMb,aAAe8J,GACjB,OAAO,IAAIzB,GAAUvH,EAAA,KAAe,SAAUd,EAAI2H,WAAYpG,GAAIvB,IAEtEH,KAAK6H,UAAU1H,EAAIyH,WAAa5G,GAEpChB,KAAKgI,YAAc,CAACR,EAAOwE,KACvB,MAAM7L,EAAMuB,GAAIsK,GAChB,OAAIhM,KAAK4H,UAAUhH,eAAec,GAAIvB,IAC3B,IAAIwH,GAAU,GAElB,IAAIA,EAAU3H,KAAKY,eAAeT,KAE7CH,KAAKyB,MAAQ,KACT,MAAM6G,EAAM,IAAImD,EAChB,IAAIhL,EAAM,GACN+L,EAAUxM,KAAK4H,UACnB,IAAK,IAAIzH,KAAOE,OAAO0L,KAAKS,GACxB/L,EAAIN,GAAOqM,EAAQrM,GAGvB,OADAmI,EAAIT,UAAYpH,EACT6H,GAEXtI,KAAKyH,UAAY,CAACD,EAAOkB,KACrB,KAAMA,aAAa+C,GACf,OAAO,IAAI9D,EAEf,GAAItH,OAAO0L,KAAK/L,KAAK4H,WAAWiE,SAAWxL,OAAO0L,KAAKrD,EAAEd,WAAWiE,OAChE,OAAO,IAAIlE,EAEf,IAAK,IAAIxH,KAAOE,OAAO0L,KAAK/L,KAAK4H,WAAY,CACzC,IAAKc,EAAEd,UAAUhH,eAAeT,KAASH,KAAK4H,UAAUhH,eAAeT,GACnE,OAAO,IAAIwH,EAEf,MAAM8E,EAAWzM,KAAK4H,UAAUzH,GAC1BuM,EAAShE,EAAEd,UAAUzH,GAC3B,IAAKsM,EAAShF,UAAUD,EAAOkF,GAAQ9E,UACnC,OAAO,IAAID,EAGnB,OAAO,IAAIA,GAAU,IAGzBoE,WACA,OAAO1L,OAAO0L,KAAK/L,KAAK4H,WAAW0C,KAAIC,GAAK,IAAIN,EAASM,KAEzDwB,SAAKH,IACTrC,SAAS/B,EAAOkB,GACZ,OAAO,IAAIoC,EAAY9K,KAAM0I,GAEjCc,cAAchC,EAAOkB,GACjB,OAAO,IAAIqC,EAAmB/K,KAAM0I,ICvKrC,MAAMgD,UAAmBvE,EAC5BjG,YAAYyL,EAAO,SAAaC,EAAa,GAAI1C,EAAO,SAAU2C,EAAQ,IAAIpB,EAAYqB,EAAa5F,EAAMG,IAAK0F,GAC9GhD,MAAM4C,EAAMzF,EAAA,UACZlH,KAAK4K,KAAO,CAACpD,EAAOJ,IACT,IAAI0C,GAAQ7I,EAAA,KAAe,YAAa,+BAEnDjB,KAAKyB,MAAQ,IACF,IAAIiK,EAAW1L,KAAK6H,UAAW7H,KAAK4M,WAAY5M,KAAKkK,KAAMlK,KAAK6M,MAAO7M,KAAK8M,WAAY9M,KAAKgN,aAExGhN,KAAK4H,QAAU,IAAM5H,KACrBA,KAAK0B,IAAM,IAAM,IAAIuI,EAAS,UAAUjK,KAAKkK,SAC7ClK,KAAKiJ,OAAS,CAACzB,EAAOkB,IAGX,IAAIf,EAFLe,aAAagD,GAEE1L,KAAK6H,YAAca,EAAEb,WAE9C7H,KAAKsJ,SAAW,IAAM,IAAI3B,GAAU,GACpC3H,KAAK6K,KAAO7K,KAAKsJ,SACjBtJ,KAAK0J,SAAW,EAAGwB,QAAAA,MAAc+B,KAC7BjN,KAAKgN,YAAYE,KAAOhC,EAAQgC,KCKrC,SAAchC,EAAS5D,EAAM2F,GAChC,IAAIE,EACJ,IAAIC,EAAclC,GAClBA,EAAU5D,EAAK0F,aACPE,KAAOE,EAAYF,KAC3B,MAAMG,EAAK/F,EAAKO,UACVyF,EC+HH,SAAuCL,EAAQ3F,EAAMiG,GACxD,MAAMD,EAAa,IAAIE,GACvBF,EAAWC,OAASA,EACpB,IAAIE,EAAMC,KAAKD,IAAIR,EAAOpB,OAAQvE,EAAKsF,WAAWf,QAClD,IAAK,IAAI8B,EAAI,EAAGA,EAAIF,EAAKE,IAAK,CAC1B,IAAI3M,EAAQ,IAAIgK,EACZ5D,EAAOF,EAAMG,IACjB,IAAKC,EAAKsF,WAAWe,GACjB,SAEJ,MAAMC,EAAMtG,EAAKsF,WAAWe,GACxBV,EAAOU,aAAcxG,IACrBC,EAAO6F,EAAOU,GAAG5F,SACjB/G,EAAQiM,EAAOU,IAEnB,MAAME,EAAeD,EAAIxG,KAAKK,UAAU,CAAEyD,QAASqC,GAAUN,EAAOU,IACpE,GAAIE,aAAwB/D,GACxB,OAAO+D,EACX,IAAKA,EAAajG,UACd,OAAO,IAAIY,GAAUvH,EAAA,KAAeS,GAAIkM,EAAIxG,MAAO1F,GAAI0F,GAAO1F,GAAIV,IAEtEsM,EAAWQ,OAAOF,EAAI1D,KAAMlJ,EAAO,CAC/B+M,mBAAmB,IAG3B,IAAIC,EAASV,EAAWQ,OAAO,OAAQ,IAAI1D,EAAQ6C,GAAS,CACxDc,mBAAmB,IAEvB,OAAIC,aAAkBlE,GACXkE,EAEJV,ED9JYW,CAA8BhB,EAAQ3F,EAAM4D,GAC/D,GAAIoC,aAAsBxD,GACtB,OAAOwD,EAEX,IAAIT,EAA8B,QAArBM,EAAK7F,EAAKuF,aAA0B,IAAPM,EAAgBA,EAAK,IAAI1B,EACnE,KAAMoB,aAAiBpB,GACnB,OAAO,IAAIjD,GAAUvH,EAAA,KAAe,gBAAiB4L,EAAOA,EAAO,4BAEvE,IAAImB,EAASV,EAAWQ,OAAO,OAAQjB,GACvC,OAAImB,aAAkBlE,GACXkE,EAEPX,aAAca,GAhDtB,SAAkB5G,EAAM4D,EAAS+B,EAAQI,GACrC,IAAIF,EAAIgB,EACR,MAAM7F,EAAM+E,EAAGe,UAAUlD,GACzB,OAAI5C,EAAIuB,MACGvB,EAAIuB,YACQoB,IAAnB3C,EAAI+F,aACJ/F,EAAIsD,IAAMtD,EAAI+F,WACd/F,EAAI+F,gBAAapD,IAE6C,IAA9D3D,EAAKwF,WAAWrF,UAAU,CAAEyD,QAAAA,GAAW5C,EAAIsD,KAAKhE,UACzC,IAAIY,GAAUvH,EAAA,KAAeS,GAAI4F,EAAKwF,aAAiC,QAAlBK,EAAK7E,EAAIsD,WAAwB,IAAPuB,OAAgB,EAASA,EAAGrF,WAAWF,YAAc,YAAgC,QAAlBuG,EAAK7F,EAAIsD,WAAwB,IAAPuC,OAAgB,EAASA,EAAGzM,MAAMkG,UAAW,0BAEhOU,EAAIsD,IACGtD,EAAIsD,IAGJ,IAAIZ,GAiCJsD,CAAShH,EAAMgG,EAAYL,EAAQI,GAEvB,mBAAPA,EAhCpB,SAAoB/F,EAAM4D,EAAS+B,EAAQI,GACvC,IAAK,IAAIM,EAAIV,EAAOpB,OAAQ8B,EAAIN,EAAGxB,OAAQ8B,IACvCV,EAAOsB,KAAK,IAAIvD,GACpB,MAAM1C,EAAM+E,EAAG,CACXnC,QAAAA,MACE+B,GACN,OAAI3E,aAAewB,IAAWxB,aAAenB,EAClCmB,EAEJ,IAAI0C,EAwBAwD,CAAWlH,EAAMgG,EAAYL,EAAQI,GAGrC,IAAI7E,GAAUvH,EAAA,KAAe,kBAAmBoM,GD7B5CxM,CAAKb,KAAKgN,YAAahN,KAAMiN,IAExCjN,KAAKgK,gBAAkB,CAACxC,EAAOrH,IACvBH,KAAKsH,KAAK1G,eAAec,GAAIvB,IACtBuK,EAAK1K,KAAKsH,KAAK5F,GAAIvB,KAAO,GAE9B,IAAIwK,GAAW1J,EAAA,KAAed,EAAIyH,UAAW5H,MAExDA,KAAKyH,UAAY,CAACD,EAAOkB,KACrB,KAAMA,aAAagD,GACf,OAAO,IAAI/D,EAEf,GAAI3H,KAAK4M,WAAWf,SAAWnD,EAAEkE,WAAWf,OACxC,OAAO,IAAIlE,EAEf,IAAK,IAAIgG,EAAI,EAAGA,EAAI3N,KAAK4M,WAAWf,OAAQ8B,IACxC,IAAK3N,KAAK4M,WAAWe,GAAGvG,KAAKK,UAAUD,EAAOkB,EAAEkE,WAAWe,GAAGvG,MAAMQ,UAChE,OAAO,IAAID,EAGnB,MAAM8G,EAAgBzO,KAAK0J,SAASlC,GACpC,OAAIiH,aAAyB3E,GAClB2E,EAENA,EAAcxF,OAAOzB,EAAOkB,EAAEoE,YAAYlF,UAGxC,IAAID,GAAU,GAFV,IAAIA,GAInB3H,KAAK4M,WAAaA,EAClB5M,KAAKkI,KAAKgC,KAAOA,EACjBlK,KAAK6M,MAAQA,EACb7M,KAAK8M,WAAaA,EACdC,EACA/M,KAAKgN,YAAcD,GAGnB/M,KAAKgN,YAAc,IAAIQ,GACvBxN,KAAKgN,YAAYO,OAASxL,GAE9B/B,KAAKkI,KAAK4E,WAAapL,GAAIoL,GAC3B9M,KAAKkI,KAAKwG,KAAO9B,EAAWtC,KAAIsD,IAAO,CACnC1D,KAAM0D,EAAI1D,KACVyE,aAAcjN,GAAIkM,EAAIe,cACtBvH,KAAMwG,EAAIxG,KAAKc,KAAKgC,KACpB0E,UAAU,MAGd1E,WACA,IAAIiD,EACJ,OAAiC,QAAzBA,EAAKnN,KAAKkI,KAAKgC,YAAyB,IAAPiD,EAAgBA,EAAK,cAE9DjD,SAAK2E,GACL7O,KAAKkI,KAAKgC,KAAO2E,EAErBtF,SAAS/B,EAAOkB,GACZ,OAAO,IAAIoC,EAAY9K,KAAM0I,GAEjCc,cAAchC,EAAOkB,GACjB,OAAO,IAAIqC,EAAmB/K,KAAM0I,IGlFrC,MAAMoG,UAAoB3H,EAC7BjG,YAAYgJ,EAAMlJ,EAAO+N,GAAU,GAC/BhF,MAAM/I,EAAOkG,EAAMsE,QACnBxL,KAAK4K,KAAO,MACD,IAAId,GAAQ7I,EAAA,KAAe,YAAa,gCAEnDjB,KAAKyB,MAAQ,KACT,IAAIhB,EAAM,GACN+L,EAAUxM,KAAK4H,UACnB,IAAK,IAAIzH,KAAOE,OAAO0L,KAAKS,GACxB/L,EAAIN,GAAOqM,EAAQrM,GAEvB,OAAO,IAAI2O,EAAY9O,KAAKkK,KAAMzJ,IAEtCT,KAAK0B,IAAM,KACP,MAAMqK,EAAO1L,OAAO0L,KAAK/L,KAAK4H,WAC9B,OAAO,IAAIqC,EAAS,cAAcvI,GAAI1B,KAAKkK,QAAQ6B,EAAKF,OAAS,EAAI,KAAO,KAAKE,EAAKiD,MAAM,EAAG,KAAKjD,EAAKF,QAAU,EAAI,MAAQ,QAEnI7L,KAAKiJ,OAAS,CAACzB,EAAOkB,IACX,IAAIf,EAAU3H,OAAS0I,GAElC1I,KAAKsJ,SAAW,IAAM,IAAI3B,GAAU,GACpC3H,KAAK6K,KAAO7K,KAAKsJ,SACjBtJ,KAAKgK,gBAAkB,CAACxC,EAAOrH,KAC3B,GAAIA,aAAe8J,GAAYjK,KAAK4H,UAAUhH,eAAeT,EAAIyH,WAAY,CACzE,MAAMqH,EAASjP,KAAK4H,UAAUzH,EAAIyH,WAClC,GAAIqH,EAAOC,aACP,OAAOD,EAAOjO,MAGtB,OAAMb,aAAe8J,EAGjBjK,KAAKsH,KAAK1G,eAAec,GAAIvB,IACtBuK,EAAK1K,KAAKsH,KAAK5F,GAAIvB,KAAO,GAE9B,IAAIwK,GAAW1J,EAAA,KAAed,EAAIyH,UAAW5H,KAAKsH,MAL9C,IAAIkB,GAAUvH,EAAA,KAAe,SAAUd,EAAI2H,aAO1D9H,KAAKyH,UAAYzH,KAAKiJ,OACtBjJ,KAAKkI,KAAKgC,KAAOxI,GAAIwI,GACrBlK,KAAK+O,QAAUA,EAEf7E,WACA,OAAO,IAAID,EAASjK,KAAKkI,KAAKgC,MAE9BA,SAAK2E,GACL7O,KAAKkI,KAAKgC,KAAO2E,EAAEjH,UAEvB6B,gBAAgBjC,EAAOrH,EAAKa,GACxB,KAAMb,aAAe8J,GACjB,OAAO,IAAIzB,GAAUvH,EAAA,KAAe,SAAUd,EAAI2H,WAAWF,UAAWlG,GAAIvB,IAEhF,IAAIgB,EAAMO,GAAIvB,GACd,IAAKH,KAAK+O,QACN,OAAO,IAAIvG,GAAUvH,EAAA,KAAe,UAAW,YAAa,GAAGS,GAAI1B,KAAKkK,SAEtElJ,aAAiBmG,IACnBnG,EAAQ0J,EAAK1J,IAEjB,MAAMiO,EAASjP,KAAK6H,UAAU1G,GAC9B,OAAK8N,EAGDA,EAAOE,WACA,IAAI3G,GAAUvH,EAAA,KAAe,UAAW,YAAa,GAAGS,GAAI1B,KAAKkK,SAAS/I,MAEhF8N,EAAOC,kBAGZD,EAAOjO,MAAQA,GAFJ,IAAIwH,GAAUvH,EAAA,KAAe,aAAc,eAAgB,GAAGS,GAAI1B,KAAKkK,SAAS/I,MANhF,IAAI2I,GAAQ7I,EAAA,KAAe,cAAe,UAAUE,kCAAoCO,GAAI1B,KAAKkK,UAUhHX,SAAS/B,EAAOkB,GACZ,OAAO,IAAIoC,EAAY9K,KAAM0I,GAEjCc,cAAchC,EAAOkB,GACjB,OAAO,IAAIqC,EAAmB/K,KAAM0I,IC1ErC,MAAM0G,UAAoBjI,EAC7BjG,YAAYF,EAAOkJ,EAAO,eAAgBmF,GAAqB,GAC3DtF,MAAM/I,EAAOkG,EAAMsE,QACnBxL,KAAK4K,KAAQpD,GACF,IAAIsC,GAAQ7I,EAAA,KAAe,YAAa,6BAEnDjB,KAAKyB,MAAQ,IAAM,IAAI2N,EAAYpP,KAAK6H,WACxC7H,KAAK0B,IAAM,KACP,IACI,OAAO,IAAIuI,EAASqF,KAAKC,UAAUvP,KAAK6H,YAE5C,MAAOjE,GACH,OAAO,IAAIqG,EAAS,GAAGjK,KAAK6H,eAGpC7H,KAAKiJ,OAAS,IAAKP,IACR,IAAIf,EAAU3H,OAAS0I,GAElC1I,KAAKsJ,SAAW,IAAM,IAAI3B,GAAU,GACpC3H,KAAK6K,KAAO7K,KAAKsJ,SACjBtJ,KAAKgK,gBAAkB,CAACxC,EAAOwE,KAC3B,MAAM7L,EAAMuB,GAAIsK,GACVJ,EAAM5L,KAAK4H,UACXU,EAAMsD,EAAIzL,GAChB,QAAY8K,IAAR3C,EACA,OAAItI,KAAKsH,KAAK1G,eAAeT,GAClBuK,EAAK1K,KAAKsH,KAAK5F,GAAIvB,KAAO,GAE9B,IAAIwK,GAAW1J,EAAA,KAAed,EAAKH,MAE9C,GAAIsI,aAAenB,EACf,OAAOmB,EAEX,GAAmB,mBAARA,EAAoB,CAC3B,IAAIkH,EAAcxP,KAAKqP,mBACvB,OAAO,IAAI3D,GAAW,CAAClE,KAAUkH,IACxBc,EAMM5D,EAAIzL,GAAKqH,KAAUkH,IAL1BA,EAAOA,EAAKpE,KAAIlK,GAAKmI,EAAMnI,EAAGoH,KAEvBkD,EADKkB,EAAIzL,MAAQuO,OAQpC,OAAOhE,EAAKpC,IAEhBtI,KAAK0J,SAAW,CAAClC,KAAUkH,KACvB,GAA8B,mBAAnB1O,KAAK6H,UACZ,OAAO,IAAIW,GAAUvH,EAAA,KAAe,kBAAmBjB,KAAK6H,UAAWnG,GAAI1B,OAE/E,IAAIsI,EACJ,GAAItI,KAAKqP,mBACL,IACI/G,EAAM,IAAItI,KAAK6H,UAAUL,KAAUkH,GAEvC,MAAOvB,GACH7E,EAAMtI,KAAK6H,UAAUL,KAAUkH,QAInC,IACIpG,EAAM,IAAItI,KAAK6H,aAAa6G,EAAKpE,KAAIlK,GAAKmI,EAAMnI,EAAGoH,MAEvD,MAAO2G,GACH7F,EAAMtI,KAAK6H,aAAa6G,EAAKpE,KAAIlK,GAAKmI,EAAMnI,EAAGoH,MAGvD,OAAIc,aAAenB,EACRmB,EAEJoC,EAAKpC,IAEhBtI,KAAKgI,YAAc,CAACR,EAAOrH,IAChB,IAAIwH,IAAY3H,KAAKgK,gBAAgBxC,EAAOrH,aAAgB2J,KAEvE9J,KAAKyH,UAAYzH,KAAKiJ,OACtBjJ,KAAKkI,KAAKgC,KAAOxI,GAAIwI,GACrBlK,KAAKqP,mBAAqBA,EAE9B9F,SAAS/B,EAAOkB,GACZ,OAAO,IAAIoC,EAAY9K,KAAM0I,GAEjCc,cAAchC,EAAOkB,GACjB,OAAO,IAAIqC,EAAmB/K,KAAM0I,ICjFrC,SAAS+G,IACZvI,EAAME,KAAO,IAAImE,GAAO,EAAM,QAC9BrE,EAAM+D,UAAY,IAAIM,GAAO,EAAM,aACnCrE,EAAMmE,OAAS,IAAIE,GAAO,EAAM,UAChCrE,EAAMoE,MAAQ,IAAIC,GAAO,EAAM,SAC/BrE,EAAMiE,OAAS,IAAII,GAAO,EAAM,UAChCrE,EAAMG,IAAM,IAAIkE,GAAO,EAAM,OAC7BrE,EAAA,SAAiB,IAAIqE,GAAO,EAAM,YAClCrE,EAAM2D,KAAO,IAAIU,GAAO,EAAM,WAC9BrE,EAAMsE,OAAS,IAAID,GAAO,EAAM,UAChCrE,EAAM2C,MAAQ,IAAI0B,GAAO,EAAM,SAC/BrE,EAAMG,IAAIa,KAAO,CACbgC,KAAM,MACN9B,YAAa,yBACb9G,KAAM,WACN6G,WAAW,GAEfjB,EAAMiE,OAAOjD,KAAO,CAChBgC,KAAM,MACN9B,YAAa,8GACb9G,KAAM,WACN6G,WAAW,GAEfjB,EAAMmE,OAAOnD,KAAO,CAChBgC,KAAM,SACN9B,YAAa,8HACb9G,KAAM,WACN6G,WAAW,GAEfjB,EAAM2D,KAAK3C,KAAO,CACdgC,KAAM,OACN9B,YAAa,iEACb9G,KAAM,WACN6G,WAAW,GAEfjB,EAAA,cAAsB,CAClBgD,KAAM,WACN9B,YAAa,kGACb9G,KAAM,WACN6G,WAAW,GAEfjB,EAAMoE,MAAMpD,KAAO,CACfgC,KAAM,QACN9B,YAAa,mGACb9G,KAAM,WACN6G,WAAW,GAEfjB,EAAMsE,OAAOtD,KAAO,CAChBgC,KAAM,SACN9B,YAAa,oEACb9G,KAAM,WACN6G,WAAW,GAEfjB,EAAM2C,MAAM3B,KAAO,CACfgC,KAAM,QACN9B,YAAa,6CACb9G,KAAM,WACN6G,WAAW,GAEfjB,EAAME,KAAKc,KAAO,CACdgC,KAAM,OACN9B,YAAa,iEACb9G,KAAM,WACN6G,WAAW,GCvEnB,SAASuH,EAAgBxE,EAASyE,EAAQC,EAAU/C,EAAOO,GACvD,KAAMuC,aAAkBpE,GACpB,OAAO,IAAI/C,GAAUvH,EAAA,KAAe,cAAe0O,EAAQA,GAE/D,MAAME,EAAY,IAAInE,GAAW,EAAGR,QAAAA,MAAcwD,KAC9C,MAAMpB,EAAa,IAAIE,GAEvB,GADAF,EAAWC,OAASrC,EAChByE,EAAOG,YAAa,CACpB,IAAI3C,EAAKuC,EAAgBpC,EAAYqC,EAAOG,YAAaF,EAAU/C,EAAOO,GAC1E,GAAID,aAAcrD,GACd,OAAOqD,EAGf,MAAM4C,EAAWJ,MAAAA,OAAuC,EAASA,EAAOK,SACxE,IAAKD,EACD,OAEJA,EAASlD,MAAQA,EACjBkD,EAAS/C,YAAcM,EACvB,MAAM2C,EAAOF,EAASrG,SAAS,CAAEwB,QAASoC,MAAiBoB,GAC3D,OAAIuB,aAAgBnG,GACTmG,OADX,SAGDhF,EAAW,QAAS4B,GACvB,IAAImB,EAAS9C,EAAQ4C,OAAO,QAAS+B,GACrC,GAAI7B,aAAkBlE,GAClB,OAAOkE,EAEX,MAAM1F,EAAM4H,EAAeP,EAAQ,CAAEzE,QAAAA,GAAW,IAAI,EAAO0E,GAC3D,OAAItH,aAAewB,GACRxB,OADX,EAIG,SAAS4H,EAAe9I,GAAM,QAAE8D,GAAW+B,EAAQkD,GAAU,EAAMC,EAAK,IAC3E,IAAIjC,EACJ,GAAI/G,EAAKiJ,UAAW,CAChB,GAAIpD,EAAOpB,OAAS,EAChB,OAAO,IAAIb,EAEf,OAAQ5D,EAAKkJ,UACT,IAAK,YACL,IAAK,OACD,OAAIrD,EAAOpB,OAAS,EACT,IAAIN,EAGJ,IAAItB,EAASgD,EAAO,GAAGnF,YAEtC,IAAK,SACD,OAAO,IAAImC,EAASgD,EAAO,GAAGvL,MAAMkG,WACxC,IAAK,QACD,OAAO,IAAIwC,EAAQ6C,GACvB,IAAK,SACD,OAAO,IAAI7B,EAAS6B,EAAO,GAAGrF,WAClC,IAAK,WACD,OAAO,IAAI8D,EAAWuB,EAAO,GAAGrF,WACpC,IAAK,UACD,OAAO,IAAID,EAAUsF,EAAO,GAAGpC,OAAOjD,WAC1C,QACI,OAAO8C,EAAKuC,EAAO,KAG/B,MAAMK,EAAa,IAAIE,GACvBF,EAAWC,OAAkC,QAAxBY,EAAK/G,EAAK4I,gBAA6B,IAAP7B,OAAgB,EAASA,EAAGnB,YACjF,MAAM4C,EAAW,IAAInE,EACrB,GAAIrE,EAAK0I,YAAa,CAClB,IAAIxH,EAAMoH,EAAgBpC,EAAYlG,EAAK0I,YAAaM,EAAIR,EAAU1E,GACtE,GAAI5C,aAAewB,GACf,OAAOxB,EAGfsH,EAAS/H,UAAYuI,EACrB,IAAK,IAAIG,KAAUnJ,EAAKoJ,YAAa,CACjC,MAAMC,EAAcF,EAAO9O,QAC3BgP,EAAY5D,MAAQ+C,EACpBQ,EAAGG,EAAOrG,MAAQuG,GAC6B,IAA3CxJ,EAAiBsF,QAAQgE,EAAOrG,QAChC0F,EAASW,EAAOrG,MAAQuG,EAAY/G,UAG5C,GAAIyG,GAAW/I,EAAK4I,SAAU,CAC1B5I,EAAK4I,SAASnD,MAAQ+C,EACtBxI,EAAK4I,SAAShD,YAAcM,EAC5B,MAAMhF,EAAMlB,EAAK4I,SAAStG,SAAS,CAAEwB,QAASoC,MAAiBL,GAC/D,GAAI3E,aAAewB,GACf,OAAOxB,EAKf,OAFAsH,EAAS7H,SAAWX,EACpBA,EAAKsJ,cAAcnC,KAAKqB,GACjBA,ECtFJ,MAAMrE,UAAepE,EACxBjG,YAAYyP,GAAc,EAAOzG,EAAO,SAAUsG,EAAc,GAAIV,EAAaE,GAC7EjG,WAAMkB,EAAW/D,MAAAA,OAAqC,EAASA,EAAME,MACrEpH,KAAK0Q,cAAgB,GACrB1Q,KAAKyB,MAAQ,IACF,IAAI8J,EAAOvL,KAAKqQ,UAAWrQ,KAAKsQ,SAAUtQ,KAAKwQ,YAAaxQ,KAAK8P,YAAa9P,KAAKgQ,UAE9FhQ,KAAKuH,IAAM,CAACC,EAAOJ,IACR,IAAIO,EAAUP,IAASF,EAAME,MAExCpH,KAAK4K,KAAO,CAACpD,EAAOJ,IACT,IAAIuB,GAAsB,OAAQ3I,MAE7CA,KAAKyH,UAAY,CAACD,EAAOkB,KACrB,IAAIyE,EAAIgB,EACR,IAAKzF,EACD,OAAO,IAAIf,EACf,IAAIiJ,EAAIlI,EAAEX,SACV,OAAI/H,OAASkH,EAAMG,KACfuJ,IAAM1J,EAAMG,KACZuJ,IAAM5Q,MACNA,KAAK8P,cAAgBc,GACrB5Q,KAAK8P,cAAgB5I,EAAMG,KAC3BrH,KAAK8P,cAAgBpH,IACgF,KAAvE,QAA3ByE,EAAKnN,KAAK8P,mBAAgC,IAAP3C,OAAgB,EAASA,EAAG1F,UAAUD,EAAOkB,GAAGd,YAGtFgJ,aAAarF,IAAWqF,EAAEd,cAAgB9P,MAC1C4Q,EAAEd,cAAgB5I,EAAMG,MAC6E,KAA1E,QAAxB8G,EAAKyC,EAAEd,mBAAgC,IAAP3B,OAAgB,EAASA,EAAG1G,UAAUD,EAAOxH,MAAM4H,YAJ/E,IAAID,GAAU,GAOlB,IAAIA,GAEf3H,KAAKiJ,OAAS,CAACzB,EAAOoJ,IACX,IAAIjJ,EAAUiJ,IAAM5Q,MAE/BA,KAAK0J,SAAW,CAAClC,KAAUyF,IAChBiD,EAAelQ,KAAMwH,EAAOyF,GAAU,IAEjDjN,KAAK0B,IAAM,IAAM,IAAIuI,EAASjK,KAAKsQ,UACnCtQ,KAAKsJ,SAAW,IAAM,IAAI3B,GAAU,GACpC3H,KAAK6K,KAAO7K,KAAKsJ,SACjBtJ,KAAKgK,gBAAkB,CAACxC,EAAOwE,KAC3B,KAAMA,aAAa/B,GACf,OAAIjK,OAASkH,EAAMoE,MACR,IAAIuF,EAAY7E,GAEpB,IAAIxD,GAAUvH,EAAA,KAAe,SAAU+K,EAAElE,WAAYpG,GAAIsK,IAEpE,MAAM7L,EAAM6L,EAAEpE,UACd,OAAI5H,KAAKsH,KAAK1G,eAAeT,GAClBuK,EAAK1K,KAAKsH,KAAKnH,IAAM,GAEzB,IAAI0Q,EAAY7E,IAE3BhM,KAAKqQ,UAAYM,EACjB3Q,KAAKsQ,SAAWpG,EAChBlK,KAAKkI,KAAKgC,KAAOA,EACjBlK,KAAK8P,YAAcA,EACnB9P,KAAKwQ,YAAcA,EACfR,IACAA,EAAS9F,KAAOA,EAChBlK,KAAKgQ,SAAWA,GAEf9I,EAAME,OACPpH,KAAK+H,SAAW/H,MAGxBuJ,SAAS/B,EAAOkB,GACZ,OAAO,IAAIoC,EAAY9K,KAAM0I,GAEjCc,cAAchC,EAAOkB,GACjB,OAAO,IAAIqC,EAAmB/K,KAAM0I,IAGrC,MAAMoC,UAAoBS,EAC7BrK,YAAY4P,EAAMC,GACdhH,OAAM,EAAO,IAAIrI,GAAIoP,UAAapP,GAAIqP,OACtC/Q,KAAK0J,SAAW,CAAClC,KAAUyF,IAChB,IAAItE,GAAsB,WAAY3I,MAEjDA,KAAKyH,UAAY,CAACD,EAAOoJ,KACrB,MAAMI,EAAUhR,KAAKiR,SAASxJ,UAAUD,EAAOoJ,GACzCM,EAAWlR,KAAKmR,UAAU1J,UAAUD,EAAOoJ,GACjD,OAAII,aAAmBlH,GACZkH,EACPE,aAAoBpH,GACboH,EACJ,IAAIvJ,EAAUqJ,EAAQpJ,WACzBsJ,EAAStJ,YAEjB5H,KAAKyB,MAAQ,IACF,IAAIqJ,EAAY9K,KAAKiR,SAAUjR,KAAKmR,WAE/CnR,KAAKiJ,OAAS,CAACzB,EAAOoJ,IACX,IAAIjJ,EAAUiJ,aAAa9F,IACwB,IAAtD9K,KAAKiR,SAAShI,OAAOzB,EAAOoJ,EAAEK,UAAUrJ,YACgB,IAAxD5H,KAAKmR,UAAUlI,OAAOzB,EAAOoJ,EAAEO,WAAWvJ,WAElD5H,KAAKiR,SAAWH,EAChB9Q,KAAKmR,UAAYJ,GAGlB,MAAMhG,UAA2BQ,EACpCrK,YAAY4P,EAAMC,GACdhH,OAAM,EAAO,IAAIrI,GAAIoP,UAAapP,GAAIqP,OACtC/Q,KAAK0J,SAAW,CAAClC,KAAUyF,IAChB,IAAItE,GAAsB,WAAY3I,MAEjDA,KAAKyH,UAAY,CAACD,EAAOoJ,KACrB,MAAMI,EAAUhR,KAAKiR,SAASxJ,UAAUD,EAAOoJ,GACzCM,EAAWlR,KAAKmR,UAAU1J,UAAUD,EAAOoJ,GACjD,OAAII,aAAmBlH,GACZkH,EACPE,aAAoBpH,GACboH,EACJ,IAAIvJ,EAAUqJ,EAAQpJ,WACzBsJ,EAAStJ,YAEjB5H,KAAKyB,MAAQ,IACF,IAAIsJ,EAAmB/K,KAAKiR,SAAUjR,KAAKmR,WAEtDnR,KAAKiJ,OAAS,CAACzB,EAAOoJ,IACX,IAAIjJ,EAAUiJ,aAAa7F,IACwB,IAAtD/K,KAAKiR,SAAShI,OAAOzB,EAAOoJ,EAAEK,UAAUrJ,YACgB,IAAxD5H,KAAKmR,UAAUlI,OAAOzB,EAAOoJ,EAAEO,WAAWvJ,WAElD5H,KAAKiR,SAAWH,EAChB9Q,KAAKmR,UAAYJ,GAGlB,MAAMK,UAAkB7F,EAC3BrK,YAAYkG,GACR2C,OAAM,EAAO,KAAKrI,GAAI0F,OACtBpH,KAAK0J,SAAW,CAAClC,KAAUyF,IAChB,IAAItE,GAAsB,WAAY3I,MAEjDA,KAAKyH,UAAY,CAACD,EAAOoJ,KACrB,MAAMtI,EAAMtI,KAAKqR,QAAQ5J,UAAUD,EAAOoJ,GAC1C,OAAItI,aAAewB,GACRxB,EACJ,IAAIX,GAAWW,EAAIV,YAE9B5H,KAAKyB,MAAQ,IACF,IAAI2P,EAAUpR,KAAKqR,SAE9BrR,KAAKiJ,OAAS,CAACzB,EAAOoJ,IACX,IAAIjJ,EAAUiJ,aAAaQ,IACsB,IAApDpR,KAAKqR,QAAQpI,OAAOzB,EAAOoJ,EAAES,SAASzJ,WAE9C5H,KAAKqR,QAAUjK,GCvJhB,MAAMgE,UAAiBjE,EAC1BjG,YAAYF,EAAQ,GAChB+I,MAAM/I,EAAOkG,EAAMiE,QACnBnL,KAAK4K,KAAO,CAACpD,EAAOJ,KAChB,OAAQA,GACJ,KAAKF,EAAMiE,OACP,OAAOnL,KACX,KAAKkH,EAAMmE,OACP,OAAOrL,KAAK0B,MAChB,KAAKwF,EAAMoE,MACP,OAAO,IAAIlB,EAAQ,IAAIiC,MAAMrM,KAAK4H,YACtC,QACI,OAAO,IAAIkC,GAAQ7I,EAAA,KAAe,YAAa,wBAAwBS,GAAI0F,EAAKU,kBAG5F9H,KAAK0B,IAAM,IAAM,IAAIuI,EAASjK,KAAK4H,UAAU0J,YAC7CtR,KAAKyI,QAAU,CAACjB,EAAOkB,IACbA,aAAa0C,EAEZ,IAAIA,EAASpL,KAAK4H,UAAYc,EAAEd,WAD5B,IAAIY,GAAUvH,EAAA,KAAe,SAAUyH,EAAEZ,WAAWF,UAAWc,EAAEd,WAGhF5H,KAAK4I,aAAe,CAACpB,EAAOkB,IAClBA,aAAa0C,EAEZ,IAAIA,EAASpL,KAAK4H,UAAYc,EAAEd,WAD5B,IAAIY,GAAUvH,EAAA,KAAe,SAAUyH,EAAEZ,WAAWF,UAAWc,EAAEd,WAGhF5H,KAAK6I,aAAe,CAACrB,EAAOkB,IAClBA,aAAa0C,EAEZ,IAAIA,EAASpL,KAAK4H,UAAYc,EAAEd,WAD5B,IAAIY,GAAUvH,EAAA,KAAe,SAAUyH,EAAEZ,WAAWF,UAAWc,EAAEd,WAGhF5H,KAAK8I,WAAa,CAACtB,EAAOkB,IAChBA,aAAa0C,EAEZ,IAAIA,EAASpL,KAAK4H,UAAYc,EAAEd,WAD5B,IAAIY,GAAUvH,EAAA,KAAe,SAAUyH,EAAEZ,WAAWF,UAAWc,EAAEd,WAGhF5H,KAAK+I,QAAU,CAACvB,EAAOkB,IACbA,aAAa0C,EAGZ,IAAIA,EAASsC,KAAK6D,IAAIvR,KAAK4H,UAAWc,EAAEd,YAFpC,IAAIY,GAAUvH,EAAA,KAAe,SAAUyH,EAAEZ,WAAWF,UAAWc,EAAEd,WAIhF5H,KAAKgJ,QAAU,CAACxB,EAAOkB,IACbA,aAAa0C,EAGZ,IAAIA,EAASpL,KAAK4H,UAAYc,EAAEd,WAF5B,IAAIY,GAAUvH,EAAA,KAAe,SAAUyH,EAAEZ,WAAWF,UAAWc,EAAEd,WAIhF5H,KAAKiJ,OAAS,CAACzB,EAAOkB,IAGX,IAAIf,EAFLe,aAAa0C,GAEEpL,KAAK4H,YAAcc,EAAEd,WAE9C5H,KAAKkJ,OAAS,CAAC1B,EAAOkB,IACZA,aAAa0C,EAEZ,IAAIzD,EAAU3H,KAAK4H,UAAYc,EAAEd,WAD7B,IAAIY,GAAUvH,EAAA,KAAe,SAAUyH,EAAEZ,WAAWF,UAAWc,EAAEd,WAGhF5H,KAAKmJ,OAAS,CAAC3B,EAAOkB,IACZA,aAAa0C,EAEZ,IAAIzD,EAAU3H,KAAK4H,UAAYc,EAAEd,WAD7B,IAAIY,GAAUvH,EAAA,KAAe,SAAUyH,EAAEZ,WAAWF,UAAWc,EAAEd,WAGhF5H,KAAKsJ,SAAW,IACL,IAAI3B,EAAU3H,KAAK4H,UAAY,GAE1C5H,KAAK6K,KAAO7K,KAAKsJ,SACjBtJ,KAAKyB,MAAQ,IAAM,IAAI2J,EAASpL,KAAK4H,WACrC5H,KAAKgK,gBAAkB,IAAK7J,IACpBH,KAAKsH,KAAK1G,eAAec,GAAIvB,IACtBuK,EAAK1K,KAAKsH,KAAK5F,GAAIvB,KAAO,GAE9B,IAAIwK,GAAW1J,EAAA,KAAed,EAAIyH,UAAW5H,MAExDA,KAAKyH,UAAYzH,KAAKiJ,OAE1BM,SAAS/B,EAAOkB,GACZ,OAAO,IAAIoC,EAAY9K,KAAM0I,GAEjCc,cAAchC,EAAOkB,GACjB,OAAO,IAAIqC,EAAmB/K,KAAM0I,ICjFrC,MAAMf,UAAkBR,EAC3BjG,YAAY0K,GAAM,GACd7B,MAAMyH,QAAQ5F,GAAM1E,EAAM2D,MAC1B7K,KAAKgK,gBAAkB,CAACxC,EAAOrH,IACvBH,KAAKsH,KAAK1G,eAAec,GAAIvB,IACtBuK,EAAK1K,KAAKsH,KAAK5F,GAAIvB,KAAO,GAE9B,IAAIwK,GAAW1J,EAAA,KAAed,EAAIyH,UAAW5H,MAExDA,KAAK4K,KAAO,CAACpD,EAAOJ,IACRA,IACCF,EAAMiE,OACA,IAAIC,EAASpL,KAAK4H,UAAY,EAAI,GAElC,IAAIkC,GAAQ7I,EAAA,KAAe,YAAa,gCAAgCS,GAAI0F,EAAKU,gBAGpG9H,KAAKiJ,OAAS,CAACzB,EAAOkB,IACZA,aAAaf,EAGZ,IAAIA,EAAU3H,KAAK4H,YAAcc,EAAEd,WAF/B,IAAIY,GAAUvH,EAAA,KAAe,UAAWyH,EAAEZ,WAAWF,UAAWc,EAAEd,WAIjF5H,KAAKsJ,SAAW,IAAMtJ,KACtBA,KAAKoJ,QAAU,CAAC5B,EAAOkB,IAAM,IAAIf,EAAU3H,KAAK4H,WAAac,EAAEmC,OAAOjD,WACtE5H,KAAKqJ,OAAS,CAAC7B,EAAOkB,IACX,IAAIf,EAAU3H,KAAK4H,WAAac,EAAEmC,OAAOjD,WAEpD5H,KAAK0B,IAAM,IAAM,IAAIuI,EAASjK,KAAK4H,UAAY,OAAS,SACxD5H,KAAKyB,MAAQ,IAAM,IAAIkG,EAAU3H,KAAK4H,WACtC5H,KAAK6K,KAAO,IAAM7K,KAClBA,KAAKyH,UAAYzH,KAAKiJ,OACtBjJ,KAAKkI,KAAO,CACRgC,KAAMxI,GAAIkK,GACVxD,YAAa,8CAA8C1G,GAAIkK,uBAAyBlK,IAAKkK,KAC7FtK,KAAM,WACN6G,WAAW,EACXsJ,SAAU,oDAGlBlI,SAAS/B,EAAOkB,GACZ,OAAO,IAAIoC,EAAY9K,KAAM0I,GAEjCc,cAAchC,EAAOkB,GACjB,OAAO,IAAIqC,EAAmB/K,KAAM0I,IC1CrC,MAAM0B,UAAgBjD,EACzBjG,YAAYwQ,EAAS,IACjB3H,MAAM2H,EAAQxK,EAAMoE,OACpBtL,KAAK4K,KAAO,IAAKxD,KACb,OAAQA,GACJ,KAAKF,EAAMiE,OACP,OAAO,IAAIC,EAASpL,KAAK2R,KAC7B,KAAKzK,EAAMyE,QACP,OAAO3L,KAAK6K,OAChB,QACI,OAAO,IAAIf,GAAQ7I,EAAA,KAAe,YAAa,gCAAgCS,GAAI0F,EAAKU,kBAGpG9H,KAAK0B,IAAM,IAAM,IAAIuI,EAASvI,GAAI1B,KAAK4H,YACvC5H,KAAKiJ,OAAS,EAAGiC,QAAAA,GAAWxC,KACxB,KAAMA,aAAa0B,GACf,OAAO,IAAIzC,EAEf,GAAIe,EAAEiJ,MAAQ3R,KAAK2R,IACf,OAAO,IAAIhK,EAEf,IAAK,IAAIgG,EAAI,EAAGA,EAAI3N,KAAK2R,IAAKhE,IAAK,CAC/B,MAAM1B,EAAcjM,KAAK4H,UAAU+F,GAC7BzB,EAAWxD,EAAEd,UAAU+F,GAC7B,IAAK1B,EAAa,CACd,GAAIC,EACA,OAAO,IAAIvE,EAEf,SAEJ,IAAKsE,EAAYhD,OACb,OAAO,IAAItB,EAEf,MAAMW,EAAM2D,EAAYhD,OAAO,CAAEiC,QAAAA,GAAWgB,GAC5C,GAAI5D,aAAewB,GACf,OAAOxB,EAEX,IAAKA,EAAIV,UACL,OAAO,IAAID,EAGnB,OAAO,IAAIA,GAAU,IAEzB3H,KAAKyI,QAAU,EAAGyC,QAAAA,GAAWxC,IACnBA,aAAa0B,EAGZ,IAAIA,EAAQ,IAAIpK,KAAK4H,aAAcc,EAAEd,YAFjC,IAAIY,GAAUvH,EAAA,KAAe,QAASyH,EAAEZ,WAAWF,UAAWc,GAI7E1I,KAAKsJ,SAAW,IAAM,IAAI3B,EAAU3H,KAAK4H,UAAUiE,OAAS,GAC5D7L,KAAK6K,KAAO7K,KAAKsJ,SACjBtJ,KAAKgK,gBAAkB,CAACxC,EAAOrH,KAC3B,GAAIA,aAAe8J,GAAYjK,KAAKsH,KAAK1G,eAAec,GAAIvB,IACxD,OAAOuK,EAAK1K,KAAKsH,KAAK5F,GAAIvB,KAAO,GAErC,KAAMA,aAAeiL,GACjB,OAAO,IAAIJ,EAEf,IAAI7J,EAAMhB,EAAIyH,UACd,KAAOzG,EAAM,GACTA,EAAMnB,KAAK4H,UAAUiE,OAAS1K,EAElC,OAAIA,EAAMnB,KAAK4H,UAAUiE,OACd7L,KAAK4H,UAAUzG,GAEnB,IAAI6J,GAEfhL,KAAK4R,SAAW,CAACpK,EAAOoE,KACpB,IAAK,IAAIiG,KAAW7R,KAAK6H,UACrB,GAAI+D,EAAI3C,OAAOzB,EAAOqK,GAClB,OAAO,EAGf,OAAO,GAEX7R,KAAKyB,MAAQ,KACT,MAAMqQ,EAAS,GACf,IAAK,IAAID,KAAW7R,KAAK4H,UACrBkK,EAAOvD,KAAKsD,GAEhB,OAAO,IAAIzH,EAAQ0H,IAEvB9R,KAAKyH,UAAY,CAACD,EAAOkB,KACrB,KAAMA,aAAa0B,IAAYpK,KAAK2R,MAAQjJ,EAAEiJ,IAC1C,OAAO,IAAIhK,EAEf,IAAK,IAAIgG,EAAI,EAAGA,EAAI3N,KAAK6H,UAAUgE,OAAQ8B,IAAK,CAC5C,MAAMrF,EAAMtI,KAAK6H,UAAU8F,GAAGlG,UAAUD,EAAOkB,EAAEb,UAAU8F,IAC3D,GAAIrF,aAAewB,GACf,OAAOxB,EACX,IAAKA,EAAIV,UACL,OAAO,IAAID,EAGnB,OAAO,IAAIA,GAAU,IAEzB3H,KAAK2R,IAAMD,EAAO7F,OAEtBpC,gBAAgBjC,EAAOrH,EAAKa,GACxB,KAAMb,aAAeiL,GACjB,OAEEpK,aAAiBmG,IACnBnG,EAAQ0J,EAAK1J,IAEjB,IAAIG,EAAMhB,EAAIyH,UACd,KAAOzG,EAAM,GACTA,EAAMnB,KAAK4H,UAAUiE,OAAS1K,EAElCnB,KAAK6H,UAAU1G,GAAOH,EAE1BuI,SAAS/B,EAAOkB,GACZ,OAAO,IAAIoC,EAAY9K,KAAM0I,GAEjCc,cAAchC,EAAOkB,GACjB,OAAO,IAAIqC,EAAmB/K,KAAM0I,IAGrC,MAAMmI,UAAoBtF,EAC7BrK,YAAYkG,GACR2C,OAAM,EAAO,SAASrI,GAAI0F,OAC1BpH,KAAK0J,SAAW,CAAClC,KAAUyF,IAChB,IAAItE,GAAsB,WAAY3I,MAEjDA,KAAKyH,UAAY,CAACD,EAAOoJ,KACrB,KAAMA,aAAaxG,GACf,OAAO,IAAIzC,EAEf,IAAK,MAAMkK,KAAWjB,EAAEhJ,UACpB,IAAK5H,KAAKoH,KAAKK,UAAUD,EAAOqK,GAASjK,UACrC,OAAO,IAAID,EAGnB,OAAO,IAAIA,GAAU,IAEzB3H,KAAKyB,MAAQ,IACF,IAAIoP,EAAY7Q,KAAKoH,MAEhCpH,KAAKoH,KAAOA,GC3Ib,MAAM6C,UAAiB9C,EAC1BjG,YAAYF,EAAQ,IAChB+I,MAAM/I,EAAOkG,EAAMmE,QACnBrL,KAAK0B,IAAM,IAAM1B,KACjBA,KAAK4K,KAAO,CAACpD,EAAOJ,KAChB,OAAQA,GACJ,KAAKF,EAAMiE,OACP,MAAM4G,EAAMC,WAAWhS,KAAK4H,WAC5B,OAAIqK,MAAMF,GACC,IAAIjI,GAAQ7I,EAAA,KAAe,YAAa,qCAE5C,IAAImK,EAAS2G,GACxB,KAAK7K,EAAMmE,OACP,OAAOrL,KACX,KAAKkH,EAAMoE,MACP,OAAO,IAAIlB,EAAQpK,KAAK4H,UAAUsK,MAAM,IAAI5H,KAAIC,GAAK,IAAIN,EAASM,MACtE,QACI,OAAO,IAAIT,GAAQ7I,EAAA,KAAe,YAAa,wBAAwBS,GAAI0F,EAAKU,kBAG5F9H,KAAKyI,QAAU,CAACjB,EAAOkB,IACbA,aAAauB,EAGZ,IAAIA,EAASjK,KAAK4H,UAAYc,EAAEd,WAF5B,IAAIY,GAAUvH,EAAA,KAAe,SAAUyH,EAAEZ,WAAWF,UAAWc,EAAEd,WAIhF5H,KAAK6I,aAAe,CAACrB,EAAOkB,IAClBA,aAAa0C,EAGZ,IAAInB,EAASjK,KAAK4H,UAAUuK,OAAOzJ,EAAEd,YAFjC,IAAIY,GAAUvH,EAAA,KAAe,SAAUyH,EAAEZ,WAAWF,UAAWc,EAAEd,WAIhF5H,KAAKiJ,OAAS,CAACzB,EAAOkB,IAIX,IAAIf,EAHLe,aAAauB,GAGEjK,KAAK4H,YAAcc,EAAEd,WAE9C5H,KAAKkJ,OAAS,CAAC1B,EAAOkB,IACZA,aAAauB,EAGZ,IAAItC,EAAU3H,KAAK4H,UAAUiE,OAASnD,EAAEd,UAAUiE,QAF9C,IAAIrD,GAAUvH,EAAA,KAAe,SAAUyH,EAAEZ,WAAWF,UAAWc,EAAEd,WAIhF5H,KAAKmJ,OAAS,CAAC3B,EAAOkB,IACZA,aAAauB,EAGZ,IAAItC,EAAU3H,KAAK4H,UAAUiE,OAASnD,EAAEd,UAAUiE,QAF9C,IAAIrD,GAAUvH,EAAA,KAAe,SAAUyH,EAAEZ,WAAWF,UAAWc,EAAEd,WAIhF5H,KAAKsJ,SAAW,IAAM,IAAI3B,EAAU3H,KAAK4H,UAAUiE,OAAS,GAC5D7L,KAAK6K,KAAO7K,KAAKsJ,SACjBtJ,KAAK2R,IAAM,IACA,IAAIvG,EAASpL,KAAK4H,UAAUiE,QAEvC7L,KAAKyB,MAAQ,IAAM,IAAIwI,EAASjK,KAAK4H,WACrC5H,KAAKgK,gBAAkB,CAACxC,EAAOrH,KAC3B,GAAIA,aAAe8J,GAAYjK,KAAKsH,KAAK1G,eAAec,GAAIvB,IACxD,OAAOuK,EAAK1K,KAAKsH,KAAK5F,GAAIvB,KAAO,GAErC,KAAMA,aAAeiL,GACjB,OAAO,IAAInB,EAEf,IAAI9I,EAAMhB,EAAIyH,UACd,KAAOzG,EAAM,GACTA,EAAMnB,KAAK4H,UAAUiE,OAAS1K,EAElC,OAAIA,EAAMnB,KAAK4H,UAAUiE,OACd,IAAI5B,EAASjK,KAAK4H,UAAUzG,IAEhC,IAAI8I,GAEfjK,KAAKyH,UAAYzH,KAAKiJ,OAE1BQ,gBAAgBjC,EAAOrH,EAAKa,GACxB,KAAMb,aAAeiL,GACjB,OACEpK,aAAiBiJ,IACnBjJ,EAAQ,IAAIiJ,EAASvI,GAAIV,KAC7B,IAAIG,EAAMhB,EAAIyH,UACd,KAAOzG,EAAM,GACTA,EAAMnB,KAAK4H,UAAUiE,OAAS1K,EAClC,MAAMiR,EAAcpR,EAAMU,MAAMkG,UAChC,IAAIyK,EAAYrS,KAAK6H,UAAUiE,OAAO,EAAG3K,GACrCmR,EAAWtS,KAAK6H,UAAUiE,OAAO3K,EAAMiR,EAAYvG,QACvD7L,KAAK6H,UAAYwK,EAAYD,EAAcE,EAE/C/I,SAAS/B,EAAOkB,GACZ,OAAO,IAAIoC,EAAY9K,KAAM0I,GAEjCc,cAAchC,EAAOkB,GACjB,OAAO,IAAIqC,EAAmB/K,KAAM0I,ICnGrC,MAAM6J,EACTrR,YAAYF,EAAOwR,EAAYC,EAAU,IACrC,IAAItF,EAAIgB,EAAIuE,EACZ1S,KAAKyB,MAAQ,IACF,IAAI8Q,EAASvS,KAAKgB,MAAMS,QAASzB,KAAKwS,WAAY,CACrDrD,WAAYnP,KAAKmP,WACjBD,aAAclP,KAAKkP,eAG3BlP,KAAK0B,IAAM,IAAM,IAAIuI,EAAS,YAAYjK,KAAKwS,eAC/CxS,KAAKgB,MAAQA,EACbhB,KAAKwS,WAAaA,EAClBxS,KAAKmP,WAA2C,QAA7BhC,EAAKsF,EAAQtD,kBAA+B,IAAPhC,GAAgBA,EACxEnN,KAAKkP,aAA+C,QAA/Bf,EAAKsE,EAAQvD,oBAAiC,IAAPf,GAAgBA,EAC5EnO,KAAKoH,KAA+B,QAAvBsL,EAAKD,EAAQrL,YAAyB,IAAPsL,EAAgBA,EAAKxL,EAAMG,KCHxE,SAASqD,EAAKiI,EAAOtD,GAAqB,GAC7C,OAAIsD,aAAiBxL,EACVwL,EAEFA,MAAAA,EACE,IAAI3H,EAEN2H,aAAiB7I,GACf,IAAIF,EAAiB+I,GAEvBA,aAAiBJ,EACfI,EAAM3R,MAES,iBAAV2R,EACL,IAAIvH,EAASuH,GAEE,iBAAVA,EACL,IAAI1I,EAAS0I,GAEE,kBAAVA,EACL,IAAIhL,EAAUgL,GAEC,iBAAVA,EACL,IAAIvH,EAASwH,OAAOD,IAEL,iBAAVA,EACL,IAAI1I,EAAS4I,OAAOF,IAExB,IAAIvD,EAAYuD,OAAO1H,EAAWoE,GAEtC,SAAS9G,EAAMoK,EAAOnL,GACzB,GAAayD,MAAT0H,EAAJ,CAGK,KAAMA,aAAiBxL,GACxB,OAAOwL,EAEN,GAAIA,aAAiBvI,EACtB,OAAOuI,EAAM/K,UAAU0C,KAAIwI,GAAKvK,EAAMuK,EAAGtL,IAAQA,GAEhD,GAAImL,aAAiBlH,EAAU,CAChC,IAAIG,EAAM,GACV,IAAK,IAAIzL,KAAOwS,EAAM/K,UAClBgE,EAAIzL,GAAOoI,EAAMoK,EAAM/K,UAAUzH,GAAMqH,GAE3C,OAAOoE,EAEN,KAAI+G,aAAiB3H,GAGrB,OAAI2H,aAAiBjH,EACf,IAAIgD,KACP,MAAMpG,EAAMqK,EAAMjJ,SAASlC,KAAUkH,EAAKpE,KAAIyI,GAAKrI,EAAKqI,MACxD,OAAIzK,aAAewB,GACRxB,EAEJC,EAAMD,EAAKd,IAGjBmL,aAAiBpH,EACfoH,EAEJA,EAAM/K,WC1EjB,MAAMoL,EAAQ,CACVC,IAAK,GACLC,OAAQ,GACRC,MAAO,GACPC,KAAM,GACNC,KAAM,GACNC,KAAM,GAEJrR,EAAI,GACV,IAAK,IAAIsR,KAAQlT,OAAO0L,KAAKiH,GACzB/Q,EAAEsR,GAAShJ,IACPA,IAAMA,EAAI,IACNpI,EACO,KAAQ6Q,EAAMO,MAAWhJ,EAAI,OAEjC,uBAAuBgJ,MAAShJ,YAG/C,UCZaiJ,EAAmB,CAC5B,MAAS,CAAC,EAAGtI,QAAAA,GAAWuI,EAAMC,EAAMC,KAC5B,KAAMF,aAAgBrI,GAClB,OAAO,IAAIhB,EAEf,MAAMwJ,EAAMH,EAAK7L,UACjB,GAAI8L,aAAgB1I,EAChB,IACI,OAAO,IAAIZ,EAAQ,IAAIiC,MAAMuH,GAAK7H,QAAQzB,KAAI5B,GAAK,IAAI0C,EAAS1C,MAEpE,MAAO9E,GACH,OAAO,IAAIkG,GAAQ7I,EAAA,KAAe,aAAc,gCAAgCS,GAAIkS,OAG5F,IAAI1P,EAAO,EACX,KAAMwP,aAAgBtI,GAClB,OAAO,IAAI5C,GAAUvH,EAAA,KAAe,SAAUyS,EAAK5L,WAAYpG,GAAIgS,IAEvE,IAAIjG,EAAMiG,EAAK9L,UACf,KAAM+L,aAAiB3I,GAAc,CACjC,KAAM2I,aAAiBvI,GACnB,OAAO,IAAI5C,GAAUvH,EAAA,KAAe,SAAU0S,EAAM7L,WAAYpG,GAAIiS,IAExEzP,EAAOyP,EAAM/L,UAEjB,IAAIiM,EAAM,GACNlG,EAAIiG,EACR,KAAOjG,EAAIF,GACPoG,EAAItF,KAAK,IAAInD,EAASuC,IACtBA,GAAKzJ,EAET,OAAO,IAAIkG,EAAQyJ,IACpB,CACCnF,KAAM,CAAC,CACCxE,KAAM,IACN9C,KAAM,WAEdgB,YAAa,qIACb0L,QAAS,iCACThH,WAAY,0BAEpB,IAAO,CAAC,EAAG5B,QAAAA,MAAc6I,KACjB7Q,QAAQC,OAAO4Q,EAAKzJ,KAAIwI,GAAKpR,GAAIoR,OAClC,CACCpE,KAAM,CAAC,CACCxE,KAAM,YACN9C,KAAM,UAEdgB,YAAa,qCACb0E,WAAY,SAEpB,SAAY,CAAC,EAAG5B,QAAAA,GAAW6G,KACnB,IACI,MAAMnG,EAAMoG,WAAWtQ,GAAIqQ,IAC3B,OAAIE,MAAMrG,GACC,IAAI9B,GAAQ7I,EAAA,KAAe,YAAa,mBAAmBS,GAAIqQ,oBAEnE,IAAI3G,EAASQ,GAExB,MAAOhI,GACH,OAAO,IAAIkG,GAAQ7I,EAAA,KAAe,YAAa,mBAAmBS,GAAIqQ,sBAE3E,CACCrD,KAAM,CAAC,CACCxE,KAAM,MACN9C,KAAM,QAEdgB,YAAa,qNACb0E,WAAY,uBAEpB,KAAQ,CAAC,EAAG5B,QAAAA,MAAc8I,KAClB,IAAKA,EAAOnI,OACR,OAAO,IAAI5B,EAAS,0IAGxB,IAAIgK,EAAM,GACV,IAAK,MAAMtB,KAASqB,EAAQ,CACxB,KAAMrB,aAAiBxL,GAEnB,YADAjE,QAAQC,IAAI,8BAAgCzB,GAAIiR,IAGpD,MAAMzK,EAAOyK,EAAMzK,KAWnB,GAVA+L,GAAO,GAAG,SAAa,YAAY/L,EAAKgC,MAAQ,iCAE1D,SAAa,aAAagK,GAAOA,GAAOxS,GAAIiR,aAC5C,SAAa,aAAajR,GAAIiR,EAAM7K,qBACpC,SAAa,gBAAgBI,EAAK5G,MAAQ,SAAa,+BAEnD,QAAY4G,EAAKE,cAAgB,oCAErCF,EAAKuJ,SAAW,OAAWvJ,EAAKuJ,SAAW,QAAU,OAEvCvJ,EAAKwG,MAAQiE,aAAiBjH,EAAY,CAC1C,MAAMyI,EAAQjM,EAAKwG,KAAK7C,OAClB+C,EAAW1G,EAAKwG,KAAK0F,QAAOrB,GAAKA,EAAEnE,WAAU/C,OAE/CoI,GADAE,GAASvF,EACF,SAAa,kBAAkBuF,UAE/B,SAAa,kBAAkBvF,KAAYuF,UACtD,IAAK,MAAOhT,EAAKyM,KAAQ1F,EAAKwG,KAAK2F,UAE3BJ,GADe,iBAARrG,EACA,WAAWzM,EAAM,sBAEjB,WAAWA,EAAM,MAAMyM,EAAI1D,QAAwB,IAAjB0D,EAAIgB,SAAqB,SAAa,gBAAkB,OAAOhB,EAAIxG,SAASwG,EAAIxF,aAAe,OAEhJ6L,GAAO,OACH/L,EAAK4L,UACLG,GAAO,gBAAgB/L,EAAK4L,eAC5B5L,EAAK4E,aACLmH,GAAO,oBAAoB/L,EAAK4E,kBAExC,GAAI5E,EAAKoM,WAAa3B,aAAiBlH,GAAYkH,aAAiB7D,GAAc,CAC9EmF,GAAO,2BACP,IAAK,IAAIK,KAAYpM,EAAKoM,SACtBL,GAAOK,EAASpK,KAAO,YAInC,OADAhH,QAAQC,IAAI8Q,GACRD,EAAOnI,OAAS,EACT,IAAIzB,EAAQ4J,GAEnBA,EACOA,EAAO,QADlB,GAGD,CACCtF,KAAM,CAAC,CACCxE,KAAM,QACN9C,KAAM,QAEdgB,YAAa,qBACb0L,QAAS,oBAEjB,OAAU,CAAC,EAAG5I,QAAAA,GAAWhB,KACjB,MAAMqK,EAAK7S,GAAIwI,GACf,IAAKgB,EAAQsJ,IAAID,GACb,OAAO,IAAIzK,GAAQ7I,EAAA,KAAe,cAAe,eAAesT,uCAEpErJ,EAAQuJ,IAAIF,EAAI,IAAIvJ,IACrB,CACCd,KAAM,SACNwE,KAAM,CAAC,CAAExE,KAAM,aAAc9C,KAAM,WACnCgB,YAAa,gDAErB,OAAU,CAAC,EAAG8C,QAAAA,KACC,IAAIjB,EAASiB,EAAQgC,MAC7B,CACChD,KAAM,SACNwE,KAAM,GACNtG,YAAa,6BAErB,UAAa,CAAC,EAAG8C,QAAAA,KACFR,EAAKQ,EAAQa,MACrB,CACC7B,KAAM,eACNwE,KAAM,GACNtG,YAAa,wEAErB,MAAS,CAAC,EAAG8C,QAAAA,GAAWrL,EAAQ6U,KACxB,KAAM7U,aAAkBiP,GAAkBjP,aAAkBuP,GACxD,OAAO,IAAI5G,GAAUvH,EAAA,KAAe,YAAaS,GAAI7B,EAAOiI,aAEhE,IAAI/F,GAAS,EACT2S,IACKA,EAAQ7J,OAAOjD,YAChB7F,GAAS,IAGjB,MAAM2P,EAAS7R,EAAO+H,UAClB7F,EACAmJ,EAAUA,EAAQxL,KAEbwL,EAAQqC,SACbrC,EAAUA,EAAQqC,QAEtB,IAAK,MAAMpN,KAAOE,OAAO0L,KAAK2F,GAC1BxG,EAAQ4C,OAAO3N,EAAKuR,EAAOvR,GAAKa,MAAO,CACnCmO,WAAYuC,EAAOvR,GAAKgP,WACxBD,aAAcwC,EAAOvR,GAAK+O,aAC1BnB,mBAAmB,KAG5B,CACC7D,KAAM,QACNwE,KAAM,CACF,CAAExE,KAAM,SAAU9C,KAAM,aACxB,CAAE8C,KAAM,SAAU9C,KAAM,SAE5BgB,YAAa,uDAErB,MAAS,CAAC,EAAG8C,QAAAA,GAAWyJ,EAAMC,KACtB,KAAMD,aAAgBvJ,GAClB,OAAO,IAAI5C,GAAUvH,EAAA,KAAe,SAAUS,GAAIiT,EAAK7M,YAAapG,GAAIiT,IAE5EE,GAAMF,EAAK/M,WACNrD,MAAK,KACN,MAAM+D,EAAMsM,EAAGlL,SAAS,CAAEwB,QAAAA,IACtB5C,aAAewB,IACf5G,QAAQC,IAAImF,EAAI5G,SAGzB,CACCwI,KAAM,QACNwE,KAAM,CAAC,CAAExE,KAAM,IAAK9C,KAAM,UAAY,CAAE8C,KAAM,WAAY9C,KAAM,aAChEgB,YAAa,wDAErB,MAAS,CAAC,EAAG8C,QAAAA,GAAWhB,EAAMC,IACf,IAAIL,GAAQ7I,EAAA,KAAeS,GAAIwI,GAAOxI,GAAIyI,IAClD,CACCD,KAAM,QACNwE,KAAM,CAAC,CAAExE,KAAM,OAAQ9C,KAAM,UAAY,CAAE8C,KAAM,UAAW9C,KAAM,cCnNxE,EAAS,CACX0N,MAAO,CAACtN,EAAOuN,IACJ,IAAItJ,EAAS6D,KAAKwF,MAAMpT,GAAIqT,KAEvCxF,UAAW,CAAC/H,EAAOuN,IACTA,aAAgBtJ,EAGf,IAAIxB,EAASqF,KAAKC,UAAUhH,EAAMwM,EAAMvN,KAFpC,IAAIgB,GAAUvH,EAAA,KAAe,SAAUS,GAAIqT,EAAKjN,YAAapG,GAAIqT,KCD9EC,EAAU,CACZC,MCPW,CACXC,YAAa,CAAC1N,EAAO2D,IACXA,aAAkBC,EAGjB,IAAInB,EAAS4I,OAAOsC,aAAahK,EAAOvD,YAFpC,IAAIY,GAAUvH,EAAA,KAAe,SAAUS,GAAIyJ,EAAOrD,YAAapG,GAAIyJ,IAIlFiK,YAAa,CAAC5N,EAAO6N,IACXA,aAAgBpL,EAGf,IAAImB,EAAS1J,GAAI2T,GAAMC,WAAW,IAF9B,IAAI9M,GAAUvH,EAAA,KAAe,SAAUS,GAAI2T,EAAKvN,YAAapG,GAAI2T,KDF3E,KDKT,GCHME,GAAmB,GAelB,SAASC,GAAiB3V,EAAQqK,GACrC,MAAMuL,EAAa,GACbC,EAAY7V,EAAO+H,UACzB,IAAK,MAAMzH,KAAOE,OAAO0L,KAAK2J,GAC1BD,EAAWtV,GAAO,IAAIoS,EAASmD,EAAUvV,GAAMA,GAEnD,OAAO,IAAIiP,EAAYqG,EAAYvL,GAEhC,SAASyL,GAAYzL,GACxB,OAAOA,KAAQ8K,GAAW9K,KAAQqL,GAS/B,SAASK,GAAU1L,GACtB,GAAIA,KAAQqL,GACR,OAAOA,GAAiBrL,GAE5B,GAAIA,KAAQ8K,EAAS,CACjB,MACMa,EAAYL,GADN,IAAIpG,EAAY4F,EAAQ9K,IACIA,GAExC,OADAqL,GAAiBrL,GAAQ2L,EAClBA,GEnCR,SAASC,GAAWC,EAAeC,EAAWC,GACjDzC,EAAA,OAA6B,CAAC,EAAGtI,QAAAA,GAAWgL,EAAQC,KAC5C,GAAIhU,EACA,OAAO,IAAI2H,GAAQ7I,EAAA,KAAe,cAAe,yEAErD,MAAMmV,EAAMF,EAAOxU,MACnB,GAAIiU,GAAYjU,GAAI0U,IAChB,OAAOR,GAAUlU,GAAI0U,IAEzB,IACIC,MAAM3U,GAAI0U,IACL7R,MAAKtC,GAAKA,EAAEqU,SACZ/R,MAAMgP,IAAS,OA/BkBhQ,EA+BRvD,KA/BiBwD,OA+BX,EA/B0BC,EA+BV,YAChD,MAAM8S,EAAM,IAAI/I,GAChB+I,EAAIhJ,OAASwI,EACb,MAAMzN,QAAYkO,GAAIjD,GAClBjL,EAAIuB,MACJmM,EAAU,IAAIS,GAAYxV,EAAA,KAAeS,GAAI0U,GAAM9N,EAAIuB,MAAMnI,KAAKA,KAGhEyU,aAAoBzK,GAE1ByK,EAASzM,SAAS,CAAEwB,QAAAA,GAAW,IAAI4D,EAAYsH,EAAKG,EAAIG,0BAvCjE,KAFgE7S,OA+Bf,KA7BtCA,EAAIC,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUjD,GAAS,IAAMkD,EAAKT,EAAUU,KAAKnD,IAAW,MAAO4C,GAAKI,EAAOJ,IACpF,SAASQ,EAASpD,GAAS,IAAMkD,EAAKT,EAAiB,MAAEzC,IAAW,MAAO4C,GAAKI,EAAOJ,IACvF,SAASM,EAAKG,GAJlB,IAAerD,EAIaqD,EAAOC,KAAOP,EAAQM,EAAOrD,QAJ1CA,EAIyDqD,EAAOrD,MAJhDA,aAAiB6C,EAAI7C,EAAQ,IAAI6C,GAAE,SAAUE,GAAWA,EAAQ/C,OAITuD,KAAKN,EAAWG,GAClGF,GAAMT,EAAYA,EAAUe,MAAMjB,EAASC,GAAc,KAAKW,WAN1B,IAAUZ,EAASC,EAAYK,EAAGJ,KA4ClE,MAAOkT,GACH,OAAO,IAAI7M,GAAQ7I,EAAA,KAAe,cAAe0V,EAAErF,cAExD,IACPkC,EAAA,MAA4B,CAAC,EAAGtI,QAAAA,MAAcwD,KACtC,IAAIuF,EAAM,GACV,IAAK,IAAIrG,KAAOc,EACZuF,GAAOvS,GAAIkM,GACfoI,EAAU/B,IACX,IACPT,EAAA,MAA4B,CAAC,EAAGtI,QAAAA,GAAW0L,EAAKC,KACxCZ,EAAUW,EAAIhP,WAAYgP,IACtB,IAAIhC,EAAKiC,MAAAA,OAAqC,EAASA,EAAMjP,UAC7D,GAAIgN,aAAclJ,EAAY,CAC1B,IAAIpD,EAAMsM,EAAGlL,SAAS,CAAEwB,QAAAA,GAAW,IAAIjB,EAAS2M,IAC5CtO,aAAewB,IACf5G,QAAQC,IAAImF,EAAI5G,SAGD,mBAAPkT,GACZA,EAAGgC,GACP,OAAO,IAAI3M,EAAS,qIAEzB,IACP,IAAK,IAAI6M,KAAWtD,EAAkB,CAClC,MAAMnG,EAAK,IAAI3B,EAAW8H,EAAiBsD,GAAS,GAAI,GAAIA,OAAS7L,OAAWA,EAAW8K,GAC3F1I,EAAGnF,KAAOsL,EAAiBsD,GAAS,GACpCzJ,EAAGnF,KAAKgC,KAAO4M,EACfzJ,EAAGnF,KAAKC,WAAY,EACpBkF,EAAGnF,KAAK5G,KAAO,WACfyU,EAActB,IAAIqC,EAASzJ,EAAI,CAC3BtL,QAAQ,EACRoN,YAAY,KC1ET,SAAcjE,GACzB,MAAM6L,EAAkB,CACpB,MAAS,IAAIpP,GAAU,GACvB,KAAQ,IAAIA,GAAU,GACtB,IAAO,IAAIqD,EACX,IAAO9D,EAAMG,IACb,OAAUH,EAAMiE,OAChB,OAAUjE,EAAMmE,OAChB,KAAQnE,EAAM2D,KACd,SAAY3D,EAAA,SACZ,MAASA,EAAMoE,MACf,OAAUpE,EAAMsE,OAChB,KAAQtE,EAAME,KACd,MAASF,EAAM2C,MACf,UAAa3C,EAAM+D,WAEvB,IAAK,IAAI+L,KAAYD,EAAiB,CAClC,MAAM/V,EAAQ+V,EAAgBC,GAC9B9L,EAAQuJ,IAAIuC,EAAUhW,EAAO,CACzBe,QAAQ,EACRoN,YAAY,KDyDpB8H,CAAoBlB,GACpB,MAAMmB,EFlEH,WAIH,GAHA3B,GAAuB,KAAI,IAAInG,EAAY1B,MAC3C6H,GAA0B,QAAI,IAAInG,EIhBtC,MACIlO,YAAY0T,GACR5U,KAAKmX,MAAQ,GACbnX,KAAKoX,UAAW,EAChBxC,GAAI5T,IACA,IAAIhB,KAAKoX,SAAT,CAGApX,KAAKoX,UAAW,EAChB,IAAK,IAAI7S,KAAQvE,KAAKmX,MAClB5S,EAAKvD,OAET6I,IACI7J,KAAKoX,WAGTpX,KAAKoX,UAAW,EACZpX,KAAKqX,QACLrX,KAAKqX,OAAOxN,OAIxBtF,KAAKqQ,GACD,IAAI5U,KAAKoX,SAIT,OADApX,KAAKmX,MAAM5I,KAAKqG,GACT5U,KAEXsX,MAAM1C,GACF,IAAI5U,KAAKoX,SAIT,OADApX,KAAKqX,OAASzC,EACP5U,QJjBXuV,GAAuB,KAAI,IAAInG,EKbR,CACvB/L,IAAK,IAAIqI,GAAW,IAAM,IAAIN,EAAS/H,OACvCkU,KAAM,IAAInI,EAAY1L,SLYjBvB,EAAkB,CACnB,MAAMqV,EMfC,MACX,IAAKhV,EAAYG,UACb,OAAO,IAAI8U,GAAwB,oBAEvC,GAAItV,EACA,OAAO,IAAIuV,GAEf,MAAMC,EAAIvV,OACV,YAAiB,IAANuV,GAAuB,MAAOA,EAIlC,CACHC,EAFM,IAAIxI,EAAYuI,EAAK,EAAG,UAG9BvV,OAAQ,IAAIgN,EAAYuI,EAAG,UAC3BE,SAAU,IAAIzI,EAAYuI,EAAY,SAAG,aANlC,IAAIG,GAAe7W,EAAA,KAAe,oDNM1B8W,GACf,GAAMP,aAAkB1N,GAIpB,OAAO0N,EAHPxC,EAAa,IAAIwC,GE2DNQ,GACnB,GAAId,EACA,OAAOA,EAEXnB,EAAckC,qBAAsB,EjB3EjC,MAAMzK,GACTtM,cACIlB,KAAKkY,YAAc,GACnBlY,KAAKiY,qBAAsB,EAC3BjY,KAAKmY,SAAU,EACfnY,KAAKoY,MAAQ,GAEblL,WACA,OAAIlN,KAAKoY,QAAUpY,KAAKuN,OACbvN,KAAKoY,MAETpY,KAAKuN,OAAOL,KAEnBA,SAAKtB,GACL5L,KAAKoY,MAAQxM,EAEb2B,aACA,OAAOvN,KAAKqY,QAEZ9K,WAAO3B,GACHA,GAAO5L,KAIXA,KAAKqY,QAAUzM,EAHX1I,QAAQ2G,MAAM,MAAU,mCAKhC2K,IAAIhC,GACA,QAAKA,QAE2BvH,IAAzBjL,KAAKQ,IAAIgS,GAEpB8F,OAAO9F,GACH,OAAOxS,KAAKkY,YAAY1F,aAAuBD,EAEnD/R,IAAIgS,GACA,IAAIvD,EAASjP,KAAKuY,UAAU/F,GAC5B,OAAIvD,aAAkBnF,IAAqBmB,MAAVgE,EACtBA,EAEJA,EAAOjO,MAElBwX,0BACI,MAAMC,EAAU,GAChB,IAAK,IAAItY,KAAOH,KAAKkY,YACjBO,EAAQtY,GAAOH,KAAKkY,YAAY/X,GAAKa,MACzC,OAAOyX,EAEX/B,uBACI,MAAM+B,EAAU,GAChB,IAAK,IAAItY,KAAOH,KAAKkY,YACjBO,EAAQtY,GAAOH,KAAKkY,YAAY/X,GACpC,OAAOsY,EAEXF,UAAU/F,GACN,IAAIvD,EAASjP,KAAKkY,YAAY1F,GAC9B,QAAevH,IAAXgE,IAAyBA,EAAOC,aAChC,OAAO,IAAI1G,GAAUvH,EAAA,KAAe,aAAc,eAAgBgO,EAAOuD,YAC7E,QAAevH,IAAXgE,GAAwBjP,KAAKuN,OAAQ,CACrC,IAAIjF,EAAMtI,KAAKuN,OAAOgL,UAAU/F,GAChC,GAAIlK,aAAewB,GACf,OAAOxB,EACX,IAAKA,EACD,OAAO,IAAIwP,GAAe7W,EAAA,KAAeuR,GAC7CvD,EAAS3G,EAEb,OAAO2G,EAEXwF,IAAIjC,EAAYxR,EAAOyR,EAAU,IAC7B,IAAIvH,EAAUlL,KACd,GAAIyS,EAAQ1Q,OACRmJ,EAAUlL,KAAKN,SAEd,CACD,MAAQwL,EAAQoN,OAAO9F,SAAkCvH,IAAnBC,EAAQqC,QAC1CrC,EAAUA,EAAQqC,OAEjBrC,EAAQoN,OAAO9F,KAChBtH,EAAUlL,MAGlB,OAAOkL,EAAQ4C,OAAO0E,EAAYxR,EAAOyR,GAE7C3E,OAAO0E,EAAYxR,EAAOyR,EAAU,IAOhC,GANMzR,aAAiBmG,IACnBnG,EAAQ0J,EAAK1J,IAEbyR,EAAQ1Q,SAAW/B,KAAKiY,sBACxBxF,EAAQ1Q,QAAS,IAEhB0Q,EAAQ1E,kBAAmB,CAC5B,IAAIkB,EAASjP,KAAKkY,YAAY1F,GAC9B,GAAIvD,MAAAA,OAAuC,EAASA,EAAOE,WACvD,OAAO,IAAI3G,GAAUvH,EAAA,KAAe,UAAW,WAAYuR,GAEnExS,KAAKkY,YAAY1F,GAAc,IAAID,EAASvR,EAAOwR,EAAYC,GAEnEiG,OAAOlG,UACIxS,KAAKkY,YAAY1F,GAE5BmG,QACI,IAAK,IAAI1J,KAAUjP,KAAKkY,YACpBlY,KAAK0Y,OAAOzJ,GAEhBjP,KAAKuN,YAAStC,EACdjL,KAAKmY,SAAU,EAEfzY,WACA,IAAI6N,EAASvN,KACb,KAAOuN,EAAOA,QACVA,EAASA,EAAOA,OAEpB,OAAOA,EAEPxB,WACA,OAAO1L,OAAO0L,KAAK/L,KAAKkY,aAE5BU,gBACI,IAAIzL,EAAIgB,EACR,IAAKnO,KAAKiY,oBACN,OACJ,MAAMjC,EAAYhW,KAAKN,KAAKc,IAAI,SAC1ByV,EAAYjW,KAAKN,KAAKc,IAAI,SAC1BwV,aAAqB7O,GAAkB8O,aAAqB9O,GAIlEnH,KAAKkY,YAAc,GACnBlY,KAAKiY,qBAAsB,EAC3BnC,GAAW9V,MAAsC,QAA9BmN,EAAK6I,EAAUpO,iBAA8B,IAAPuF,OAAgB,EAASA,EAAGR,OAASzJ,QAAQC,KAAqC,QAA9BgL,EAAK8H,EAAUrO,iBAA8B,IAAPuG,OAAgB,EAASA,EAAGxB,OAAS,WALpLzJ,QAAQ2G,MAAM,yCAOtBpI,QACI,MAAM6L,EAAa,IAAIE,GAKvB,OAJAF,EAAWC,OAASvN,KAAKuN,OACzBD,EAAW6K,QAAUnY,KAAKmY,QAC1B7K,EAAW2K,oBAAsBjY,KAAKiY,oBACtC3K,EAAW4K,YAAc7X,OAAO2C,OAAO3C,OAAO2C,OAAO,GAAIsK,EAAW4K,aAAclY,KAAKkY,aAChF5K,EAEXuL,YACI,IAAI1L,EACJ,IAAI1L,EAAQzB,KAAKyB,QAEjB,OADAA,EAAM8L,OAAiC,QAAvBJ,EAAK1L,EAAM8L,cAA2B,IAAPJ,OAAgB,EAASA,EAAG0L,YACpEpX,EAEX0B,MACID,QAAQC,IAAI,qBACZ,IAAK,IAAIhD,KAAOH,KAAKkY,YAAa,CAC9B,MAAMjJ,EAASjP,KAAKkY,YAAY/X,GAChC,IAAI8T,EAAM9T,EACN8O,EAAOE,aACP8E,GAAO,YACNhF,EAAOC,eACR+E,GAAO,mBACXA,GAAO,KACPA,GAAOvS,GAAI1B,KAAKkY,YAAY/X,GAAKa,OACjCkC,QAAQC,IAAI8Q,GAEhB/Q,QAAQC,IAAI,sBsBrKb,SAAS2V,GAAkBlL,EAAK1C,GACnC,IAAIiC,EACJ,MAAM4L,EAAUnL,EAAIxG,KAAKgH,UAAUlD,GACnC,GAAI6N,EAAQlP,MACR,OAAOkP,EAAQlP,MAEnB,IAAI8E,EACJ,GAAIf,EAAIe,aAAc,CAClB,IAAIqK,EAA4C,QAA3B7L,EAAKS,EAAIe,oBAAiC,IAAPxB,OAAgB,EAASA,EAAGiB,UAAUlD,GAC9F,GAAI8N,EAAcnP,MACd,OAAOmP,EAAcnP,MAErBmP,EAAcpN,eAAezE,IAC7BwH,EAAeqK,EAAcpN,KAGrC,MAAO,CACH1B,KAAM0D,EAAI1D,KACV9C,KAAM2R,EAAQnN,IACd+C,aAAAA,GCXD,MAAMsK,GACT/X,cACIlB,KAAK4L,IAAM,IAAIZ,EACfhL,KAAKkZ,aAAc,EACnBlZ,KAAKmZ,gBAAiB,GAGvB,MAAMC,GACTlY,YAAY0K,GACR5L,KAAK4L,IAAM,GACX5L,KAAKqZ,QAAU,GACI,iBAARzN,EACP5L,KAAK4L,IAAMA,EAENA,IACL5L,KAAK6J,MAAQ+B,GAGrB0N,SAASC,EAAMC,GACX,MAAMlR,EAAMiR,EAAKE,UAAUD,GAE3B,OADAxZ,KAAKqZ,SAAW/Q,EAAI+Q,QAChB/Q,EAAIuB,OACJ7J,KAAK6J,MAAQvB,EAAIuB,MACV,IAEJvB,EAAIsD,KAGZ,MAAMsC,GACThN,YAAYwY,EAAKC,GAAa,GAC1B3Z,KAAK0Z,IAAMA,EACX1Z,KAAK2Z,WAAaA,EAEtBvL,UAAUlD,GACN,IAAIiC,EACJ,MAAMyM,EAAQvW,IACRiF,EAAM,IAAI2Q,GACVrN,EAAM5L,KAAK6Z,WAAW3O,GACxBU,aAAe9B,GACfxB,EAAIuB,MAAQ+B,EAEPA,aAAeqN,IACpB3Q,EAAIsD,IAAMA,EAAIA,IACdtD,EAAIuB,MAAQ+B,EAAI/B,MAChBvB,EAAI+F,WAAazC,EAAIyC,WACrB/F,EAAI4Q,YAActN,EAAIsN,YACtB5Q,EAAI6Q,eAAiBvN,EAAIuN,gBAGzB7Q,EAAIsD,IAAMA,EAEVtD,EAAIuB,OAASvB,EAAIuB,MAAM6P,IAAI/X,YAC3B2G,EAAIuB,MAAM6P,IAAM1Z,KAAK0Z,KAEnBpR,EAAIsD,eAAezE,IACrBmB,EAAIuB,MAAQ,IAAIrB,GAAUvH,EAAA,KAAe,YAAa,kBAAmBS,GAAI4G,EAAIsD,MACjFtD,EAAIsD,IAAM,IAAIZ,IAEjBmC,EAAK7E,EAAIsD,IAAI1D,MAAM5G,OAAS6L,EAAG7L,KAAOtB,KAAK0Z,IAAIpY,MAChD4M,GAAK4L,aACL,IAAInF,EAAOtR,IAAQuW,EAInB,OAHA1L,GAAK6L,WAAapF,EACdA,EAAOzG,GAAK8L,UACZ9L,GAAK8L,QAAUrF,GACZrM,GAGf4F,GAAK4L,WAAa,EAClB5L,GAAK6L,UAAY,EACjB7L,GAAK8L,QAAU,EACR,MAAMC,WAAgB/L,GACzBhN,YAAYwY,EAAK5I,EAAMoJ,EAAOnJ,GAC1BhH,MAAM2P,GACN1Z,KAAK8Q,KAAOA,EACZ9Q,KAAKka,MAAQA,EACbla,KAAK+Q,MAAQA,EAEjB8I,WAAW3O,GACP,MAAM4F,EAAO9Q,KAAK8Q,KAAK1C,UAAUlD,GACjC,GAAI4F,EAAKjH,MACL,OAAOiH,EAAKjH,MAChB,MAAMkH,EAAQ/Q,KAAK+Q,MAAM3C,UAAUlD,GACnC,GAAI6F,EAAMlH,MACN,OAAOkH,EAAMlH,MACjB,MAAMsQ,EAAIrJ,EAAKlF,IACTwO,EAAIrJ,EAAMnF,IAChB,QAAiB,IAANuO,EACP,OAAO,IAAI3R,GAAUxI,KAAKka,MAAMR,IAAK,aAAc,YAAaS,EAAG,sBAEvE,QAAiB,IAANC,EACP,OAAO,IAAI5R,GAAUxI,KAAKka,MAAMR,IAAK,aAAc,YAAaU,EAAG,sBAEvE,OAAQpa,KAAKka,MAAM9S,MACf,KAAK1C,EAAG2B,IAAK,CACT,MAAMgU,EAAKF,EAAEhR,OAAO,CAAE+B,QAAAA,GAAWkP,GAC3BE,EAAKH,EAAElR,OAAO,CAAEiC,QAAAA,GAAWkP,GACjC,OAAIC,aAAcvQ,GACPuQ,EACPC,aAAcxQ,GACPwQ,EACJD,EAAGhR,OAAO,CAAE6B,QAAAA,GAAWoP,GAElC,KAAK5V,EAAG0B,IAAK,CACT,MAAMmU,EAAKJ,EAAEjR,OAAO,CAAEgC,QAAAA,GAAWkP,GAC3BE,EAAKH,EAAElR,OAAO,CAAEiC,QAAAA,GAAWkP,GACjC,OAAIG,aAAczQ,GACPyQ,EACPD,aAAcxQ,GACPwQ,EACJC,EAAGlR,OAAO,CAAE6B,QAAAA,GAAWoP,GAElC,KAAK5V,EAAGsB,UAAW,CACf,MAAMsC,EAAM6R,EAAElR,OAAO,CAAEiC,QAAAA,GAAWkP,GAClC,OAAI9R,aAAewB,GACRxB,EACJ,IAAIX,GAAWW,EAAIuC,OAAOjD,WAErC,KAAKlD,EAAGe,IACJ,OAAO0U,EAAE1R,QAAQ,CAAEyC,QAAAA,GAAWkP,GAClC,KAAK1V,EAAGgB,IACJ,OAAOyU,EAAEvR,aAAa,CAAEsC,QAAAA,GAAWkP,GACvC,KAAK1V,EAAGiB,IACJ,OAAOwU,EAAEtR,aAAa,CAAEqC,QAAAA,GAAWkP,GACvC,KAAK1V,EAAGkB,IACJ,OAAOuU,EAAErR,WAAW,CAAEoC,QAAAA,GAAWkP,GACrC,KAAK1V,EAAGmB,IACJ,OAAOsU,EAAEpR,QAAQ,CAAEmC,QAAAA,GAAWkP,GAClC,KAAK1V,EAAGoB,IACJ,OAAOqU,EAAEnR,QAAQ,CAAEkC,QAAAA,GAAWkP,GAClC,KAAK1V,EAAGqB,OACJ,OAAOoU,EAAElR,OAAO,CAAEiC,QAAAA,GAAWkP,GACjC,KAAK1V,EAAGyB,GACJ,OAAOgU,EAAEhR,OAAO,CAAE+B,QAAAA,GAAWkP,GACjC,KAAK1V,EAAGwB,GACJ,OAAOiU,EAAEjR,OAAO,CAAEgC,QAAAA,GAAWkP,GACjC,KAAK1V,EAAG4B,IACJ,OAAO6T,EAAE/Q,QAAQ,CAAE8B,QAAAA,GAAWkP,GAClC,KAAK1V,EAAG6B,GACJ,OAAO4T,EAAE9Q,OAAO,CAAE6B,QAAAA,GAAWkP,GACjC,KAAK1V,EAAGiC,UACJ,OAAOwT,EAAE3Q,cAAc,CAAE0B,QAAAA,GAAWkP,GACxC,KAAK1V,EAAGkC,KACJ,OAAOuT,EAAE5Q,SAAS,CAAE2B,QAAAA,GAAWkP,GACnC,QACI,OAAO,IAAII,GAAmBxa,KAAKka,MAAMR,IAAK,4BAA4B/U,EAAgB3E,KAAKka,MAAM9S,UAGjHqT,UAAUjB,GACN,MAAM1I,EAAO9Q,KAAK8Q,KAAK2J,UAAUjB,GACjC,GAAI1I,EAAKjH,MACL,OAAOiH,EACX,MAAMC,EAAQ/Q,KAAK+Q,MAAM0J,UAAUjB,GACnC,OAAIzI,EAAMlH,MACCkH,EACPyI,EAAOkB,OACA,IAAItB,GAAc,GAAGtI,EAAKlF,MAAMjH,EAAgB3E,KAAKka,MAAM9S,QAAQ2J,EAAMnF,OAE7E,IAAIwN,GAAc,GAAGtI,EAAKlF,OAAOjH,EAAgB3E,KAAKka,MAAM9S,SAAS2J,EAAMnF,OAEtF6N,UAAUD,GACN,MAAM1I,EAAO9Q,KAAK8Q,KAAK2I,UAAUD,GACjC,GAAI1I,EAAKjH,MACL,OAAOiH,EACX,MAAMC,EAAQ/Q,KAAK+Q,MAAM0I,UAAUD,GACnC,GAAIzI,EAAMlH,MACN,OAAOkH,EACX,MAAM4J,EAAY,CACd,KAAM,MACN,KAAM,KACN,IAAK,MAET,IAAIC,EAAKjW,EAAgB3E,KAAKka,MAAM9S,MAIpC,OAHIwT,KAAMD,IACNC,EAAKD,EAAUC,IAEZ,IAAIxB,GAAc,GAAGtI,EAAKlF,OAAOgP,KAAM7J,EAAMnF,QAGrD,MAAMiP,WAAkB3M,GAC3BhN,YAAYwY,EAAK3G,EAAGmH,GAChBnQ,MAAM2P,GACN1Z,KAAK+S,EAAIA,EACT/S,KAAKka,MAAQA,EAEjBL,WAAW3O,GACP,IAAIiC,EAAIgB,EAAIuE,EACZ,MAAMpK,EAAMtI,KAAK+S,EAAE3E,UAAUlD,GAC7B,GAAI5C,EAAIuB,MACJ,OAAOvB,EAAIuB,MACf,OAAQ7J,KAAKka,MAAM9S,MACf,KAAK1C,EAAGgB,IACR,KAAKhB,EAAGe,IACJ,KAAM6C,EAAIsD,eAAeR,GACrB,OAAO,IAAI5C,GAAUxI,KAAK0Z,IAAK,UAA8B,QAAlBvM,EAAK7E,EAAIsD,WAAwB,IAAPuB,OAAgB,EAASA,EAAGrF,WAAWwJ,aAAe,aAAiC,QAAlBnD,EAAK7F,EAAIsD,WAAwB,IAAPuC,OAAgB,EAASA,EAAGvG,WAEpM,MAAMkT,EAASxS,EAAIsD,IAAIhE,UACvB,OAAO,IAAIwD,EAASpL,KAAKka,MAAM9S,OAAS1C,EAAGgB,KAAOoV,EAASpN,KAAKqN,IAAID,IACxE,KAAKpW,EAAGuB,IACJ,OAAO,IAAI0B,IAAyE,QAA5D+K,EAAKpK,MAAAA,OAAiC,EAASA,EAAIsD,WAAwB,IAAP8G,OAAgB,EAASA,EAAG7H,OAAOjD,YACnI,KAAKlD,EAAGmC,YACJ,OAAO,IAAIuK,EAAU9I,EAAIsD,KAC7B,QACI,OAAO,IAAI4O,GAAmBxa,KAAKka,MAAMR,IAAK,2BAA2B/U,EAAgB3E,KAAKka,MAAM9S,UAGhHqT,UAAUjB,GACN,MAAM5N,EAAM5L,KAAK+S,EAAE0H,UAAUjB,GAC7B,OAAI5N,EAAI/B,MACG+B,EACJ,IAAIwN,GAAc,GAAGzU,EAAgB3E,KAAKka,MAAM9S,QAAQwE,EAAIA,OAEvE6N,UAAUD,GACN,MAAM5N,EAAM5L,KAAK+S,EAAE0G,UAAUD,GAC7B,OAAI5N,EAAI/B,MACG+B,EACJ,IAAIwN,GAAc,GAAGzU,EAAgB3E,KAAKka,MAAM9S,QAAQwE,EAAIA,QAGpE,MAAMoP,WAAoB9M,GAC7BhN,YAAYwY,EAAKuB,EAAYja,EAAOka,EAAa,IAAKC,GAAW,EAAOhM,GAAa,EAAOiM,GAAgB,EAAOhU,EAAOF,EAAMG,KAC5H0C,MAAM2P,GACN1Z,KAAKgB,MAAQA,EACbhB,KAAKib,WAAaA,EAClBjb,KAAKmb,SAAWA,EAChBnb,KAAKkb,WAAaA,EAClBlb,KAAKmP,WAAaA,EAClBnP,KAAKob,cAAgBA,EAEjBpb,KAAKoH,KADLA,aAAgBD,EACJ,IAAIkU,GAAmBjU,GAGvBA,EAGpByS,WAAW3O,GACP,IAAIiC,EAAIgB,EACR,GAAInO,KAAKob,eAAiBlQ,EAAQoN,OAAOtY,KAAKib,WAAWja,OACrD,OAAO,IAAIwZ,GAAmBxa,KAAK0Z,IAAK,WAAW1Z,KAAKib,WAAWja,mDAEvE,MAAMsH,EAAMtI,KAAKgB,MAAMoN,UAAUlD,GAC3B6N,EAAU/Y,KAAKoH,KAAKgH,UAAUlD,GACpC,GAAI5C,EAAIuB,MACJ,OAAOvB,EAAIuB,MACf,GAAIkP,EAAQlP,MACR,OAAOkP,EAAQlP,MACnB,IAAKkP,EAAQnN,IACT,OAAO,IAAIpD,GAAUxI,KAAKib,WAAWvB,IAAK,OAAQ,aAEtD,IAAKpR,EAAIsD,IACL,OAAO,IAAIpD,GAAUxI,KAAKib,WAAWvB,IAAK,aAAc,YAAa,0BAEzE,MAAM4B,EAAevC,EAAQnN,IAAInE,UAAU,CAAEyD,QAAAA,GAAW5C,EAAIsD,KAC5D,GAAI0P,aAAwBxR,GACxB,OAAOwR,EACX,IAAKA,EAAazQ,OAAOjD,UACrB,OAAO,IAAIY,GAAUxI,KAAKib,WAAWvB,IAAKhY,GAAIqX,EAAQnN,KAAMlK,GAAuB,QAAlByL,EAAK7E,EAAIsD,WAAwB,IAAPuB,OAAgB,EAASA,EAAGrF,YAAapG,GAAI4G,EAAIsD,MAEhJ,GAAI5L,KAAKob,cACL,MAAwB,MAApBpb,KAAKkb,WACE,IAAIV,GAAmBxa,KAAK0Z,IAAK,0CAA0C1Z,KAAKkb,eAEvFhQ,EAAQoN,OAAOtY,KAAKib,WAAWja,OACxB,IAAIwZ,GAAmBxa,KAAK0Z,IAAK,gEAE5CxO,EAAQ4C,OAAO9N,KAAKib,WAAWja,MAAOsH,EAAIsD,IAAK,CAC3C7J,QAAQ,EACRoN,WAAYnP,KAAKmP,WACjB/H,KAAM2R,EAAQnN,MAEXtD,EAAIsD,KAEf,GAAIV,EAAQsJ,IAAIxU,KAAKib,WAAWja,OAAQ,CACpC,MAAMiO,EAAS/D,EAAQqN,UAAUvY,KAAKib,WAAWja,OACjD,GAAIiO,aAAkBnF,GAClB,OAAOmF,EACX,GAAIA,IACKA,EAAO7H,KAAKK,UAAU,CAAEyD,QAAAA,GAAW5C,EAAIsD,KAAKhE,UAC7C,OAAO,IAAIY,GAAUxI,KAAKib,WAAWvB,IAAKhY,GAAIuN,EAAO7H,MAA0B,QAAlB+G,EAAK7F,EAAIsD,WAAwB,IAAPuC,OAAgB,EAASA,EAAGrG,WAAYpG,GAAI4G,EAAIsD,MAInJ,GAAwB,MAApB5L,KAAKkb,WAAoB,CACzB,IAAIla,EAAQsH,EAAIsD,SACFX,IAAVjK,IACAA,EAAQ,IAAIgK,GAEhB,MAAM5D,EAAO8D,EAAQqN,UAAUvY,KAAKib,WAAWja,OAC/C,GAAIoG,aAAgB0C,GAChB,OAAO1C,EAEX,IAAKA,EACD,OAAO,IAAIoT,GAAmBxa,KAAK0Z,IAAK,2CAE5C,MAAM4B,EAAelU,EAAKA,KAAKK,UAAU,CAAEyD,QAAAA,GAAW5C,EAAIsD,KAC1D,GAAI0P,aAAwBxR,GACxB,OAAOwR,EACX,IAAKA,EAAazQ,OAAOjD,UACrB,OAAO,IAAIY,GAAUvH,EAAA,KAAeS,GAAI0F,EAAKA,MAAO1F,GAAI4G,EAAIsD,IAAI7D,UAAWrG,GAAI4G,EAAIsD,MAEvF,MAAMoC,EAAS9C,EAAQuJ,IAAIzU,KAAKib,WAAWja,MAAOA,EAAO,CACrDe,OAAQ/B,KAAKmb,SACbhM,WAAYnP,KAAKmP,WACjB/H,KAAMkB,EAAIsD,IAAI7D,WAElB,GAAIiG,aAAkBlE,GAClB,OAAOkE,MAEV,CACD,MAAMuN,EAAarQ,EAAQ1K,IAAIR,KAAKib,WAAWja,OAC/C,GAAIua,aAAsBzR,GACtB,OAAOyR,EACX,GAAkBtQ,MAAdsQ,EACA,OAAO,IAAIf,GAAmBxa,KAAK0Z,IAAK,0CAA0C1Z,KAAKkb,eAC3F,IAAIM,EACAC,EAAYnT,EAAIsD,IACpB,OAAQ5L,KAAKkb,WAAW,IACpB,IAAK,IACDM,EAASD,EAAW1S,aAAa,CAAEqC,QAAAA,GAAWuQ,GAC9C,MACJ,IAAK,IACDD,EAASD,EAAWzS,WAAW,CAAEoC,QAAAA,GAAWuQ,GAC5C,MACJ,IAAK,IACDD,EAASD,EAAW9S,QAAQ,CAAEyC,QAAAA,GAAWuQ,GACzC,MACJ,IAAK,IACDD,EAASD,EAAW3S,aAAa,CAAEsC,QAAAA,GAAWuQ,GAC9C,MACJ,QACI,OAAO,IAAI3R,GAAQ9J,KAAK0Z,IAAK,cAAe,6BAA6B1Z,KAAKkb,WAAW,MAEjG,GAAIM,aAAkB1R,GAClB,OAAO0R,EAEX,IAAIxN,EAAS9C,EAAQuJ,IAAIzU,KAAKib,WAAWja,MAAOwa,EAAQ,CACpDzZ,OAAQ/B,KAAKmb,SACbhM,WAAYnP,KAAKmP,WACjB/H,KAAMoU,EAAOzT,WAEjB,GAAIiG,aAAkBlE,GAClB,OAAOkE,EACX1F,EAAIsD,IAAM4P,EAKd,MAH0B,gBAAtBlT,EAAIsD,IAAI1D,KAAKgC,MAA2B5B,EAAIsD,IAAI1D,KAAKgC,OACrD5B,EAAIsD,IAAI1D,KAAKgC,KAAOlK,KAAKib,WAAWja,OAEjCsH,EAEXmS,UAAUjB,GACN,MAAM5N,EAAM5L,KAAKgB,MAAMyZ,UAAUjB,GACjC,GAAI5N,EAAI/B,MACJ,OAAO+B,EACX,IAAI8P,EAAc,GACd1b,KAAKob,gBAEDM,EADA1b,KAAKmb,SACS,MAETnb,KAAKmP,WACI,QAGA,OAGtB,IAAInM,EAAShD,KAAKkb,WAIlB,MAHe,MAAXlY,IACAA,GAAU,KAEVwW,EAAOkB,OACA,IAAItB,GAAc,GAAGsC,KAAe1b,KAAKib,WAAWja,QAAQgC,IAAS4I,EAAIA,OAE7E,IAAIwN,GAAc,GAAGsC,KAAe1b,KAAKib,WAAWja,SAASgC,KAAU4I,EAAIA,OAEtF6N,UAAUD,GACN,MAAMlR,EAAM,IAAI8Q,GACVxN,EAAM5L,KAAKgB,MAAMyY,UAAUD,GACjC,GAAI5N,EAAI/B,MACJ,OAAO+B,EACXtD,EAAI+Q,SAAWzN,EAAIyN,QACnB,IAAIrW,EAAShD,KAAKkb,WAalB,MAZe,MAAXlY,IACAA,GAAU,KAEVhD,KAAKmb,WACL7S,EAAI+Q,SAAW,GAAGrZ,KAAKib,WAAWja,cAElCwY,EAAOkB,OACPpS,EAAIsD,IAAM,GAAG5L,KAAKib,WAAWja,QAAQgC,IAAS4I,EAAIA,MAGlDtD,EAAIsD,IAAM,GAAG5L,KAAKib,WAAWja,SAASgC,KAAU4I,EAAIA,MAEjDtD,GAGR,MAAMqT,WAAazN,GACtBhN,YAAYwY,EAAKkC,EAAYC,EAAQC,GACjC/R,MAAM2P,GACN1Z,KAAK4b,WAAaA,EAClB5b,KAAK8b,QAAUA,EACf9b,KAAK6b,OAASA,EAElBhC,WAAW3O,GACP,IAAIiC,EACJ,IAAIG,EAAa,IAAIE,GACrBF,EAAWC,OAASrC,EACpB,IAAI5C,EAAM,IAAI2Q,GACV8C,EAAU/b,KAAK4b,WAAWxN,UAAUlD,GACxC,OAAI6Q,EAAQlS,MACDkS,GACgB,QAAtB5O,EAAK4O,EAAQnQ,WAAwB,IAAPuB,OAAgB,EAASA,EAAGtC,OAAOjD,WAC3D5H,KAAK6b,OAAOzN,UAAUd,GAExBtN,KAAK8b,QACH9b,KAAK8b,QAAQ1N,UAAUd,GAE3BhF,EAEXmS,UAAUjB,GACN,MAAMtF,EAAS,IAAI/B,OAAOqH,EAAOtF,QAC3B8H,EAAa,IAAI7J,OAAOqH,EAAOtF,OAAS,GAC9CsF,EAAOtF,QAAU,EACjB,MAAM+H,EAAejc,KAAK4b,WAAWnB,UAAUjB,GAC/C,GAAIyC,EAAapS,MACb,OAAOoS,EACX,MAAMC,EAAYlc,KAAK6b,OAAOpB,UAAUjB,GACxC,GAAI0C,EAAUrS,MACV,OAAOqS,EACX,IAAKlc,KAAK8b,QACN,OAAItC,EAAOkB,OACA,IAAItB,GAAc,MAAM6C,EAAarQ,QAAQsQ,EAAUtQ,UAE3D,IAAIwN,GAAc,OAAO6C,EAAarQ,WAAWsQ,EAAUtQ,UAEtE4N,EAAOtF,OAAS8H,EAAWnQ,OAC3B,IAAIsQ,EAAanc,KAAK8b,QAAQrB,UAAUjB,GACxC,OAAI2C,EAAWtS,MACJsS,GACLnc,KAAK8b,mBAAmBM,KAC1BD,EAAWvQ,IAAMoQ,EAAaG,EAAWvQ,KAEzC4N,EAAOkB,OACA,IAAItB,GAAc,MAAM6C,EAAarQ,QAAQsQ,EAAUtQ,YAAYuQ,EAAWvQ,QAElF,IAAIwN,GAAc,OAAO6C,EAAarQ,WAAWsQ,EAAUtQ,QAAQsI,cAAmBiI,EAAWvQ,QAAQsI,OAEpHuF,UAAUD,GACN,MAAMlR,EAAM,IAAI8Q,GACVlF,EAAS,IAAI/B,OAAOqH,EAAOtF,QAC3B8H,EAAa,IAAI7J,OAAOqH,EAAOtF,OAAS,GAC9CsF,EAAOtF,QAAU,EACjB,MAAM+H,EAAejc,KAAK4b,WAAWnC,UAAUD,GAC/C,GAAIyC,EAAapS,MACb,OAAOoS,EACX3T,EAAI+Q,SAAW4C,EAAa5C,QAC5B,MAAM6C,EAAYlc,KAAK6b,OAAOpC,UAAUD,GACxC,GAAI0C,EAAUrS,MACV,OAAOqS,EAEX,GADA5T,EAAI+Q,SAAW6C,EAAU7C,SACpBrZ,KAAK8b,QACN,OAAO,IAAI1C,GAAc,MAAM6C,EAAarQ,SAASoQ,IAAaE,EAAUtQ,OAEhF,MAAMuQ,EAAanc,KAAK8b,QAAQrC,UAAUD,GAC1C,OAAI2C,EAAWtS,MACJsS,GACX7T,EAAI+Q,SAAW8C,EAAW9C,QACpBrZ,KAAK8b,mBAAmBM,KAC1BD,EAAWvQ,IAAMoQ,EAAaG,EAAWvQ,KAEtC,IAAIwN,GAAc,MAAM6C,EAAarQ,SAASsQ,EAAUtQ,QAAQsI,WAAgBiI,EAAWvQ,QAAQsI,OAG3G,MAAMmI,WAAgBnO,GACzBhN,YAAYwY,EAAKkC,EAAYU,GACzBvS,MAAM2P,GACN1Z,KAAK4b,WAAaA,EAClB5b,KAAKsc,KAAOA,EAEhBzC,WAAW3O,GACP,IAAIiC,EAAIgB,EACR,IAAIb,EAAa,IAAIE,GAErB,IADAF,EAAWC,OAASrC,IACP,CACT,IAAIqR,EAAavc,KAAK4b,WAAWxN,UAAUlD,GAC3C,GAAIqR,EAAW1S,MACX,OAAO0S,EACX,KAAsF,QAA/EpO,EAA+B,QAAzBhB,EAAKoP,EAAW3Q,WAAwB,IAAPuB,OAAgB,EAASA,EAAGtC,cAA2B,IAAPsD,OAAgB,EAASA,EAAGvG,WACtH,MACJ,IAAI4U,EAAiBxc,KAAKsc,KAAKlO,UAAUd,GACzC,GAAIkP,EAAe3S,MACf,OAAO2S,EACX,GAAIA,EAAetD,YACf,MAER,OAAO,IAAIlO,EAEfyP,UAAUjB,GACNA,EAAOtF,QAAU,EACjB,MAAMuI,EAAgBzc,KAAK4b,WAAWnB,UAAUjB,GAChD,GAAIiD,EAAc5S,MACd,OAAO4S,EACX,MAAMC,EAAU1c,KAAKsc,KAAK7B,UAAUjB,GACpC,OAAIkD,EAAQ7S,MACD6S,EACPlD,EAAOkB,OACA,IAAItB,GAAc,SAASqD,EAAc7Q,QAAQ8Q,EAAQ9Q,QAE7D,IAAIwN,GAAc,UAAUqD,EAAc7Q,WAAW8Q,EAAQ9Q,QAExE6N,UAAUD,GACN,MAAMlR,EAAM,IAAI8Q,GACV4C,EAAa,IAAI7J,OAAOqH,EAAOtF,QAAU,GACzCuI,EAAgBzc,KAAK4b,WAAWnC,UAAUD,GAChD,GAAIiD,EAAc5S,MACd,OAAO4S,EACXnU,EAAI+Q,SAAWoD,EAAcpD,QAC7B,MAAMqD,EAAU1c,KAAKsc,KAAK7C,UAAUD,GACpC,OAAIkD,EAAQ7S,MACD6S,GACXpU,EAAI+Q,SAAWqD,EAAQrD,QAChB,IAAID,GAAc,SAASqD,EAAc7Q,SAASoQ,IAAaU,EAAQ9Q,SAG/E,MAAM+Q,WAAczO,GACvBhN,YAAYwY,EAAKkD,EAAMtR,EAAOkH,EAAYqK,EAAoBC,GAC1D/S,MAAM2P,GACN1Z,KAAK4c,KAAOA,EACZ5c,KAAKsL,MAAQA,EACbtL,KAAKwS,WAAaA,EAClBxS,KAAK+c,WAAaF,EAClB7c,KAAKgd,UAAYF,EAErBjD,WAAW3O,GACP,IAAIiC,EAAIgB,EAAIuE,EAAIuK,EAAIC,EAAIC,EAAIC,EAAIC,EAChC,MAAM/R,EAAQtL,KAAKsL,MAAM8C,UAAUlD,GACnC,GAAII,EAAMzB,MACN,OAAOyB,EACX,IAA6I,IAAzI,CAAC,QAAS,SAAU,SAAU,SAAU,OAAOiB,SAA8B,QAApBY,EAAK7B,EAAMM,WAAwB,IAAPuB,OAAgB,EAASA,EAAGrF,aAAe,IAChI,OAAO,IAAIU,GAAUxI,KAAKwS,WAAWkH,IAAK,0CAA2CpO,EAAMM,IAAM,OAA8B,QAApBuC,EAAK7C,EAAMM,WAAwB,IAAPuC,OAAgB,EAASA,EAAGrG,aAEvK,GAAIoD,EAAQsJ,IAAIxU,KAAKwS,WAAWxR,QAAUhB,KAAK+c,WAC3C,OAAO,IAAIvC,GAAmBxa,KAAKwS,WAAWkH,IAAK,oEAEvD,SAAS4D,EAAUV,EAAMrI,EAAI1C,EAASsJ,EAAUhM,GAC5C,IAAI7B,EAAa,IAAIE,GACrBF,EAAWC,OAASrC,EACpBoC,EAAWmH,IAAIF,EAAI1C,EAAS,CACxB9P,OAAQoZ,EACRhM,WAAAA,EACA/H,KAAMyK,EAAQ9J,WAElB,MAAMO,EAAMsU,EAAKxO,UAAUd,GAC3B,OAAIhF,EAAIuB,YAA6BoB,IAAnB3C,EAAI+F,WACX/F,EACPA,EAAI4Q,aACJ5Q,EAAI4Q,aAAc,EACX,cAEP5Q,EAAI6Q,iBACJ7Q,EAAI6Q,gBAAiB,IAG7B,GAAI7N,EAAMM,eAAeR,GAA2F,iBAAlD,QAApBsH,EAAKpH,EAAMM,WAAwB,IAAP8G,OAAgB,EAASA,EAAG9K,WAClG,IAAK,IAAI+F,EAAI,EAAGA,EAAIrC,EAAMM,IAAIhE,UAAW+F,IAAK,CAC1C,MAAMrF,EAAMgV,EAAUtd,KAAK4c,KAAM5c,KAAKwS,WAAWxR,MAAO,IAAIoK,EAASuC,GAAI3N,KAAK+c,WAAY/c,KAAKgd,WAC/F,GAAY,UAAR1U,EACA,MACJ,GAAIA,IAAQA,EAAIuB,YAA6BoB,IAAnB3C,EAAI+F,YAC1B,OAAO/F,OAGd,GAAIgD,EAAMM,eAAeH,GACsD,iBAAlD,QAApBwR,EAAK3R,EAAMM,WAAwB,IAAPqR,OAAgB,EAASA,EAAGrV,aAA2ByE,MAAMC,QAA6B,QAApB4Q,EAAK5R,EAAMM,WAAwB,IAAPsR,OAAgB,EAASA,EAAGtV,WACpK,IAAK,IAAIiK,KAAgC,QAApBsL,EAAK7R,EAAMM,WAAwB,IAAPuR,OAAgB,EAASA,EAAGvV,UAAW,CACpF,MAAMU,EAAMgV,EAAUtd,KAAK4c,KAAM5c,KAAKwS,WAAWxR,MAAO,IAAIiJ,EAAS4H,GAAU7R,KAAK+c,WAAY/c,KAAKgd,WACrG,GAAY,UAAR1U,EACA,MACJ,GAAIA,IAAQA,EAAIuB,YAA6BoB,IAAnB3C,EAAI+F,YAC1B,OAAO/F,MAGd,MAAIgD,EAAMM,eAAexB,GAAWiC,MAAMC,QAA6B,QAApB8Q,EAAK9R,EAAMM,WAAwB,IAAPwR,OAAgB,EAASA,EAAGxV,YAU5G,OAAO,IAAIY,GAAUxI,KAAKwS,WAAWkH,IAAK,0CAA2CpO,EAAMM,KAT3F,IAAK,IAAIiG,KAAgC,QAApBwL,EAAK/R,EAAMM,WAAwB,IAAPyR,OAAgB,EAASA,EAAGzV,UAAW,CACpF,MAAMU,EAAMgV,EAAUtd,KAAK4c,KAAM5c,KAAKwS,WAAWxR,MAAO6Q,EAAS7R,KAAK+c,WAAY/c,KAAKgd,WACvF,GAAY,UAAR1U,EACA,MACJ,GAAIA,IAAQA,EAAIuB,YAA6BoB,IAAnB3C,EAAI+F,YAC1B,OAAO/F,GAKnB,OAAO,IAAI0C,EAEfyP,UAAUjB,GACN,MAAMtF,EAAS,IAAI/B,OAAOqH,EAAOtF,QACjCsF,EAAOtF,QAAU,EACjB,MAAMqJ,EAAcvd,KAAKsL,MAAMmP,UAAUjB,GACzC,GAAI+D,EAAY1T,MACZ,OAAO0T,EACX,MAAMb,EAAU1c,KAAK4c,KAAKnC,UAAUjB,GACpC,GAAIkD,EAAQ7S,MACR,OAAO6S,EACX,IAAIhB,EAAc,MAOlB,OANI1b,KAAK+c,WACLrB,EAAc,MAET1b,KAAKgd,YACVtB,EAAc,SAEdlC,EAAOkB,OACA,IAAItB,GAAc,OAAOsC,KAAe1b,KAAKwS,WAAWxR,YAAYuc,EAAY3R,QAAQ8Q,EAAQ9Q,QAAQsI,MAE5G,IAAIkF,GAAc,QAAQsC,KAAe1b,KAAKwS,WAAWxR,YAAYuc,EAAY3R,WAAW8Q,EAAQ9Q,QAAQsI,MAEvHuF,UAAUD,GACN,MAAMlR,EAAM,IAAI8Q,GAChBI,EAAOtF,QAAU,EACjB,MAAMqJ,EAAcjV,EAAIgR,SAAStZ,KAAKsL,MAAOkO,GAC7C,GAAIlR,EAAIuB,MACJ,OAAOvB,EACX,MAAMoU,EAAUpU,EAAIgR,SAAStZ,KAAK4c,KAAMpD,GACxC,OAAIlR,EAAIuB,QAEJ7J,KAAK+c,aACLzU,EAAI+Q,SAAW,GAAGrZ,KAAKwS,WAAWxR,cAEtCsH,EAAIsD,IAAM,OAAO5L,KAAKwS,WAAWxR,YAAYuc,OAAiBb,KAJnDpU,GAQZ,MAAMkV,WAAgBtP,GACzBhN,YAAYwY,EAAK+D,EAAOC,GAAc,GAClC3T,MAAM2P,GACN1Z,KAAKyd,MAAQA,EACbzd,KAAK0d,YAAcA,EAEvB7D,WAAW3O,GACP,IAAI7G,EAAS,IAAI4U,GACb0E,EAAc,GAClB,IAAK,IAAIC,KAAQ5d,KAAKyd,MAAO,CACzB,MAAMnV,EAAMsV,EAAKxP,UAAUlD,GAC3B,GAAI5C,EAAIuB,YAA6BoB,IAAnB3C,EAAI+F,WAClB,OAAO/F,EACX,IAAKA,EAAIsD,IACL,SACJ,IAAIA,EAAMtD,EAAIsD,IACV5L,KAAK0d,cACL9R,EAAMA,EAAInK,SAEdkc,EAAYpP,KAAK3C,GAGrB,OADAvH,EAAOuH,IAAM,IAAIxB,EAAQuT,GAClBtZ,EAEXoW,UAAUjB,GACN,MAAMlR,EAAM,IAAI8Q,GAAc,KAC9B,IAAK,IAAIwE,KAAQ5d,KAAKyd,MAAO,CACzB,MAAMI,EAAUD,EAAKnD,UAAUjB,GAC/B,GAAIqE,EAAQhU,MACR,OAAOgU,EACXvV,EAAIsD,KAAOiS,EAAQjS,IAAM,IAG7B,OADAtD,EAAIsD,KAAO,IACJtD,EAEXmR,UAAUD,GACN,MAAMlR,EAAM,IAAI8Q,GAAc,KAC9B,IAAK,IAAIwE,KAAQ5d,KAAKyd,MAAO,CACzB,MAAMI,EAAUvV,EAAIgR,SAASsE,EAAMpE,GACnC,GAAIlR,EAAIuB,MACJ,OAAOvB,EACXA,EAAIsD,KAAOiS,EAAU,IAGzB,OADAvV,EAAIsD,KAAO,IACJtD,GAGR,MAAMwV,WAAwB5P,GACjChN,YAAYwY,EAAKqE,GACbhU,MAAM2P,GACN1Z,KAAK+d,WAAaA,EAEtBlE,WAAW3O,GACP,IAAIyS,EAAc,GAClB,IAAK,MAAOK,EAASC,KAAcje,KAAK+d,WAAY,CAChD,MAAM/c,EAAQid,EAAU7P,UAAUlD,GAClC,GAAIlK,EAAM6I,MACN,OAAO7I,EAAM6I,MACjB,MAAM1J,EAAM6d,EAAQ5P,UAAUlD,GAC9B,GAAI/K,EAAI0J,MACJ,OAAO1J,EAAI0J,MACX1J,EAAIyL,KAAO5K,EAAM4K,MACjB+R,EAAYxd,EAAIyL,IAAIhE,WAAa5G,EAAM4K,KAG/C,OAAO,IAAIH,EAASkS,GAExBlD,UAAUjB,GACN,MAAMlR,EAAM,IAAI8Q,GAAc,KAC9B,IAAK,MAAO4E,EAASC,KAAcje,KAAK+d,WAAY,CAChD,MAAM/c,EAAQid,EAAUxD,UAAUjB,GAClC,GAAIxY,EAAM6I,MACN,OAAO7I,EACX,MAAMb,EAAM6d,EAAQvD,UAAUjB,GAC9B,GAAIrZ,EAAI0J,MACJ,OAAO1J,EACPA,EAAIyL,KAAO5K,EAAM4K,MACjBtD,EAAIsD,KAAO,IAAIzL,EAAIyL,SAAS5K,EAAM4K,QAI1C,OADAtD,EAAIsD,KAAO,IACJtD,EAEXmR,UAAUD,GACN,MAAMlR,EAAM,IAAI8Q,GAAc,KAC9B,IAAK,MAAO4E,EAASC,KAAcje,KAAK+d,WAAY,CAChD,MAAM/c,EAAQsH,EAAIgR,SAAS2E,EAAWzE,GACtC,GAAIlR,EAAIuB,MACJ,OAAOvB,EACX,MAAMnI,EAAMmI,EAAIgR,SAAS0E,EAASxE,GAClC,GAAIlR,EAAIuB,MACJ,OAAOvB,EACPnI,GAAOa,IACPsH,EAAIsD,KAAO,GAAGzL,MAAQa,MAI9B,OADAsH,EAAIsD,KAAO,IACJtD,GAGR,MAAM8T,WAAqBlO,GAC9BhN,YAAYwY,EAAK+D,EAAOS,GAAW,GAC/BnU,MAAM2P,GACN1Z,KAAKyd,MAAQA,EACbzd,KAAKke,SAAWA,EAEpBrE,WAAW3O,GACP,GAAKlL,KAAKke,SAYL,CACD,IAAI7Z,EAAS,IAAI4U,GACb0E,EAAc,GAClB,IAAK,IAAIC,KAAQ5d,KAAKyd,MAAO,CACzB,MAAMnV,EAAMsV,EAAKxP,UAAUlD,GAC3B,GAAI5C,EAAIuB,YAA6BoB,IAAnB3C,EAAI+F,WAClB,OAAO/F,EACX,IAAKA,EAAIsD,IACL,SACJ,IAAIA,EAAMtD,EAAIsD,IAAInK,QAClBkc,EAAYpP,KAAK3C,GAGrB,OADAvH,EAAOuH,IAAM,IAAIxB,EAAQuT,GAClBtZ,EAzBS,CAChB,IAAI8Z,EACJ,IAAK,IAAIP,KAAQ5d,KAAKyd,MAAO,CACzB,MAAMnV,EAAMsV,EAAKxP,UAAUlD,GAC3B,GAAI5C,EAAIuB,YAAoC,IAAnBvB,EAAI+F,YAA+B/F,EAAI4Q,aAAe5Q,EAAI6Q,eAC/E,OAAO7Q,EACX6V,EAAO7V,EAAIsD,IAEf,OAAIuS,GAEG,IAAInT,GAkBnByP,UAAUjB,GACN,MAAMlR,EAAM,IAAI8Q,GACVlF,EAAS,IAAI/B,OAAOqH,EAAOtF,QACjC5L,EAAIsD,KAAOsI,EACX,IAAK,IAAI0J,KAAQ5d,KAAKyd,MAAO,CACzB,MAAMI,EAAUD,EAAKnD,UAAUjB,GAC/B,GAAIqE,EAAQhU,MACR,OAAOgU,EACXvV,EAAIsD,KAAOiS,EAAQjS,IAAM,IACpB4N,EAAOkB,SACRpS,EAAIsD,KAAO,KAAOsI,GAG1B,OAAO5L,EAEXmR,UAAUD,GACN,MAAMlR,EAAM,IAAI8Q,GACVlF,EAAS,IAAI/B,OAAOqH,EAAOtF,QACjC5L,EAAIsD,KAAOsI,EACX,IAAK,IAAI0J,KAAQ5d,KAAKyd,MAAO,CACzB,MAAMI,EAAUvV,EAAIgR,SAASsE,EAAMpE,GACnC,GAAIlR,EAAIuB,MACJ,OAAOvB,EACXA,EAAIsD,KAAOiS,EACXvV,EAAIsD,KAAO,KAAOsI,EAEtB,OAAO5L,GAGR,MAAM8V,WAAuBlQ,GAChChN,YAAYwY,EAAK2E,EAAI3P,GACjB3E,MAAM2P,GACN1Z,KAAKse,UAAY5P,EACjB1O,KAAKqe,GAAKA,EAEdxE,WAAW3O,GACP,IAAI,IAAEU,EAAG,MAAE/B,GAAU7J,KAAKqe,GAAGjQ,UAAUlD,GACvC,GAAIrB,EACA,OAAOA,EAEX,IAAK+B,EACD,OAAO,IAAIpD,GAAUxI,KAAK0Z,IAAK,MAAO,iBAAazO,EAAW,oBAElE,IAAIgC,EAAS,GACb,IAAK,IAAIW,KAAO5N,KAAKse,UAAW,CAC5B,MAAMhW,EAAMsF,EAAIQ,UAAUlD,GAC1B,GAAI5C,EAAIuB,MACJ,OAAOvB,EAAIuB,MAEXvB,EAAIsD,KACJqB,EAAOsB,KAAKjG,EAAIsD,KAGxB,MAAMtD,EAAMsD,EAAIlC,SAAS,CAAEwB,QAAAA,MAAc+B,GAOzC,OANI3E,aAAewB,IACfxB,EAAI+B,UAAUkE,KAAK,CACf/D,SAAUxK,KAAK0Z,IACfjP,KAAM,GAAGmB,EAAI1D,KAAKgC,MAAQ,oBAAoB+C,EAAO3C,IAAI5I,IAAK6c,KAAK,WAGpEjW,EAEXmS,UAAUjB,GACN,MAAMlR,EAAM,IAAI8Q,GACVoF,EAAUxe,KAAKqe,GAAG5D,UAAUjB,GAClC,GAAIgF,EAAQ3U,MACR,OAAO2U,EACXlW,EAAIsD,IAAM4S,EAAQ5S,IAAM,IACxB,IAAK,IAAIgC,KAAO5N,KAAKse,UAAW,CAC5B,MAAMG,EAAS7Q,EAAI6M,UAAUjB,GAC7B,GAAIiF,EAAO5U,MACP,OAAO4U,EACXnW,EAAIsD,KAAO6S,EAAO7S,IACdgC,IAAQ5N,KAAKse,UAAUte,KAAKse,UAAUzS,OAAS,KAC/CvD,EAAIsD,KAAO,IACN4N,EAAOkB,SACRpS,EAAIsD,KAAO,MAKvB,OADAtD,EAAIsD,KAAO,IACJtD,EAEXmR,UAAUD,GACN,MAAMlR,EAAM,IAAI8Q,GACVoF,EAAUlW,EAAIgR,SAAStZ,KAAKqe,GAAI7E,GACtC,GAAIlR,EAAIuB,MACJ,OAAOvB,EACXA,EAAIsD,IAAM4S,EAAU,IACpB,IAAK,IAAI5Q,KAAO5N,KAAKse,UAAW,CAC5B,MAAMG,EAASnW,EAAIgR,SAAS1L,EAAK4L,GACjC,GAAIlR,EAAIuB,MACJ,OAAOvB,EACXA,EAAIsD,KAAO6S,EACP7Q,IAAQ5N,KAAKse,UAAUte,KAAKse,UAAUzS,OAAS,KAC/CvD,EAAIsD,KAAO,IACN4N,EAAOkB,SACRpS,EAAIsD,KAAO,MAKvB,OADAtD,EAAIsD,KAAO,IACJtD,GAGR,MAAMoW,WAA6BxQ,GACtChN,YAAYwY,EAAKkD,EAAM+B,EAAU7R,EAAY5C,EAAO,SAAU2C,EAAQ,IAAIpB,EAAYrD,EAAc,IAChG2B,MAAM2P,GACN1Z,KAAKse,UAAYK,EACjB3e,KAAK4c,KAAOA,EACZ5c,KAAKkK,KAAOA,EACZlK,KAAK6M,MAAQA,EACb7M,KAAK8M,WAAaA,EAClB9M,KAAKoI,YAAcA,EAEvByR,WAAW3O,GACP,IAAIwD,EAAO,GACX,IAAK,IAAId,KAAO5N,KAAKse,UAAW,CAC5B,MAAMhW,EAAMwQ,GAAkBlL,EAAK1C,GACnC,GAAI5C,aAAewB,GACf,OAAOxB,EACXoG,EAAKH,KAAKjG,GAEd,MAAMsW,EAAgB5e,KAAK8M,WAAWsB,UAAUlD,GAChD,OAAI0T,EAAc/U,MACP+U,EAAc/U,MAClB,IAAI6B,EAAW1L,KAAK4c,KAAMlO,EAAM1O,KAAKkK,KAAMlK,KAAK6M,MAAO+R,EAAchT,IAAKV,GAErFuP,UAAUjB,GACN,MAAMlR,EAAM,IAAI8Q,GAAc,aAC9B,IAAK,IAAIyF,KAAS7e,KAAKse,UACnBhW,EAAIsD,KAAOiT,EAAM3U,KAAO,IACnBsP,EAAOkB,SACRpS,EAAIsD,KAAO,KAGf4N,EAAOkB,OACPpS,EAAIsD,KAAO,KAGXtD,EAAIsD,KAAO,QAEf,MAAMsI,EAAS,IAAI/B,OAAOqH,EAAOtF,QACjCsF,EAAOtF,QAAU,EACjB,MAAMwI,EAAU1c,KAAK4c,KAAKnC,UAAUjB,GACpC,OAAIkD,EAAQ7S,MACD6S,GACXpU,EAAIsD,KAAO,GAAG8Q,EAAQ9Q,QAAQsI,KACvB5L,GAEXmR,UAAUD,GACN,MAAMlR,EAAM,IAAI8Q,GACV0F,EAAcC,GAAqBvF,EAAOf,SAChDnQ,EAAI+Q,QAAU,OAAOyF,KACrB,IAAK,IAAID,KAAS7e,KAAKse,UACnBhW,EAAI+Q,SAAWwF,EAAM3U,KAAO,IACvBsP,EAAOkB,SACRpS,EAAI+Q,SAAW,KAGvB,MAAMnF,EAAS,IAAI/B,OAAOqH,EAAOtF,QACjCsF,EAAOtF,QAAU,EACjB,MAAM0I,EAAO5c,KAAK4c,KAAKnD,UAAUD,GACjC,OAAIoD,EAAK/S,MACE+S,GACXtU,EAAI+Q,SAAW,OAAOnF,IAAS0I,EAAKhR,MACpCtD,EAAI+Q,QAAUuD,EAAKvD,QAAU/Q,EAAI+Q,QACjC/Q,EAAIsD,IAAMkT,EACHxW,IAGR,MAAM0W,WAAiB9Q,GAC1BhN,YAAYwY,EAAK1Y,GACb+I,MAAM2P,GACN1Z,KAAKgB,MAAQA,EAEjB6Y,WAAW3O,GACP,MAAM5C,EAAM,IAAI2Q,GAChB,QAAmBhO,IAAfjL,KAAKgB,MAEL,OADAsH,EAAI+F,WAAa,IAAIrD,EACd1C,EAEX,IAAIsD,EAAM5L,KAAKgB,MAAMoN,UAAUlD,GAC/B,OAAIU,EAAI/B,MACG+B,EAAI/B,OACfvB,EAAI+F,WAAazC,EAAIA,IACdtD,GAEXmS,UAAUjB,GACN,IAAIrM,EACJ,MAAM8R,EAA+B,QAArB9R,EAAKnN,KAAKgB,aAA0B,IAAPmM,OAAgB,EAASA,EAAGsN,UAAUjB,GACnF,OAAIyF,MAAAA,OAAuC,EAASA,EAAOpV,OAChDoV,EACJ,IAAI7F,GAAc,UAAU6F,MAAAA,OAAuC,EAASA,EAAOrT,QAE9F6N,UAAUD,GACN,MAAMlR,EAAM,IAAI8Q,GAChB,IAAKpZ,KAAKgB,MACN,OAAO,IAAIoY,GAAc,UAE7B,MAAM6F,EAAS3W,EAAIgR,SAAStZ,KAAKgB,MAAOwY,GACxC,OAAIlR,EAAIuB,MACGvB,EACJ,IAAI8Q,GAAc,UAAU6F,MAGpC,MAAMC,WAAgBhR,GACzBhN,YAAYwY,EAAK1Y,GACb+I,MAAM2P,GACN1Z,KAAKgB,MAAQA,EAEjB6Y,WAAW3O,GACP,IAAIiC,EACJ,MAAM7E,EAAM,IAAI2Q,GAChB,QAAmBhO,IAAfjL,KAAKgB,MAEL,OADAsH,EAAI+F,WAAa,IAAIrD,EACd1C,EAEX,IAAIsD,EAAM5L,KAAKgB,MAAMoN,UAAUlD,GAC/B,OAAIU,EAAI/B,MACG+B,EAAI/B,QACQ,QAAlBsD,EAAKvB,EAAIA,WAAwB,IAAPuB,OAAgB,EAASA,EAAGtC,OAAOjD,aAC9DU,EAAI+F,WAAazC,EAAIA,KAElBtD,GAEXmS,UAAUjB,GACN,IAAIrM,EACJ,MAAM8R,EAA+B,QAArB9R,EAAKnN,KAAKgB,aAA0B,IAAPmM,OAAgB,EAASA,EAAGsN,UAAUjB,GACnF,OAAKyF,GAAWA,EAAOrT,IAGhB,IAAIwN,GAAc,QAAQ6F,EAAOrT,mBAF7B,IAAIwN,GAAc,IAIjCK,UAAUD,GACN,IAAKxZ,KAAKgB,MACN,OAAO,IAAIoY,GAAc,IAE7B,MACM6F,GADM,IAAI7F,IACGE,SAAStZ,KAAKgB,MAAOwY,GACxC,OAGO,IAAIJ,GAHN6F,EAGoB,WAAWA,cAFP,KAK9B,MAAME,WAAkBjR,GAC3BhN,YAAYwY,EAAK0F,EAAMC,GACnBtV,MAAM2P,GACN1Z,KAAKof,KAAOA,EACZpf,KAAKqf,MAAQA,EAEjBxF,WAAW3O,GACP,IAAIiC,EACJ,IAAImS,EAAUtf,KAAKof,KAAKhR,UAAUlD,GAClC,GAAIoU,EAAQzV,MACR,OAAOyV,EACX,IAAIC,EAAWvf,KAAKqf,MAAMjR,UAAUlD,GACpC,GAAIqU,EAAS1V,MACT,OAAO0V,EACX,MAAMF,EAAQE,EAAS3T,IACjBwT,EAAOE,EAAQ1T,IACrB,IAAKwT,IAASC,EACV,OAAO,IAAIrU,EACf,QAAmBC,IAAfjL,KAAKgB,MAAqB,CAC1B,IAAIie,EAASjf,KAAKgB,MAAMoN,UAAUlD,GAClC,GAAI+T,EAAOpV,MACP,OAAOoV,EACX,MAAM1D,EAAa7Q,EAAK0U,EAAKpV,gBAAgB,CAAEkB,QAAAA,GAAWmU,IAC1D,IAAI7D,EACAC,EAAYwD,EAAOrT,IAEvB,GAD2B,QAA1BuB,EAAKnN,KAAKkb,kBAA+B,IAAP/N,IAAsBnN,KAAKkb,WAAa,MACtEO,EACD,OAAO,IAAIjT,GAAUxI,KAAK0Z,IAAK,aAAc,YAAa,YAAa,wBAE3E,OAAQ1Z,KAAKkb,WAAW,IACpB,IAAK,IACDM,EAASD,EAAW1S,aAAa,CAAEqC,QAAAA,GAAWuQ,GAC9C,MACJ,IAAK,IACDD,EAASD,EAAWzS,WAAW,CAAEoC,QAAAA,GAAWuQ,GAC5C,MACJ,IAAK,IACDD,EAASD,EAAW9S,QAAQ,CAAEyC,QAAAA,GAAWuQ,GACzC,MACJ,IAAK,IACDD,EAASD,EAAW3S,aAAa,CAAEsC,QAAAA,GAAWuQ,GAC9C,MACJ,IAAK,IACDD,EAASC,EACT,MACJ,QACI,OAAO,IAAI3R,GAAQ9J,KAAK0Z,IAAK,cAAe,6BAA6B1Z,KAAKkb,WAAW,MAEjG,GAAIM,aAAkB1R,GAClB,OAAO0R,EACX,IAAK4D,EAAK3V,gBACN,OAAO,IAAIjB,GAAUxI,KAAK0Z,IAAK,UAAW,YAAa0F,EAAKxX,WAChE,MAAMU,EAAM8W,EAAK3V,gBAAgB,CAAEyB,QAAAA,GAAWmU,EAAO7D,MAAAA,EAAuCA,EAAS,IAAIxQ,GACzG,GAAI1C,aAAewB,GACf,OAAOxB,EAEf,OAAO8W,EAAKpV,gBAAgB,CAAEkB,QAAAA,GAAWmU,GAE7C5E,UAAUjB,GACN,MAAMgG,EAAYxf,KAAKof,KAAK3E,UAAUjB,GACtC,GAAIgG,EAAU3V,MACV,OAAO2V,EACX,MAAMC,EAASzf,KAAKqf,MAAM5E,UAAUjB,GACpC,GAAIiG,EAAO5V,MACP,OAAO4V,EACX,IAAKzf,KAAKgB,MACN,OAAO,IAAIoY,GAAc,GAAGoG,EAAU5T,OAAO6T,EAAO7T,QAExD,MAAMqT,EAASjf,KAAKgB,MAAMyZ,UAAUjB,GACpC,OAAIyF,EAAOpV,MACAoV,EACJ,IAAI7F,GAAc,GAAGoG,EAAU5T,OAAO6T,EAAO7T,OAAO5L,KAAKkb,YAAc,MAAM+D,EAAOrT,OAE/F6N,UAAUD,GACN,MAAMlR,EAAM,IAAI8Q,GACVoG,EAAYlX,EAAIgR,SAAStZ,KAAKof,KAAM5F,GAC1C,GAAIlR,EAAIuB,MACJ,OAAOvB,EACX,MAAMmX,EAASnX,EAAIgR,SAAStZ,KAAKqf,MAAO7F,GACxC,GAAIlR,EAAIuB,MACJ,OAAOvB,EACX,IAAKtI,KAAKgB,MAEN,OADAsH,EAAIsD,IAAM,GAAG4T,KAAaC,KACnBnX,EAEX,MAAM2W,EAAS3W,EAAIgR,SAAStZ,KAAKgB,MAAOwY,GACxC,OAAIlR,EAAIuB,QAERvB,EAAIsD,IAAM,GAAG4T,KAAaC,MAAWzf,KAAKkb,YAAc,OAAO+D,KADpD3W,GAKZ,MAAMoX,WAAgBxR,GACzBhN,YAAYwY,EAAKiG,EAASC,EAAUC,EAAM3V,EAAO,gBAC7CH,MAAM2P,GACN1Z,KAAK6f,KAAOA,EACZ7f,KAAK2f,QAAUA,EACf3f,KAAKkK,KAAOA,EACZlK,KAAK4f,SAAWA,EAEpB/F,WAAW3O,GACP,IAAIiC,EAAIgB,EAAIuE,EACZ,MAAMiN,EAAU,GAChB,IAAK,IAAIpP,KAAUvQ,KAAK2f,QAAS,CAC7B,MAAMrX,EAAMiI,EAAOnC,UAAUlD,GAC7B,GAAI5C,EAAIuB,MACJ,OAAOvB,EAAIuB,MAEf,KAAMvB,EAAIsD,eAAeF,GACrB,OAAO,IAAIlD,GAAUxI,KAAK0Z,IAAK,YAAgC,QAAlBvM,EAAK7E,EAAIsD,WAAwB,IAAPuB,OAAgB,EAASA,EAAGrF,WAAWF,YAAc,YAAa,aAAe5H,KAAKkK,MAEjKyV,EAAQpR,KAAKjG,EAAIsD,KAErB,IAWIiU,EAXAD,EAAW1Y,EAAMsE,OACrB,GAAIxL,KAAK4f,SAAU,CACf,MAAME,EAAa9f,KAAK4f,SAASxR,UAAUlD,GAC3C,GAAI4U,EAAWjW,MACX,OAAOiW,EAAWjW,MAEtB,KAAMiW,EAAWlU,eAAeL,GAC5B,OAAO,IAAI/C,GAAUxI,KAAK0Z,IAAK,QAAmC,QAAzBvL,EAAK2R,EAAWlU,WAAwB,IAAPuC,OAAgB,EAASA,EAAGrG,WAAWF,YAAc,YAAa,aAAe5H,KAAKkK,MAEpK0V,EAAWE,EAAWlU,IAG1B,GAAI5L,KAAK6f,KAAM,CACX,MAAME,EAAU/f,KAAK6f,KAAKzR,UAAUlD,GACpC,GAAI6U,EAAQlW,MACR,OAAOkW,EAAQlW,MAEnB,KAAMkW,EAAQnU,eAAeF,GACzB,OAAO,IAAIlD,GAAUxI,KAAK0Z,IAAK,YAAoC,QAAtBhH,EAAKqN,EAAQnU,WAAwB,IAAP8G,OAAgB,EAASA,EAAG5K,WAAWF,YAAc,YAAa,aAAe5H,KAAKkK,MAErK2V,EAAOE,EAAQnU,IAEnB,OAAO,IAAIL,GAAO,EAAOvL,KAAKkK,KAAMyV,EAASC,EAAUC,GAE3DpF,UAAUjB,GACN,OAAO,IAAIJ,GAAc,yBAE7BK,UAAUD,GACN,OAAO,IAAIJ,GAAc,SAASpZ,KAAKkK,UAAU,IAAIiI,OAAOqH,EAAOtF,gBAGpE,MAAM8L,WAAoB9R,GAC7BhN,YAAYwY,EAAKuG,EAAY/V,EAAO,SAAU6E,GAAU,GACpDhF,MAAM2P,GACN1Z,KAAKkK,KAAOA,EACZlK,KAAKigB,WAAaA,EAClBjgB,KAAK+O,QAAUA,EAEnB8K,WAAW3O,GACP,MAAMoC,EAAa,IAAIE,GACvBF,EAAWC,OAASrC,EACpB,MAAM5C,EAAMtI,KAAKigB,WAAW7R,UAAUd,GACtC,OAAIhF,EAAIuB,MACGvB,EACJ,IAAIwG,EAAY,IAAI7E,EAASjK,KAAKkK,MAAOoD,EAAWoJ,uBAAwB1W,KAAK+O,SAE5F0L,UAAUjB,GACN,MAAMkD,EAAU1c,KAAKigB,WAAWxF,UAAUjB,GAC1C,OAAIkD,EAAQ7S,MACD6S,EACJ,IAAItD,GAAc,WAAWsD,EAAQ9Q,WAEhD6N,UAAUD,GACN,MAAMlR,EAAM,IAAI8Q,GAEhB,OADgB9Q,EAAIgR,SAAStZ,KAAKigB,WAAYzG,GAC1ClR,EAAIuB,QAERvB,EAAIsD,IAAM,eADCtD,GAKZ,MAAM4X,WAAmBhS,GAC5BhN,YAAYwY,EAAKkD,EAAMuD,GACnBpW,MAAM2P,GAAK,GACX1Z,KAAK4c,KAAOA,EACZ5c,KAAKmgB,WAAaA,EAEtBtG,WAAW3O,GACP,MAAM5C,EAAMtI,KAAK4c,KAAKxO,UAAUlD,GAChC,GAAI5C,EAAIuB,MAAO,CACX,MAAMyD,EAAa,IAAIE,GACvBF,EAAWC,OAASrC,EACpBoC,EAAWQ,O9BnpCkB,M8BmpCgB,IAAIlE,EAAiBtB,EAAIuB,OAAQ,CAC1EsF,YAAY,IAEhB,MAAMiR,EAAWpgB,KAAKmgB,WAAW/R,UAAUd,GAC3C,GAAI8S,EAASvW,MACT,OAAOuW,EAASvW,MAExB,OAAO,IAAIoP,GAEfwB,UAAUjB,GACN,MAAMkD,EAAU1c,KAAK4c,KAAKnC,UAAUjB,GACpC,GAAIkD,EAAQ7S,MACR,OAAO6S,EACX,MAAM0D,EAAWpgB,KAAKmgB,WAAW1F,UAAUjB,GAC3C,OAAI4G,EAASvW,MACFuW,EACJ,IAAIhH,GAAc,OAAOsD,EAAQ9Q,kBAA2CwU,EAASxU,QAEhG6N,UAAUD,GACN,MAAMlR,EAAM,IAAI8Q,GACVsD,EAAUpU,EAAIgR,SAAStZ,KAAK4c,KAAMpD,GACxC,GAAIlR,EAAIuB,MACJ,OAAOvB,EACX,MAAM8X,EAAW9X,EAAIgR,SAAStZ,KAAKmgB,WAAY3G,GAC/C,GAAIlR,EAAIuB,MACJ,OAAOvB,EACX,MAAM4L,EAAS,IAAI/B,OAAOqH,EAAOtF,QAC3B8H,EAAa,IAAI7J,OAAOqH,EAAOtF,OAAS,GAE9C,OADA5L,EAAIsD,IAAM,SAASoQ,IAAaU,MAAYxI,aAAkB8H,IAAaoE,IACpE9X,GAGR,MAAM+X,WAAiBnS,GAC1BhN,YAAYwY,EAAK3G,GACbhJ,MAAM2P,GAAK,GACX1Z,KAAK+S,EAAIA,EAEb8G,WAAW3O,GACP,IAAIU,EAAM5L,KAAK+S,EAAE/R,MACjB,MAAMsH,EAAM,IAAI2Q,GAEhB,OADA3Q,EAAIsD,IAAM,IAAIR,EAASQ,GAChBtD,EAEXmS,UAAUjB,GACN,OAAO,IAAIJ,GAAcpZ,KAAK+S,EAAE/R,MAAMsQ,YAE1CmI,UAAUD,GACN,OAAO,IAAIJ,GAAcpZ,KAAK+S,EAAE/R,MAAMsQ,aAGvC,MAAMgP,WAAiBpS,GAC1BhN,YAAYwY,EAAK3G,GACbhJ,MAAM2P,GAAK,GACX1Z,KAAK+S,EAAIA,EAEb8G,WAAW3O,GACP,IAAIU,EAAM5L,KAAK+S,EAAE/R,MACjB,MAAMsH,EAAM,IAAI2Q,GAEhB,OADA3Q,EAAIsD,IAAM,IAAI3B,EAAS2B,GAChBtD,EAEXmS,UAAUjB,GACN,OAAO,IAAIJ,GAAc,IAAIpZ,KAAK+S,EAAE/R,UAExCyY,UAAUD,GACN,OAAO,IAAIJ,GAAc,IAAIpZ,KAAK+S,EAAE/R,WAGrC,MAAMuf,WAAmBrS,GAC5BhN,YAAY6R,GACRhJ,MAAMgJ,EAAE2G,KAAK,GACb1Z,KAAK+S,EAAIA,EAEb8G,WAAW3O,GACP,IAAKA,EAAQsJ,IAAIxU,KAAK+S,EAAE/R,OACpB,OAAO,IAAI8W,GAAe9X,KAAK+S,EAAE2G,IAAK1Z,KAAK+S,EAAE/R,OAEjD,IAAIsH,EAAM,IAAI2Q,GACVhK,EAAS/D,EAAQqN,UAAUvY,KAAK+S,EAAE/R,OACtC,OAAKiO,EAGDA,aAAkBnF,GACXmF,GAEX3G,EAAIsD,IAAMqD,EAAOjO,MACVsH,GANI,IAAI0C,EAQnByP,UAAUjB,GACN,IAAI5N,EAAM5L,KAAK+S,EAAE/R,MAAMsQ,WAIvB,MAHY,WAAR1F,IACAA,EAAM,WAEH,IAAIwN,GAAcxN,GAE7B6N,UAAUD,GACN,IAAI5N,EAAM5L,KAAK+S,EAAE/R,MAAMsQ,WAIvB,MAHY,WAAR1F,IACAA,EAAM,WAEH,IAAIwN,GAAcxN,IAG1B,MAAM4U,WAAoBtS,GAC7BhN,YAAYwY,EAAMzY,EAAA,MACd8I,MAAM2P,GAAK,GAEfG,WAAW3O,GACP,MAAM5C,EAAM,IAAI2Q,GAEhB,OADA3Q,EAAIsD,IAAM,IAAIZ,EACP1C,EAEXmS,UAAUjB,GACN,OAAO,IAAIJ,GAAc,aAE7BK,UAAUD,GACN,OAAO,IAAIJ,GAAc,SAG1B,MAAMqH,WAAgBvS,GACzBhN,YAAYwY,GACR3P,MAAM2P,GAAK,GAEfG,WAAW3O,GACP,MAAM5C,EAAM,IAAI2Q,GAEhB,OADA3Q,EAAI4Q,aAAc,EACX5Q,EAEXmS,UAAUjB,GACN,OAAO,IAAIJ,GAAc,SAE7BK,UAAUD,GACN,OAAO,IAAIJ,GAAc,UAG1B,MAAMsH,WAAmBxS,GAC5BhN,YAAYwY,GACR3P,MAAM2P,GAAK,GAEfG,WAAW3O,GACP,MAAM5C,EAAM,IAAI2Q,GAEhB,OADA3Q,EAAI6Q,gBAAiB,EACd7Q,EAEXmS,UAAUjB,GACN,OAAO,IAAIJ,GAAc,YAE7BK,UAAUD,GACN,OAAO,IAAIJ,GAAc,aAG1B,MAAMiC,WAA2BnN,GACpChN,YAAY0K,EAAK8N,EAAMzY,EAAA,MACnB8I,MAAM2P,GAAK,GACX1Z,KAAKgB,MAAQ4K,EAEjBiO,WAAW3O,GACP,OAAOlL,KAAKgB,MAEhByZ,UAAUjB,GACN,OAAO,IAAIJ,GAAc9J,KAAKC,UAAUvP,KAAKgB,MAAM4G,YAEvD6R,UAAUD,GACN,OAAO,IAAIJ,GAAc9J,KAAKC,UAAUvP,KAAKgB,MAAM4G,aCv1CpD,SAASiR,GAAUpY,EAAKkgB,EAAO,IAAIC,SACtC,IAAIvc,EACJ,GAAIhE,OAAOI,KAASA,GAAOA,aAAeogB,SACtC,OAAOpgB,EAEX,GAAIkgB,EAAKnM,IAAI/T,GACT,OAAOkgB,EAAKngB,IAAIC,GAEpB,IACI4D,EAAS,IAAI5D,EAAIS,YAErB,MAAO0C,GACHS,EAAShE,OAAOygB,OAAOzgB,OAAO0gB,eAAetgB,IASjD,OAPIA,aAAeugB,IACf3U,MAAM4U,KAAKxgB,GAAK,EAAEN,EAAKyL,KAASvH,EAAOoQ,IAAIoE,GAAU1Y,EAAKwgB,GAAO9H,GAAUjN,EAAK+U,MAE3ElgB,aAAeygB,KACpB7U,MAAM4U,KAAKxgB,GAAMN,GAAQkE,EAAO8c,IAAItI,GAAU1Y,EAAKwgB,MAEvDA,EAAKlM,IAAIhU,EAAK4D,GACPhE,OAAO2C,OAAOqB,KAAWhE,OAAO0L,KAAKtL,GAAK6J,KAAInK,IAAO,CAAG,CAACA,GAAM0Y,GAAUpY,EAAIN,GAAMwgB,QAEvF,SAASjf,GAAIkK,EAAKwV,EAAQ,GAC7B,GAAmB,iBAARxV,EACP,OAAIwV,EAAQ,EACD,IAAIxV,KAERA,EAEX,GAAIwV,EAAQ,GACR,MAAO,MAEX,IAAI/c,EAAS,GACb,QAAmB,IAARuH,EACP,MAAO,YAEX,GAAIA,aAAezE,EACf,OAAOyE,EAAIlK,MAAMkG,UAErB,GAAIgE,aAAesC,GACf,MAAO,iBAAiBtC,EAAI1K,YAAYgJ,QAE5C,cAAe0B,GACX,IAAK,SACD,GAAIS,MAAMC,QAAQV,GAAM,CACpBvH,GAAU,IACV,IAAK,IAAIuZ,KAAQhS,EACb,IACIvH,GAAU3C,GAAIkc,EAAMwD,EAAQ,GAAK,KAErC,MAAOxd,GACHS,GAAU,qBAGduH,EAAIC,SACJxH,EAASA,EAAOgd,UAAU,EAAGhd,EAAOwH,OAAS,IAEjDxH,GAAU,QAET,CACD,IACIA,GAAUuH,EAAI1K,YAAYgJ,KAE9B,MAAOtG,GACHS,GAAU,sBAEdA,GAAU,QACV,IAAIsJ,EAAI,EACR,IAAK,IAAIiQ,KAAQhS,EACb+B,IACK/B,EAAIhL,gBAAmBgL,EAAIhL,eAAegd,KAG/CvZ,GAAU,KAAKuZ,MAASlc,GAAIkK,EAAIgS,GAAOwD,EAAQ,IAAM,UAErDzT,EAAI,IACJtJ,EAASA,EAAOgd,UAAU,EAAGhd,EAAOwH,OAAS,IAEjDxH,GAAU,QAEd,MACJ,IAAK,SACDA,EAAS,IAAIuH,KACb,MACJ,IAAK,SACL,IAAK,SACL,IAAK,UACDvH,EAAS,GAAGuH,IACZ,MACJ,IAAK,YACDvH,EAAS,oBACT,MACJ,IAAK,WACDA,EAAS,mBAAmBuH,EAAI1B,QAGxC,IAAK,IAAIyD,EAAI,EAAGA,EAAIyT,EAAOzT,IACvBtJ,EAAS6P,GAAO7P,GACpB,OAAOA,EAEJ,MAAMwQ,GAASyM,GAAO,IAAIxd,SAAQC,GAAWwd,YAAW,IAAMxd,KAAWud,KACzE,SAASpN,GAAOxS,GACnB,OAAOA,EAAI8f,QAAQ,MAAO,UAEvB,SAASzC,GAAqBtG,EAAS5M,EAAS,IACnD,MAAM4V,EAAa,wDACbC,EAAM,KACR,IAAIrd,EAAS,GACb,IAAK,IAAIsJ,EAAI,EAAGA,EAAI9B,EAAQ8B,IACxBtJ,GAAUod,EAAWE,OAAOjU,KAAKkU,MAAMlU,KAAKmU,SAAWJ,EAAW5V,SAEtE,OAAOxH,GAEX,IAAI4K,EAASyS,IACb,MAAoC,IAA7BjJ,EAAQlM,QAAQ0C,IACnBA,EAASyS,IAEb,OAAOzS,ECpHJ,MAAMnF,GACT5I,YAAYwY,EAAKxP,EAAMC,GACnBnK,KAAKqK,UAAY,GACjBrK,KAAK0Z,IAAMA,EACX1Z,KAAKkK,KAAOA,EACZlK,KAAKmK,QAAUA,EAEf2X,kBACA,IAAI7N,EAAM,GACV,GAAIjU,KAAKqK,UAAUwB,OAAQ,CACvBoI,EAAM,SAAa,8CACnB,IAAK,IAAIyF,IAAO,IAAI1Z,KAAKqK,WAAW0X,UAChC9N,GAAO,OAAO,OAAWyF,EAAIlP,SAAS9I,kBAAkBgY,EAAIjP,SAGpE,OADAwJ,GAAO,GAAG,MAAUjU,KAAKkK,UAAUlK,KAAKmK,iBAAiB,OAAWnK,KAAK0Z,IAAIhY,OACtEuS,EAEPvS,UACA,MAAO,GAAG1B,KAAKkK,SAASlK,KAAKmK,iBAAiBnK,KAAK0Z,IAAIhY,OAGxD,MAAMsgB,WAAyBlY,GAClC5I,YAAYwY,EAAKrE,GACbtL,MAAM2P,EAAK,mBAAoB,IAAIrE,OAGpC,MAAMmF,WAA2B1Q,GACpC5I,YAAYwY,EAAKvP,GACbJ,MAAM2P,EAAK,qBAAsBvP,IAGlC,MAAM8X,WAA0BnY,GACnC5I,YAAYwY,EAAKrE,GACbtL,MAAM2P,EAAK,oBAAqB,IAAIrE,OAGrC,MAAM7M,WAAkBsB,GAC3B5I,YAAYwY,EAAKwI,EAAcC,EAAYnhB,EAAQ,GAAIqH,EAAS,IAC5D0B,MAAM2P,EAAK,YAAa,kBAAkBwI,iBAA4BC,WAAgC,IAAVnhB,EAAwB,GAAK,cAAcU,GAAIV,SAAcqH,GAAS,OAGnK,MAAMoO,WAAoB3M,GAC7B5I,YAAYwY,EAAKtD,EAAK/N,EAAS,IAC3B0B,MAAM2P,EAAK,cAAe,oBAAoBtD,MAAQ/N,MAGvD,MAAMyP,WAAuBhO,GAChC5I,YAAYwY,EAAK0I,GACbrY,MAAM2P,EAAK,iBAAkB,GAAG0I,qBAGjC,MAAMzX,WAAmBb,GAC5B5I,YAAYwY,EAAK0I,EAAK5W,GAClB,IAAI2B,EACJpD,MAAM2P,EAAK,aAAc,IAAI0I,6BAAsG,QAAtEjV,EAAK3B,MAAAA,OAAuC,EAASA,EAAOtD,YAAyB,IAAPiF,OAAgB,EAASA,EAAGjD,OAASxI,GAAI8J,QAGrL,MAAM7C,WAA8BmB,GACvC5I,YAAY0Z,EAAI5Z,EAAOqH,EAAS,GAAIqR,EAAMzY,EAAA,MACtC,IAAIkM,EACJpD,MAAM2P,EAAK,YAAa,mBAAmBkB,gBAAqF,QAAnEzN,EAAKnM,MAAAA,OAAqC,EAASA,EAAMkH,YAAyB,IAAPiF,OAAgB,EAASA,EAAGjD,OAASxI,GAAIV,OAAWqH,MAG7L,MAAMqP,WAA4B5N,GACrC5I,cACI6I,MAAM9I,EAAA,KAAe,sBAAuB,wBAAuBkB,EAAmB,UAAY,UAGnG,MAAMkgB,WAAmBvY,GAC5B5I,YAAYmH,GACR0B,MAAM9I,EAAA,KAAe,aAAcoH,IAGpC,MAAMoP,WAAgC3N,GACzC5I,YAAYmH,GACR0B,MAAM9I,EAAA,KAAe,0BAA2BoH,IC/EjD,MAAMia,GACTphB,YAAYwY,EAAKtS,EAAMpG,GACnBhB,KAAKoH,KAAOA,EACZpH,KAAKgB,MAAQA,EACbhB,KAAK0Z,IAAMA,EAEf6I,QAAQnb,EAAMwE,GACV,OAAO5L,KAAKoH,OAASA,GAAQpH,KAAKgB,QAAU4K,GCH7C,MAAM4W,GACTthB,YAAYuhB,EAASC,GACjB1iB,KAAKsW,KAAOmM,EACZziB,KAAKwK,SAAW,IAAIvJ,GAAU,EAAG,GAAI,EAAGyhB,GACxC1iB,KAAKuB,UAETA,UACIvB,KAAKwK,SAASjJ,QAAQvB,KAAKwB,aAC3BxB,KAAKwB,YAAcxB,KAAKsW,KAAKtW,KAAKwK,SAASrJ,KAE/CwhB,WACI,IAAK3iB,KAAKsW,KACN,MAAO,CAAC,IAAIgM,GAAMtiB,KAAKwK,SAAU9F,EAAGgC,SAAKuE,IAE7C,MAAM2X,EAAS,GACf,UAA4B3X,IAArBjL,KAAKwB,aACR,GAAI,QAAQqhB,SAAS7iB,KAAKwB,aACtBxB,KAAKuB,eAEJ,GAAIM,EAAOghB,SAAS7iB,KAAKwB,aAC1BohB,EAAOrU,KAAKvO,KAAK8iB,mBAEhB,GAAI9iB,KAAKwB,clCdO,KkCc2B,IAC5CxB,KAAKsW,KAAKtW,KAAKwK,SAASrJ,IAAM,KlCfb,KkCesC,GACvDnB,KAAK+iB,yBAEJ,GAAI/iB,KAAKwB,clCjBW,KkCiB2B,IAChDxB,KAAKsW,KAAKtW,KAAKwK,SAASrJ,IAAM,KlClBT,KkCkBsC,GAC3DnB,KAAKgjB,wBAEJ,GAAIlhB,EAAgB+gB,SAAS7iB,KAAKwB,aACnCohB,EAAOrU,KAAKvO,KAAKijB,uBAEhB,IAAmD,IAA/C/gB,EAAgBqK,QAAQvM,KAAKwB,aAClCohB,EAAOrU,KAAKvO,KAAKkjB,kBAEhB,CACD,MAAMC,EAA0BnjB,KAAKwB,YACrC,IAAI4hB,EAAQpjB,KAAKqjB,cACjB,IAAID,EAMC,CACD,IAAI1J,EAAM1Z,KAAKwK,SAAS/I,MACpB4T,EAAOrV,KAAKwB,YAEhB,OADAxB,KAAKuB,UACE,IAAIygB,GAAiBtI,EAAKrE,GAT7B+N,EAAMhc,OAAS1C,EAAGc,SAClB4d,EAAMpiB,MAAQmiB,GAElBP,EAAOrU,KAAK6U,GAWxB,OADAR,EAAOrU,KAAK,IAAI+T,GAAMtiB,KAAKwK,SAAU9F,EAAGgC,SAAKuE,IACtC2X,EAEXE,aACI,MAAMpJ,EAAM1Z,KAAKwK,SAAS/I,MAC1B,IAAI6hB,EAAS,GACTC,EAAW,EACf,UAA4BtY,IAArBjL,KAAKwB,cAA8BK,EAAS,MAAMghB,SAAS7iB,KAAKwB,cAAc,CACjF,GAAyB,MAArBxB,KAAKwB,YAAqB,CAC1B,GAAiB,IAAb+hB,EACA,MAEJA,IACAD,GAAU,QAEgB,MAArBtjB,KAAKwB,cACV8hB,GAAUtjB,KAAKwB,aAEnBxB,KAAKuB,UAET,OAAO,IAAI+gB,GAAM5I,EAAKhV,EAAGE,OAAQoN,WAAWsR,IAEhDJ,aACI,MAAMxJ,EAAM1Z,KAAKwK,SAAS/I,MAC1B,IAAIC,EAAM,GACN8hB,EAAWxjB,KAAKwB,YAEpB,IADAxB,KAAKuB,UACEvB,KAAKwB,cAAgBgiB,QAAiCvY,IAArBjL,KAAKwB,aAChB,OAArBxB,KAAKwB,cACLxB,KAAKuB,UACoB,MAArBvB,KAAKwB,cAMbE,GAAO1B,KAAKwB,YACZxB,KAAKuB,YANGG,GAAO,KACP1B,KAAKuB,WAQjB,OADAvB,KAAKuB,UACE,IAAI+gB,GAAM5I,EAAKhV,EAAGG,OAAQnD,GAErCuhB,iBACI,IAAIQ,EAAQ,GACZ,MAAMC,EAAW1jB,KAAKwK,SAAS/I,MAC/B,UAA4BwJ,IAArBjL,KAAKwB,cAA8BM,EAAkBD,GAAQghB,SAAS7iB,KAAKwB,cAC9EiiB,GAASzjB,KAAKwB,YACdxB,KAAKuB,UAET,IAAIoiB,EAAUjf,EAAGK,WAIjB,OAHiC,IAA7B3B,EAASmJ,QAAQkX,KACjBE,EAAUjf,EAAGM,SAEV,IAAIsd,GAAMoB,EAAUC,EAASF,GAExCJ,cACI,QAAyBpY,IAArBjL,KAAKwB,YAAT,CAGA,IAAK,IAAIoiB,KAAU5c,EACf,GAAI4c,EAAO,KAAO5jB,KAAKwB,aACfoiB,EAAO,KAAO5jB,KAAKsW,KAAKtW,KAAKwK,SAASrJ,IAAM,IACxCyiB,EAAO,KAAO5jB,KAAKsW,KAAKtW,KAAKwK,SAASrJ,IAAM,GAAI,CAChD,MAAMuY,EAAM1Z,KAAKwK,SAAS/I,MAI1B,OAHAzB,KAAKuB,UACLvB,KAAKuB,UACLvB,KAAKuB,UACE,IAAI+gB,GAAM5I,EAAK1S,EAAiB4c,QAAS3Y,GAGhE,IAAK,IAAI4Y,KAAU9c,EACf,GAAI8c,EAAO,KAAO7jB,KAAKwB,aACfqiB,EAAO,KAAO7jB,KAAKsW,KAAKtW,KAAKwK,SAASrJ,IAAM,GAAI,CAChD,MAAMuY,EAAM1Z,KAAKwK,SAAS/I,MAG1B,OAFAzB,KAAKuB,UACLvB,KAAKuB,UACE,IAAI+gB,GAAM5I,EAAK3S,EAAiB8c,QAAS5Y,GAG5D,GAAInE,EAAiBlG,eAAeZ,KAAKwB,aAAc,CACnD,IAAIkY,EAAM1Z,KAAKwK,SAAS/I,MACpBmK,EAAM9E,EAAiB9G,KAAKwB,aAEhC,OADAxB,KAAKuB,UACE,IAAI+gB,GAAM5I,EAAK9N,OAAKX,KAInC8X,oBAEI,IADA/iB,KAAKuB,UACuB,OAArBvB,KAAKwB,kBAA6CyJ,IAArBjL,KAAKwB,aACrCxB,KAAKuB,UAETvB,KAAKuB,UAETyhB,mBAEI,IADAhjB,KAAKuB,UACIvB,KAAKwB,clC3Ia,KkC2IuB,IAC9CxB,KAAKsW,KAAKtW,KAAKwK,SAASrJ,IAAM,KlC5IP,KkC4IkC,IACzDnB,KAAKuB,UAETvB,KAAKuB,UACLvB,KAAKuB,WCzJN,MAAMuiB,GACT5iB,cACIlB,KAAK+jB,aAAe,EACpB/jB,KAAKgkB,2BAA6B,EAClChkB,KAAKikB,aAAe,EAExBC,kBACIlkB,KAAK+jB,aAAe,EACpB/jB,KAAKgkB,6BAET1K,SAAShR,GAML,OALAtI,KAAKgkB,2BAA6B1b,EAAIyb,aACtC/jB,KAAK+jB,cAAgBzb,EAAIyb,aACrBzb,EAAIuB,QACJ7J,KAAK6J,MAAQvB,EAAIuB,OAEhBvB,EAAIiR,KAGFjR,EAAIiR,KAFA,IAAIiH,GAInB2D,YAAY7b,GACR,IAAIA,EAAIuB,MAIR,OAAO7J,KAAKsZ,SAAShR,GAHjBtI,KAAKikB,cAAgB3b,EAAIyb,aAKjCK,QAAQ7K,GAEJ,OADAvZ,KAAKuZ,KAAOA,EACLvZ,KAEXqkB,QAAQxa,GAEJ,OADA7J,KAAK6J,MAAQA,EACN7J,MAGR,MAAMskB,GACTpjB,YAAY0hB,GACR5iB,KAAK4iB,OAASA,EACd5iB,KAAKukB,UAAY,EACjBvkB,KAAKwkB,aAAe5B,EAAO,GAC3B5iB,KAAKuB,UAETuT,QACI,IAAI3H,EACJ,IAAKnN,KAAKwkB,eAAiBxkB,KAAK4iB,QAAkC,IAAvB5iB,KAAK4iB,OAAO/W,QAAgB7L,KAAK4iB,OAAO,GAAGxb,OAAS1C,EAAGgC,IAC9F,OAAO,IAAIod,GAEf,MAAMxb,EAAMtI,KAAKigB,YAAW,GAC5B,OAAK3X,EAAIuB,OAAS7J,KAAKwkB,aAAapd,OAAS3C,EAAUiC,IAGhD4B,EAFIA,EAAI+b,QAAQ,IAAI7J,GAAgD,QAA5BrN,EAAKnN,KAAKwkB,oBAAiC,IAAPrX,OAAgB,EAASA,EAAGuM,IAAK,8CAA8C/U,EAAgB3E,KAAKwkB,aAAapd,WAIxM7F,QAAQ+G,GAKJ,OAJIA,GACAA,EAAI4b,kBACRlkB,KAAKukB,WACLvkB,KAAKwkB,aAAexkB,KAAK4iB,OAAO5iB,KAAKukB,UAC9BvkB,KAAKwkB,aAEhBzC,QAAQ0C,EAAS,GAGb,OAFAzkB,KAAKukB,UAAYE,EACjBzkB,KAAKwkB,aAAexkB,KAAK4iB,OAAO5iB,KAAKukB,UAC9BvkB,KAAKwkB,aAEhBE,QAAQpc,EAAKlB,EAAMud,GACf,GAAI3kB,KAAKwkB,aAAapd,OAASA,EAC3B,OAAOkB,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAKiL,MAAAA,EAA2CA,EAAW,aAAahgB,EAAgByC,gBAAmBzC,EAAgB3E,KAAKwkB,aAAapd,WAC7MpH,KAAKuB,QAAQ+G,GAEjBsc,mBAAmBtc,GACf,KAAOtI,KAAKwkB,aAAapd,OAAS1C,EAAGI,cACjC9E,KAAKuB,QAAQ+G,GAGrB2X,WAAW/B,GAAW,GAClB,MAAM5V,EAAM,IAAIwb,GACVpK,EAAM1Z,KAAKwkB,aAAa9K,IAC9B,IAAIuG,EAAa,GACjBjgB,KAAK4kB,mBAAmBtc,GACxB,MAAMuc,EAAiBvc,EAAIgR,SAAStZ,KAAK8kB,aACzC,IAAKD,EACD,OAAOvc,EAGX,GADA2X,EAAW1R,KAAKsW,GACZvc,EAAIuB,MACJ,OAAOvB,EAEX,IAAIyc,GAAiB,EACrB,OAAa,CACT,IAAIC,EAAe,EACnB,KAAOhlB,KAAKwkB,aAAapd,OAAS1C,EAAGI,cACjC9E,KAAKuB,QAAQ+G,GACb0c,IAKJ,GAHqB,IAAjBA,IACAD,GAAiB,IAEhBA,EACD,MAEJ,MAAMD,EAAYxc,EAAI6b,YAAYnkB,KAAK8kB,aAClCA,EAIL7E,EAAW1R,KAAKuW,GAHZ9kB,KAAK+hB,QAAQzZ,EAAI2b,cAKzBjkB,KAAK4kB,mBAAmBtc,GACxB,IAAIiR,EAAO,IAAI,GAAeG,EAAKuG,EAAY/B,GAC/C,OAAO5V,EAAI8b,QAAQ7K,GAEvBuL,YACI,MAAMxc,EAAM,IAAIwb,GACVpK,EAAM1Z,KAAKwkB,aAAa9K,IAC9B,GAAI1Z,KAAKwkB,aAAajC,QAAQ7d,EAAGM,QAAS,UACtC,OAAOhF,KAAKilB,gBAAgB3c,GAE3B,GAAItI,KAAKwkB,aAAajC,QAAQ7d,EAAGM,QAAS,SAC3C,OAAOhF,KAAKilB,gBAAgB3c,GAAK,GAEhC,GAAItI,KAAKwkB,aAAajC,QAAQ7d,EAAGM,QAAS,SAE3C,OADAhF,KAAKuB,QAAQ+G,GACNA,EAAI8b,QAAQ,IAAI,GAAU1K,IAEhC,GAAI1Z,KAAKwkB,aAAajC,QAAQ7d,EAAGM,QAAS,YAE3C,OADAhF,KAAKuB,QAAQ+G,GACNA,EAAI8b,QAAQ,IAAI,GAAa1K,IAEnC,GAAI1Z,KAAKwkB,aAAajC,QAAQ7d,EAAGM,QAAS,OAC3C,OAAOhF,KAAKklB,WAEhB,MAAMC,EAAO7c,EAAIgR,SAAStZ,KAAKmlB,QAC/B,OAAI7c,EAAIuB,MACGvB,EAEJA,EAAI8b,QAAQe,GAEvBF,gBAAgB3c,EAAK8c,GAAU,GAC3B,MAAM1L,EAAM1Z,KAAKwkB,aAAa9K,IAC9B1Z,KAAKuB,QAAQ+G,GACb,IAAI6c,EAAO,IAAI3E,GAAYxgB,KAAKwkB,aAAa9K,KAC7C,GAAI1Z,KAAKwkB,aAAapd,OAAS1C,EAAGI,aAAc,CAC5C,IAAIugB,EAAU/c,EAAIgR,SAAStZ,KAAKmlB,QAChC,IAAKE,EACD,OAAO/c,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,8BAErEyL,EAAOE,EAEX,OAAID,EACO9c,EAAI8b,QAAQ,IAAI,GAAU1K,EAAKyL,IAEnC7c,EAAI8b,QAAQ,IAAI,GAAW1K,EAAKyL,IAE3CG,OACI,MAAMhd,EAAM,IAAIwb,GACVyB,EAAMvlB,KAAKwkB,aACX9K,EAAM1Z,KAAKwkB,aAAa9K,IAC9B,OAAQ6L,EAAIne,MACR,KAAK1C,EAAGE,OAEJ,OADA5E,KAAKuB,QAAQ+G,GACNA,EAAI8b,QAAQ,IAAI,GAAW1K,EAAK6L,IAC3C,KAAK7gB,EAAGG,OAEJ,OADA7E,KAAKuB,QAAQ+G,GACNA,EAAI8b,QAAQ,IAAI,GAAW1K,EAAK6L,IAC3C,KAAK7gB,EAAGK,WACJ,OAAO/E,KAAKwlB,eAAeld,EAAKoR,EAAK6L,GACzC,KAAK7gB,EAAGU,OACJpF,KAAKuB,QAAQ+G,GACb,MAAM6c,EAAO7c,EAAIgR,SAAStZ,KAAKmlB,QAC/B,OAAI7c,EAAIuB,MACGvB,EACPtI,KAAKwkB,aAAapd,OAAS1C,EAAGW,QAC9BrF,KAAKuB,QAAQ+G,GACNA,EAAI8b,QAAQe,IAEhB7c,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,iBACrE,KAAKhV,EAAGY,QACJ,IAAImgB,EAAYnd,EAAIgR,SAAStZ,KAAKsL,SAClC,OAAIhD,EAAIuB,MACGvB,EACJA,EAAI8b,QAAQqB,GACvB,KAAK/gB,EAAGQ,QACJ,IAAIwgB,EAAapd,EAAIgR,SAAStZ,KAAKwL,UACnC,OAAIlD,EAAIuB,MACGvB,EACJA,EAAI8b,QAAQsB,GACvB,KAAKhhB,EAAGM,QACJ,GAAkB,OAAdugB,EAAIvkB,MAAgB,CACpB,MAAMmkB,EAAO7c,EAAIgR,SAAStZ,KAAK2lB,UAC/B,OAAIrd,EAAIuB,MACGvB,EACJA,EAAI8b,QAAQe,GAEvB,OAAO7c,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,sBAAsB6L,EAAIvkB,UAC/F,QACI,OAAOsH,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,kDAG7E8L,eAAeld,EAAKoR,EAAK6L,GACrBvlB,KAAKuB,QAAQ+G,GACb,IAAIiR,EAAO,IAAI,GAAagM,GACxBK,EAAW,IAAI,GAAclM,GAC7BmM,GAAe,EACnB,MAA4E,IAArE,CAACnhB,EAAGU,OAAQV,EAAGY,QAASZ,EAAG+B,KAAK8F,QAAQvM,KAAKwkB,aAAapd,OAC7D,OAAQpH,KAAKwkB,aAAapd,MACtB,KAAK1C,EAAGU,OACJygB,GAAe,EACf,MAAMC,EAAWvM,EAGjB,GAFAA,EAAOjR,EAAIgR,SAAStZ,KAAK+lB,iBAAiBxM,IAC1CqM,EAAWE,EACPxd,EAAIuB,MACJ,OAAOvB,EACX,MACJ,KAAK5D,EAAGY,QAGJ,GAFAsgB,EAAWrM,EACXA,EAAOjR,EAAIgR,SAAStZ,KAAKgmB,UAAUzM,IAC/BjR,EAAIuB,MACJ,OAAOvB,EACX,MACJ,KAAK5D,EAAG+B,IAEJ,GADAzG,KAAKuB,QAAQ+G,GACTtI,KAAKwkB,aAAapd,OAAS1C,EAAGK,WAC9B,OAAOuD,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,kCAErEkM,EAAWrM,EACXA,EAAO,IAAI,GAAYvZ,KAAKwkB,aAAa9K,IAAKH,EAAM,IAAI,GAAWvZ,KAAKwkB,aAAa9K,IAAK1Z,KAAKwkB,eAC/FxkB,KAAKuB,QAAQ+G,GAGzB,GAAItI,KAAKwkB,aAAapd,OAAS1C,EAAGc,OAAQ,CACtC,IAAI0V,EAAalb,KAAKwkB,aAAaxjB,MACnC,GAAI6kB,EACA,OAAOvd,EAAI+b,QAAQ,IAAI7J,GAAmBd,EAAK,8CAEnD1Z,KAAKuB,QAAQ+G,GACb,MAAMtH,EAAQsH,EAAIgR,SAAStZ,KAAKmlB,QAChC,GAAI5L,aAAgB,GAChBA,EAAO,IAAI,GAAcG,EAAKH,EAAKxG,EAAG/R,EAAOka,GAAY,OAExD,MAAI3B,aAAgB,IAKrB,OAAOjR,EAAI+b,QAAQ,IAAI7J,GAAmBd,EAAK,4BAA4B1Z,KAAKwkB,aAAatjB,YAAYgJ,+EAJzGqP,EAAKvY,MAAQA,EACbuY,EAAK2B,WAAaA,EAMtB,GAAI5S,EAAIuB,MACJ,OAAOvB,EAEf,OAAOA,EAAI8b,QAAQ7K,GAEvB0M,QACI,OAAOjmB,KAAKkmB,OAAM,IAAMlmB,KAAKslB,QAAQ,CAAC5gB,EAAGmB,IAAKnB,EAAGoB,IAAKpB,EAAGiC,UAAWjC,EAAGkC,OAAO,IAAM5G,KAAKmmB,WAE7FA,SACI,MAAM7d,EAAM,IAAIwb,GACVyB,EAAMvlB,KAAKwkB,aACjB,GAAIe,EAAIne,MAAQ1C,EAAGe,KAAO8f,EAAIne,OAAS1C,EAAGgB,IAAK,CAC3C1F,KAAKuB,QAAQ+G,GACb,MAAM6d,EAAS7d,EAAIgR,SAAStZ,KAAKmmB,UACjC,OAAI7d,EAAIuB,MACGvB,EACJA,EAAI8b,QAAQ,IAAI,GAAYmB,EAAI7L,IAAKyM,EAAQZ,IAExD,OAAOvlB,KAAKimB,QAEhBG,OACI,OAAOpmB,KAAKkmB,OAAM,IAAMlmB,KAAKmmB,UAAU,CAACzhB,EAAGiB,IAAKjB,EAAGkB,MAEvDygB,iBACI,OAAOrmB,KAAKkmB,OAAM,IAAMlmB,KAAKomB,QAAQ,CAAC1hB,EAAGe,IAAKf,EAAGgB,MAErD4gB,iBACI,MAAMhe,EAAM,IAAIwb,GAChB,GAAI9jB,KAAKwkB,aAAapd,OAAS1C,EAAGuB,IAAK,CACnC,MAAMiU,EAAQla,KAAKwkB,aACnBxkB,KAAKuB,QAAQ+G,GACb,IAAIiR,EAAOjR,EAAIgR,SAAStZ,KAAKmlB,QAC7B,OAAI7c,EAAIuB,MACGvB,EACJA,EAAI8b,QAAQ,IAAI,GAAYlK,EAAMR,IAAKH,EAAMW,IAExD,GAAIla,KAAKwkB,aAAapd,OAAS1C,EAAGmC,YAAa,CAC3C,MAAMqT,EAAQla,KAAKwkB,aACnBxkB,KAAKuB,QAAQ+G,GACb,IAAIiR,EAAOjR,EAAIgR,SAAStZ,KAAKmlB,QAC7B,OAAI7c,EAAIuB,MACGvB,EACJA,EAAI8b,QAAQ,IAAI,GAAYlK,EAAMR,IAAKH,EAAMW,IAExD,IAAIX,EAAOjR,EAAIgR,SAAStZ,KAAKkmB,OAAM,IAAMlmB,KAAKqmB,kBAAkB,CAAC3hB,EAAGqB,OAAQrB,EAAGsB,UAAWtB,EAAGwB,GAAIxB,EAAG0B,IAAK1B,EAAG2B,IAAK3B,EAAGyB,MACpH,OAAImC,EAAIuB,MACGvB,EACJA,EAAI8b,QAAQ7K,GAEvB4L,OACI,MAAM7c,EAAM,IAAIwb,GAEhB,GADA9jB,KAAK4kB,mBAAmBtc,GACpBtI,KAAKwkB,aAAapd,OAAS1C,EAAGM,UAAsE,IAA3D1C,EAAqBiK,QAAQvM,KAAKwkB,aAAaxjB,OACxF,OAAOhB,KAAKumB,YAAYje,GAEvB,GAAItI,KAAKwkB,aAAajC,QAAQ9d,EAAUO,QAAS,MAClD,OAAOhF,KAAK2lB,SAEX,GAAI3lB,KAAKwkB,aAAajC,QAAQ9d,EAAUO,QAAS,SAClD,OAAOhF,KAAKwmB,YAEX,GAAIxmB,KAAKwkB,aAAajC,QAAQ9d,EAAUO,QAAS,OAClD,OAAOhF,KAAKymB,UAEX,GAAIzmB,KAAKwkB,aAAajC,QAAQ9d,EAAUO,QAAS,QAClD,OAAOhF,KAAK0mB,WAEX,GAAI1mB,KAAKwkB,aAAajC,QAAQ9d,EAAUO,QAAS,SAClD,OAAOhF,KAAK2mB,YAEX,GAAI3mB,KAAKwkB,aAAajC,QAAQ9d,EAAUO,QAAS,aAClD,OAAOhF,KAAK4mB,YAEhB,IAAIrN,EAAOjR,EAAIgR,SAAStZ,KAAKkmB,OAAM,IAAMlmB,KAAKsmB,kBAAkB,CAAC5hB,EAAG4B,IAAK5B,EAAG6B,MAC5E,OAAI+B,EAAIuB,MACGvB,EACJA,EAAI8b,QAAQ7K,GAEvB2M,MAAMvZ,EAAMka,EAAKC,EAAQna,GACrB,MAAMrE,EAAM,IAAIwb,GAChB,IAAIhT,EAAOxI,EAAIgR,SAAS3M,KACxB,GAAIrE,EAAIuB,MACJ,OAAOvB,EACX,MAAgD,IAAzCue,EAAIta,QAAQvM,KAAKwkB,aAAapd,QACsC,IAApEyf,EAAIta,QAAQ,CAACvM,KAAKwkB,aAAapd,KAAMpH,KAAKwkB,aAAaxjB,SAAgB,CAC1E,MAAMkZ,EAAQla,KAAKwkB,aACnBxkB,KAAKuB,QAAQ+G,GACb,MAAMyI,EAAQzI,EAAIgR,SAASwN,KAC3B,GAAIxe,EAAIuB,MACJ,OAAOvB,EACXwI,EAAO,IAAI,GAAUA,EAAK4I,IAAK5I,EAAMoJ,EAAOnJ,GAEhD,OAAOzI,EAAI8b,QAAQtT,GAEvBiV,iBAAiB1H,GACb,MAAM/V,EAAM,IAAIwb,GAChB,IAAIpV,EAAO,GACX,MAAMgL,EAAM1Z,KAAKwkB,aAAa9K,IAC9B,GAAI1Z,KAAKwkB,aAAapd,OAAS1C,EAAGU,OAC9B,OAAOkD,EAAI+b,QAAQ,IAAI7J,GAAmBd,EAAK,iBAGnD,GADA1Z,KAAKuB,QAAQ+G,GACTtI,KAAKwkB,aAAapd,OAAS1C,EAAGW,OAE9B,OADArF,KAAKuB,QAAQ+G,GACNA,EAAI8b,QAAQ,IAAI,GAAiB1K,EAAK2E,EAAI,KAGrD,GADA3P,EAAKH,KAAKjG,EAAIgR,SAAStZ,KAAKmlB,SACxB7c,EAAIuB,MACJ,OAAOvB,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,qBACrE,KAAO1Z,KAAKwkB,aAAapd,OAAS1C,EAAGO,OAGjC,GAFAjF,KAAKuB,QAAQ+G,GACboG,EAAKH,KAAKjG,EAAIgR,SAAStZ,KAAKmlB,SACxB7c,EAAIuB,MACJ,OAAOvB,EAEf,OAAItI,KAAKwkB,aAAapd,OAAS1C,EAAGW,OACvBiD,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,yBACrE1Z,KAAKuB,QAAQ+G,GACNA,EAAI8b,QAAQ,IAAI,GAAiB1K,EAAK2E,EAAI3P,KAErDsX,UAAU3H,GACN,MAAM/V,EAAM,IAAIwb,GACVpK,EAAM1Z,KAAKwkB,aAAa9K,IACxB0F,EAAOf,EACb,GAAIre,KAAKwkB,aAAapd,OAAS1C,EAAGY,QAC9B,OAAOgD,EAAI+b,QAAQ,IAAI7J,GAAmBd,EAAK,gBAEnD,GADA1Z,KAAKuB,QAAQ+G,GACTtI,KAAKwkB,aAAapd,OAAS1C,EAAGa,QAC9B,OAAO+C,EAAI+b,QAAQ,IAAI7J,GAAmBd,EAAK,oCAEnD,IAAI2F,EAAQ/W,EAAIgR,SAAStZ,KAAKmlB,QAC9B,OAAI7c,EAAIuB,MACGvB,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,kBACjE1Z,KAAKwkB,aAAapd,OAAS1C,EAAGa,QACvB+C,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,kBACrE1Z,KAAKuB,QAAQ+G,GACNA,EAAI8b,QAAQ,IAAI,GAAY1K,EAAK0F,EAAMC,KAElD0H,SAASze,GACL,GAAItI,KAAKwkB,aAAapd,OAAS1C,EAAGK,WAAY,CAC1C,MAAMwgB,EAAMvlB,KAAKwkB,aAEjB,OADAxkB,KAAKuB,QAAQ+G,GACNA,EAAI8b,QAAQ,IAAI7D,GAAWgF,IAEtC,OAAOvlB,KAAKmlB,OAEhBoB,YAAYje,GACR,IAAIoR,EAAM1Z,KAAKwkB,aAAa9K,IACxBsN,GAAU,EACV7L,GAAW,EACXC,GAAgB,EACpB,GAAIpb,KAAKwkB,aAAapd,OAAS1C,EAAGM,SACF,WAA5BhF,KAAKwkB,aAAaxjB,QAClBoa,GAAgB,EAChBD,GAAW,EACXnb,KAAKuB,QAAQ+G,GACTA,EAAIuB,OACJ,OAAOvB,EAEf,GAAItI,KAAKwkB,aAAapd,OAAS1C,EAAGM,SACF,QAA5BhF,KAAKwkB,aAAaxjB,OAGlB,GAFAoa,GAAgB,EAChBpb,KAAKuB,QAAQ+G,GACTA,EAAIuB,MACJ,OAAOvB,OAEV,GAAItI,KAAKwkB,aAAapd,OAAS1C,EAAGM,SACP,QAA5BhF,KAAKwkB,aAAaxjB,QAClBoa,GAAgB,EAChB4L,GAAU,EACVhnB,KAAKuB,QAAQ+G,GACTA,EAAIuB,OACJ,OAAOvB,EAEf,GAAItI,KAAKwkB,aAAapd,OAAS1C,EAAGM,QAC9B,OAAOsD,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,8CAA8C1Z,KAAKwkB,aAAaxjB,UAErI,GAAIhB,KAAKwkB,aAAapd,OAAS3C,EAAUM,WACrC,OAAOuD,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,mCAErE,MAAMuN,EAAUjnB,KAAKwkB,aACrBxkB,KAAKuB,QAAQ+G,GACb,IAAIlB,EAAOF,EAAMG,IAMjB,GALIrH,KAAKwkB,aAAapd,OAAS1C,EAAG8B,QAC9B4U,GAAgB,EAChBpb,KAAK0kB,QAAQpc,EAAK5D,EAAG8B,OACrBY,EAAOkB,EAAIgR,SAAStZ,KAAK+mB,SAASze,KAElCtI,KAAKwkB,aAAapd,OAAS1C,EAAGc,OAC9B,OAAIwhB,EACO1e,EAAI+b,QAAQ,IAAI7J,GAAmBd,EAAK,4CAC5CpR,EAAI8b,QAAQ,IAAI,GAAc1K,EAAKuN,EAAS,IAAI,GAAcjnB,KAAKwkB,aAAa9K,KAAM,IAAKyB,EAAU6L,EAAS5L,EAAehU,IAExI,IAAI8T,EAAalb,KAAKwkB,aAAaxjB,MACnChB,KAAKuB,QAAQ+G,GACb,MAAM6c,EAAO7c,EAAIgR,SAAStZ,KAAKmlB,QAC/B,OAAI7c,EAAIuB,MACGvB,IAEP6c,aAAgB,IAAaA,aAAgB,MAC7CA,EAAKjb,KAAO+c,EAAQjmB,OAEpBmkB,aAAgBnF,KAChBmF,EAAKjb,KAAO+c,EAAQjmB,MACpBmkB,EAAKpW,SAAWiY,GAEb1e,EAAI8b,QAAQ,IAAI,GAAc1K,EAAKuN,EAAS9B,EAAMjK,EAAYC,EAAU6L,EAAS5L,EAAehU,KAE3G8f,YACI,MAAM5e,EAAM,IAAIwb,GAEhB,GADA9jB,KAAK0kB,QAAQpc,EAAK5D,EAAGQ,SACjBoD,EAAIuB,MACJ,OAAOvB,EAGX,GADAtI,KAAK4kB,mBAAmBtc,GACpBtI,KAAKwkB,aAAapd,OAAS1C,EAAGS,QAE9B,OADAnF,KAAKuB,QAAQ+G,GACNA,EAAI8b,QAAQ,IAAI,GAAcpkB,KAAKwkB,aAAa9K,MAE3D,MAAMyL,EAAO7c,EAAIgR,SAAStZ,KAAKigB,cAC/B,OAAI3X,EAAIuB,MACGvB,GAEXtI,KAAK0kB,QAAQpc,EAAK5D,EAAGS,SACjBmD,EAAIuB,MACGvB,EAEJA,EAAI8b,QAAQe,IAEvBgC,gBAAgB7e,GACZtI,KAAK4iB,OAAOwE,OAAOpnB,KAAKukB,SAAU,EAAG,IAAIjC,GAAMtiB,KAAKwkB,aAAa9K,IAAKhV,EAAGI,kBAAcmG,IACvFjL,KAAK+hB,UACL/hB,KAAKuB,QAAQ+G,GAEjBqd,SACI,MAAMrd,EAAM,IAAIwb,GAChB,IAAIjI,EACAC,EACAuL,EACJ,MAAM3N,EAAM1Z,KAAKwkB,aAAa9K,IAC9B,IAAK1Z,KAAKwkB,aAAajC,QAAQ7d,EAAGM,QAAS,MACvC,OAAOsD,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,kBAGrE,GAFA1Z,KAAKuB,QAAQ+G,GACb+e,EAAY/e,EAAIgR,SAAStZ,KAAKmlB,QAC1B7c,EAAIuB,MACJ,OAAOvB,EAEX,GADAuT,EAASvT,EAAIgR,SAAStZ,KAAKknB,aACvB5e,EAAIuB,MACJ,OAAOvB,EAEX,GADAtI,KAAK4kB,mBAAmBtc,GACpBtI,KAAKwkB,aAAajC,QAAQ7d,EAAGM,QAAS,QAEtC,GADAhF,KAAKuB,QAAQ+G,GACTtI,KAAKwkB,aAAapd,MAAQ1C,EAAGQ,SAE7B,GADA4W,EAAUxT,EAAIgR,SAAStZ,KAAKknB,aACxB5e,EAAIuB,MACJ,OAAOvB,OAIX,GADAwT,EAAUxT,EAAIgR,SAAStZ,KAAK8kB,aACxBxc,EAAIuB,MACJ,OAAOvB,EAInB,OADAtI,KAAKmnB,gBAAgB7e,GACdA,EAAI8b,QAAQ,IAAI,GAAO1K,EAAK2N,EAAWxL,EAAQC,IAE1D0K,YACI,MAAMle,EAAM,IAAIwb,GAChB,IAAIxH,EACA+K,EACJ,MAAM3N,EAAM1Z,KAAKwkB,aAAa9K,IAC9B,OAAK1Z,KAAKwkB,aAAajC,QAAQ7d,EAAGM,QAAS,UAG3ChF,KAAKuB,QAAQ+G,GACb+e,EAAY/e,EAAIgR,SAAStZ,KAAKmlB,QAC1B7c,EAAIuB,MACGvB,GACXgU,EAAOhU,EAAIgR,SAAStZ,KAAKknB,aACrB5e,EAAIuB,MACGvB,GACXtI,KAAKmnB,gBAAgB7e,GACdA,EAAI8b,QAAQ,IAAI,GAAU1K,EAAK2N,EAAW/K,OAVtChU,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,qBAYzE4N,UAAUhf,GACN,IAAI4B,EACA9C,EAAO,IAAI,GAAqBF,EAAMG,KAC1C,GAAIrH,KAAKwkB,aAAapd,OAAS1C,EAAGK,WAC9B,OAAO,IAAIyV,GAAmBxa,KAAKwkB,aAAa9K,IAAK,uBAIzD,GAFAxP,EAAOlK,KAAKwkB,aAAaxjB,MACzBhB,KAAKuB,QAAQ+G,GACTtI,KAAKwkB,aAAapd,OAAS1C,EAAG8B,MAAO,CAErC,GADAxG,KAAK0kB,QAAQpc,EAAK5D,EAAG8B,OACjB8B,EAAIuB,MACJ,OAAOvB,EAAIuB,MAEf,GADAzC,EAAOkB,EAAIgR,SAAStZ,KAAK+mB,SAASze,IAC9BA,EAAIuB,MACJ,OAAOvB,EAAIuB,MAEnB,MAAO,CAAEK,KAAAA,EAAM9C,KAAAA,GAEnBmgB,WACI,MAAMjf,EAAM,IAAIwb,GACVpK,EAAM1Z,KAAKwkB,aAAa9K,IAC9B,IAAIkD,EAAMlO,EAAO,GAAI5B,EAAa,IAAI,GAAqB5F,EAAMG,KAEjE,GADArH,KAAK0kB,QAAQpc,EAAK5D,EAAGU,QACjBpF,KAAKwkB,aAAapd,OAAS1C,EAAGW,OAC9BrF,KAAKuB,QAAQ+G,OAEZ,CACD,IAAIuW,EAAQ7e,KAAKsnB,UAAUhf,GAC3B,GAAIuW,aAAiB/U,GACjB,OAAOxB,EAAI+b,QAAQxF,GAGvB,IADAnQ,EAAKH,KAAKsQ,GACH7e,KAAKwkB,aAAapd,OAAS1C,EAAGO,OAAO,CACxCjF,KAAKuB,QAAQ+G,GACb,IAAIuW,EAAQ7e,KAAKsnB,UAAUhf,GAC3B,GAAIuW,aAAiB/U,GACjB,OAAOxB,EAAI+b,QAAQxF,GACvBnQ,EAAKH,KAAKsQ,GAEd,GAAI7e,KAAKwkB,aAAapd,OAAS1C,EAAGW,OAC9B,OAAOiD,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,wBACrE1Z,KAAKuB,QAAQ+G,GAEjB,GAAItI,KAAKwkB,aAAapd,OAAS1C,EAAG8B,QAC9BxG,KAAKuB,QAAQ+G,GACbwE,EAAaxE,EAAIgR,SAAStZ,KAAK+mB,SAASze,IACpCA,EAAIuB,OACJ,OAAOvB,EAEf,GAAItI,KAAKwkB,aAAapd,OAAS1C,EAAGQ,SAE9B,GADA0X,EAAO,IAAI,GAAW5c,KAAKwkB,aAAa9K,IAAKpR,EAAIgR,SAAStZ,KAAKmlB,SAC3D7c,EAAIuB,MACJ,OAAOvB,MAEV,CAED,GADAtI,KAAK0kB,QAAQpc,EAAK5D,EAAGQ,SACjBoD,EAAIuB,MACJ,OAAOvB,EAMX,GAJIsU,EADA5c,KAAKwkB,aAAapd,OAAS1C,EAAGS,QACvBmD,EAAIgR,SAAStZ,KAAKigB,cAElB,IAAI,GAAcjgB,KAAKwkB,aAAa9K,KAC/C1Z,KAAK0kB,QAAQpc,EAAK5D,EAAGS,SACjBmD,EAAIuB,MACJ,OAAOvB,EAEf,OAAOA,EAAI8b,QAAQ,IAAI,GAAuB1K,EAAKkD,EAAMlO,EAAM5B,IAEnE4Z,WACI,MAAMpe,EAAM,IAAIwb,GAChB,IAAK9jB,KAAKwkB,aAAajC,QAAQ7d,EAAGM,QAAS,QACvC,OAAOsD,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,oBACrE1Z,KAAKuB,QAAQ+G,GACb,MAAMqE,EAAOrE,EAAIgR,SAAStZ,KAAKunB,YAC/B,OAAIjf,EAAIuB,MACGvB,EACJA,EAAI8b,QAAQzX,GAEvBga,UAAUzc,GACN,MAAM5B,EAAM,IAAIwb,GACVpK,EAAM1Z,KAAKwkB,aAAa9K,IACxBiG,EAAU,GAChB,IAAIE,EACAD,EAAW,IAAIvE,GAAmBnU,EAAMsE,QAC5C,IAAKxL,KAAKwkB,aAAajC,QAAQ7d,EAAGM,QAAS,SACvC,OAAOsD,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,qBAGrE,GADA1Z,KAAKuB,QAAQ+G,GACTtI,KAAKwkB,aAAajC,QAAQ7d,EAAGM,QAAS,aACtChF,KAAKuB,QAAQ+G,GACbsX,EAAWtX,EAAIgR,SAAStZ,KAAKmlB,QACzB7c,EAAIuB,OACJ,OAAOvB,EAGf,GADAtI,KAAK0kB,QAAQpc,EAAK5D,EAAGQ,SACjBoD,EAAIuB,MACJ,OAAOvB,EACX,GAAItI,KAAKwkB,aAAapd,OAAS1C,EAAGS,QAE9B,OADAnF,KAAKuB,QAAQ+G,GACNA,EAAI8b,QAAQ,IAAI,GAAU1K,EAAK,GAAIkG,OAAU3U,EAAWf,IAEnE,KACQlK,KAAKwkB,aAAapd,OAAS1C,EAAGK,YADzB,CAIT,IAAIyiB,EAAWxnB,KAAKwkB,aAAaxjB,MACjChB,KAAKuB,QAAQ+G,GACb,MAAMqE,EAAOrE,EAAIgR,SAAStZ,KAAKunB,YAC/B,GAAIjf,EAAIuB,MACJ,OAAOvB,EACX,KAAMqE,aAAgB+R,IAClB,OAAOpW,EAAI+b,QAAQ,IAAIva,GAAQ9J,KAAKwkB,aAAa9K,IAAK,aAAc,kCAAkC/M,cAE1GA,EAAKzC,KAAOsd,EACK,SAAbA,EACA3H,EAAOlT,EAGPgT,EAAQpR,KAAK5B,GAIrB,OADA3M,KAAK0kB,QAAQpc,EAAK5D,EAAGS,SACdmD,EAAI8b,QAAQ,IAAI,GAAU1K,EAAKiG,EAASC,EAAUC,EAAM3V,IAEnEuc,UACI,MAAMne,EAAM,IAAIwb,GACVpK,EAAM1Z,KAAKwkB,aAAa9K,IAC9B,IAAIkD,EAAMtR,EAAOkH,EAAYwU,GAAU,EACvC,OAAKhnB,KAAKwkB,aAAajC,QAAQ7d,EAAGM,QAAS,QAG3ChF,KAAKuB,QAAQ+G,GACTtI,KAAKwkB,aAAajC,QAAQ7d,EAAGM,QAAS,QACtCgiB,GAAU,EACVhnB,KAAKuB,QAAQ+G,IAERtI,KAAKwkB,aAAajC,QAAQ7d,EAAGM,QAAS,QAC3ChF,KAAKuB,QAAQ+G,GAEbA,EAAIuB,MACGvB,EACPtI,KAAKwkB,aAAapd,OAAS1C,EAAGK,WACvBuD,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,yBAErElH,EAAaxS,KAAKwkB,aAClBxkB,KAAKuB,QAAQ+G,GACRtI,KAAKwkB,aAAajC,QAAQ7d,EAAGM,QAAS,OAG3ChF,KAAKuB,QAAQ+G,GACbgD,EAAQhD,EAAIgR,SAAStZ,KAAKmlB,QACtB7c,EAAIuB,MACGvB,GACXsU,EAAOtU,EAAIgR,SAAStZ,KAAKknB,aACrB5e,EAAIuB,MACGvB,GACXtI,KAAKmnB,gBAAgB7e,GACjBA,EAAIuB,MACGvB,EACJA,EAAI8b,QAAQ,IAAI,GAAQ1K,EAAKkD,EAAMtR,EAAOkH,GAAY,EAAOwU,OAZzD1e,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,2BAlB1DpR,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,mBAgCzEpO,QACI,MAAMhD,EAAM,IAAIwb,GAChB,IAAI2D,EAAW,GACf,MAAM/N,EAAM1Z,KAAKwkB,aAAa9K,IAC9B,GAAI1Z,KAAKwkB,aAAapd,OAAS1C,EAAGY,QAC9B,OAAOgD,EAAI+b,QAAQ,IAAI7J,GAAmBd,EAAK,gBAGnD,GADA1Z,KAAKuB,QAAQ+G,GACTtI,KAAKwkB,aAAapd,OAAS1C,EAAGa,QAE9B,OADAvF,KAAKuB,QAAQ+G,GACNA,EAAI8b,QAAQ,IAAI,GAAU1K,EAAK,KAG1C,GADA+N,EAASlZ,KAAKjG,EAAIgR,SAAStZ,KAAKmlB,SAC5B7c,EAAIuB,MACJ,OAAOvB,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,qBAErE,KAAO1Z,KAAKwkB,aAAapd,OAAS1C,EAAGO,OAGjC,GAFAjF,KAAKuB,QAAQ+G,GACbmf,EAASlZ,KAAKjG,EAAIgR,SAAStZ,KAAKmlB,SAC5B7c,EAAIuB,MACJ,OAAOvB,EAEf,OAAItI,KAAKwkB,aAAapd,OAAS1C,EAAGa,QACvB+C,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,yBAErE1Z,KAAKuB,QAAQ+G,GACNA,EAAI8b,QAAQ,IAAI,GAAU1K,EAAK+N,KAE1Cjc,SACI,MAAMlD,EAAM,IAAIwb,GAChB,IAAI/F,EAAa,GACjB,MAAMrE,EAAM1Z,KAAKwkB,aAAa9K,IAC9B,GAAI1Z,KAAKwkB,aAAapd,OAAS1C,EAAGQ,QAC9B,OAAOoD,EAAI+b,QAAQ,IAAI7J,GAAmBd,EAAK,gBAGnD,GADA1Z,KAAKuB,QAAQ+G,GACTtI,KAAKwkB,aAAapd,OAAS1C,EAAGS,QAE9B,OADAnF,KAAKuB,QAAQ+G,GACNA,EAAI8b,QAAQ,IAAI,GAAkB1K,EAAK,KAElD,OAAa,CACT,IAAIgO,EAASvnB,EAAKa,EAClB,GAAIhB,KAAKwkB,aAAapd,OAAS1C,EAAGK,WAC9B2iB,EAAU,KACVvnB,EAAM,IAAI,GAAWH,KAAKwkB,aAAa9K,IAAK1Z,KAAKwkB,cACjDxkB,KAAKuB,QAAQ+G,QAEZ,GAAItI,KAAKwkB,aAAapd,OAAS1C,EAAGG,OACnC6iB,EAAU,SACVvnB,EAAM,IAAI,GAAWH,KAAKwkB,aAAa9K,IAAK1Z,KAAKwkB,cACjDxkB,KAAKuB,QAAQ+G,OAEZ,IAAItI,KAAKwkB,aAAapd,OAAS1C,EAAGY,QAYnC,MARA,GAHAoiB,EAAU,QACV1nB,KAAKuB,QAAQ+G,GACbnI,EAAMmI,EAAIgR,SAAStZ,KAAKmlB,QACpB7c,EAAIuB,MACJ,OAAOvB,EACX,GAAItI,KAAKwkB,aAAapd,OAAS1C,EAAGa,QAC9B,OAAO+C,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,sBAAsB/U,EAAgB3E,KAAKwkB,aAAapd,WAE7HpH,KAAKuB,QAAQ+G,GAKjB,GAAItI,KAAKwkB,aAAapd,OAAS1C,EAAG8B,MAAO,CAGrC,GAFAxG,KAAKuB,QAAQ+G,GACbtH,EAAQsH,EAAIgR,SAAStZ,KAAKmlB,QACtB7c,EAAIuB,MACJ,OAAOvB,EACX,GAAItI,KAAKwkB,aAAapd,OAAS1C,EAAGO,OAASjF,KAAKwkB,aAAapd,OAAS1C,EAAGS,QACrE,OAAOmD,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,6BAA6B/U,EAAgB3E,KAAKwkB,aAAapd,WAEhIpH,KAAKwkB,aAAapd,OAAS1C,EAAGO,OAC9BjF,KAAKuB,QAAQ+G,OAGhB,CACD,GAAItI,KAAKwkB,aAAapd,OAAS1C,EAAGO,OAASjF,KAAKwkB,aAAapd,OAAS1C,EAAGS,QACrE,OAAOmD,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,6BAA6B/U,EAAgB3E,KAAKwkB,aAAapd,WAEpI,GAAgB,OAAZsgB,EACA,OAAOpf,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,+JAGrE1Z,KAAK+hB,UACL/gB,EAAQ,IAAI,GAAahB,KAAKwkB,cAC9BxkB,KAAKuB,QAAQ+G,GACTtI,KAAKwkB,aAAapd,OAAS1C,EAAGO,OAC9BjF,KAAKuB,QAAQ+G,GAIrB,GADAyV,EAAWxP,KAAK,CAACpO,EAAKa,IAClBsH,EAAIuB,MACJ,OAAOvB,EAEf,OAAItI,KAAKwkB,aAAapd,OAAS1C,EAAGS,QACvBmD,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,qCACrE1Z,KAAKuB,QAAQ+G,GACNA,EAAI8b,QAAQ,IAAI,GAAkB1K,EAAKqE,KAElD6I,YACI,MAAMte,EAAM,IAAIwb,GACVpK,EAAM1Z,KAAKwkB,aAAa9K,IAE9B,GADA1Z,KAAK0kB,QAAQpc,EAAK5D,EAAGM,SACjBsD,EAAIuB,MACJ,OAAOvB,EAEX,GADAtI,KAAK0kB,QAAQpc,EAAK5D,EAAGQ,SACjBoD,EAAIuB,MACJ,OAAOvB,EACX,GAAItI,KAAKwkB,aAAapd,OAAS1C,EAAGS,QAE9B,OADAnF,KAAKuB,QAAQ+G,GACNA,EAAI8b,QAAQ,IAAI,GAAc1K,EAAK,IAAI,KAElD,MAAMuG,EAAa3X,EAAIgR,SAAStZ,KAAKigB,cACrC,OAAI3X,EAAIuB,MACGvB,GACXtI,KAAK0kB,QAAQpc,EAAK5D,EAAGS,SACjBmD,EAAIuB,MACGvB,EACJA,EAAI8b,QAAQ,IAAI,GAAc1K,EAAKuG,KAE9CiF,WACI,MAAM5c,EAAM,IAAIwb,GAEhB,GADA9jB,KAAK0kB,QAAQpc,EAAK5D,EAAGM,SACjBsD,EAAIuB,MACJ,OAAOvB,EAEX,GADAtI,KAAK0kB,QAAQpc,EAAK5D,EAAGQ,SACjBoD,EAAIuB,MACJ,OAAOvB,EACX,GAAItI,KAAKwkB,aAAapd,OAAS1C,EAAGS,QAC9B,OAAOmD,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,uBAErE,MAAMkD,EAAOtU,EAAIgR,SAAStZ,KAAKigB,cAC/B,GAAI3X,EAAIuB,MACJ,OAAOvB,EAEX,GADAtI,KAAK0kB,QAAQpc,EAAK5D,EAAGS,SACjBmD,EAAIuB,MACJ,OAAOvB,EACX,GAAgC,UAA5BtI,KAAKwkB,aAAaxjB,MAClB,OAAOsH,EAAI+b,QAAQ,IAAI7J,GAAmBxa,KAAKwkB,aAAa9K,IAAK,6BAGrE,GADA1Z,KAAK0kB,QAAQpc,EAAK5D,EAAGM,SACjBsD,EAAIuB,MACJ,OAAOvB,EAEX,GADAtI,KAAK0kB,QAAQpc,EAAK5D,EAAGQ,SACjBoD,EAAIuB,MACJ,OAAOvB,EACX,GAAItI,KAAKwkB,aAAapd,OAAS1C,EAAGS,QAC9B,OAAOmD,EAAI8b,QAAQ,IAAIlE,GAAWlgB,KAAKwkB,aAAa9K,IAAKkD,EAAM,IAAI4D,KAEvE,MAAML,EAAa7X,EAAIgR,SAAStZ,KAAKigB,cACrC,OAAI3X,EAAIuB,MACGvB,GACXtI,KAAK0kB,QAAQpc,EAAK5D,EAAGS,SACjBmD,EAAIuB,MACGvB,GACXtI,KAAKmnB,gBAAgB7e,GACjBA,EAAIuB,MACGvB,EACJA,EAAI8b,QAAQ,IAAIlE,GAAWlgB,KAAKwkB,aAAa9K,IAAKkD,EAAMuD,OC/zBhE,SAASN,GAAK7J,EAAY9S,QAAQC,IAAK8S,EAAWsD,GAAO,EAAMoO,EAAO,CAAE1kB,MAAOC,QAAQC,KAAO+H,EAAU,IAAIsC,GAAWN,EAAO,IACjI,IAAIC,EA/B8C5J,EAASC,EAAYK,EAAGJ,EAgC1E,OAhCkDF,EAgCjCvD,KAhC0CwD,OAgCpC,EAhCmDC,EAgCnC,YACnCgM,IACA,MAAMnH,EAAMwN,GAAW5K,EAAS8K,EAAWC,GAC3C,GAAI3N,aAAewB,GACf,OAAOxB,EAEXtG,EAAiBkJ,GACU,QAA1BiC,EAAKwa,EAAc,eAAsB,IAAPxa,IAAsBwa,EAAc,QAAIzc,GACvEgC,IACAhC,EAAQgC,KAAOA,GAEfya,EAAK1kB,QACL,QAAgB0kB,EAAK1kB,OAErBsW,IACAlX,UACMiB,GAAsB,GCvCxC,SAAqBmP,EAASvH,GAC1B,MAAM,GAAE0c,EAAE,KAAE1a,GAASuF,EACrB,IAAK,IAAIoV,KAAWpV,EACZA,EAAQ7R,eAAeinB,Kf+BF3d,Ee9BJ2d,Ef8BUC,Ee9BD,IAAI1Y,EAAYqD,EAAQoV,GAAUA,Gf0BjE,SAAmB3d,EAAM0S,GAC5B5H,EAAQ9K,GAAQ,GAChBqL,GAAiBrL,GAAQ0S,EAGzBmL,CAAU7d,EAAMsL,GAAiB9K,EAAKod,GAAM5d,KADzC,IAA0BA,EAAM4d,Ee3BnC5c,EAAQuJ,IAAI,SAAU,IAAI/I,GAAW,EAAGR,QAAAA,GAAW8c,KAC/C,IAAKxlB,EAAYE,QACb,OAAO,IAAI+U,GAAwB,uBAEvC,IAAKjV,EAAYE,QACb,OAAO,IAAI+U,GAAwB,uBAEvC,IAAIwQ,EAAavmB,GAAIsmB,GACrB,GAAIxlB,EAAYI,QAAU+S,GAAYsS,GAClC,OAAOrS,GAAUqS,GAErBA,EAAa/a,EAAKqR,KAAKrT,EAAQgC,KAAM+a,GACrC,IACI,IAAKL,EAAGM,WAAWD,GAAa,CAC5B,IAAIL,EAAGM,WAAW,eAAiBD,GAS/B,OAAO,IAAIne,GAAQ7I,EAAA,KAAe,cAAe,oBAAoBgnB,iBARrE,IAAIL,EAAGM,WAAW,aAAeD,EAAa,YAI1C,OAAO,IAAIne,GAAQ7I,EAAA,KAAe,cAAe,WAAWgnB,8CAH5DA,EAAa,aAAeA,EAAa,WAUrD,MAAME,EAAQjb,EAAKkb,QAAQH,GACrB1U,EAAOqU,EAAGS,aAAaJ,EAAY,SACnC1R,EAAM,IAAI/I,GAChB+I,EAAIhJ,OAASxL,EACbwU,EAAIrJ,KAAOib,EACX,MAAMzf,EAAI,IAAIoG,EAAY,IAAI7E,EAASge,GAAa,IAC9C3f,EAAMkO,GAAIjD,EAAM,CAClBgD,IAAAA,EACA+R,oBAAoB,EACpB5F,SAAUuF,EACVM,WAAYJ,IAGhB,OADAzf,EAAEb,UAAY0O,EAAIG,uBACdpO,EAAIuB,MACGvB,EAAIuB,MAERnB,EAEX,MAAOiO,GACH,OAAO,IAAI7M,GAAQ7I,EAAA,KAAe,cAAe0V,EAAErF,eAExD,CAAC,CAAEpH,KAAM,OAAQ9C,KAAMF,EAAMmE,SAAW,cAAUJ,EAAW/D,EAAMsE,QAAS,CAC3EuC,mBAAmB,EACnBoB,YAAY,IAEhBjE,EAAQ4C,OAAO,OAAQ,IAAIpC,GAAW,EAAGR,QAAAA,GAAWkN,EAAOoQ,KACvD,IAAKhmB,EAAYK,WACb,OAAO,IAAI4U,GAAwB,4BAEvC,MAAMvK,EAAOxL,GAAI0W,GACXqQ,EAAW/mB,GAAI8mB,IAAc,QACnC,OAAKZ,EAAGM,WAAWhb,GAGZ,IAAIzB,EAAS,CAChB/J,IAAK,IAAIgK,GAAW,EAAGR,QAAAA,KACZ,IAAIjB,EAAS2d,EAAGS,aAAand,EAAQgC,KAAOA,EAAMub,KAC1D,GAAI,WAAOxd,EAAW/D,EAAMmE,QAC/Bqd,MAAO,IAAIhd,GAAW,EAAGR,QAAAA,GAAWyd,KAChCf,EAAGgB,cAAc1d,EAAQgC,KAAOA,EAAMxL,GAAIinB,MAC3C,CAAC,CAAEze,KAAM,OAAQ9C,KAAMF,EAAMmE,UAChCwd,OAAQ,IAAInd,GAAW,EAAGR,QAAAA,GAAWyd,KACjCf,EAAGkB,eAAe5d,EAAQgC,KAAOA,EAAMxL,GAAIinB,MAC5C,CAAC,CAAEze,KAAM,OAAQ9C,KAAMF,EAAMmE,YAXzB,IAAIoL,GAAYxV,EAAA,KAAeiM,ODzBtC,CAAYya,EAAMzc,KA/CnB,KAFgErH,OAgCxC,KA9BbA,EAAIC,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUjD,GAAS,IAAMkD,EAAKT,EAAUU,KAAKnD,IAAW,MAAO4C,GAAKI,EAAOJ,IACpF,SAASQ,EAASpD,GAAS,IAAMkD,EAAKT,EAAiB,MAAEzC,IAAW,MAAO4C,GAAKI,EAAOJ,IACvF,SAASM,EAAKG,GAJlB,IAAerD,EAIaqD,EAAOC,KAAOP,EAAQM,EAAOrD,QAJ1CA,EAIyDqD,EAAOrD,MAJhDA,aAAiB6C,EAAI7C,EAAQ,IAAI6C,GAAE,SAAUE,GAAWA,EAAQ/C,OAITuD,KAAKN,EAAWG,GAClGF,GAAMT,EAAYA,EAAUe,MAAMjB,EAASC,GAAc,KAAKW,WA+C/D,SAASqS,GAAII,GAAK,IAAEL,EAAMxU,EAAM,mBAAEumB,GAAqB,EAAK,SAAE5F,EAAW,YAAW,WAAE6F,EAAa,IAAO,IACzGA,IACAhS,EAAIrJ,KAAOqb,GAEfra,GAAK8L,QAAU,EACf9L,GAAK6L,UAAY,EACjB7L,GAAK4L,WAAa,EAClB,MAAMiP,EAAW,CACb5U,MAAO,EACP6U,WAAY,EACZC,YAAa,EACbC,eAAgB,EAChBC,QAAS,EACTC,QAAS,EACTC,UAAW,EACXvP,WAAY,GAEhB,IAAIF,EAAQvW,IACZ,IAAKkT,EAAI7W,KAAKuY,oBAAqB,CAC/B,MAAM3P,EAAM,IAAI2Q,GAEhB,OADA3Q,EAAIuB,MAAQ,IAAIC,GAAQ7I,EAAA,KAAe,gBAAiB,8DACjDqH,EAEX,MACMghB,EADQ,IAAI9G,GAAM5L,EAAK8L,GACNC,WACvB,GAAI2G,aAAoBxf,GAAS,CAC7B,MAAMmG,EAAO,IAAIgJ,GAEjB,OADAhJ,EAAKpG,MAAQyf,EACNrZ,EAEX8Y,EAASC,WAAa3lB,IAAQuW,EAC9BA,EAAQvW,IACR,MACMiF,EADS,IAAIgc,GAAOgF,GACPxU,QACnB,GAAIxM,EAAIuB,MAAO,CACX,MAAMoG,EAAO,IAAIgJ,GAEjB,OADAhJ,EAAKpG,MAAQvB,EAAIuB,MACVoG,EAIX,GAFA8Y,EAASE,YAAc5lB,IAAQuW,EAC/BA,EAAQvW,KACHiF,EAAIiR,KAAM,CACX,MAAMjR,EAAM,IAAI2Q,GAEhB,OADA3Q,EAAIsD,IAAM,IAAIxB,EAAQ,IACf9B,EAEX,MAAMihB,EAAWjhB,EAAIiR,KAAKnL,UAAUmI,GAUpC,OATAwS,EAASG,eAAiB7lB,IAAQuW,EAClCmP,EAAS5U,MAAQ9Q,IAAQuW,EACzBmP,EAASI,QAAUjb,GAAK8L,QACxB+O,EAASM,UAAYnb,GAAK6L,UAC1BgP,EAASK,QAAUlb,GAAK6L,UAAY7L,GAAK4L,WACzCiP,EAASjP,WAAa5L,GAAK4L,WACvBwO,GACAplB,QAAQC,IAAI4lB,GAET1oB,OAAO2C,OAAO3C,OAAO2C,OAAO,GAAIumB,GAAW,CAAER,SAAAA,IAEjD,SAASjU,GAAMvB,GAAM,SAAEmP,EAAW,YAAW,WAAE6F,EAAa,IAAO,IACtE,MACMe,EADQ,IAAI9G,GAAMjP,EAAMmP,GACPC,WACvB,GAAI2G,aAAoBxf,GACpB,MAAO,CACHD,MAAOyf,GAGf,MACMhhB,EADS,IAAIgc,GAAOgF,GACPxU,QACnB,OAAIxM,EAAIuB,MACG,CACHA,MAAOvB,EAAIuB,OAGdvB,EAAIiR,KAKF,CACHiQ,oBAAsBhQ,IAClB,IAAKlR,EAAIiR,KACL,KAAM,2BACV,MAAMkQ,EAAU,uDAAuDlnB,MACjEmnB,EExIlB,8hDFwI2B,WAA0BlI,QAAQ,uBAAwB,KAAO,KAC1EvN,EAAM3L,EAAIiR,KAAKkB,UAAUjB,GAC/B,OAAIvF,EAAIpK,MACGoK,GACPuF,EAAOkB,SACPzG,EAAIrI,IAAMqI,EAAIrI,IAAI4V,QAAQ,uBAAwB,MAE/C,IAAIpI,GAAcqQ,EAAUC,EAASzV,EAAIrI,OAEpD+d,gBAAkBnQ,IACd,IAAKlR,EAAIiR,KACL,KAAM,2BACV,MAAMkQ,EAAU,kDAAkDlnB,QAC5DmnB,EGrJlB,qqBHqJ2B,WAA4B,KACrCzV,EAAM3L,EAAIiR,KAAKE,UAAUD,GAC/B,OAAIvF,EAAIpK,MACGoK,EACJ,IAAImF,GAAcqQ,EAAUC,EAASzV,EAAIoF,QAAU,KAAOpF,EAAIrI,MAEzEwC,UAAW,CAACmI,EAAMxU,KACd,IAAKuG,EAAIiR,KACL,KAAM,2BAIV,GAHIgP,IACAhS,EAAIrJ,KAAOqb,IAEVhS,EAAI7W,KAAKuY,oBAAqB,CAC/B,MAAM3P,EAAM,IAAI2Q,GAEhB,OADA3Q,EAAIuB,MAAQ,IAAIC,GAAQ7I,EAAA,KAAe,gBAAiB,8DACjDqH,EAEX,OAAOA,EAAIiR,KAAKnL,UAAUmI,KAvCvB,CACH1M,MAAO,IAAIC,GAAQ7I,EAAA,KAAe,QAAS,c","sources":["webpack://es/webpack/universalModuleDefinition","webpack://es/webpack/bootstrap","webpack://es/webpack/runtime/define property getters","webpack://es/webpack/runtime/hasOwnProperty shorthand","webpack://es/webpack/runtime/make namespace object","webpack://es/./src/position.ts","webpack://es/./src/constants.ts","webpack://es/./src/runtime/primitives/esprimitive.ts","webpack://es/./src/runtime/primitives/eserrorprimitive.ts","webpack://es/./src/runtime/primitives/esundefined.ts","webpack://es/./src/runtime/primitives/esobject.ts","webpack://es/./src/runtime/primitives/esfunction.ts","webpack://es/./src/runtime/functionCaller.ts","webpack://es/./src/runtime/context.ts","webpack://es/./src/runtime/primitives/esnamespace.ts","webpack://es/./src/runtime/primitives/esjsbinding.ts","webpack://es/./src/runtime/primitiveTypes.ts","webpack://es/./src/runtime/instantiator.ts","webpack://es/./src/runtime/primitives/estype.ts","webpack://es/./src/runtime/primitives/esnumber.ts","webpack://es/./src/runtime/primitives/esboolean.ts","webpack://es/./src/runtime/primitives/esarray.ts","webpack://es/./src/runtime/primitives/esstring.ts","webpack://es/./src/runtime/symbol.ts","webpack://es/./src/runtime/primitives/wrapStrip.ts","webpack://es/./src/util/colours.ts","webpack://es/./src/built-in/builtInFunctions.ts","webpack://es/./src/built-in/built-in-modules/json.ts","webpack://es/./src/built-in/builtInModules.ts","webpack://es/./src/built-in/built-in-modules/ascii.ts","webpack://es/./src/init.ts","webpack://es/./src/built-in/globalConstants.ts","webpack://es/./src/built-in/built-in-modules/promise.ts","webpack://es/./src/built-in/built-in-modules/time.ts","webpack://es/./src/built-in/built-in-modules/dom.ts","webpack://es/./src/runtime/argument.ts","webpack://es/./src/runtime/nodes.ts","webpack://es/./src/util/util.ts","webpack://es/./src/errors.ts","webpack://es/./src/parse/tokens.ts","webpack://es/./src/parse/lexer.ts","webpack://es/./src/parse/parser.ts","webpack://es/./src/index.ts","webpack://es/./src/built-in/nodeLibs.ts","webpack://es/./src/built-in/compiledSTD/std.txt.js","webpack://es/./src/built-in/compiledSTD/std.txt.py"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"es\"] = factory();\n\telse\n\t\troot[\"es\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Position {\n    constructor(idx, ln, col, file = '(unknown)') {\n        this.idx = idx;\n        this.ln = ln;\n        this.col = col;\n        this.file = file;\n    }\n    advance(currentChar = '') {\n        this.idx++;\n        this.col++;\n        if (currentChar === '\\n') {\n            this.ln++;\n            this.col = 0;\n        }\n        return this;\n    }\n    get clone() {\n        return new Position(this.idx, this.ln, this.col, this.file);\n    }\n    get str() {\n        return `File ${this.file}, ${this.ln + 1}:${this.col + 1}`;\n    }\n    get isUnknown() {\n        return this.idx === -2;\n    }\n    static get void() {\n        return new Position(-2, -2, -2, '(unknown)');\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport PACKAGE_JSON from '../package.json';\nexport const digits = '0123456789';\nexport const identifierChars = '_$abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nexport const singleLineComment = '//';\nexport const multiLineCommentStart = '/*';\nexport const multiLineCommentEnd = '*/';\nexport let global;\nexport const setGlobalContext = (c) => void (global = c);\nexport const stringSurrounds = ['\\'', '`', '\"'];\nexport let IS_NODE_INSTANCE = typeof window === 'undefined';\nexport const runningInNode = () => void (IS_NODE_INSTANCE = true);\nexport const VAR_DECLARE_KEYWORDS = ['var', 'let', 'global'];\nexport const VERSION = PACKAGE_JSON['version'];\nexport let permissions = {\n    networking: false,\n    imports: true,\n    accessDOM: false,\n    useSTD: true,\n    fileSystem: false,\n};\nexport function updatePermissions(newPermissions) {\n    permissions = Object.assign(Object.assign({}, permissions), newPermissions);\n}\nexport const libs = {\n    print: console.log\n};\nexport const catchBlockErrorSymbolName = 'err';\nexport const KEYWORDS = [\n    'var',\n    'let',\n    'global',\n    'local',\n    'mutable',\n    'const',\n    'if',\n    'else',\n    'while',\n    'for',\n    'in',\n    'continue',\n    'break',\n    'func',\n    'return',\n    'yield',\n    'class',\n    'extends',\n    'namespace',\n    'export',\n    'try',\n    'catch'\n];\nexport let now = () => 0;\nexport function refreshPerformanceNow(IS_NODE_INSTANCE) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (IS_NODE_INSTANCE) {\n            now = () => Date.now();\n        }\n        else {\n            now = () => {\n                try {\n                    return performance === null || performance === void 0 ? void 0 : performance.now();\n                }\n                catch (e) {\n                    return 0;\n                }\n            };\n        }\n    });\n}\nrefreshPerformanceNow(IS_NODE_INSTANCE);\nexport var tokenType;\n(function (tokenType) {\n    tokenType[tokenType[\"NUMBER\"] = 0] = \"NUMBER\";\n    tokenType[tokenType[\"STRING\"] = 1] = \"STRING\";\n    tokenType[tokenType[\"ENDSTATEMENT\"] = 2] = \"ENDSTATEMENT\";\n    tokenType[tokenType[\"IDENTIFIER\"] = 3] = \"IDENTIFIER\";\n    tokenType[tokenType[\"KEYWORD\"] = 4] = \"KEYWORD\";\n    tokenType[tokenType[\"COMMA\"] = 5] = \"COMMA\";\n    tokenType[tokenType[\"ASSIGN\"] = 6] = \"ASSIGN\";\n    tokenType[tokenType[\"ADD\"] = 7] = \"ADD\";\n    tokenType[tokenType[\"SUB\"] = 8] = \"SUB\";\n    tokenType[tokenType[\"MUL\"] = 9] = \"MUL\";\n    tokenType[tokenType[\"DIV\"] = 10] = \"DIV\";\n    tokenType[tokenType[\"POW\"] = 11] = \"POW\";\n    tokenType[tokenType[\"MOD\"] = 12] = \"MOD\";\n    tokenType[tokenType[\"OPAREN\"] = 13] = \"OPAREN\";\n    tokenType[tokenType[\"CPAREN\"] = 14] = \"CPAREN\";\n    tokenType[tokenType[\"OBRACES\"] = 15] = \"OBRACES\";\n    tokenType[tokenType[\"CBRACES\"] = 16] = \"CBRACES\";\n    tokenType[tokenType[\"OSQUARE\"] = 17] = \"OSQUARE\";\n    tokenType[tokenType[\"CSQUARE\"] = 18] = \"CSQUARE\";\n    tokenType[tokenType[\"EQUALS\"] = 19] = \"EQUALS\";\n    tokenType[tokenType[\"NOTEQUALS\"] = 20] = \"NOTEQUALS\";\n    tokenType[tokenType[\"NOT\"] = 21] = \"NOT\";\n    tokenType[tokenType[\"GT\"] = 22] = \"GT\";\n    tokenType[tokenType[\"LT\"] = 23] = \"LT\";\n    tokenType[tokenType[\"GTE\"] = 24] = \"GTE\";\n    tokenType[tokenType[\"LTE\"] = 25] = \"LTE\";\n    tokenType[tokenType[\"AND\"] = 26] = \"AND\";\n    tokenType[tokenType[\"OR\"] = 27] = \"OR\";\n    tokenType[tokenType[\"COLON\"] = 28] = \"COLON\";\n    tokenType[tokenType[\"DOT\"] = 29] = \"DOT\";\n    tokenType[tokenType[\"EOF\"] = 30] = \"EOF\";\n    tokenType[tokenType[\"PIPE\"] = 31] = \"PIPE\";\n    tokenType[tokenType[\"APMERSAND\"] = 32] = \"APMERSAND\";\n    tokenType[tokenType[\"BITWISE_NOT\"] = 33] = \"BITWISE_NOT\";\n})(tokenType || (tokenType = {}));\nexport let tt = tokenType;\nexport const tokenTypeString = {\n    [tt.NUMBER]: 'Number',\n    [tt.STRING]: 'String',\n    [tt.ENDSTATEMENT]: ';',\n    [tt.IDENTIFIER]: 'Identifier',\n    [tt.KEYWORD]: 'Keyword',\n    [tt.COMMA]: ',',\n    [tt.OBRACES]: '{',\n    [tt.CBRACES]: '}',\n    [tt.OPAREN]: '(',\n    [tt.CPAREN]: ')',\n    [tt.OSQUARE]: '[',\n    [tt.CSQUARE]: ']',\n    [tt.ASSIGN]: '=',\n    [tt.ADD]: '+',\n    [tt.SUB]: '-',\n    [tt.MUL]: '*',\n    [tt.DIV]: '/',\n    [tt.POW]: '^',\n    [tt.MOD]: '%',\n    [tt.EQUALS]: '==',\n    [tt.NOTEQUALS]: '!=',\n    [tt.NOT]: '!',\n    [tt.GT]: '>',\n    [tt.LT]: '<',\n    [tt.GTE]: '>=',\n    [tt.LTE]: '<=',\n    [tt.AND]: '&&',\n    [tt.OR]: '||',\n    [tt.COLON]: ':',\n    [tt.DOT]: '.',\n    [tt.EOF]: 'End of File',\n    [tt.APMERSAND]: '&',\n    [tt.PIPE]: '|',\n    [tt.BITWISE_NOT]: '~',\n};\nexport const singleCharTokens = {\n    '*': tt.MUL,\n    '/': tt.DIV,\n    '+': tt.ADD,\n    '-': tt.SUB,\n    '(': tt.OPAREN,\n    ')': tt.CPAREN,\n    '^': tt.POW,\n    '%': tt.MOD,\n    '{': tt.OBRACES,\n    '}': tt.CBRACES,\n    ',': tt.COMMA,\n    '[': tt.OSQUARE,\n    ']': tt.CSQUARE,\n    ';': tt.ENDSTATEMENT,\n    ':': tt.COLON,\n    '.': tt.DOT,\n    '=': tt.ASSIGN,\n    '>': tt.GT,\n    '<': tt.LT,\n    '!': tt.NOT,\n    '|': tt.PIPE,\n    '&': tt.APMERSAND,\n    '~': tt.BITWISE_NOT\n};\nexport const doubleCharTokens = {\n    '==': tt.EQUALS,\n    '!=': tt.NOTEQUALS,\n    '>=': tt.GTE,\n    '<=': tt.LTE,\n    '+=': tt.ASSIGN,\n    '-=': tt.ASSIGN,\n    '*=': tt.ASSIGN,\n    '/=': tt.ASSIGN,\n    '&&': tt.AND,\n    '||': tt.OR\n};\nexport const tripleCharTokens = {};\nexport const primitiveMethods = [\n    '__add__',\n    '__subtract__',\n    '__multiply__',\n    '__divide__',\n    '__pow__',\n    '__eq__',\n    '__gt__',\n    '__lt__',\n    '__and__',\n    '__or__',\n    '__pipe__',\n    '__ampersand__',\n    '__bool__',\n    '__setProperty__',\n    '__getProperty__',\n    '__call__',\n];\nexport const types = {};\n","import { InvalidOperationError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { str } from '../../util/util';\nimport { strip } from './wrapStrip';\nimport { types } from \"../../constants\";\nexport class ESPrimitive {\n    constructor(value, type = types.any) {\n        this.self = this;\n        this.isa = (props, type) => {\n            return type.typeCheck(props, this);\n        };\n        this.is = (props, obj) => {\n            return new ESBoolean(obj === this);\n        };\n        this.valueOf = () => this.__value__;\n        this.typeName = () => str(this.__type__);\n        this.hasProperty = (props, key) => new ESBoolean(this.hasOwnProperty(str(key)));\n        this.describe = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            this.info.description = str(info);\n        };\n        this.detail = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            const res = strip(info, props);\n            if (typeof res !== 'object') {\n                return new TypeError(Position.void, 'object', this.typeName(), str(this));\n            }\n            this.info = Object.assign(Object.assign({}, this.info), res);\n            this.info.isBuiltIn = false;\n        };\n        this.__type__ = type || this;\n        this.__value__ = value;\n        this.info = {};\n    }\n    __add__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __subtract__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __multiply__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __divide__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __pow__(props, n) {\n        return new InvalidOperationError('__pow__', this);\n    }\n    __mod__(props, n) {\n        return new InvalidOperationError('__mod__', this);\n    }\n    __eq__(props, n) {\n        return new InvalidOperationError('__eq__', this);\n    }\n    __gt__(props, n) {\n        return new InvalidOperationError('__gt__', this);\n    }\n    __lt__(props, n) {\n        return new InvalidOperationError('__lt__', this);\n    }\n    __and__(props, n) {\n        return new InvalidOperationError('__and__', this);\n    }\n    __or__(props, n) {\n        return new InvalidOperationError('__or__', this);\n    }\n    __bool__(props) {\n        return new InvalidOperationError('__bool__', this);\n    }\n    __pipe__(props, n) {\n        return new InvalidOperationError('__pipe__', this);\n    }\n    __ampersand__(props, n) {\n        return new InvalidOperationError('__ampersand__', this);\n    }\n    __setProperty__(props, key, value) {\n        return new InvalidOperationError('__setProperty__', this, `[${str(key)}] = ${str(value)}`);\n    }\n    __call__(props, ...parameters) {\n        return new InvalidOperationError('__call__', this);\n    }\n}\n","import { ESPrimitive } from './esprimitive';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nimport { str } from \"../../util/util\";\nimport { ESArray } from \"./esarray\";\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESErrorPrimitive extends ESPrimitive {\n    constructor(error = new ESError(Position.void, 'Unknown', 'Error not specified')) {\n        super(error, types.error);\n        this.__getProperty__ = (props, key) => {\n            switch (str(key)) {\n                case 'name':\n                    return new ESString(this.valueOf().name);\n                case 'details':\n                    return new ESString(this.valueOf().details);\n                case 'traceback':\n                    return new ESArray(this.valueOf().traceback\n                        .map(s => new ESString(`${s.position.str} : ${s.line}`)));\n                default:\n                    if (this.self.hasOwnProperty(str(key))) {\n                        return wrap(this.self[str(key)], true);\n                    }\n                    return new IndexError(Position.void, key.valueOf(), this);\n            }\n        };\n        this.cast = () => new ESError(Position.void, 'TypeError', `Cannot cast type 'error'`);\n        this.str = () => new ESString(`<Error: ${this.valueOf().str}>`);\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(n instanceof ESErrorPrimitive &&\n                this.valueOf().constructor === n.valueOf().constructor);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.clone = () => new ESErrorPrimitive(this.valueOf());\n        this.typeCheck = this.__eq__;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { ESType, ESTypeIntersection, ESTypeUnion } from './estype';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { wrap } from \"./wrapStrip\";\nimport { types } from \"../../constants\";\nexport class ESUndefined extends ESPrimitive {\n    constructor() {\n        super(undefined, types.undefined);\n        this.cast = ({ context }, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber();\n                case types.string:\n                    return new ESString();\n                case types.array:\n                    return new ESArray();\n                case types.undefined:\n                    return new ESUndefined();\n                case types.type:\n                    return new ESType();\n                case types.error:\n                    return new ESErrorPrimitive();\n                case types.object:\n                case types.any:\n                    return new ESObject();\n                case types.function:\n                    return new ESFunction(() => { });\n                case types.boolean:\n                    return new ESBoolean();\n                default:\n                    if (!(type instanceof ESType)) {\n                        return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n                    }\n                    return type.__call__({ context });\n            }\n        };\n        this.str = () => new ESString('<Undefined>');\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(n instanceof ESUndefined ||\n                typeof n === 'undefined' ||\n                typeof n.valueOf() === 'undefined');\n        };\n        this.__bool__ = () => new ESBoolean();\n        this.bool = this.__bool__;\n        this.clone = () => new ESUndefined();\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.typeCheck = this.__eq__;\n        this.info = {\n            name: 'undefined',\n            description: 'Not defined, not a value.',\n            file: 'built-in',\n            isBuiltIn: true\n        };\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { strip, wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESObject extends ESPrimitive {\n    constructor(val = {}) {\n        super(val, types.object);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => {\n            let val = str(this.valueOf());\n            if (val[val.length - 1] === '\\n') {\n                val = val.substr(0, val.length - 1);\n            }\n            return new ESString(`<ESObject ${val}>`);\n        };\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new ESBoolean();\n            }\n            if (n.keys.length !== this.keys.length) {\n                return new ESBoolean();\n            }\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const thisElement = this.valueOf()[key];\n                const nElement = n.valueOf()[key];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new TypeError(Position.void, 'object', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const res = this.__getProperty__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            for (let k of n.keys) {\n                const key = k.valueOf();\n                if (newOb.hasOwnProperty(key)) {\n                    continue;\n                }\n                const res = n.__getProperty__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            return new ESObject(newOb);\n        };\n        this.__subtract__ = (props, n) => {\n            let keysToRemove = [];\n            if (n instanceof ESString) {\n                keysToRemove = [str(n)];\n            }\n            else if (n instanceof ESArray) {\n                keysToRemove = strip(n, props);\n            }\n            else {\n                return new TypeError(Position.void, 'array | string', n.typeName().valueOf(), n);\n            }\n            if (!Array.isArray(keysToRemove)) {\n                return new TypeError(Position.void, 'array | string', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                if (keysToRemove.indexOf(key) === -1) {\n                    let res = this.__getProperty__(props, k);\n                    if (res instanceof ESError) {\n                        return res;\n                    }\n                    newOb[key] = res;\n                }\n            }\n            return new ESObject(newOb);\n        };\n        this.__getProperty__ = (props, k) => {\n            if (!(k instanceof ESString) && !(k instanceof ESNumber)) {\n                return new TypeError(Position.void, 'string | number', k.typeName(), str(k));\n            }\n            const key = k.valueOf();\n            if (this.valueOf().hasOwnProperty(key)) {\n                return this.valueOf()[key];\n            }\n            if (this.self.hasOwnProperty(key)) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new ESUndefined();\n        };\n        this.__setProperty__ = ({}, key, value) => {\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.void, 'string', key.typeName(), str(key));\n            }\n            this.__value__[key.valueOf()] = value;\n        };\n        this.hasProperty = (props, k) => {\n            const key = str(k);\n            if (this.valueOf().hasOwnProperty(str(key))) {\n                return new ESBoolean(true);\n            }\n            return new ESBoolean(this.hasOwnProperty(key));\n        };\n        this.clone = () => {\n            const res = new ESObject();\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            res.__value__ = obj;\n            return res;\n        };\n        this.typeCheck = (props, n) => {\n            if (!(n instanceof ESObject)) {\n                return new ESBoolean();\n            }\n            if (Object.keys(this.valueOf()).length !== Object.keys(n.valueOf()).length) {\n                return new ESBoolean();\n            }\n            for (let key of Object.keys(this.valueOf())) {\n                if (!n.valueOf().hasOwnProperty(key) || !this.valueOf().hasOwnProperty(key)) {\n                    return new ESBoolean();\n                }\n                const thisType = this.valueOf()[key];\n                const nValue = n.valueOf()[key];\n                if (!thisType.typeCheck(props, nValue).valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n    }\n    get keys() {\n        return Object.keys(this.valueOf()).map(s => new ESString(s));\n    }\n    set keys(val) { }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESPrimitive } from './esprimitive';\nimport { global, types } from '../../constants';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { Context } from '../context';\nimport { call } from '../functionCaller';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESFunction extends ESPrimitive {\n    constructor(func = (() => { }), arguments_ = [], name = '(anon)', this_ = new ESObject(), returnType = types.any, closure) {\n        super(func, types.function);\n        this.cast = (props, type) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast type 'function'`);\n        };\n        this.clone = () => {\n            return new ESFunction(this.__value__, this.arguments_, this.name, this.this_, this.returnType, this.__closure__);\n        };\n        this.valueOf = () => this;\n        this.str = () => new ESString(`<Func: ${this.name}>`);\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESFunction))\n                return new ESBoolean(false);\n            return new ESBoolean(this.__value__ === n.__value__);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__call__ = ({ context }, ...params) => {\n            this.__closure__.path = context.path;\n            return call(this.__closure__, this, params);\n        };\n        this.__getProperty__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.typeCheck = (props, n) => {\n            if (!(n instanceof ESFunction)) {\n                return new ESBoolean();\n            }\n            if (this.arguments_.length !== n.arguments_.length) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.arguments_.length; i++) {\n                if (!this.arguments_[i].type.typeCheck(props, n.arguments_[i].type).valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            const thisReturnVal = this.__call__(props);\n            if (thisReturnVal instanceof ESError) {\n                return thisReturnVal;\n            }\n            if (!thisReturnVal.__eq__(props, n.returnType).valueOf()) {\n                return new ESBoolean();\n            }\n            return new ESBoolean(true);\n        };\n        this.arguments_ = arguments_;\n        this.info.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        if (closure) {\n            this.__closure__ = closure;\n        }\n        else {\n            this.__closure__ = new Context();\n            this.__closure__.parent = global;\n        }\n        this.info.returnType = str(returnType);\n        this.info.args = arguments_.map(arg => ({\n            name: arg.name,\n            defaultValue: str(arg.defaultValue),\n            type: arg.type.info.name,\n            required: true\n        }));\n    }\n    get name() {\n        var _a;\n        return (_a = this.info.name) !== null && _a !== void 0 ? _a : '(anonymous)';\n    }\n    set name(v) {\n        this.info.name = v;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { str } from '../util/util';\nimport { Node } from \"./nodes\";\nimport { generateESFunctionCallContext } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { ESObject, ESPrimitive, ESUndefined } from \"./primitiveTypes\";\nfunction callNode(self, context, params, fn) {\n    var _a, _b;\n    const res = fn.interpret(context);\n    if (res.error)\n        return res.error;\n    if (res.funcReturn !== undefined) {\n        res.val = res.funcReturn;\n        res.funcReturn = undefined;\n    }\n    if (self.returnType.typeCheck({ context }, res.val).valueOf() === false) {\n        return new TypeError(Position.void, str(self.returnType), ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || 'undefined', (_b = res.val) === null || _b === void 0 ? void 0 : _b.str().valueOf(), '(from function return)');\n    }\n    if (res.val) {\n        return res.val;\n    }\n    else {\n        return new ESUndefined();\n    }\n}\nfunction callNative(self, context, params, fn) {\n    for (let i = params.length; i < fn.length; i++)\n        params.push(new ESUndefined());\n    const res = fn({\n        context\n    }, ...params);\n    if (res instanceof ESError || res instanceof ESPrimitive) {\n        return res;\n    }\n    return new ESUndefined();\n}\nexport function call(context, self, params) {\n    var _a;\n    let callContext = context;\n    context = self.__closure__;\n    context.path = callContext.path;\n    const fn = self.__value__;\n    const newContext = generateESFunctionCallContext(params, self, context);\n    if (newContext instanceof ESError) {\n        return newContext;\n    }\n    let this_ = (_a = self.this_) !== null && _a !== void 0 ? _a : new ESObject();\n    if (!(this_ instanceof ESObject)) {\n        return new TypeError(Position.void, 'object', typeof this_, this_, '\\'this\\' must be an object');\n    }\n    let setRes = newContext.setOwn('this', this_);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    if (fn instanceof Node) {\n        return callNode(self, newContext, params, fn);\n    }\n    else if (typeof fn === 'function') {\n        return callNative(self, newContext, params, fn);\n    }\n    else {\n        return new TypeError(Position.void, 'function', typeof fn);\n    }\n}\n","import { initialise } from \"../init\";\nimport { ESError, TypeError, ReferenceError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESPrimitive, ESUndefined } from \"./primitiveTypes\";\nimport { str } from \"../util/util\";\nimport { ESSymbol } from './symbol';\nimport chalk from \"../util/colours\";\nimport { types } from \"../constants\";\nexport class Context {\n    constructor() {\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        this.deleted = false;\n        this.path_ = '';\n    }\n    get path() {\n        if (this.path_ || !this.parent) {\n            return this.path_;\n        }\n        return this.parent.path;\n    }\n    set path(val) {\n        this.path_ = val;\n    }\n    get parent() {\n        return this.parent_;\n    }\n    set parent(val) {\n        if (val == this) {\n            console.error(chalk.red(`Setting context parent to self`));\n            return;\n        }\n        this.parent_ = val;\n    }\n    has(identifier) {\n        if (!identifier)\n            return false;\n        return this.get(identifier) !== undefined;\n    }\n    hasOwn(identifier) {\n        return this.symbolTable[identifier] instanceof ESSymbol;\n    }\n    get(identifier) {\n        let symbol = this.getSymbol(identifier);\n        if (symbol instanceof ESError || symbol == undefined) {\n            return symbol;\n        }\n        return symbol.value;\n    }\n    getRawSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key].value;\n        return symbols;\n    }\n    getSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key];\n        return symbols;\n    }\n    getSymbol(identifier) {\n        let symbol = this.symbolTable[identifier];\n        if (symbol !== undefined && !symbol.isAccessible)\n            return new TypeError(Position.void, 'assessable', 'inaccessible', symbol.identifier);\n        if (symbol === undefined && this.parent) {\n            let res = this.parent.getSymbol(identifier);\n            if (res instanceof ESError)\n                return res;\n            if (!res)\n                return new ReferenceError(Position.void, identifier);\n            symbol = res;\n        }\n        return symbol;\n    }\n    set(identifier, value, options = {}) {\n        let context = this;\n        if (options.global) {\n            context = this.root;\n        }\n        else {\n            while (!context.hasOwn(identifier) && context.parent !== undefined) {\n                context = context.parent;\n            }\n            if (!context.hasOwn(identifier)) {\n                context = this;\n            }\n        }\n        return context.setOwn(identifier, value, options);\n    }\n    setOwn(identifier, value, options = {}) {\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        if (options.global && !this.initialisedAsGlobal) {\n            options.global = false;\n        }\n        if (!options.forceThroughConst) {\n            let symbol = this.symbolTable[identifier];\n            if (symbol === null || symbol === void 0 ? void 0 : symbol.isConstant)\n                return new TypeError(Position.void, 'dynamic', 'constant', identifier);\n        }\n        this.symbolTable[identifier] = new ESSymbol(value, identifier, options);\n    }\n    remove(identifier) {\n        delete this.symbolTable[identifier];\n    }\n    clear() {\n        for (let symbol in this.symbolTable) {\n            this.remove(symbol);\n        }\n        this.parent = undefined;\n        this.deleted = true;\n    }\n    get root() {\n        let parent = this;\n        while (parent.parent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    get keys() {\n        return Object.keys(this.symbolTable);\n    }\n    resetAsGlobal() {\n        var _a, _b;\n        if (!this.initialisedAsGlobal)\n            return;\n        const printFunc = this.root.get('print');\n        const inputFunc = this.root.get('input');\n        if (!(printFunc instanceof ESPrimitive) || !(inputFunc instanceof ESPrimitive)) {\n            console.error('Error with print and input functions.');\n            return;\n        }\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        initialise(this, ((_a = printFunc.valueOf()) === null || _a === void 0 ? void 0 : _a.func) || console.log, ((_b = inputFunc.valueOf()) === null || _b === void 0 ? void 0 : _b.func) || (() => { }));\n    }\n    clone() {\n        const newContext = new Context();\n        newContext.parent = this.parent;\n        newContext.deleted = this.deleted;\n        newContext.initialisedAsGlobal = this.initialisedAsGlobal;\n        newContext.symbolTable = Object.assign(Object.assign({}, newContext.symbolTable), this.symbolTable);\n        return newContext;\n    }\n    deepClone() {\n        var _a;\n        let clone = this.clone();\n        clone.parent = (_a = clone.parent) === null || _a === void 0 ? void 0 : _a.deepClone();\n        return clone;\n    }\n    log() {\n        console.log('---- CONTEXT ----');\n        for (let key in this.symbolTable) {\n            const symbol = this.symbolTable[key];\n            let out = key;\n            if (symbol.isConstant)\n                out += ' (CONST)';\n            if (!symbol.isAccessible)\n                out += ' (INACCESSIBLE)';\n            out += ': ';\n            out += str(this.symbolTable[key].value);\n            console.log(out);\n        }\n        console.log('-----------------');\n    }\n}\nexport function generateESFunctionCallContext(params, self, parent) {\n    const newContext = new Context();\n    newContext.parent = parent;\n    let max = Math.max(params.length, self.arguments_.length);\n    for (let i = 0; i < max; i++) {\n        let value = new ESUndefined();\n        let type = types.any;\n        if (!self.arguments_[i]) {\n            continue;\n        }\n        const arg = self.arguments_[i];\n        if (params[i] instanceof ESPrimitive) {\n            type = params[i].__type__;\n            value = params[i];\n        }\n        const typeIncludes = arg.type.typeCheck({ context: parent }, params[i]);\n        if (typeIncludes instanceof ESError)\n            return typeIncludes;\n        if (!typeIncludes.valueOf()) {\n            return new TypeError(Position.void, str(arg.type), str(type), str(value));\n        }\n        newContext.setOwn(arg.name, value, {\n            forceThroughConst: true\n        });\n    }\n    let setRes = newContext.setOwn('args', new ESArray(params), {\n        forceThroughConst: true\n    });\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    return newContext;\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESNamespace extends ESPrimitive {\n    constructor(name, value, mutable = false) {\n        super(value, types.object);\n        this.cast = ({}) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast type 'namespace'`);\n        };\n        this.clone = () => {\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            return new ESNamespace(this.name, obj);\n        };\n        this.str = () => {\n            const keys = Object.keys(this.valueOf());\n            return new ESString(`<Namespace ${str(this.name)}${keys.length > 0 ? ': ' : ''}${keys.slice(0, 5)}${keys.length >= 5 ? '...' : ''}>`);\n        };\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.valueOf().hasOwnProperty(key.valueOf())) {\n                const symbol = this.valueOf()[key.valueOf()];\n                if (symbol.isAccessible) {\n                    return symbol.value;\n                }\n            }\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.void, 'string', key.typeName());\n            }\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this.self);\n        };\n        this.typeCheck = this.__eq__;\n        this.info.name = str(name);\n        this.mutable = mutable;\n    }\n    get name() {\n        return new ESString(this.info.name);\n    }\n    set name(v) {\n        this.info.name = v.valueOf();\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESString)) {\n            return new TypeError(Position.void, 'string', key.typeName().valueOf(), str(key));\n        }\n        let idx = str(key);\n        if (!this.mutable) {\n            return new TypeError(Position.void, 'mutable', 'immutable', `${str(this.name)}`);\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        const symbol = this.__value__[idx];\n        if (!symbol) {\n            return new ESError(Position.void, 'SymbolError', `Symbol ${idx} is not declared in namespace ${str(this.name)}.`);\n        }\n        if (symbol.isConstant) {\n            return new TypeError(Position.void, 'mutable', 'immutable', `${str(this.name)}[${idx}]`);\n        }\n        if (!symbol.isAccessible) {\n            return new TypeError(Position.void, 'accessible', 'inaccessible', `${str(this.name)}[${idx}]`);\n        }\n        symbol.value = value;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { strip, wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESJSBinding extends ESPrimitive {\n    constructor(value, name = '<AnonNative>', functionsTakeProps = false) {\n        super(value, types.object);\n        this.cast = (props) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast native object`);\n        };\n        this.clone = () => new ESJSBinding(this.__value__);\n        this.str = () => {\n            try {\n                return new ESString(JSON.stringify(this.__value__));\n            }\n            catch (e) {\n                return new ESString(`${this.__value__}`);\n            }\n        };\n        this.__eq__ = ({}, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, k) => {\n            const key = str(k);\n            const val = this.valueOf();\n            const res = val[key];\n            if (res === undefined) {\n                if (this.self.hasOwnProperty(key)) {\n                    return wrap(this.self[str(key)], true);\n                }\n                return new IndexError(Position.void, key, this);\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            if (typeof res === 'function') {\n                let fTakesProps = this.functionsTakeProps;\n                return new ESFunction((props, ...args) => {\n                    if (!fTakesProps) {\n                        args = args.map(o => strip(o, props));\n                        const res = val[key](...args);\n                        return wrap(res);\n                    }\n                    else {\n                        return val[key](props, ...args);\n                    }\n                });\n            }\n            return wrap(res);\n        };\n        this.__call__ = (props, ...args) => {\n            if (typeof this.__value__ !== 'function') {\n                return new TypeError(Position.void, 'function', typeof this.__value__, str(this));\n            }\n            let res;\n            if (this.functionsTakeProps) {\n                try {\n                    res = new this.__value__(props, ...args);\n                }\n                catch (_a) {\n                    res = this.__value__(props, ...args);\n                }\n            }\n            else {\n                try {\n                    res = new this.__value__(...args.map(o => strip(o, props)));\n                }\n                catch (_b) {\n                    res = this.__value__(...args.map(o => strip(o, props)));\n                }\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            return wrap(res);\n        };\n        this.hasProperty = (props, key) => {\n            return new ESBoolean(!(this.__getProperty__(props, key) instanceof ESError));\n        };\n        this.typeCheck = this.__eq__;\n        this.info.name = str(name);\n        this.functionsTakeProps = functionsTakeProps;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESPrimitive } from './primitives/esprimitive';\nimport { ESArray } from './primitives/esarray';\nimport { ESBoolean } from './primitives/esboolean';\nimport { ESErrorPrimitive } from './primitives/eserrorprimitive';\nimport { ESFunction } from './primitives/esfunction';\nimport { ESNumber } from './primitives/esnumber';\nimport { ESObject } from './primitives/esobject';\nimport { ESString } from './primitives/esstring';\nimport { ESType } from './primitives/estype';\nimport { ESUndefined } from './primitives/esundefined';\nimport { ESNamespace } from './primitives/esnamespace';\nimport { ESJSBinding } from \"./primitives/esjsbinding\";\nimport { types } from \"../constants\";\nexport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNumber, ESPrimitive, ESString, ESObject, ESType, ESUndefined, ESNamespace, ESJSBinding };\nexport function initPrimitiveTypes() {\n    types.type = new ESType(true, 'Type');\n    types.undefined = new ESType(true, 'Undefined');\n    types.string = new ESType(true, 'String');\n    types.array = new ESType(true, 'Array');\n    types.number = new ESType(true, 'Number');\n    types.any = new ESType(true, 'Any');\n    types.function = new ESType(true, 'Function');\n    types.bool = new ESType(true, 'Boolean');\n    types.object = new ESType(true, 'Object');\n    types.error = new ESType(true, 'Error');\n    types.any.info = {\n        name: 'any',\n        description: 'Matches any other type',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.number.info = {\n        name: 'any',\n        description: 'The ES Number type. Is a a double-precision 64-bit binary format IEEE 754 value, like double in Java and C#',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.string.info = {\n        name: 'string',\n        description: 'The ES String type. Holds an array of characters, and can be defined with any of \\', \" and `. Can be indexed like an array.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.bool.info = {\n        name: 'bool',\n        description: 'The ES Bool type. Exactly two instances exist, true and false.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.function.info = {\n        name: 'function',\n        description: 'The ES Function type. Is a block of code which executes when called and takes in 0+ parameters.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.array.info = {\n        name: 'array',\n        description: 'The ES Array type. Defines a set of items of any type which can be accessed by an index with [].',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.object.info = {\n        name: 'object',\n        description: 'The ES Object type. Similar to JS objects or python dictionaries.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.error.info = {\n        name: 'error',\n        description: 'The ES Error type. Call to throw an error.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.type.info = {\n        name: 'type',\n        description: 'The ES Type type. Call to get the type of a value at a string.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n}\n","import { primitiveMethods } from '../constants';\nimport { Context } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESFunction, ESNumber, ESObject, ESString, ESType, ESUndefined } from \"./primitiveTypes\";\nfunction dealWithExtends(context, class_, instance, this_, callContext) {\n    if (!(class_ instanceof ESType)) {\n        return new TypeError(Position.void, 'Type', typeof class_, class_);\n    }\n    const superFunc = new ESFunction(({ context }, ...args) => {\n        const newContext = new Context();\n        newContext.parent = context;\n        if (class_.__extends__) {\n            let _a = dealWithExtends(newContext, class_.__extends__, instance, this_, callContext);\n            if (_a instanceof ESError) {\n                return _a;\n            }\n        }\n        const initFunc = class_ === null || class_ === void 0 ? void 0 : class_.__init__;\n        if (!initFunc) {\n            return;\n        }\n        initFunc.this_ = this_;\n        initFunc.__closure__ = newContext;\n        const res_ = initFunc.__call__({ context: newContext }, ...args);\n        if (res_ instanceof ESError) {\n            return res_;\n        }\n    }, undefined, 'super', this_);\n    let setRes = context.setOwn('super', superFunc);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    const res = createInstance(class_, { context }, [], false, instance);\n    if (res instanceof ESError) {\n        return res;\n    }\n}\nexport function createInstance(type, { context }, params, runInit = true, on = {}) {\n    var _b;\n    if (type.primitive) {\n        if (params.length < 1) {\n            return new ESUndefined();\n        }\n        switch (type.__name__) {\n            case 'Undefined':\n            case 'Type':\n                if (params.length < 1) {\n                    return new ESType();\n                }\n                else {\n                    return new ESString(params[0].typeName());\n                }\n            case 'String':\n                return new ESString(params[0].str().valueOf());\n            case 'Array':\n                return new ESArray(params);\n            case 'Number':\n                return new ESNumber(params[0].valueOf());\n            case 'Function':\n                return new ESFunction(params[0].valueOf());\n            case 'Boolean':\n                return new ESBoolean(params[0].bool().valueOf());\n            default:\n                return wrap(params[0]);\n        }\n    }\n    const newContext = new Context();\n    newContext.parent = (_b = type.__init__) === null || _b === void 0 ? void 0 : _b.__closure__;\n    const instance = new ESObject();\n    if (type.__extends__) {\n        let res = dealWithExtends(newContext, type.__extends__, on, instance, context);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__value__ = on;\n    for (let method of type.__methods__) {\n        const methodClone = method.clone();\n        methodClone.this_ = instance;\n        on[method.name] = methodClone;\n        if (primitiveMethods.indexOf(method.name) !== -1) {\n            instance[method.name] = methodClone.__call__;\n        }\n    }\n    if (runInit && type.__init__) {\n        type.__init__.this_ = instance;\n        type.__init__.__closure__ = newContext;\n        const res = type.__init__.__call__({ context: newContext }, ...params);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__type__ = type;\n    type.__instances__.push(instance);\n    return instance;\n}\n","import { ESPrimitive } from './esprimitive';\nimport { ESError, InvalidOperationError, TypeError } from '../../errors';\nimport { createInstance } from '../instantiator';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nimport { Position } from \"../../position\";\nimport { str } from \"../../util/util\";\nimport { types } from \"../../constants\";\nimport { ESTypeArray } from \"./esarray\";\nexport class ESType extends ESPrimitive {\n    constructor(isPrimitive = false, name = '(anon)', __methods__ = [], __extends__, __init__) {\n        super(undefined, types === null || types === void 0 ? void 0 : types.type);\n        this.__instances__ = [];\n        this.clone = () => {\n            return new ESType(this.primitive, this.__name__, this.__methods__, this.__extends__, this.__init__);\n        };\n        this.isa = (props, type) => {\n            return new ESBoolean(type === types.type);\n        };\n        this.cast = (props, type) => {\n            return new InvalidOperationError('cast', this);\n        };\n        this.typeCheck = (props, n) => {\n            var _a, _b;\n            if (!n)\n                return new ESBoolean();\n            let t = n.__type__;\n            if (this === types.any ||\n                t === types.any ||\n                t === this ||\n                this.__extends__ === t ||\n                this.__extends__ === types.any ||\n                this.__extends__ === n ||\n                (((_a = this.__extends__) === null || _a === void 0 ? void 0 : _a.typeCheck(props, n).valueOf()) === true)) {\n                return new ESBoolean(true);\n            }\n            if (t instanceof ESType && (t.__extends__ === this ||\n                t.__extends__ === types.any ||\n                (((_b = t.__extends__) === null || _b === void 0 ? void 0 : _b.typeCheck(props, this).valueOf()) === true))) {\n                return new ESBoolean(true);\n            }\n            return new ESBoolean();\n        };\n        this.__eq__ = (props, t) => {\n            return new ESBoolean(t === this);\n        };\n        this.__call__ = (props, ...params) => {\n            return createInstance(this, props, params || []);\n        };\n        this.str = () => new ESString(this.__name__);\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, k) => {\n            if (!(k instanceof ESString)) {\n                if (this === types.array) {\n                    return new ESTypeArray(k);\n                }\n                return new TypeError(Position.void, 'string', k.typeName(), str(k));\n            }\n            const key = k.valueOf();\n            if (this.self.hasOwnProperty(key)) {\n                return wrap(this.self[key], true);\n            }\n            return new ESTypeArray(k);\n        };\n        this.primitive = isPrimitive;\n        this.__name__ = name;\n        this.info.name = name;\n        this.__extends__ = __extends__;\n        this.__methods__ = __methods__;\n        if (__init__) {\n            __init__.name = name;\n            this.__init__ = __init__;\n        }\n        if (!types.type) {\n            this.__type__ = this;\n        }\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\nexport class ESTypeUnion extends ESType {\n    constructor(left, right) {\n        super(false, `(${str(left)}) | (${str(right)})`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.typeCheck = (props, t) => {\n            const leftRes = this.__left__.typeCheck(props, t);\n            const rightRes = this.__right__.typeCheck(props, t);\n            if (leftRes instanceof ESError)\n                return leftRes;\n            if (rightRes instanceof ESError)\n                return rightRes;\n            return new ESBoolean(leftRes.valueOf() ||\n                rightRes.valueOf());\n        };\n        this.clone = () => {\n            return new ESTypeUnion(this.__left__, this.__right__);\n        };\n        this.__eq__ = (props, t) => {\n            return new ESBoolean(t instanceof ESTypeUnion &&\n                this.__left__.__eq__(props, t.__left__).valueOf() === true &&\n                this.__right__.__eq__(props, t.__right__).valueOf() === true);\n        };\n        this.__left__ = left;\n        this.__right__ = right;\n    }\n}\nexport class ESTypeIntersection extends ESType {\n    constructor(left, right) {\n        super(false, `(${str(left)}) & (${str(right)})`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.typeCheck = (props, t) => {\n            const leftRes = this.__left__.typeCheck(props, t);\n            const rightRes = this.__right__.typeCheck(props, t);\n            if (leftRes instanceof ESError)\n                return leftRes;\n            if (rightRes instanceof ESError)\n                return rightRes;\n            return new ESBoolean(leftRes.valueOf() &&\n                rightRes.valueOf());\n        };\n        this.clone = () => {\n            return new ESTypeIntersection(this.__left__, this.__right__);\n        };\n        this.__eq__ = (props, t) => {\n            return new ESBoolean(t instanceof ESTypeIntersection &&\n                this.__left__.__eq__(props, t.__left__).valueOf() === true &&\n                this.__right__.__eq__(props, t.__right__).valueOf() === true);\n        };\n        this.__left__ = left;\n        this.__right__ = right;\n    }\n}\nexport class ESTypeNot extends ESType {\n    constructor(type) {\n        super(false, `~(${str(type)})`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.typeCheck = (props, t) => {\n            const res = this.__val__.typeCheck(props, t);\n            if (res instanceof ESError)\n                return res;\n            return new ESBoolean(!res.valueOf());\n        };\n        this.clone = () => {\n            return new ESTypeNot(this.__val__);\n        };\n        this.__eq__ = (props, t) => {\n            return new ESBoolean(t instanceof ESTypeNot &&\n                this.__val__.__eq__(props, t.__val__).valueOf() === true);\n        };\n        this.__val__ = type;\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { wrap } from \"./wrapStrip\";\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESNumber extends ESPrimitive {\n    constructor(value = 0) {\n        super(value, types.number);\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return this;\n                case types.string:\n                    return this.str();\n                case types.array:\n                    return new ESArray(new Array(this.valueOf()));\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(this.valueOf().toString());\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() + n.valueOf());\n        };\n        this.__subtract__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() - n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() * n.valueOf());\n        };\n        this.__divide__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() / n.valueOf());\n        };\n        this.__pow__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESNumber(Math.pow(this.valueOf(), n.valueOf()));\n        };\n        this.__mod__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESNumber(this.valueOf() % n.valueOf());\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new ESBoolean(false);\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() > n.valueOf());\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() < n.valueOf());\n        };\n        this.__bool__ = () => {\n            return new ESBoolean(this.valueOf() > 0);\n        };\n        this.bool = this.__bool__;\n        this.clone = () => new ESNumber(this.valueOf());\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.typeCheck = this.__eq__;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESBoolean extends ESPrimitive {\n    constructor(val = false) {\n        super(Boolean(val), types.bool);\n        this.__getProperty__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESBoolean)) {\n                return new TypeError(Position.void, 'Boolean', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__bool__ = () => this;\n        this.__and__ = (props, n) => new ESBoolean(this.valueOf() && n.bool().valueOf());\n        this.__or__ = (props, n) => {\n            return new ESBoolean(this.valueOf() || n.bool().valueOf());\n        };\n        this.str = () => new ESString(this.valueOf() ? 'true' : 'false');\n        this.clone = () => new ESBoolean(this.valueOf());\n        this.bool = () => this;\n        this.typeCheck = this.__eq__;\n        this.info = {\n            name: str(val),\n            description: `Boolean global constant which evaluates to ${str(val)}, the opposite of ${str(!val)}`,\n            file: 'built-in',\n            isBuiltIn: true,\n            helpLink: 'https://en.wikipedia.org/wiki/Boolean_expression'\n        };\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, InvalidOperationError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nimport { ESType, ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESArray extends ESPrimitive {\n    constructor(values = []) {\n        super(values, types.array);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.len);\n                case types.boolean:\n                    return this.bool();\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(str(this.valueOf()));\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESArray)) {\n                return new ESBoolean();\n            }\n            if (n.len !== this.len) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.len; i++) {\n                const thisElement = this.valueOf()[i];\n                const nElement = n.valueOf()[i];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESArray)) {\n                return new TypeError(Position.void, 'array', n.typeName().valueOf(), n);\n            }\n            return new ESArray([...this.valueOf(), ...n.valueOf()]);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESUndefined();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return this.valueOf()[idx];\n            }\n            return new ESUndefined();\n        };\n        this.contains = (props, val) => {\n            for (let element of this.__value__) {\n                if (val.__eq__(props, element)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        this.clone = () => {\n            const newArr = [];\n            for (let element of this.valueOf()) {\n                newArr.push(element);\n            }\n            return new ESArray(newArr);\n        };\n        this.typeCheck = (props, n) => {\n            if (!(n instanceof ESArray) || this.len !== n.len) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.__value__.length; i++) {\n                const res = this.__value__[i].typeCheck(props, n.__value__[i]);\n                if (res instanceof ESError)\n                    return res;\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.len = values.length;\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESNumber)) {\n            return;\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        let idx = key.valueOf();\n        while (idx < 0) {\n            idx = this.valueOf().length + idx;\n        }\n        this.__value__[idx] = value;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\nexport class ESTypeArray extends ESType {\n    constructor(type) {\n        super(false, `array[${str(type)}]`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.typeCheck = (props, t) => {\n            if (!(t instanceof ESArray)) {\n                return new ESBoolean();\n            }\n            for (const element of t.valueOf()) {\n                if (!this.type.typeCheck(props, element).valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.clone = () => {\n            return new ESTypeArray(this.type);\n        };\n        this.type = type;\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESPrimitive } from './esprimitive';\nimport { wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESString extends ESPrimitive {\n    constructor(value = '') {\n        super(value, types.string);\n        this.str = () => this;\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    const num = parseFloat(this.valueOf());\n                    if (isNaN(num)) {\n                        return new ESError(Position.void, 'TypeError', `This string is not a valid number`);\n                    }\n                    return new ESNumber(num);\n                case types.string:\n                    return this;\n                case types.array:\n                    return new ESArray(this.valueOf().split('').map(s => new ESString(s)));\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESString(this.valueOf() + n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESString(this.valueOf().repeat(n.valueOf()));\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new ESBoolean(false);\n            }\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf().length > n.valueOf().length);\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf().length < n.valueOf().length);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.len = () => {\n            return new ESNumber(this.valueOf().length);\n        };\n        this.clone = () => new ESString(this.valueOf());\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESString();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return new ESString(this.valueOf()[idx]);\n            }\n            return new ESString();\n        };\n        this.typeCheck = this.__eq__;\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESNumber))\n            return;\n        if (!(value instanceof ESString))\n            value = new ESString(str(value));\n        let idx = key.valueOf();\n        while (idx < 0)\n            idx = this.valueOf().length + idx;\n        const strToInsert = value.str().valueOf();\n        let firstPart = this.__value__.substr(0, idx);\n        let lastPart = this.__value__.substr(idx + strToInsert.length);\n        this.__value__ = firstPart + strToInsert + lastPart;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESString } from './primitives/esstring';\nimport { types } from \"../constants\";\nexport class ESSymbol {\n    constructor(value, identifier, options = {}) {\n        var _a, _b, _c;\n        this.clone = () => {\n            return new ESSymbol(this.value.clone(), this.identifier, {\n                isConstant: this.isConstant,\n                isAccessible: this.isAccessible\n            });\n        };\n        this.str = () => new ESString(`<Symbol: ${this.identifier}>`);\n        this.value = value;\n        this.identifier = identifier;\n        this.isConstant = (_a = options.isConstant) !== null && _a !== void 0 ? _a : false;\n        this.isAccessible = (_b = options.isAccessible) !== null && _b !== void 0 ? _b : true;\n        this.type = (_c = options.type) !== null && _c !== void 0 ? _c : types.any;\n    }\n}\n","import { ESError } from '../../errors';\nimport { ESSymbol } from '../symbol';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESPrimitive } from './esprimitive';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESUndefined } from './esundefined';\nimport { ESJSBinding } from \"./esjsbinding\";\nexport function wrap(thing, functionsTakeProps = false) {\n    if (thing instanceof ESPrimitive) {\n        return thing;\n    }\n    else if (thing === undefined || thing === null) {\n        return new ESUndefined();\n    }\n    else if (thing instanceof ESError) {\n        return new ESErrorPrimitive(thing);\n    }\n    else if (thing instanceof ESSymbol) {\n        return thing.value;\n    }\n    else if (typeof thing === 'number') {\n        return new ESNumber(thing);\n    }\n    else if (typeof thing === 'string') {\n        return new ESString(thing);\n    }\n    else if (typeof thing === 'boolean') {\n        return new ESBoolean(thing);\n    }\n    else if (typeof thing === 'bigint') {\n        return new ESNumber(Number(thing));\n    }\n    else if (typeof thing === 'symbol') {\n        return new ESString(String(thing));\n    }\n    return new ESJSBinding(thing, undefined, functionsTakeProps);\n}\nexport function strip(thing, props) {\n    if (thing == undefined) {\n        return undefined;\n    }\n    else if (!(thing instanceof ESPrimitive)) {\n        return thing;\n    }\n    else if (thing instanceof ESArray) {\n        return thing.valueOf().map(m => strip(m, props), props);\n    }\n    else if (thing instanceof ESObject) {\n        let val = {};\n        for (let key in thing.valueOf()) {\n            val[key] = strip(thing.valueOf()[key], props);\n        }\n        return val;\n    }\n    else if (thing instanceof ESUndefined) {\n        return undefined;\n    }\n    else if (thing instanceof ESFunction) {\n        return (...args) => {\n            const res = thing.__call__(props, ...args.map(a => wrap(a)));\n            if (res instanceof ESError) {\n                return res;\n            }\n            return strip(res, props);\n        };\n    }\n    else if (thing instanceof ESType) {\n        return thing;\n    }\n    return thing.valueOf();\n}\n","import { IS_NODE_INSTANCE } from \"../constants\";\nconst codes = {\n    red: 31,\n    yellow: 33,\n    green: 32,\n    cyan: 36,\n    blue: 34,\n    grey: 2\n};\nconst c = {};\nfor (let code of Object.keys(codes)) {\n    c[code] = (s) => {\n        s || (s = '');\n        if (IS_NODE_INSTANCE) {\n            return `\\x1b[${codes[code]}m` + s + '\\x1b[0m';\n        }\n        return `<span style=\"color: ${code}\">${s}</span>`;\n    };\n}\nexport default c;\n","import { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from '../runtime/primitives/wrapStrip';\nimport { ESArray, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESUndefined } from '../runtime/primitiveTypes';\nimport { indent, sleep, str } from '../util/util';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport chalk from \"../util/colours\";\nexport const builtInFunctions = {\n    'range': [({ context }, minP, maxP, stepP) => {\n            if (!(minP instanceof ESNumber)) {\n                return new ESArray();\n            }\n            const min = minP.valueOf();\n            if (maxP instanceof ESUndefined) {\n                try {\n                    return new ESArray([...Array(min).keys()].map(n => new ESNumber(n)));\n                }\n                catch (e) {\n                    return new ESError(Position.void, 'RangeError', `Cannot make range of length '${str(min)}'`);\n                }\n            }\n            let step = 1;\n            if (!(maxP instanceof ESNumber)) {\n                return new TypeError(Position.void, 'number', maxP.typeName(), str(maxP));\n            }\n            let max = maxP.valueOf();\n            if (!(stepP instanceof ESUndefined)) {\n                if (!(stepP instanceof ESNumber)) {\n                    return new TypeError(Position.void, 'number', stepP.typeName(), str(stepP));\n                }\n                step = stepP.valueOf();\n            }\n            let arr = [];\n            let i = min;\n            while (i < max) {\n                arr.push(new ESNumber(i));\n                i += step;\n            }\n            return new ESArray(arr);\n        }, {\n            args: [{\n                    name: 'N',\n                    type: 'Number',\n                }],\n            description: 'Generates an array of integers given N. Starts at 0 and goes to N-1. Can be used like for i in range(10) ..., similarly to python.',\n            returns: 'array of numbers from 0 to N-1',\n            returnType: 'number[] | RangeError'\n        }],\n    'log': [({ context }, ...msgs) => {\n            console.log(...msgs.map(m => str(m)));\n        }, {\n            args: [{\n                    name: '...values',\n                    type: 'any[]'\n                }],\n            description: 'Uses console.log to log all values',\n            returnType: 'void'\n        }],\n    'parseNum': [({ context }, num) => {\n            try {\n                const val = parseFloat(str(num));\n                if (isNaN(val)) {\n                    return new ESError(Position.void, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n                }\n                return new ESNumber(val);\n            }\n            catch (e) {\n                return new ESError(Position.void, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n            }\n        }, {\n            args: [{\n                    name: 'num',\n                    type: 'any'\n                }],\n            description: `Converts a string of digits into a number. Works with decimals and integers. Calls .str() on value before using native JS 'parseFloat' function. Returns TypeError if the string can't be converted into a number.`,\n            returnType: 'number | TypeError'\n        }],\n    'help': [({ context }, ...things) => {\n            if (!things.length) {\n                return new ESString('Visit https://entropygames.io/entropy-script for help with Entropy Script!\\n' +\n                    'Try \\'help(<anything>)\\' for help about a particular object.');\n            }\n            let out = '';\n            for (const thing of things) {\n                if (!(thing instanceof ESPrimitive)) {\n                    console.log('Invalid arg not primitive: ' + str(thing));\n                    return;\n                }\n                const info = thing.info;\n                out += `${chalk.yellow(`Help on '${info.name || '(anonymous)'}'`)}:\n    \n    ${chalk.yellow('Value')}: ${indent(indent(str(thing)))}\n    ${chalk.yellow('Type')}: '${str(thing.typeName())}'\n    ${chalk.yellow('Location')}: ${info.file || chalk.yellow('(unknown)')}\n    \n        ${chalk.green(info.description) || `No description.`}\n        \n    ${info.helpLink ? chalk.cyan(info.helpLink + '\\n\\n') : ''}\n`;\n                if (info.args && thing instanceof ESFunction) {\n                    const total = info.args.length;\n                    const required = info.args.filter(a => a.required).length;\n                    if (total == required)\n                        out += chalk.yellow(`    Arguments (${total}): \\n`);\n                    else\n                        out += chalk.yellow(`    Arguments (${required}-${total}): \\n`);\n                    for (const [idx, arg] of info.args.entries()) {\n                        if (typeof arg !== 'object')\n                            out += `        ${idx + 1}. INVALID ARG INFO`;\n                        else\n                            out += `        ${idx + 1}. ${arg.name}${arg.required === false ? chalk.yellow(' (optional) ') : ' '}{${arg.type}} ${arg.description || ''}\\n`;\n                    }\n                    out += `\\n\\n`;\n                    if (info.returns)\n                        out += `    Returns: ${info.returns}\\n\\n`;\n                    if (info.returnType)\n                        out += `    Return Type: ${info.returnType}\\n\\n`;\n                }\n                if (info.contents && (thing instanceof ESObject || thing instanceof ESNamespace)) {\n                    out += '    Properties: \\n      ';\n                    for (let contents of info.contents)\n                        out += contents.name + '\\n      ';\n                }\n            }\n            console.log(out);\n            if (things.length > 1) {\n                return new ESArray(things);\n            }\n            if (things) {\n                return things[0];\n            }\n        }, {\n            args: [{\n                    name: 'value',\n                    type: 'any'\n                }],\n            description: 'logs info on value',\n            returns: 'value passed in'\n        }],\n    'delete': [({ context }, name) => {\n            const id = str(name);\n            if (!context.has(id)) {\n                return new ESError(Position.void, 'DeleteError', `Identifier '${id}' not found in the current context`);\n            }\n            context.set(id, new ESUndefined());\n        }, {\n            name: 'delete',\n            args: [{ name: 'identifier', type: 'string' }],\n            description: 'Deletes a variable from the current context'\n        }],\n    '__path': [({ context }) => {\n            return new ESString(context.path);\n        }, {\n            name: '__path',\n            args: [],\n            description: 'Returns the current path'\n        }],\n    '__symbols': [({ context }) => {\n            return wrap(context.keys);\n        }, {\n            name: '__allSymbols',\n            args: [],\n            description: 'Returns an array of the names of all symbols in the current context'\n        }],\n    'using': [({ context }, module, global_) => {\n            if (!(module instanceof ESNamespace) && !(module instanceof ESJSBinding)) {\n                return new TypeError(Position.void, 'Namespace', str(module.typeName()));\n            }\n            let global = true;\n            if (global_) {\n                if (!global_.bool().valueOf()) {\n                    global = false;\n                }\n            }\n            const values = module.valueOf();\n            if (global) {\n                context = context.root;\n            }\n            else if (context.parent) {\n                context = context.parent;\n            }\n            for (const key of Object.keys(values)) {\n                context.setOwn(key, values[key].value, {\n                    isConstant: values[key].isConstant,\n                    isAccessible: values[key].isAccessible,\n                    forceThroughConst: true\n                });\n            }\n        }, {\n            name: 'using',\n            args: [\n                { name: 'module', type: 'namespace' },\n                { name: 'global', type: 'bool' }\n            ],\n            description: 'Adds contents of a namespace to the global context'\n        }],\n    'sleep': [({ context }, time, cb) => {\n            if (!(time instanceof ESNumber)) {\n                return new TypeError(Position.void, 'number', str(time.typeName()), str(time));\n            }\n            sleep(time.valueOf())\n                .then(() => {\n                const res = cb.__call__({ context });\n                if (res instanceof ESError) {\n                    console.log(res.str);\n                }\n            });\n        }, {\n            name: 'sleep',\n            args: [{ name: 'n', type: 'number' }, { name: 'callback', type: 'function' }],\n            description: 'Waits n milliseconds and then executes the callback'\n        }],\n    'throw': [({ context }, name, details) => {\n            return new ESError(Position.void, str(name), str(details));\n        }, {\n            name: 'throw',\n            args: [{ name: 'name', type: 'string' }, { name: 'details', type: 'string' }]\n        }],\n};\n","import { Position } from '../../position';\nimport { strip } from '../../runtime/primitives/wrapStrip';\nimport { ESObject, ESString } from '../../runtime/primitiveTypes';\nimport { str } from '../../util/util';\nimport { TypeError } from '../../errors';\nconst module = {\n    parse: (props, json) => {\n        return new ESObject(JSON.parse(str(json)));\n    },\n    stringify: (props, json) => {\n        if (!(json instanceof ESObject)) {\n            return new TypeError(Position.void, 'object', str(json.typeName()), str(json));\n        }\n        return new ESString(JSON.stringify(strip(json, props)));\n    }\n};\nexport default module;\n","import { IS_NODE_INSTANCE, libs } from '../constants';\nimport { ESError } from '../errors';\nimport { wrap } from '../runtime/primitives/wrapStrip';\nimport { ESSymbol } from '../runtime/symbol';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport ascii from './built-in-modules/ascii';\nimport json from './built-in-modules/json';\nimport dom from './built-in-modules/dom';\nimport Promise from './built-in-modules/promise';\nimport time from './built-in-modules/time';\nconst modules = {\n    ascii, json\n};\nconst processedModules = {};\nexport function initModules() {\n    processedModules['math'] = new ESJSBinding(Math);\n    processedModules['Promise'] = new ESJSBinding(Promise);\n    processedModules['time'] = new ESJSBinding(time(libs));\n    if (!IS_NODE_INSTANCE) {\n        const domRes = dom(libs);\n        if (!(domRes instanceof ESError)) {\n            modules['dom'] = domRes;\n        }\n        else {\n            return domRes;\n        }\n    }\n}\nexport function processRawModule(module, name) {\n    const moduleDict = {};\n    const moduleRaw = module.valueOf();\n    for (const key of Object.keys(moduleRaw)) {\n        moduleDict[key] = new ESSymbol(moduleRaw[key], key);\n    }\n    return new ESJSBinding(moduleDict, name);\n}\nexport function moduleExist(name) {\n    return name in modules || name in processedModules;\n}\nexport function addModule(name, body) {\n    modules[name] = {};\n    processedModules[name] = body;\n}\nexport function addModuleFromObj(name, raw) {\n    addModule(name, processRawModule(wrap(raw), name));\n}\nexport function getModule(name) {\n    if (name in processedModules) {\n        return processedModules[name];\n    }\n    if (name in modules) {\n        const res = new ESJSBinding(modules[name]);\n        const processed = processRawModule(res, name);\n        processedModules[name] = processed;\n        return processed;\n    }\n}\n","import { TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESNumber, ESString } from '../../runtime/primitiveTypes';\nimport { str } from '../../util/util';\nconst module = {\n    asciiToChar: (props, number) => {\n        if (!(number instanceof ESNumber)) {\n            return new TypeError(Position.void, 'number', str(number.typeName()), str(number));\n        }\n        return new ESString(String.fromCharCode(number.valueOf()));\n    },\n    charToAscii: (props, char) => {\n        if (!(char instanceof ESString)) {\n            return new TypeError(Position.void, 'string', str(char.typeName()), str(char));\n        }\n        return new ESNumber(str(char).charCodeAt(0));\n    },\n};\nexport default module;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { builtInFunctions } from \"./built-in/builtInFunctions\";\nimport { getModule, initModules, moduleExist } from './built-in/builtInModules';\nimport { Context } from \"./runtime/context\";\nimport { ESError, ImportError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { run } from \"./index\";\nimport { IS_NODE_INSTANCE } from \"./constants\";\nimport { str } from \"./util/util\";\nimport { ESFunction, ESNamespace, ESString } from './runtime/primitiveTypes';\nimport loadGlobalConstants from \"./built-in/globalConstants\";\nexport function initialise(globalContext, printFunc, inputFunc) {\n    builtInFunctions['import'] = [({ context }, rawUrl, callback) => {\n            if (IS_NODE_INSTANCE) {\n                return new ESError(Position.void, 'ImportError', 'Is running in node instance but trying to run browser import function');\n            }\n            const url = rawUrl.str();\n            if (moduleExist(str(url))) {\n                return getModule(str(url));\n            }\n            try {\n                fetch(str(url))\n                    .then(c => c.text())\n                    .then((code) => __awaiter(this, void 0, void 0, function* () {\n                    const env = new Context();\n                    env.parent = globalContext;\n                    const res = yield run(code);\n                    if (res.error) {\n                        printFunc(new ImportError(Position.void, str(url), res.error.str).str);\n                        return;\n                    }\n                    if (!(callback instanceof ESFunction))\n                        return;\n                    callback.__call__({ context }, new ESNamespace(url, env.getSymbolTableAsDict()));\n                }));\n            }\n            catch (E) {\n                return new ESError(Position.void, 'ImportError', E.toString());\n            }\n        }, {}];\n    builtInFunctions['print'] = [({ context }, ...args) => {\n            let out = ``;\n            for (let arg of args)\n                out += str(arg);\n            printFunc(out);\n        }, {}];\n    builtInFunctions['input'] = [({ context }, msg, cbRaw) => {\n            inputFunc(msg.valueOf(), (msg) => {\n                let cb = cbRaw === null || cbRaw === void 0 ? void 0 : cbRaw.valueOf();\n                if (cb instanceof ESFunction) {\n                    let res = cb.__call__({ context }, new ESString(msg));\n                    if (res instanceof ESError) {\n                        console.log(res.str);\n                    }\n                }\n                else if (typeof cb === 'function')\n                    cb(msg);\n                return new ESString('\\'input()\\' does not return anything. Pass in a function as the second argument, which will take the user input as an argument.');\n            });\n        }, {}];\n    for (let builtIn in builtInFunctions) {\n        const fn = new ESFunction(builtInFunctions[builtIn][0], [], builtIn, undefined, undefined, globalContext);\n        fn.info = builtInFunctions[builtIn][1];\n        fn.info.name = builtIn;\n        fn.info.isBuiltIn = true;\n        fn.info.file = 'built-in';\n        globalContext.set(builtIn, fn, {\n            global: true,\n            isConstant: true\n        });\n    }\n    loadGlobalConstants(globalContext);\n    const initModRes = initModules();\n    if (initModRes) {\n        return initModRes;\n    }\n    globalContext.initialisedAsGlobal = true;\n}\n","import { ESBoolean, ESUndefined } from '../runtime/primitiveTypes';\nimport { types } from \"../constants\";\nexport default function load(context) {\n    const globalConstants = {\n        'false': new ESBoolean(false),\n        'true': new ESBoolean(true),\n        'nil': new ESUndefined(),\n        'any': types.any,\n        'number': types.number,\n        'string': types.string,\n        'bool': types.bool,\n        'function': types.function,\n        'array': types.array,\n        'object': types.object,\n        'type': types.type,\n        'error': types.error,\n        'undefined': types.undefined\n    };\n    for (let constant in globalConstants) {\n        const value = globalConstants[constant];\n        context.set(constant, value, {\n            global: true,\n            isConstant: true\n        });\n    }\n}\n","export default class {\n    constructor(cb) {\n        this.thens = [];\n        this.resolved = false;\n        cb((value) => {\n            if (this.resolved) {\n                return;\n            }\n            this.resolved = true;\n            for (let then of this.thens) {\n                then(value);\n            }\n        }, (error) => {\n            if (this.resolved) {\n                return;\n            }\n            this.resolved = true;\n            if (this.catch_) {\n                this.catch_(error);\n            }\n        });\n    }\n    then(cb) {\n        if (this.resolved) {\n            return;\n        }\n        this.thens.push(cb);\n        return this;\n    }\n    catch(cb) {\n        if (this.resolved) {\n            return;\n        }\n        this.catch_ = cb;\n        return this;\n    }\n}\n;\n","import { now } from '../../constants';\nimport { ESFunction } from '../../runtime/primitives/esfunction';\nimport { ESJSBinding } from '../../runtime/primitives/esjsbinding';\nimport { ESNumber } from '../../runtime/primitives/esnumber';\nconst module = (config) => ({\n    now: new ESFunction(() => new ESNumber(now())),\n    date: new ESJSBinding(Date)\n});\nexport default module;\n","import { IS_NODE_INSTANCE, permissions } from '../../constants';\nimport { ReferenceError, InvalidRuntimeError, PermissionRequiredError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESJSBinding } from \"../../runtime/primitives/esjsbinding\";\nconst module = () => {\n    if (!permissions.accessDOM) {\n        return new PermissionRequiredError('No access to DOM');\n    }\n    if (IS_NODE_INSTANCE) {\n        return new InvalidRuntimeError();\n    }\n    const w = window;\n    if (typeof w === 'undefined' || !('$' in w)) {\n        return new ReferenceError(Position.void, '$ must be property of window to use dom library');\n    }\n    const $ = new ESJSBinding(w['$'], 'jquery');\n    return {\n        $,\n        window: new ESJSBinding(w, 'window'),\n        document: new ESJSBinding(w['document'], 'document'),\n    };\n};\nexport default module;\n","import { ESPrimitive } from \"./primitiveTypes\";\nexport function interpretArgument(arg, context) {\n    var _a;\n    const typeRes = arg.type.interpret(context);\n    if (typeRes.error) {\n        return typeRes.error;\n    }\n    let defaultValue;\n    if (arg.defaultValue) {\n        let defaultValRes = (_a = arg.defaultValue) === null || _a === void 0 ? void 0 : _a.interpret(context);\n        if (defaultValRes.error) {\n            return defaultValRes.error;\n        }\n        if (defaultValRes.val instanceof ESPrimitive) {\n            defaultValue = defaultValRes.val;\n        }\n    }\n    return {\n        name: arg.name,\n        type: typeRes.val,\n        defaultValue\n    };\n}\n","import { ESError, InvalidSyntaxError, ReferenceError, TypeError } from \"../errors\";\nimport { Context } from './context';\nimport { Position } from \"../position\";\nimport { catchBlockErrorSymbolName, now, tokenTypeString, tt, types } from \"../constants\";\nimport { interpretArgument } from \"./argument\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESType, ESUndefined } from \"./primitiveTypes\";\nimport { generateRandomSymbol, str } from '../util/util';\nimport { ESTypeNot } from \"./primitives/estype\";\nexport class interpretResult {\n    constructor() {\n        this.val = new ESUndefined();\n        this.shouldBreak = false;\n        this.shouldContinue = false;\n    }\n}\nexport class compileResult {\n    constructor(val) {\n        this.val = '';\n        this.hoisted = '';\n        if (typeof val === 'string') {\n            this.val = val;\n        }\n        else if (val) {\n            this.error = val;\n        }\n    }\n    register(node, config) {\n        const res = node.compilePy(config);\n        this.hoisted += res.hoisted;\n        if (res.error) {\n            this.error = res.error;\n            return '';\n        }\n        return res.val;\n    }\n}\nexport class Node {\n    constructor(pos, isTerminal = false) {\n        this.pos = pos;\n        this.isTerminal = isTerminal;\n    }\n    interpret(context) {\n        var _a;\n        const start = now();\n        const res = new interpretResult;\n        const val = this.interpret_(context);\n        if (val instanceof ESError) {\n            res.error = val;\n        }\n        else if (val instanceof interpretResult) {\n            res.val = val.val;\n            res.error = val.error;\n            res.funcReturn = val.funcReturn;\n            res.shouldBreak = val.shouldBreak;\n            res.shouldContinue = val.shouldContinue;\n        }\n        else {\n            res.val = val;\n        }\n        if (res.error && res.error.pos.isUnknown) {\n            res.error.pos = this.pos;\n        }\n        if (!(res.val instanceof ESPrimitive)) {\n            res.error = new TypeError(Position.void, 'Primitive', 'Native JS value', str(res.val));\n            res.val = new ESUndefined();\n        }\n        (_a = res.val.info).file || (_a.file = this.pos.file);\n        Node.interprets++;\n        let time = now() - start;\n        Node.totalTime += time;\n        if (time > Node.maxTime)\n            Node.maxTime = time;\n        return res;\n    }\n}\nNode.interprets = 0;\nNode.totalTime = 0;\nNode.maxTime = 0;\nexport class N_binOp extends Node {\n    constructor(pos, left, opTok, right) {\n        super(pos);\n        this.left = left;\n        this.opTok = opTok;\n        this.right = right;\n    }\n    interpret_(context) {\n        const left = this.left.interpret(context);\n        if (left.error)\n            return left.error;\n        const right = this.right.interpret(context);\n        if (right.error)\n            return right.error;\n        const l = left.val;\n        const r = right.val;\n        if (typeof l === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', l, 'N_binOp.interpret_');\n        }\n        if (typeof r === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', r, 'N_binOp.interpret_');\n        }\n        switch (this.opTok.type) {\n            case tt.LTE: {\n                const lt = l.__lt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (lt instanceof ESError)\n                    return lt;\n                if (eq instanceof ESError)\n                    return eq;\n                return lt.__or__({ context }, eq);\n            }\n            case tt.GTE: {\n                const gt = l.__gt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (gt instanceof ESError)\n                    return gt;\n                if (eq instanceof ESError)\n                    return eq;\n                return gt.__or__({ context }, eq);\n            }\n            case tt.NOTEQUALS: {\n                const res = l.__eq__({ context }, r);\n                if (res instanceof ESError)\n                    return res;\n                return new ESBoolean(!res.bool().valueOf());\n            }\n            case tt.ADD:\n                return l.__add__({ context }, r);\n            case tt.SUB:\n                return l.__subtract__({ context }, r);\n            case tt.MUL:\n                return l.__multiply__({ context }, r);\n            case tt.DIV:\n                return l.__divide__({ context }, r);\n            case tt.POW:\n                return l.__pow__({ context }, r);\n            case tt.MOD:\n                return l.__mod__({ context }, r);\n            case tt.EQUALS:\n                return l.__eq__({ context }, r);\n            case tt.LT:\n                return l.__lt__({ context }, r);\n            case tt.GT:\n                return l.__gt__({ context }, r);\n            case tt.AND:\n                return l.__and__({ context }, r);\n            case tt.OR:\n                return l.__or__({ context }, r);\n            case tt.APMERSAND:\n                return l.__ampersand__({ context }, r);\n            case tt.PIPE:\n                return l.__pipe__({ context }, r);\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid binary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(config) {\n        const left = this.left.compileJS(config);\n        if (left.error)\n            return left;\n        const right = this.right.compileJS(config);\n        if (right.error)\n            return right;\n        if (config.minify) {\n            return new compileResult(`${left.val}${tokenTypeString[this.opTok.type]}${right.val}`);\n        }\n        return new compileResult(`${left.val} ${tokenTypeString[this.opTok.type]} ${right.val}`);\n    }\n    compilePy(config) {\n        const left = this.left.compilePy(config);\n        if (left.error)\n            return left;\n        const right = this.right.compilePy(config);\n        if (right.error)\n            return right;\n        const switchers = {\n            '&&': 'and',\n            '||': 'or',\n            '^': '**',\n        };\n        let op = tokenTypeString[this.opTok.type];\n        if (op in switchers) {\n            op = switchers[op];\n        }\n        return new compileResult(`${left.val} ${op} ${right.val}`);\n    }\n}\nexport class N_unaryOp extends Node {\n    constructor(pos, a, opTok) {\n        super(pos);\n        this.a = a;\n        this.opTok = opTok;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const res = this.a.interpret(context);\n        if (res.error)\n            return res.error;\n        switch (this.opTok.type) {\n            case tt.SUB:\n            case tt.ADD:\n                if (!(res.val instanceof ESNumber)) {\n                    return new TypeError(this.pos, 'Number', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().toString()) || 'undefined_', (_b = res.val) === null || _b === void 0 ? void 0 : _b.valueOf());\n                }\n                const numVal = res.val.valueOf();\n                return new ESNumber(this.opTok.type === tt.SUB ? -numVal : Math.abs(numVal));\n            case tt.NOT:\n                return new ESBoolean(!((_c = res === null || res === void 0 ? void 0 : res.val) === null || _c === void 0 ? void 0 : _c.bool().valueOf()));\n            case tt.BITWISE_NOT:\n                return new ESTypeNot(res.val);\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid unary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(config) {\n        const val = this.a.compileJS(config);\n        if (val.error)\n            return val;\n        return new compileResult(`${tokenTypeString[this.opTok.type]}${val.val}`);\n    }\n    compilePy(config) {\n        const val = this.a.compilePy(config);\n        if (val.error)\n            return val;\n        return new compileResult(`${tokenTypeString[this.opTok.type]}${val.val}`);\n    }\n}\nexport class N_varAssign extends Node {\n    constructor(pos, varNameTok, value, assignType = '=', isGlobal = false, isConstant = false, isDeclaration = false, type = types.any) {\n        super(pos);\n        this.value = value;\n        this.varNameTok = varNameTok;\n        this.isGlobal = isGlobal;\n        this.assignType = assignType;\n        this.isConstant = isConstant;\n        this.isDeclaration = isDeclaration;\n        if (type instanceof ESPrimitive) {\n            this.type = new N_primitiveWrapper(type);\n        }\n        else {\n            this.type = type;\n        }\n    }\n    interpret_(context) {\n        var _a, _b;\n        if (this.isDeclaration && context.hasOwn(this.varNameTok.value)) {\n            return new InvalidSyntaxError(this.pos, `Symbol '${this.varNameTok.value}' already exists, and cannot be redeclared`);\n        }\n        const res = this.value.interpret(context);\n        const typeRes = this.type.interpret(context);\n        if (res.error)\n            return res.error;\n        if (typeRes.error)\n            return typeRes.error;\n        if (!typeRes.val) {\n            return new TypeError(this.varNameTok.pos, 'Type', 'undefined');\n        }\n        if (!res.val) {\n            return new TypeError(this.varNameTok.pos, '~undefined', 'undefined', 'N_varAssign.interpret_');\n        }\n        const typeCheckRes = typeRes.val.typeCheck({ context }, res.val);\n        if (typeCheckRes instanceof ESError)\n            return typeCheckRes;\n        if (!typeCheckRes.bool().valueOf()) {\n            return new TypeError(this.varNameTok.pos, str(typeRes.val), str((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName()), str(res.val));\n        }\n        if (this.isDeclaration) {\n            if (this.assignType !== '=') {\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            }\n            if (context.hasOwn(this.varNameTok.value)) {\n                return new InvalidSyntaxError(this.pos, `Cannot redeclare variable which exists in the current scope`);\n            }\n            context.setOwn(this.varNameTok.value, res.val, {\n                global: false,\n                isConstant: this.isConstant,\n                type: typeRes.val\n            });\n            return res.val;\n        }\n        if (context.has(this.varNameTok.value)) {\n            const symbol = context.getSymbol(this.varNameTok.value);\n            if (symbol instanceof ESError)\n                return symbol;\n            if (symbol) {\n                if (!symbol.type.typeCheck({ context }, res.val).valueOf()) {\n                    return new TypeError(this.varNameTok.pos, str(symbol.type), (_b = res.val) === null || _b === void 0 ? void 0 : _b.typeName(), str(res.val));\n                }\n            }\n        }\n        if (this.assignType === '=') {\n            let value = res.val;\n            if (value === undefined) {\n                value = new ESUndefined();\n            }\n            const type = context.getSymbol(this.varNameTok.value);\n            if (type instanceof ESError) {\n                return type;\n            }\n            if (!type) {\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable without keyword`);\n            }\n            const typeCheckRes = type.type.typeCheck({ context }, res.val);\n            if (typeCheckRes instanceof ESError)\n                return typeCheckRes;\n            if (!typeCheckRes.bool().valueOf()) {\n                return new TypeError(Position.void, str(type.type), str(res.val.__type__), str(res.val));\n            }\n            const setRes = context.set(this.varNameTok.value, value, {\n                global: this.isGlobal,\n                isConstant: this.isConstant,\n                type: res.val.__type__\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n        }\n        else {\n            const currentVal = context.get(this.varNameTok.value);\n            if (currentVal instanceof ESError)\n                return currentVal;\n            if (currentVal == undefined)\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            let newVal;\n            let assignVal = res.val;\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError) {\n                return newVal;\n            }\n            let setRes = context.set(this.varNameTok.value, newVal, {\n                global: this.isGlobal,\n                isConstant: this.isConstant,\n                type: newVal.__type__\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n            res.val = newVal;\n        }\n        if (res.val.info.name === '(anonymous)' || !res.val.info.name) {\n            res.val.info.name = this.varNameTok.value;\n        }\n        return res;\n    }\n    compileJS(config) {\n        const val = this.value.compileJS(config);\n        if (val.error)\n            return val;\n        let declaration = '';\n        if (this.isDeclaration) {\n            if (this.isGlobal) {\n                declaration = 'var';\n            }\n            else if (this.isConstant) {\n                declaration = 'const';\n            }\n            else {\n                declaration = 'let';\n            }\n        }\n        let assign = this.assignType;\n        if (assign !== '=') {\n            assign += '=';\n        }\n        if (config.minify) {\n            return new compileResult(`${declaration} ${this.varNameTok.value}${assign}${val.val}`);\n        }\n        return new compileResult(`${declaration} ${this.varNameTok.value} ${assign} ${val.val}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const val = this.value.compilePy(config);\n        if (val.error)\n            return val;\n        res.hoisted += val.hoisted;\n        let assign = this.assignType;\n        if (assign !== '=') {\n            assign += '=';\n        }\n        if (this.isGlobal) {\n            res.hoisted += `${this.varNameTok.value}=None`;\n        }\n        if (config.minify) {\n            res.val = `${this.varNameTok.value}${assign}${val.val}`;\n        }\n        else {\n            res.val = `${this.varNameTok.value} ${assign} ${val.val}`;\n        }\n        return res;\n    }\n}\nexport class N_if extends Node {\n    constructor(pos, comparison, ifTrue, ifFalse) {\n        super(pos);\n        this.comparison = comparison;\n        this.ifFalse = ifFalse;\n        this.ifTrue = ifTrue;\n    }\n    interpret_(context) {\n        var _a;\n        let newContext = new Context();\n        newContext.parent = context;\n        let res = new interpretResult();\n        let compRes = this.comparison.interpret(context);\n        if (compRes.error)\n            return compRes;\n        if ((_a = compRes.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            return this.ifTrue.interpret(newContext);\n        }\n        else if (this.ifFalse) {\n            return this.ifFalse.interpret(newContext);\n        }\n        return res;\n    }\n    compileJS(config) {\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 4);\n        config.indent += 4;\n        const statementRes = this.comparison.compileJS(config);\n        if (statementRes.error)\n            return statementRes;\n        const ifTrueRes = this.ifTrue.compileJS(config);\n        if (ifTrueRes.error)\n            return ifTrueRes;\n        if (!this.ifFalse) {\n            if (config.minify) {\n                return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}\\n}`);\n            }\n            return new compileResult(`if (${statementRes.val}) {\\n${ifTrueRes.val}\\n}`);\n        }\n        config.indent = highIndent.length;\n        let ifFalseRes = this.ifFalse.compileJS(config);\n        if (ifFalseRes.error)\n            return ifFalseRes;\n        if (!(this.ifFalse instanceof N_statements)) {\n            ifFalseRes.val = highIndent + ifFalseRes.val;\n        }\n        if (config.minify) {\n            return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}}else{${ifFalseRes.val}}`);\n        }\n        return new compileResult(`if (${statementRes.val}) {\\n${ifTrueRes.val}\\n${indent}} else {\\n${ifFalseRes.val}\\n${indent}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 4);\n        config.indent += 4;\n        const statementRes = this.comparison.compilePy(config);\n        if (statementRes.error)\n            return statementRes;\n        res.hoisted += statementRes.hoisted;\n        const ifTrueRes = this.ifTrue.compilePy(config);\n        if (ifTrueRes.error)\n            return ifTrueRes;\n        res.hoisted += ifTrueRes.hoisted;\n        if (!this.ifFalse) {\n            return new compileResult(`if ${statementRes.val}:\\n${highIndent}${ifTrueRes.val}`);\n        }\n        const ifFalseRes = this.ifFalse.compilePy(config);\n        if (ifFalseRes.error)\n            return ifFalseRes;\n        res.hoisted += ifFalseRes.hoisted;\n        if (!(this.ifFalse instanceof N_statements)) {\n            ifFalseRes.val = highIndent + ifFalseRes.val;\n        }\n        return new compileResult(`if ${statementRes.val}:\\n${ifTrueRes.val}\\n${indent}else:\\n${ifFalseRes.val}\\n${indent}`);\n    }\n}\nexport class N_while extends Node {\n    constructor(pos, comparison, loop) {\n        super(pos);\n        this.comparison = comparison;\n        this.loop = loop;\n    }\n    interpret_(context) {\n        var _a, _b;\n        let newContext = new Context();\n        newContext.parent = context;\n        while (true) {\n            let shouldLoop = this.comparison.interpret(context);\n            if (shouldLoop.error)\n                return shouldLoop;\n            if (!((_b = (_a = shouldLoop.val) === null || _a === void 0 ? void 0 : _a.bool()) === null || _b === void 0 ? void 0 : _b.valueOf()))\n                break;\n            let potentialError = this.loop.interpret(newContext);\n            if (potentialError.error)\n                return potentialError;\n            if (potentialError.shouldBreak)\n                break;\n        }\n        return new ESUndefined();\n    }\n    compileJS(config) {\n        config.indent += 4;\n        const comparisonRes = this.comparison.compileJS(config);\n        if (comparisonRes.error)\n            return comparisonRes;\n        const bodyRes = this.loop.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        if (config.minify) {\n            return new compileResult(`while(${comparisonRes.val}){${bodyRes.val}}`);\n        }\n        return new compileResult(`while (${comparisonRes.val}) {\\n${bodyRes.val}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const highIndent = ' '.repeat(config.indent || 0);\n        const comparisonRes = this.comparison.compilePy(config);\n        if (comparisonRes.error)\n            return comparisonRes;\n        res.hoisted += comparisonRes.hoisted;\n        const bodyRes = this.loop.compilePy(config);\n        if (bodyRes.error)\n            return bodyRes;\n        res.hoisted += bodyRes.hoisted;\n        return new compileResult(`while ${comparisonRes.val}:\\n${highIndent}${bodyRes.val}`);\n    }\n}\nexport class N_for extends Node {\n    constructor(pos, body, array, identifier, isGlobalIdentifier, isConstIdentifier) {\n        super(pos);\n        this.body = body;\n        this.array = array;\n        this.identifier = identifier;\n        this.isGlobalId = isGlobalIdentifier;\n        this.isConstId = isConstIdentifier;\n    }\n    interpret_(context) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        const array = this.array.interpret(context);\n        if (array.error)\n            return array;\n        if (['Array', 'Number', 'Object', 'String', 'Any'].indexOf(((_a = array.val) === null || _a === void 0 ? void 0 : _a.typeName()) || '') === -1) {\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val + ' | ' + ((_b = array.val) === null || _b === void 0 ? void 0 : _b.typeName()));\n        }\n        if (context.has(this.identifier.value) && this.isGlobalId) {\n            return new InvalidSyntaxError(this.identifier.pos, 'Cannot declare global variable which exists in the current scope');\n        }\n        function iteration(body, id, element, isGlobal, isConstant) {\n            let newContext = new Context();\n            newContext.parent = context;\n            newContext.set(id, element, {\n                global: isGlobal,\n                isConstant,\n                type: element.__type__\n            });\n            const res = body.interpret(newContext);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (res.shouldBreak) {\n                res.shouldBreak = false;\n                return 'break';\n            }\n            if (res.shouldContinue) {\n                res.shouldContinue = false;\n            }\n        }\n        if (array.val instanceof ESNumber || typeof ((_c = array.val) === null || _c === void 0 ? void 0 : _c.valueOf()) == 'number') {\n            for (let i = 0; i < array.val.valueOf(); i++) {\n                const res = iteration(this.body, this.identifier.value, new ESNumber(i), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESObject ||\n            (typeof ((_d = array.val) === null || _d === void 0 ? void 0 : _d.valueOf()) == 'number' && !Array.isArray((_e = array.val) === null || _e === void 0 ? void 0 : _e.valueOf()))) {\n            for (let element in (_f = array.val) === null || _f === void 0 ? void 0 : _f.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, new ESString(element), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESArray || Array.isArray((_g = array.val) === null || _g === void 0 ? void 0 : _g.valueOf())) {\n            for (let element of (_h = array.val) === null || _h === void 0 ? void 0 : _h.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, element, this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val);\n        return new ESUndefined();\n    }\n    compileJS(config) {\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const iteratorRes = this.array.compileJS(config);\n        if (iteratorRes.error)\n            return iteratorRes;\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        let declaration = 'let';\n        if (this.isGlobalId) {\n            declaration = 'var';\n        }\n        else if (this.isConstId) {\n            declaration = 'const';\n        }\n        if (config.minify) {\n            return new compileResult(`for(${declaration} ${this.identifier.value} of ${iteratorRes.val}){${bodyRes.val}\\n${indent}}`);\n        }\n        return new compileResult(`for (${declaration} ${this.identifier.value} of ${iteratorRes.val}) {\\n${bodyRes.val}\\n${indent}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        config.indent += 4;\n        const iteratorRes = res.register(this.array, config);\n        if (res.error)\n            return res;\n        const bodyRes = res.register(this.body, config);\n        if (res.error)\n            return res;\n        if (this.isGlobalId) {\n            res.hoisted += `${this.identifier.value}=None`;\n        }\n        res.val = `for ${this.identifier.value} in ${iteratorRes}:\\n${bodyRes}`;\n        return res;\n    }\n}\nexport class N_array extends Node {\n    constructor(pos, items, shouldClone = false) {\n        super(pos);\n        this.items = items;\n        this.shouldClone = shouldClone;\n    }\n    interpret_(context) {\n        let result = new interpretResult();\n        let interpreted = [];\n        for (let item of this.items) {\n            const res = item.interpret(context);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (!res.val)\n                continue;\n            let val = res.val;\n            if (this.shouldClone) {\n                val = val.clone();\n            }\n            interpreted.push(val);\n        }\n        result.val = new ESArray(interpreted);\n        return result;\n    }\n    compileJS(config) {\n        const res = new compileResult('[');\n        for (let item of this.items) {\n            const itemRes = item.compileJS(config);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ',';\n        }\n        res.val += ']';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult('[');\n        for (let item of this.items) {\n            const itemRes = res.register(item, config);\n            if (res.error)\n                return res;\n            res.val += itemRes + ',';\n        }\n        res.val += ']';\n        return res;\n    }\n}\nexport class N_objectLiteral extends Node {\n    constructor(pos, properties) {\n        super(pos);\n        this.properties = properties;\n    }\n    interpret_(context) {\n        let interpreted = {};\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.interpret(context);\n            if (value.error)\n                return value.error;\n            const key = keyNode.interpret(context);\n            if (key.error)\n                return key.error;\n            if (key.val && value.val) {\n                interpreted[key.val.valueOf()] = value.val;\n            }\n        }\n        return new ESObject(interpreted);\n    }\n    compileJS(config) {\n        const res = new compileResult('{');\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.compileJS(config);\n            if (value.error)\n                return value;\n            const key = keyNode.compileJS(config);\n            if (key.error)\n                return key;\n            if (key.val && value.val) {\n                res.val += `[${key.val}]: ${value.val},`;\n            }\n        }\n        res.val += '}';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult('{');\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = res.register(valueNode, config);\n            if (res.error)\n                return res;\n            const key = res.register(keyNode, config);\n            if (res.error)\n                return res;\n            if (key && value) {\n                res.val += `${key}: ${value},`;\n            }\n        }\n        res.val += '}';\n        return res;\n    }\n}\nexport class N_statements extends Node {\n    constructor(pos, items, topLevel = false) {\n        super(pos);\n        this.items = items;\n        this.topLevel = topLevel;\n    }\n    interpret_(context) {\n        if (!this.topLevel) {\n            let last;\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (typeof res.funcReturn !== 'undefined') || res.shouldBreak || res.shouldContinue)\n                    return res;\n                last = res.val;\n            }\n            if (last)\n                return last;\n            return new ESUndefined();\n        }\n        else {\n            let result = new interpretResult();\n            let interpreted = [];\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (res.funcReturn !== undefined))\n                    return res;\n                if (!res.val)\n                    continue;\n                let val = res.val.clone();\n                interpreted.push(val);\n            }\n            result.val = new ESArray(interpreted);\n            return result;\n        }\n    }\n    compileJS(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        res.val += indent;\n        for (let item of this.items) {\n            const itemRes = item.compileJS(config);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ';';\n            if (!config.minify) {\n                res.val += '\\n' + indent;\n            }\n        }\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        res.val += indent;\n        for (let item of this.items) {\n            const itemRes = res.register(item, config);\n            if (res.error)\n                return res;\n            res.val += itemRes;\n            res.val += '\\n' + indent;\n        }\n        return res;\n    }\n}\nexport class N_functionCall extends Node {\n    constructor(pos, to, args) {\n        super(pos);\n        this.arguments = args;\n        this.to = to;\n    }\n    interpret_(context) {\n        let { val, error } = this.to.interpret(context);\n        if (error) {\n            return error;\n        }\n        if (!val) {\n            return new TypeError(this.pos, 'any', 'undefined', undefined, 'On function call');\n        }\n        let params = [];\n        for (let arg of this.arguments) {\n            const res = arg.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (res.val) {\n                params.push(res.val);\n            }\n        }\n        const res = val.__call__({ context }, ...params);\n        if (res instanceof ESError) {\n            res.traceback.push({\n                position: this.pos,\n                line: `${val.info.name || '<AnonFunction>'}(${params.map(str).join(', ')})`\n            });\n        }\n        return res;\n    }\n    compileJS(config) {\n        const res = new compileResult;\n        const funcRes = this.to.compileJS(config);\n        if (funcRes.error)\n            return funcRes;\n        res.val = funcRes.val + '(';\n        for (let arg of this.arguments) {\n            const argRes = arg.compileJS(config);\n            if (argRes.error)\n                return argRes;\n            res.val += argRes.val;\n            if (arg !== this.arguments[this.arguments.length - 1]) {\n                res.val += ',';\n                if (!config.minify) {\n                    res.val += ' ';\n                }\n            }\n        }\n        res.val += ')';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const funcRes = res.register(this.to, config);\n        if (res.error)\n            return res;\n        res.val = funcRes + '(';\n        for (let arg of this.arguments) {\n            const argRes = res.register(arg, config);\n            if (res.error)\n                return res;\n            res.val += argRes;\n            if (arg !== this.arguments[this.arguments.length - 1]) {\n                res.val += ',';\n                if (!config.minify) {\n                    res.val += ' ';\n                }\n            }\n        }\n        res.val += ')';\n        return res;\n    }\n}\nexport class N_functionDefinition extends Node {\n    constructor(pos, body, argNames, returnType, name = '(anon)', this_ = new ESObject(), description = '') {\n        super(pos);\n        this.arguments = argNames;\n        this.body = body;\n        this.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        this.description = description;\n    }\n    interpret_(context) {\n        let args = [];\n        for (let arg of this.arguments) {\n            const res = interpretArgument(arg, context);\n            if (res instanceof ESError)\n                return res;\n            args.push(res);\n        }\n        const returnTypeRes = this.returnType.interpret(context);\n        if (returnTypeRes.error)\n            return returnTypeRes.error;\n        return new ESFunction(this.body, args, this.name, this.this_, returnTypeRes.val, context);\n    }\n    compileJS(config) {\n        const res = new compileResult('function(');\n        for (let param of this.arguments) {\n            res.val += param.name + ',';\n            if (!config.minify) {\n                res.val += ' ';\n            }\n        }\n        if (config.minify) {\n            res.val += '){';\n        }\n        else {\n            res.val += ') {\\n';\n        }\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        res.val += `${bodyRes.val}\\n${indent}}`;\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const hoistedName = generateRandomSymbol(config.symbols);\n        res.hoisted = `def ${hoistedName}(`;\n        for (let param of this.arguments) {\n            res.hoisted += param.name + ',';\n            if (!config.minify) {\n                res.hoisted += ' ';\n            }\n        }\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const body = this.body.compilePy(config);\n        if (body.error)\n            return body;\n        res.hoisted += `):\\n${indent}${body.val}`;\n        res.hoisted = body.hoisted + res.hoisted;\n        res.val = hoistedName;\n        return res;\n    }\n}\nexport class N_return extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        res.funcReturn = val.val;\n        return res;\n    }\n    compileJS(config) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(config);\n        if (valRes === null || valRes === void 0 ? void 0 : valRes.error)\n            return valRes;\n        return new compileResult(`return(${valRes === null || valRes === void 0 ? void 0 : valRes.val})`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        if (!this.value) {\n            return new compileResult('return');\n        }\n        const valRes = res.register(this.value, config);\n        if (res.error)\n            return res;\n        return new compileResult(`return ${valRes}`);\n    }\n}\nexport class N_yield extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        var _a;\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        if ((_a = val.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            res.funcReturn = val.val;\n        }\n        return res;\n    }\n    compileJS(config) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(config);\n        if (!valRes || !valRes.val) {\n            return new compileResult('');\n        }\n        return new compileResult(`if(_=${valRes.val}){return(_))`);\n    }\n    compilePy(config) {\n        if (!this.value) {\n            return new compileResult('');\n        }\n        const res = new compileResult;\n        const valRes = res.register(this.value, config);\n        if (!valRes) {\n            return new compileResult('');\n        }\n        return new compileResult(`if _ := ${valRes}: return _`);\n    }\n}\nexport class N_indexed extends Node {\n    constructor(pos, base, index) {\n        super(pos);\n        this.base = base;\n        this.index = index;\n    }\n    interpret_(context) {\n        var _a;\n        let baseRes = this.base.interpret(context);\n        if (baseRes.error)\n            return baseRes;\n        let indexRes = this.index.interpret(context);\n        if (indexRes.error)\n            return indexRes;\n        const index = indexRes.val;\n        const base = baseRes.val;\n        if (!base || !index)\n            return new ESUndefined();\n        if (this.value !== undefined) {\n            let valRes = this.value.interpret(context);\n            if (valRes.error)\n                return valRes;\n            const currentVal = wrap(base.__getProperty__({ context }, index));\n            let newVal;\n            let assignVal = valRes.val;\n            (_a = this.assignType) !== null && _a !== void 0 ? _a : (this.assignType = '=');\n            if (!assignVal) {\n                return new TypeError(this.pos, '~undefined', 'undefined', 'undefined', 'N_indexed.interpret_');\n            }\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                case '=':\n                    newVal = assignVal;\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError)\n                return newVal;\n            if (!base.__setProperty__)\n                return new TypeError(this.pos, 'mutable', 'immutable', base.valueOf());\n            const res = base.__setProperty__({ context }, index, newVal !== null && newVal !== void 0 ? newVal : new ESUndefined());\n            if (res instanceof ESError)\n                return res;\n        }\n        return base.__getProperty__({ context }, index);\n    }\n    compileJS(config) {\n        const objectRes = this.base.compileJS(config);\n        if (objectRes.error)\n            return objectRes;\n        const keyRes = this.index.compileJS(config);\n        if (keyRes.error)\n            return keyRes;\n        if (!this.value) {\n            return new compileResult(`${objectRes.val}[${keyRes.val}]`);\n        }\n        const valRes = this.value.compileJS(config);\n        if (valRes.error)\n            return valRes;\n        return new compileResult(`${objectRes.val}[${keyRes.val}]${this.assignType || '='}${valRes.val}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const objectRes = res.register(this.base, config);\n        if (res.error)\n            return res;\n        const keyRes = res.register(this.index, config);\n        if (res.error)\n            return res;\n        if (!this.value) {\n            res.val = `${objectRes}[${keyRes}]`;\n            return res;\n        }\n        const valRes = res.register(this.value, config);\n        if (res.error)\n            return res;\n        res.val = `${objectRes}[${keyRes}] ${this.assignType || '='} ${valRes}`;\n        return res;\n    }\n}\nexport class N_class extends Node {\n    constructor(pos, methods, extends_, init, name = '<anon class>') {\n        super(pos);\n        this.init = init;\n        this.methods = methods;\n        this.name = name;\n        this.extends_ = extends_;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const methods = [];\n        for (let method of this.methods) {\n            const res = method.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (!(res.val instanceof ESFunction)) {\n                return new TypeError(this.pos, 'Function', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            methods.push(res.val);\n        }\n        let extends_ = types.object;\n        if (this.extends_) {\n            const extendsRes = this.extends_.interpret(context);\n            if (extendsRes.error) {\n                return extendsRes.error;\n            }\n            if (!(extendsRes.val instanceof ESType)) {\n                return new TypeError(this.pos, 'Type', ((_b = extendsRes.val) === null || _b === void 0 ? void 0 : _b.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            extends_ = extendsRes.val;\n        }\n        let init;\n        if (this.init) {\n            const initRes = this.init.interpret(context);\n            if (initRes.error) {\n                return initRes.error;\n            }\n            if (!(initRes.val instanceof ESFunction)) {\n                return new TypeError(this.pos, 'Function', ((_c = initRes.val) === null || _c === void 0 ? void 0 : _c.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            init = initRes.val;\n        }\n        return new ESType(false, this.name, methods, extends_, init);\n    }\n    compileJS(config) {\n        return new compileResult('function(){return{};}');\n    }\n    compilePy(config) {\n        return new compileResult(`class ${this.name}:\\n${' '.repeat(config.indent)}pass`);\n    }\n}\nexport class N_namespace extends Node {\n    constructor(pos, statements, name = '(anon)', mutable = false) {\n        super(pos);\n        this.name = name;\n        this.statements = statements;\n        this.mutable = mutable;\n    }\n    interpret_(context) {\n        const newContext = new Context();\n        newContext.parent = context;\n        const res = this.statements.interpret(newContext);\n        if (res.error)\n            return res;\n        return new ESNamespace(new ESString(this.name), newContext.getSymbolTableAsDict(), this.mutable);\n    }\n    compileJS(config) {\n        const bodyRes = this.statements.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        return new compileResult(`(() => {${bodyRes.val}})()`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const bodyRes = res.register(this.statements, config);\n        if (res.error)\n            return res;\n        res.val = `'namespace'`;\n        return res;\n    }\n}\nexport class N_tryCatch extends Node {\n    constructor(pos, body, catchBlock) {\n        super(pos, true);\n        this.body = body;\n        this.catchBlock = catchBlock;\n    }\n    interpret_(context) {\n        const res = this.body.interpret(context);\n        if (res.error) {\n            const newContext = new Context();\n            newContext.parent = context;\n            newContext.setOwn(catchBlockErrorSymbolName, new ESErrorPrimitive(res.error), {\n                isConstant: true\n            });\n            const catchRes = this.catchBlock.interpret(newContext);\n            if (catchRes.error)\n                return catchRes.error;\n        }\n        return new interpretResult();\n    }\n    compileJS(config) {\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        const catchRes = this.catchBlock.compileJS(config);\n        if (catchRes.error)\n            return catchRes;\n        return new compileResult(`try{${bodyRes.val}}catch(${catchBlockErrorSymbolName}){${catchRes.val}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const bodyRes = res.register(this.body, config);\n        if (res.error)\n            return res;\n        const catchRes = res.register(this.catchBlock, config);\n        if (res.error)\n            return res;\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 1);\n        res.val = `try:\\n${highIndent}${bodyRes}\\n${indent}except:\\n${highIndent}${catchRes}`;\n        return res;\n    }\n}\nexport class N_number extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        const res = new interpretResult();\n        res.val = new ESNumber(val);\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult(this.a.value.toString());\n    }\n    compilePy(config) {\n        return new compileResult(this.a.value.toString());\n    }\n}\nexport class N_string extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        const res = new interpretResult();\n        res.val = new ESString(val);\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult(`'${this.a.value}'`);\n    }\n    compilePy(config) {\n        return new compileResult(`'${this.a.value}'`);\n    }\n}\nexport class N_variable extends Node {\n    constructor(a) {\n        super(a.pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        if (!context.has(this.a.value)) {\n            return new ReferenceError(this.a.pos, this.a.value);\n        }\n        let res = new interpretResult();\n        let symbol = context.getSymbol(this.a.value);\n        if (!symbol) {\n            return new ESUndefined();\n        }\n        if (symbol instanceof ESError) {\n            return symbol;\n        }\n        res.val = symbol.value;\n        return res;\n    }\n    compileJS(config) {\n        let val = this.a.value.toString();\n        if (val === 'import') {\n            val = 'import_';\n        }\n        return new compileResult(val);\n    }\n    compilePy(config) {\n        let val = this.a.value.toString();\n        if (val === 'import') {\n            val = 'import_';\n        }\n        return new compileResult(val);\n    }\n}\nexport class N_undefined extends Node {\n    constructor(pos = Position.void) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.val = new ESUndefined();\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('undefined');\n    }\n    compilePy(config) {\n        return new compileResult('None');\n    }\n}\nexport class N_break extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldBreak = true;\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('break');\n    }\n    compilePy(config) {\n        return new compileResult('break');\n    }\n}\nexport class N_continue extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldContinue = true;\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('continue');\n    }\n    compilePy(config) {\n        return new compileResult('continue');\n    }\n}\nexport class N_primitiveWrapper extends Node {\n    constructor(val, pos = Position.void) {\n        super(pos, true);\n        this.value = val;\n    }\n    interpret_(context) {\n        return this.value;\n    }\n    compileJS(config) {\n        return new compileResult(JSON.stringify(this.value.valueOf()));\n    }\n    compilePy(config) {\n        return new compileResult(JSON.stringify(this.value.valueOf()));\n    }\n}\n","import { Node } from \"../runtime/nodes\";\nimport { ESPrimitive } from '../runtime/primitiveTypes';\nexport function deepClone(obj, hash = new WeakMap()) {\n    let result;\n    if (Object(obj) !== obj || obj instanceof Function) {\n        return obj;\n    }\n    if (hash.has(obj)) {\n        return hash.get(obj);\n    }\n    try {\n        result = new obj.constructor();\n    }\n    catch (e) {\n        result = Object.create(Object.getPrototypeOf(obj));\n    }\n    if (obj instanceof Map) {\n        Array.from(obj, ([key, val]) => result.set(deepClone(key, hash), deepClone(val, hash)));\n    }\n    else if (obj instanceof Set) {\n        Array.from(obj, (key) => result.add(deepClone(key, hash)));\n    }\n    hash.set(obj, result);\n    return Object.assign(result, ...Object.keys(obj).map(key => ({ [key]: deepClone(obj[key], hash) })));\n}\nexport function str(val, depth = 0) {\n    if (typeof val === 'string') {\n        if (depth > 0) {\n            return `'${val}'`;\n        }\n        return val;\n    }\n    if (depth > 20) {\n        return '...';\n    }\n    let result = '';\n    if (typeof val === 'undefined') {\n        return 'undefined';\n    }\n    if (val instanceof ESPrimitive) {\n        return val.str().valueOf();\n    }\n    if (val instanceof Node) {\n        return `<RunTimeNode: ${val.constructor.name}>`;\n    }\n    switch (typeof val) {\n        case 'object':\n            if (Array.isArray(val)) {\n                result += '[';\n                for (let item of val) {\n                    try {\n                        result += str(item, depth + 1) + `, `;\n                    }\n                    catch (e) {\n                        result += '<large property>, ';\n                    }\n                }\n                if (val.length) {\n                    result = result.substring(0, result.length - 2);\n                }\n                result += ']';\n            }\n            else {\n                try {\n                    result += val.constructor.name;\n                }\n                catch (e) {\n                    result += 'UNKNOWN_CONSTRUCTOR';\n                }\n                result += ': {\\n';\n                let i = 0;\n                for (let item in val) {\n                    i++;\n                    if (!val.hasOwnProperty || !val.hasOwnProperty(item)) {\n                        continue;\n                    }\n                    result += `  ${item}: ${str(val[item], depth + 1) || ''}, \\n`;\n                }\n                if (i > 0) {\n                    result = result.substring(0, result.length - 3);\n                }\n                result += '\\n}\\n';\n            }\n            break;\n        case 'string':\n            result = `'${val}'`;\n            break;\n        case \"bigint\":\n        case \"number\":\n        case \"boolean\":\n            result = `${val}`;\n            break;\n        case \"undefined\":\n            result = '<NativeUndefined>';\n            break;\n        case \"function\":\n            result = `<NativeFunction ${val.name}>`;\n            break;\n    }\n    for (let i = 0; i < depth; i++)\n        result = indent(result);\n    return result;\n}\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms));\nexport function indent(str) {\n    return str.replace(/\\n/g, '\\n    ');\n}\nexport function generateRandomSymbol(symbols, length = 10) {\n    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_';\n    const gen = () => {\n        let result = '';\n        for (let i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * characters.length));\n        }\n        return result;\n    };\n    let symbol = gen();\n    while (symbols.indexOf(symbol) !== -1) {\n        symbol = gen();\n    }\n    return symbol;\n}\n","import { IS_NODE_INSTANCE } from './constants';\nimport { Position } from \"./position\";\nimport { str } from \"./util/util\";\nimport chalk from \"./util/colours\";\nexport class ESError {\n    constructor(pos, name, details) {\n        this.traceback = [];\n        this.pos = pos;\n        this.name = name;\n        this.details = details;\n    }\n    get colouredStr() {\n        let out = '';\n        if (this.traceback.length) {\n            out = chalk.yellow('Error Traceback (most recent call last):\\n');\n            for (let pos of [...this.traceback].reverse())\n                out += `    ${chalk.cyan(pos.position.str)}:\\n        ${pos.line}\\n`;\n        }\n        out += `${chalk.red(this.name)}: ${this.details} \\n at ${chalk.cyan(this.pos.str)}`;\n        return out;\n    }\n    get str() {\n        return `${this.name}: ${this.details} \\n at ${this.pos.str}`;\n    }\n}\nexport class IllegalCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'IllegalCharError', `'${char}'`);\n    }\n}\nexport class InvalidSyntaxError extends ESError {\n    constructor(pos, details) {\n        super(pos, 'InvalidSyntaxError', details);\n    }\n}\nexport class ExpectedCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'ExpectedCharError', `'${char}'`);\n    }\n}\nexport class TypeError extends ESError {\n    constructor(pos, expectedType, actualType, value = '', detail = '') {\n        super(pos, 'TypeError', `Expected type '${expectedType}', got type '${actualType}' ${typeof value === 'undefined' ? '' : ` on value '${str(value)}'`} ${!detail ? '' : detail}`);\n    }\n}\nexport class ImportError extends ESError {\n    constructor(pos, url, detail = '') {\n        super(pos, 'ImportError', `Could not import ${url}: ${detail}`);\n    }\n}\nexport class ReferenceError extends ESError {\n    constructor(pos, ref) {\n        super(pos, 'ReferenceError', `${ref} is not defined`);\n    }\n}\nexport class IndexError extends ESError {\n    constructor(pos, ref, object) {\n        var _a;\n        super(pos, 'IndexError', `'${ref}' is not a property of '${((_a = object === null || object === void 0 ? void 0 : object.info) === null || _a === void 0 ? void 0 : _a.name) || str(object)}'`);\n    }\n}\nexport class InvalidOperationError extends ESError {\n    constructor(op, value, detail = '', pos = Position.void) {\n        var _a;\n        super(pos, 'TypeError', `Cannot perform '${op}' on value ${((_a = value === null || value === void 0 ? void 0 : value.info) === null || _a === void 0 ? void 0 : _a.name) || str(value)}: ${detail}`);\n    }\n}\nexport class InvalidRuntimeError extends ESError {\n    constructor() {\n        super(Position.void, 'InvalidRuntimeError', `Required runtime of ${IS_NODE_INSTANCE ? 'browser' : 'node'}`);\n    }\n}\nexport class TestFailed extends ESError {\n    constructor(detail) {\n        super(Position.void, 'TestFailed', detail);\n    }\n}\nexport class PermissionRequiredError extends ESError {\n    constructor(detail) {\n        super(Position.void, 'PermissionRequiredError', detail);\n    }\n}\n","export class Token {\n    constructor(pos, type, value) {\n        this.type = type;\n        this.value = value;\n        this.pos = pos;\n    }\n    matches(type, val) {\n        return this.type === type && this.value === val;\n    }\n}\n","import { Position } from \"../position\";\nimport { digits, doubleCharTokens, identifierChars, KEYWORDS, multiLineCommentEnd, multiLineCommentStart, singleCharTokens, singleLineComment, stringSurrounds, tripleCharTokens, tt, } from '../constants';\nimport { IllegalCharError } from \"../errors\";\nimport { Token } from \"./tokens\";\nexport class Lexer {\n    constructor(program, fileName) {\n        this.text = program;\n        this.position = new Position(-1, 0, -1, fileName);\n        this.advance();\n    }\n    advance() {\n        this.position.advance(this.currentChar);\n        this.currentChar = this.text[this.position.idx];\n    }\n    generate() {\n        if (!this.text) {\n            return [new Token(this.position, tt.EOF, undefined)];\n        }\n        const tokens = [];\n        while (this.currentChar !== undefined) {\n            if (' \\t\\n'.includes(this.currentChar)) {\n                this.advance();\n            }\n            else if (digits.includes(this.currentChar)) {\n                tokens.push(this.makeNumber());\n            }\n            else if (this.currentChar === singleLineComment[0] &&\n                this.text[this.position.idx + 1] === singleLineComment[1]) {\n                this.singleLineComment();\n            }\n            else if (this.currentChar === multiLineCommentStart[0] &&\n                this.text[this.position.idx + 1] === multiLineCommentStart[1]) {\n                this.multiLineComment();\n            }\n            else if (identifierChars.includes(this.currentChar)) {\n                tokens.push(this.makeIdentifier());\n            }\n            else if (stringSurrounds.indexOf(this.currentChar) !== -1) {\n                tokens.push(this.makeString());\n            }\n            else {\n                const possibleAssignFirstChar = this.currentChar;\n                let token = this.unknownChar();\n                if (token) {\n                    if (token.type === tt.ASSIGN) {\n                        token.value = possibleAssignFirstChar;\n                    }\n                    tokens.push(token);\n                }\n                else {\n                    let pos = this.position.clone;\n                    let char = this.currentChar;\n                    this.advance();\n                    return new IllegalCharError(pos, char);\n                }\n            }\n        }\n        tokens.push(new Token(this.position, tt.EOF, undefined));\n        return tokens;\n    }\n    makeNumber() {\n        const pos = this.position.clone;\n        let numStr = '';\n        let dotCount = 0;\n        while (this.currentChar !== undefined && (digits + '._').includes(this.currentChar)) {\n            if (this.currentChar === '.') {\n                if (dotCount === 1) {\n                    break;\n                }\n                dotCount++;\n                numStr += '.';\n            }\n            else if (this.currentChar !== '_') {\n                numStr += this.currentChar;\n            }\n            this.advance();\n        }\n        return new Token(pos, tt.NUMBER, parseFloat(numStr));\n    }\n    makeString() {\n        const pos = this.position.clone;\n        let str = '';\n        let strClose = this.currentChar;\n        this.advance();\n        while (this.currentChar !== strClose && this.currentChar !== undefined) {\n            if (this.currentChar === '\\\\') {\n                this.advance();\n                if (this.currentChar === 'n') {\n                    str += '\\n';\n                    this.advance();\n                    continue;\n                }\n            }\n            str += this.currentChar;\n            this.advance();\n        }\n        this.advance();\n        return new Token(pos, tt.STRING, str);\n    }\n    makeIdentifier() {\n        let idStr = '';\n        const posStart = this.position.clone;\n        while (this.currentChar !== undefined && (identifierChars + digits).includes(this.currentChar)) {\n            idStr += this.currentChar;\n            this.advance();\n        }\n        let tokType = tt.IDENTIFIER;\n        if (KEYWORDS.indexOf(idStr) !== -1) {\n            tokType = tt.KEYWORD;\n        }\n        return new Token(posStart, tokType, idStr);\n    }\n    unknownChar() {\n        if (this.currentChar === undefined) {\n            return undefined;\n        }\n        for (let triple in tripleCharTokens) {\n            if (triple[0] === this.currentChar)\n                if (triple[1] === this.text[this.position.idx + 1])\n                    if (triple[2] === this.text[this.position.idx + 2]) {\n                        const pos = this.position.clone;\n                        this.advance();\n                        this.advance();\n                        this.advance();\n                        return new Token(pos, tripleCharTokens[triple], undefined);\n                    }\n        }\n        for (let double in doubleCharTokens) {\n            if (double[0] === this.currentChar)\n                if (double[1] === this.text[this.position.idx + 1]) {\n                    const pos = this.position.clone;\n                    this.advance();\n                    this.advance();\n                    return new Token(pos, doubleCharTokens[double], undefined);\n                }\n        }\n        if (singleCharTokens.hasOwnProperty(this.currentChar)) {\n            let pos = this.position.clone;\n            let val = singleCharTokens[this.currentChar];\n            this.advance();\n            return new Token(pos, val, undefined);\n        }\n        return undefined;\n    }\n    singleLineComment() {\n        this.advance();\n        while (this.currentChar !== '\\n' && this.currentChar !== undefined) {\n            this.advance();\n        }\n        this.advance();\n    }\n    multiLineComment() {\n        this.advance();\n        while (!(this.currentChar === multiLineCommentEnd[0] &&\n            this.text[this.position.idx + 1] === multiLineCommentEnd[1])) {\n            this.advance();\n        }\n        this.advance();\n        this.advance();\n    }\n}\n","import { tokenType, tokenTypeString, tt, types, VAR_DECLARE_KEYWORDS } from '../constants';\nimport { Token } from \"./tokens\";\nimport * as n from '../runtime/nodes';\nimport { N_functionDefinition, N_namespace, N_primitiveWrapper, N_tryCatch, N_undefined, N_variable, } from '../runtime/nodes';\nimport { ESError, InvalidSyntaxError } from \"../errors\";\nexport class ParseResults {\n    constructor() {\n        this.advanceCount = 0;\n        this.lastRegisteredAdvanceCount = 0;\n        this.reverseCount = 0;\n    }\n    registerAdvance() {\n        this.advanceCount = 1;\n        this.lastRegisteredAdvanceCount++;\n    }\n    register(res) {\n        this.lastRegisteredAdvanceCount = res.advanceCount;\n        this.advanceCount += res.advanceCount;\n        if (res.error) {\n            this.error = res.error;\n        }\n        if (!res.node) {\n            return new N_undefined();\n        }\n        return res.node;\n    }\n    tryRegister(res) {\n        if (res.error) {\n            this.reverseCount += res.advanceCount;\n            return;\n        }\n        return this.register(res);\n    }\n    success(node) {\n        this.node = node;\n        return this;\n    }\n    failure(error) {\n        this.error = error;\n        return this;\n    }\n}\nexport class Parser {\n    constructor(tokens) {\n        this.tokens = tokens;\n        this.tokenIdx = -1;\n        this.currentToken = tokens[0];\n        this.advance();\n    }\n    parse() {\n        var _a;\n        if (!this.currentToken || !this.tokens || (this.tokens.length === 1 && this.tokens[0].type === tt.EOF)) {\n            return new ParseResults();\n        }\n        const res = this.statements(true);\n        if (!res.error && this.currentToken.type !== tokenType.EOF) {\n            return res.failure(new InvalidSyntaxError((_a = this.currentToken) === null || _a === void 0 ? void 0 : _a.pos, `Expected 'End of File', got token of type '${tokenTypeString[this.currentToken.type]}'`));\n        }\n        return res;\n    }\n    advance(res) {\n        if (res)\n            res.registerAdvance();\n        this.tokenIdx++;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    reverse(amount = 1) {\n        this.tokenIdx -= amount;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    consume(res, type, errorMsg) {\n        if (this.currentToken.type !== type)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, errorMsg !== null && errorMsg !== void 0 ? errorMsg : `Expected '${tokenTypeString[type]}' but got '${tokenTypeString[this.currentToken.type]}'`));\n        this.advance(res);\n    }\n    clearEndStatements(res) {\n        while (this.currentToken.type === tt.ENDSTATEMENT) {\n            this.advance(res);\n        }\n    }\n    statements(topLevel = false) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let statements = [];\n        this.clearEndStatements(res);\n        const firstStatement = res.register(this.statement());\n        if (!firstStatement) {\n            return res;\n        }\n        statements.push(firstStatement);\n        if (res.error) {\n            return res;\n        }\n        let moreStatements = true;\n        while (true) {\n            let newLineCount = 0;\n            while (this.currentToken.type === tt.ENDSTATEMENT) {\n                this.advance(res);\n                newLineCount++;\n            }\n            if (newLineCount === 0) {\n                moreStatements = false;\n            }\n            if (!moreStatements) {\n                break;\n            }\n            const statement = res.tryRegister(this.statement());\n            if (!statement) {\n                this.reverse(res.reverseCount);\n                continue;\n            }\n            statements.push(statement);\n        }\n        this.clearEndStatements(res);\n        let node = new n.N_statements(pos, statements, topLevel);\n        return res.success(node);\n    }\n    statement() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        if (this.currentToken.matches(tt.KEYWORD, 'return')) {\n            return this.returnStatement(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'yield')) {\n            return this.returnStatement(res, true);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'break')) {\n            this.advance(res);\n            return res.success(new n.N_break(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'continue')) {\n            this.advance(res);\n            return res.success(new n.N_continue(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'try')) {\n            return this.tryCatch();\n        }\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    returnStatement(res, isYield = false) {\n        const pos = this.currentToken.pos;\n        this.advance(res);\n        let expr = new N_undefined(this.currentToken.pos);\n        if (this.currentToken.type !== tt.ENDSTATEMENT) {\n            let exprRes = res.register(this.expr());\n            if (!exprRes) {\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'Expected end of statement'));\n            }\n            expr = exprRes;\n        }\n        if (isYield) {\n            return res.success(new n.N_yield(pos, expr));\n        }\n        return res.success(new n.N_return(pos, expr));\n    }\n    atom() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        const pos = this.currentToken.pos;\n        switch (tok.type) {\n            case tt.NUMBER:\n                this.advance(res);\n                return res.success(new n.N_number(pos, tok));\n            case tt.STRING:\n                this.advance(res);\n                return res.success(new n.N_string(pos, tok));\n            case tt.IDENTIFIER:\n                return this.atomIdentifier(res, pos, tok);\n            case tt.OPAREN:\n                this.advance(res);\n                const expr = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type === tt.CPAREN) {\n                    this.advance(res);\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ')'\"));\n            case tt.OSQUARE:\n                let arrayExpr = res.register(this.array());\n                if (res.error)\n                    return res;\n                return res.success(arrayExpr);\n            case tt.OBRACES:\n                let objectExpr = res.register(this.object());\n                if (res.error)\n                    return res;\n                return res.success(objectExpr);\n            case tt.KEYWORD:\n                if (tok.value === 'if') {\n                    const expr = res.register(this.ifExpr());\n                    if (res.error)\n                        return res;\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Invalid Identifier ${tok.value}`));\n            default:\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected number, identifier, '(', '+' or '-'`));\n        }\n    }\n    atomIdentifier(res, pos, tok) {\n        this.advance(res);\n        let node = new n.N_variable(tok);\n        let prevNode = new n.N_undefined(pos);\n        let functionCall = false;\n        while ([tt.OPAREN, tt.OSQUARE, tt.DOT].indexOf(this.currentToken.type) !== -1) {\n            switch (this.currentToken.type) {\n                case tt.OPAREN:\n                    functionCall = true;\n                    const tempNode = node;\n                    node = res.register(this.makeFunctionCall(node));\n                    prevNode = tempNode;\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.OSQUARE:\n                    prevNode = node;\n                    node = res.register(this.makeIndex(node));\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.DOT:\n                    this.advance(res);\n                    if (this.currentToken.type !== tt.IDENTIFIER) {\n                        return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected identifier after '.'`));\n                    }\n                    prevNode = node;\n                    node = new n.N_indexed(this.currentToken.pos, node, new n.N_string(this.currentToken.pos, this.currentToken));\n                    this.advance(res);\n            }\n        }\n        if (this.currentToken.type === tt.ASSIGN) {\n            let assignType = this.currentToken.value;\n            if (functionCall) {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot assign to return value of function`));\n            }\n            this.advance(res);\n            const value = res.register(this.expr());\n            if (node instanceof n.N_variable) {\n                node = new n.N_varAssign(pos, node.a, value, assignType, false);\n            }\n            else if (node instanceof n.N_indexed) {\n                node.value = value;\n                node.assignType = assignType;\n            }\n            else {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot have node of type ${this.currentToken.constructor.name}.\n                            Expected either index or variable node.`));\n            }\n            if (res.error)\n                return res;\n        }\n        return res.success(node);\n    }\n    power() {\n        return this.binOp(() => this.atom(), [tt.POW, tt.MOD, tt.APMERSAND, tt.PIPE], () => this.factor());\n    }\n    factor() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        if (tok.type == tt.ADD || tok.type === tt.SUB) {\n            this.advance(res);\n            const factor = res.register(this.factor());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(tok.pos, factor, tok));\n        }\n        return this.power();\n    }\n    term() {\n        return this.binOp(() => this.factor(), [tt.MUL, tt.DIV]);\n    }\n    arithmeticExpr() {\n        return this.binOp(() => this.term(), [tt.ADD, tt.SUB]);\n    }\n    comparisonExpr() {\n        const res = new ParseResults();\n        if (this.currentToken.type === tt.NOT) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            let node = res.register(this.expr());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(opTok.pos, node, opTok));\n        }\n        if (this.currentToken.type === tt.BITWISE_NOT) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            let node = res.register(this.expr());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(opTok.pos, node, opTok));\n        }\n        let node = res.register(this.binOp(() => this.arithmeticExpr(), [tt.EQUALS, tt.NOTEQUALS, tt.GT, tt.GTE, tt.LTE, tt.LT]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    expr() {\n        const res = new ParseResults();\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.KEYWORD && VAR_DECLARE_KEYWORDS.indexOf(this.currentToken.value) !== -1) {\n            return this.initiateVar(res);\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'if')) {\n            return this.ifExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'while')) {\n            return this.whileExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'for')) {\n            return this.forExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'func')) {\n            return this.funcExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'class')) {\n            return this.classExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'namespace')) {\n            return this.namespace();\n        }\n        let node = res.register(this.binOp(() => this.comparisonExpr(), [tt.AND, tt.OR]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    binOp(func, ops, funcB = func) {\n        const res = new ParseResults();\n        let left = res.register(func());\n        if (res.error)\n            return res;\n        while (ops.indexOf(this.currentToken.type) !== -1\n            || ops.indexOf([this.currentToken.type, this.currentToken.value]) !== -1) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            const right = res.register(funcB());\n            if (res.error)\n                return res;\n            left = new n.N_binOp(left.pos, left, opTok, right);\n        }\n        return res.success(left);\n    }\n    makeFunctionCall(to) {\n        const res = new ParseResults();\n        let args = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OPAREN) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '['\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n            return res.success(new n.N_functionCall(pos, to, []));\n        }\n        args.push(res.register(this.expr()));\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid argument\"));\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            args.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CPAREN)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n        this.advance(res);\n        return res.success(new n.N_functionCall(pos, to, args));\n    }\n    makeIndex(to) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const base = to;\n        if (this.currentToken.type !== tt.OSQUARE)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, `Cannot index without expression`));\n        }\n        let index = res.register(this.expr());\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid index\"));\n        if (this.currentToken.type !== tt.CSQUARE)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ']'\"));\n        this.advance(res);\n        return res.success(new n.N_indexed(pos, base, index));\n    }\n    typeExpr(res) {\n        if (this.currentToken.type === tt.IDENTIFIER) {\n            const tok = this.currentToken;\n            this.advance(res);\n            return res.success(new N_variable(tok));\n        }\n        return this.expr();\n    }\n    initiateVar(res) {\n        let pos = this.currentToken.pos;\n        let isConst = true;\n        let isGlobal = false;\n        let isDeclaration = false;\n        if (this.currentToken.type === tt.KEYWORD &&\n            this.currentToken.value === 'global') {\n            isDeclaration = true;\n            isGlobal = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD &&\n            this.currentToken.value === 'let') {\n            isDeclaration = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        else if (this.currentToken.type === tt.KEYWORD &&\n            this.currentToken.value === 'var') {\n            isDeclaration = true;\n            isConst = false;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected variable declaration keyword, not ${this.currentToken.value}`));\n        }\n        if (this.currentToken.type !== tokenType.IDENTIFIER) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected Identifier or Keyword`));\n        }\n        const varName = this.currentToken;\n        this.advance(res);\n        let type = types.any;\n        if (this.currentToken.type === tt.COLON) {\n            isDeclaration = true;\n            this.consume(res, tt.COLON);\n            type = res.register(this.typeExpr(res));\n        }\n        if (this.currentToken.type !== tt.ASSIGN) {\n            if (isConst)\n                return res.failure(new InvalidSyntaxError(pos, 'Cannot initialise constant to undefined'));\n            return res.success(new n.N_varAssign(pos, varName, new n.N_undefined(this.currentToken.pos), '=', isGlobal, isConst, isDeclaration, type));\n        }\n        let assignType = this.currentToken.value;\n        this.advance(res);\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        if (expr instanceof n.N_class || expr instanceof n.N_functionDefinition) {\n            expr.name = varName.value;\n        }\n        if (expr instanceof N_namespace) {\n            expr.name = varName.value;\n            expr.mutable = !isConst;\n        }\n        return res.success(new n.N_varAssign(pos, varName, expr, assignType, isGlobal, isConst, isDeclaration, type));\n    }\n    bracesExp() {\n        const res = new ParseResults();\n        this.consume(res, tt.OBRACES);\n        if (res.error) {\n            return res;\n        }\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_undefined(this.currentToken.pos));\n        }\n        const expr = res.register(this.statements());\n        if (res.error) {\n            return res;\n        }\n        this.consume(res, tt.CBRACES);\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    addEndStatement(res) {\n        this.tokens.splice(this.tokenIdx, 0, new Token(this.currentToken.pos, tt.ENDSTATEMENT, undefined));\n        this.reverse();\n        this.advance(res);\n    }\n    ifExpr() {\n        const res = new ParseResults();\n        let ifTrue;\n        let ifFalse;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'if'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'if'\"));\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        ifTrue = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.clearEndStatements(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'else')) {\n            this.advance(res);\n            if (this.currentToken.type == tt.OBRACES) {\n                ifFalse = res.register(this.bracesExp());\n                if (res.error)\n                    return res;\n            }\n            else {\n                ifFalse = res.register(this.statement());\n                if (res.error)\n                    return res;\n            }\n        }\n        this.addEndStatement(res);\n        return res.success(new n.N_if(pos, condition, ifTrue, ifFalse));\n    }\n    whileExpr() {\n        const res = new ParseResults();\n        let loop;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'while')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'while'\"));\n        }\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        loop = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        return res.success(new n.N_while(pos, condition, loop));\n    }\n    parameter(res) {\n        let name;\n        let type = new n.N_primitiveWrapper(types.any);\n        if (this.currentToken.type !== tt.IDENTIFIER) {\n            return new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\");\n        }\n        name = this.currentToken.value;\n        this.advance(res);\n        if (this.currentToken.type === tt.COLON) {\n            this.consume(res, tt.COLON);\n            if (res.error)\n                return res.error;\n            type = res.register(this.typeExpr(res));\n            if (res.error)\n                return res.error;\n        }\n        return { name, type };\n    }\n    funcCore() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, args = [], returnType = new n.N_primitiveWrapper(types.any);\n        this.consume(res, tt.OPAREN);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n        }\n        else {\n            let param = this.parameter(res);\n            if (param instanceof ESError) {\n                return res.failure(param);\n            }\n            args.push(param);\n            while (this.currentToken.type === tt.COMMA) {\n                this.advance(res);\n                let param = this.parameter(res);\n                if (param instanceof ESError)\n                    return res.failure(param);\n                args.push(param);\n            }\n            if (this.currentToken.type !== tt.CPAREN)\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n            this.advance(res);\n        }\n        if (this.currentToken.type === tt.COLON) {\n            this.advance(res);\n            returnType = res.register(this.typeExpr(res));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.OBRACES) {\n            body = new n.N_return(this.currentToken.pos, res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        else {\n            this.consume(res, tt.OBRACES);\n            if (res.error)\n                return res;\n            if (this.currentToken.type !== tt.CBRACES)\n                body = res.register(this.statements());\n            else\n                body = new n.N_undefined(this.currentToken.pos);\n            this.consume(res, tt.CBRACES);\n            if (res.error)\n                return res;\n        }\n        return res.success(new n.N_functionDefinition(pos, body, args, returnType));\n    }\n    funcExpr() {\n        const res = new ParseResults();\n        if (!this.currentToken.matches(tt.KEYWORD, 'func'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'func'\"));\n        this.advance(res);\n        const func = res.register(this.funcCore());\n        if (res.error)\n            return res;\n        return res.success(func);\n    }\n    classExpr(name) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const methods = [];\n        let init;\n        let extends_ = new N_primitiveWrapper(types.object);\n        if (!this.currentToken.matches(tt.KEYWORD, 'class')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'class'\"));\n        }\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'extends')) {\n            this.advance(res);\n            extends_ = res.register(this.expr());\n            if (res.error)\n                return res;\n        }\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_class(pos, [], extends_, undefined, name));\n        }\n        while (true) {\n            if (this.currentToken.type !== tt.IDENTIFIER) {\n                break;\n            }\n            let methodId = this.currentToken.value;\n            this.advance(res);\n            const func = res.register(this.funcCore());\n            if (res.error)\n                return res;\n            if (!(func instanceof N_functionDefinition)) {\n                return res.failure(new ESError(this.currentToken.pos, 'ParseError', `Tried to get function, but got ${func} instead`));\n            }\n            func.name = methodId;\n            if (methodId === 'init') {\n                init = func;\n            }\n            else {\n                methods.push(func);\n            }\n        }\n        this.consume(res, tt.CBRACES);\n        return res.success(new n.N_class(pos, methods, extends_, init, name));\n    }\n    forExpr() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, array, identifier, isConst = true;\n        if (!this.currentToken.matches(tt.KEYWORD, 'for')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'for'\"));\n        }\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'var')) {\n            isConst = false;\n            this.advance(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'let')) {\n            this.advance(res);\n        }\n        if (res.error)\n            return res;\n        if (this.currentToken.type !== tt.IDENTIFIER) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\"));\n        }\n        identifier = this.currentToken;\n        this.advance(res);\n        if (!this.currentToken.matches(tt.KEYWORD, 'in')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected keyword 'in\"));\n        }\n        this.advance(res);\n        array = res.register(this.expr());\n        if (res.error)\n            return res;\n        body = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new n.N_for(pos, body, array, identifier, false, isConst));\n    }\n    array() {\n        const res = new ParseResults();\n        let elements = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            this.advance(res);\n            return res.success(new n.N_array(pos, []));\n        }\n        elements.push(res.register(this.expr()));\n        if (res.error) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Unexpected token\"));\n        }\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            elements.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ']'\"));\n        }\n        this.advance(res);\n        return res.success(new n.N_array(pos, elements));\n    }\n    object() {\n        const res = new ParseResults();\n        let properties = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OBRACES) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '{\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_objectLiteral(pos, []));\n        }\n        while (true) {\n            let keyType, key, value;\n            if (this.currentToken.type === tt.IDENTIFIER) {\n                keyType = 'id';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.STRING) {\n                keyType = 'string';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.OSQUARE) {\n                keyType = 'value';\n                this.advance(res);\n                key = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.CSQUARE) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ']', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                this.advance(res);\n            }\n            else {\n                break;\n            }\n            if (this.currentToken.type === tt.COLON) {\n                this.advance(res);\n                value = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                if (this.currentToken.type === tt.COMMA) {\n                    this.advance(res);\n                }\n            }\n            else {\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                if (keyType !== 'id') {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `You must specify a value when initialising an object literal with a key that is not an identifier.\n                        Try using \\`key: value\\` syntax.`));\n                }\n                this.reverse();\n                value = new n.N_variable(this.currentToken);\n                this.advance(res);\n                if (this.currentToken.type === tt.COMMA) {\n                    this.advance(res);\n                }\n            }\n            properties.push([key, value]);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CBRACES)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier, ',' or '}'\"));\n        this.advance(res);\n        return res.success(new n.N_objectLiteral(pos, properties));\n    }\n    namespace() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_namespace(pos, new n.N_undefined()));\n        }\n        const statements = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        return res.success(new n.N_namespace(pos, statements));\n    }\n    tryCatch() {\n        const res = new ParseResults();\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'No empty try block'));\n        }\n        const body = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.value !== 'catch') {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'try block requires catch'));\n        }\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.success(new N_tryCatch(this.currentToken.pos, body, new N_undefined()));\n        }\n        const catchBlock = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new N_tryCatch(this.currentToken.pos, body, catchBlock));\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Lexer } from \"./parse/lexer\";\nimport { Parser } from \"./parse/parser\";\nimport { global, libs as allLibs, now, refreshPerformanceNow, runningInNode, setGlobalContext, VERSION } from \"./constants\";\nimport { initialise } from \"./init\";\nimport { ESError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { compileResult, interpretResult, Node } from \"./runtime/nodes\";\nimport { ESArray, initPrimitiveTypes } from \"./runtime/primitiveTypes\";\nimport { Context } from \"./runtime/context\";\nimport addNodeLibs from \"./built-in/nodeLibs\";\nimport colours from './util/colours';\nimport JS_STD_TXT_RAW from 'raw-loader!./built-in/compiledSTD/std.txt.js';\nimport PY_STD_TXT_RAW from 'raw-loader!./built-in/compiledSTD/std.txt.py';\nexport { Context, colours };\nexport * from './runtime/primitiveTypes';\nexport { VERSION, global, setGlobalContext, IS_NODE_INSTANCE, runningInNode, permissions, updatePermissions, libs, now, refreshPerformanceNow } from './constants';\nexport * from './errors';\nexport * from './runtime/nodes';\nexport * from './util/util';\nexport * from './runtime/primitives/wrapStrip';\nexport * from './runtime/symbol';\nexport function init(printFunc = console.log, inputFunc, node = true, libs = { print: console.log }, context = new Context(), path = '') {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        initPrimitiveTypes();\n        const res = initialise(context, printFunc, inputFunc);\n        if (res instanceof ESError) {\n            return res;\n        }\n        setGlobalContext(context);\n        (_a = libs['context']) !== null && _a !== void 0 ? _a : (libs['context'] = context);\n        if (path) {\n            context.path = path;\n        }\n        if (libs.print) {\n            allLibs.print = libs.print;\n        }\n        if (node) {\n            runningInNode();\n            yield refreshPerformanceNow(true);\n            addNodeLibs(libs, context);\n        }\n    });\n}\nexport function run(msg, { env = global, measurePerformance = false, fileName = '(unknown)', currentDir = '' } = {}) {\n    if (currentDir) {\n        env.path = currentDir;\n    }\n    Node.maxTime = 0;\n    Node.totalTime = 0;\n    Node.interprets = 0;\n    const timeData = {\n        total: 0,\n        lexerTotal: 0,\n        parserTotal: 0,\n        interpretTotal: 0,\n        nodeMax: 0,\n        nodeAvg: 0,\n        nodeTotal: 0,\n        interprets: 0,\n    };\n    let start = now();\n    if (!env.root.initialisedAsGlobal) {\n        const res = new interpretResult();\n        res.error = new ESError(Position.void, 'Uninitialised', 'Global context has not been initialised with global values');\n        return res;\n    }\n    const lexer = new Lexer(msg, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        const res_ = new interpretResult();\n        res_.error = lexerRes;\n        return res_;\n    }\n    timeData.lexerTotal = now() - start;\n    start = now();\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        const res_ = new interpretResult();\n        res_.error = res.error;\n        return res_;\n    }\n    timeData.parserTotal = now() - start;\n    start = now();\n    if (!res.node) {\n        const res = new interpretResult();\n        res.val = new ESArray([]);\n        return res;\n    }\n    const finalRes = res.node.interpret(env);\n    timeData.interpretTotal = now() - start;\n    timeData.total = now() - start;\n    timeData.nodeMax = Node.maxTime;\n    timeData.nodeTotal = Node.totalTime;\n    timeData.nodeAvg = Node.totalTime / Node.interprets;\n    timeData.interprets = Node.interprets;\n    if (measurePerformance) {\n        console.log(timeData);\n    }\n    return Object.assign(Object.assign({}, finalRes), { timeData });\n}\nexport function parse(code, { fileName = '(unknown)', currentDir = '' } = {}) {\n    const lexer = new Lexer(code, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        return {\n            error: lexerRes\n        };\n    }\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        return {\n            error: res.error\n        };\n    }\n    if (!res.node) {\n        return {\n            error: new ESError(Position.void, 'Error', 'no output')\n        };\n    }\n    return {\n        compileToJavaScript: (config) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            const comment = `// Generated by EntropyScript->JavaScript compiler v${VERSION}\\n`;\n            const stdStr = JS_STD_TXT_RAW.toString().replace(/(\\r\\n|\\n|\\r|\\t| )+/gm, ' ') + '\\n';\n            const out = res.node.compileJS(config);\n            if (out.error)\n                return out;\n            if (config.minify) {\n                out.val = out.val.replace(/(\\r\\n|\\n|\\r|\\t| )+/gm, ' ');\n            }\n            return new compileResult(comment + stdStr + out.val);\n        },\n        compileToPython: (config) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            const comment = `# Generated by EntropyScript->Python compiler v${VERSION}\\n\\n`;\n            const stdStr = PY_STD_TXT_RAW.toString() + '\\n';\n            const out = res.node.compilePy(config);\n            if (out.error)\n                return out;\n            return new compileResult(comment + stdStr + out.hoisted + '\\n' + out.val);\n        },\n        interpret: (env = global) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            if (currentDir) {\n                env.path = currentDir;\n            }\n            if (!env.root.initialisedAsGlobal) {\n                const res = new interpretResult();\n                res.error = new ESError(Position.void, 'Uninitialised', 'Global context has not been initialised with global values');\n                return res;\n            }\n            return res.node.interpret(env);\n        },\n    };\n}\n","import { Position } from \"../position\";\nimport { Context } from \"../runtime/context\";\nimport { ESError, ImportError, PermissionRequiredError } from '../errors';\nimport { ESFunction, ESNamespace, ESObject, ESString } from '../runtime/primitiveTypes';\nimport { str } from \"../util/util\";\nimport { permissions, run } from '../index';\nimport { addModuleFromObj, getModule, moduleExist } from './builtInModules';\nimport { global, types } from \"../constants\";\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nfunction addNodeLibs(options, context) {\n    const { fs, path } = options;\n    for (let libName in options) {\n        if (options.hasOwnProperty(libName)) {\n            addModuleFromObj(libName, new ESJSBinding(options[libName], libName));\n        }\n    }\n    context.set('import', new ESFunction(({ context }, rawPath) => {\n        if (!permissions.imports) {\n            return new PermissionRequiredError('Imports not allowed');\n        }\n        if (!permissions.imports) {\n            return new PermissionRequiredError('Imports not allowed');\n        }\n        let scriptPath = str(rawPath);\n        if (permissions.useSTD && moduleExist(scriptPath)) {\n            return getModule(scriptPath);\n        }\n        scriptPath = path.join(context.path, scriptPath);\n        try {\n            if (!fs.existsSync(scriptPath)) {\n                if (fs.existsSync('./particles/' + scriptPath)) {\n                    if (fs.existsSync('particles/' + scriptPath + '/main.es')) {\n                        scriptPath = 'particles/' + scriptPath + '/main.es';\n                    }\n                    else {\n                        return new ESError(Position.void, 'ImportError', `Module '${scriptPath}' has no entry point. Requires 'main.es'.`);\n                    }\n                }\n                else {\n                    return new ESError(Position.void, 'ImportError', `Can't find file '${scriptPath}' to import.`);\n                }\n            }\n            const exDir = path.dirname(scriptPath);\n            const code = fs.readFileSync(scriptPath, 'utf-8');\n            const env = new Context();\n            env.parent = global;\n            env.path = exDir;\n            const n = new ESNamespace(new ESString(scriptPath), {});\n            const res = run(code, {\n                env,\n                measurePerformance: false,\n                fileName: scriptPath,\n                currentDir: exDir,\n            });\n            n.__value__ = env.getSymbolTableAsDict();\n            if (res.error) {\n                return res.error;\n            }\n            return n;\n        }\n        catch (E) {\n            return new ESError(Position.void, 'ImportError', E.toString());\n        }\n    }, [{ name: 'path', type: types.string }], 'import', undefined, types.object), {\n        forceThroughConst: true,\n        isConstant: true\n    });\n    context.setOwn('open', new ESFunction(({ context }, path_, encoding_) => {\n        if (!permissions.fileSystem) {\n            return new PermissionRequiredError('No access to file system');\n        }\n        const path = str(path_);\n        const encoding = str(encoding_) || 'utf-8';\n        if (!fs.existsSync(path)) {\n            return new ImportError(Position.void, path);\n        }\n        return new ESObject({\n            str: new ESFunction(({ context }) => {\n                return new ESString(fs.readFileSync(context.path + path, encoding));\n            }, [], 'str', undefined, types.string),\n            write: new ESFunction(({ context }, data) => {\n                fs.writeFileSync(context.path + path, str(data));\n            }, [{ name: 'path', type: types.string }]),\n            append: new ESFunction(({ context }, data) => {\n                fs.appendFileSync(context.path + path, str(data));\n            }, [{ name: 'path', type: types.string }]),\n        });\n    }));\n}\nexport default addNodeLibs;\n","export default \"Array.prototype.contains = function (element) {\\n\\treturn this.indexOf(element) !== -1;\\n};\\n\\nfunction parseNum (str) {\\n\\treturn parseFloat(str);\\n}\\n\\nconst print = console.log;\\n\\nNumber.prototype[Symbol.iterator] = function () {\\n\\treturn {\\n\\t\\tcurrent: 0,\\n\\t\\tlast: this,\\n\\t\\tnext() {\\n\\t\\t\\tif (this.current <= this.last) {\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\tdone: false,\\n\\t\\t\\t\\t\\tvalue: this.current++\\n\\t\\t\\t\\t};\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn { done: true };\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n};\\n\\nconst __private__ = {\\n\\tbims: {\\n\\t\\tmath: Math,\\n\\t\\ttime: {\\n\\t\\t\\tdate: Date,\\n\\t\\t\\tnow: Date.now,\\n\\t\\t},\\n\\t},\\n};\\n\\nif (typeof performance !== 'undefined') {\\n\\t__private__.bims.time.now = performance.now;\\n}\\n\\nfunction import_ (path) {\\n\\tif (__private__.bims.hasOwnProperty(path)) {\\n\\t\\treturn __private__.bims[path];\\n\\t}\\n}\\n\\nfunction range (minP, maxP, stepP) {\\n\\tif (typeof minP !== 'number') {\\n\\t\\treturn [];\\n\\t}\\n\\n\\tconst min = minP.valueOf();\\n\\n\\tif (typeof maxP === 'undefined') {\\n\\t\\ttry {\\n\\t\\t\\treturn [...Array(min).keys()];\\n\\t\\t} catch (e) {\\n\\t\\t\\tthrow `RangeError: Cannot make range of length '${min}'`;\\n\\t\\t}\\n\\t}\\n\\n\\tlet step = 1;\\n\\n\\tif (typeof maxP !== 'number') {\\n\\t\\tthrow 'TypeError: Expected number';\\n\\t}\\n\\n\\tlet max = maxP.valueOf();\\n\\n\\tif (typeof stepP !== 'undefined') {\\n\\t\\tif (typeof stepP !== 'number') {\\n\\t\\t\\tthrow 'TypeError: Expected number';\\n\\t\\t}\\n\\t\\tstep = stepP.valueOf();\\n\\t}\\n\\n\\tlet arr = [];\\n\\n\\tlet i = min;\\n\\twhile (i < max) {\\n\\t\\tarr.push(i);\\n\\t\\ti += step;\\n\\t}\\n\\n\\treturn arr;\\n}\";","export default \"\\n###############################\\n# START OF ENTROPY SCRIPT STD #\\n###############################\\nimport time\\n\\nlog = print\\nparseNum = float\\n\\ndef help(thing):\\n    return 'Help is not available in ES compiled Python'\\n\\n\\ndef GENERATE_PRIVATE():\\n    return {\\n        'modules': {\\n            'ascii': {\\n\\n            },\\n            'time': {\\n                'now': lambda: time.time_ns() / (10 ** 6)\\n            }\\n        }\\n    }\\n\\nPRIVATE = GENERATE_PRIVATE()\\n\\ndef import_ (path):\\n    if path in PRIVATE['modules']:\\n        return PRIVATE['modules'][path]\\n\\n\\n#############################\\n# END OF ENTROPY SCRIPT STD #\\n#############################\";"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Position","constructor","idx","ln","col","file","advance","currentChar","clone","str","isUnknown","void","digits","identifierChars","global","setGlobalContext","c","stringSurrounds","IS_NODE_INSTANCE","window","runningInNode","VAR_DECLARE_KEYWORDS","VERSION","permissions","networking","imports","accessDOM","useSTD","fileSystem","updatePermissions","newPermissions","assign","print","console","log","KEYWORDS","now","refreshPerformanceNow","thisArg","_arguments","generator","Date","performance","e","P","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","tokenType","tt","tokenTypeString","NUMBER","STRING","ENDSTATEMENT","IDENTIFIER","KEYWORD","COMMA","OBRACES","CBRACES","OPAREN","CPAREN","OSQUARE","CSQUARE","ASSIGN","ADD","SUB","MUL","DIV","POW","MOD","EQUALS","NOTEQUALS","NOT","GT","LT","GTE","LTE","AND","OR","COLON","DOT","EOF","APMERSAND","PIPE","BITWISE_NOT","singleCharTokens","doubleCharTokens","tripleCharTokens","primitiveMethods","types","ESPrimitive","type","any","self","isa","props","typeCheck","is","ESBoolean","valueOf","__value__","typeName","__type__","hasProperty","describe","info","isBuiltIn","description","detail","res","strip","TypeError","__add__","n","InvalidOperationError","__subtract__","__multiply__","__divide__","__pow__","__mod__","__eq__","__gt__","__lt__","__and__","__or__","__bool__","__pipe__","__ampersand__","__setProperty__","__call__","parameters","ESErrorPrimitive","error","ESError","super","__getProperty__","ESString","name","details","ESArray","traceback","map","s","position","line","wrap","IndexError","cast","bool","ESTypeUnion","ESTypeIntersection","ESUndefined","undefined","context","number","ESNumber","string","array","ESType","object","ESObject","ESFunction","boolean","val","length","substr","keys","k","thisElement","nElement","newOb","keysToRemove","Array","isArray","indexOf","toClone","thisType","nValue","func","arguments_","this_","returnType","closure","__closure__","params","path","_a","callContext","fn","newContext","parent","Context","max","Math","i","arg","typeIncludes","setOwn","forceThroughConst","setRes","generateESFunctionCallContext","Node","_b","interpret","funcReturn","callNode","push","callNative","thisReturnVal","args","defaultValue","required","v","ESNamespace","mutable","slice","symbol","isAccessible","isConstant","ESJSBinding","functionsTakeProps","JSON","stringify","fTakesProps","initPrimitiveTypes","dealWithExtends","class_","instance","superFunc","__extends__","initFunc","__init__","res_","createInstance","runInit","on","primitive","__name__","method","__methods__","methodClone","__instances__","isPrimitive","t","ESTypeArray","left","right","leftRes","__left__","rightRes","__right__","ESTypeNot","__val__","toString","pow","Boolean","helpLink","values","len","contains","element","newArr","num","parseFloat","isNaN","split","repeat","strToInsert","firstPart","lastPart","ESSymbol","identifier","options","_c","thing","Number","String","m","a","codes","red","yellow","green","cyan","blue","grey","code","builtInFunctions","minP","maxP","stepP","min","arr","returns","msgs","things","out","indent","total","filter","entries","contents","id","has","set","global_","time","cb","sleep","parse","json","modules","ascii","asciiToChar","fromCharCode","charToAscii","char","charCodeAt","processedModules","processRawModule","moduleDict","moduleRaw","moduleExist","getModule","processed","initialise","globalContext","printFunc","inputFunc","rawUrl","callback","url","fetch","text","env","run","ImportError","getSymbolTableAsDict","E","msg","cbRaw","builtIn","globalConstants","constant","load","initModRes","thens","resolved","catch_","catch","date","domRes","PermissionRequiredError","InvalidRuntimeError","w","$","document","ReferenceError","dom","initModules","initialisedAsGlobal","symbolTable","deleted","path_","parent_","hasOwn","getSymbol","getRawSymbolTableAsDict","symbols","remove","clear","resetAsGlobal","deepClone","interpretArgument","typeRes","defaultValRes","interpretResult","shouldBreak","shouldContinue","compileResult","hoisted","register","node","config","compilePy","pos","isTerminal","start","interpret_","interprets","totalTime","maxTime","N_binOp","opTok","l","r","lt","eq","gt","InvalidSyntaxError","compileJS","minify","switchers","op","N_unaryOp","numVal","abs","N_varAssign","varNameTok","assignType","isGlobal","isDeclaration","N_primitiveWrapper","typeCheckRes","currentVal","newVal","assignVal","declaration","N_if","comparison","ifTrue","ifFalse","compRes","highIndent","statementRes","ifTrueRes","ifFalseRes","N_statements","N_while","loop","shouldLoop","potentialError","comparisonRes","bodyRes","N_for","body","isGlobalIdentifier","isConstIdentifier","isGlobalId","isConstId","_d","_e","_f","_g","_h","iteration","iteratorRes","N_array","items","shouldClone","interpreted","item","itemRes","N_objectLiteral","properties","keyNode","valueNode","topLevel","last","N_functionCall","to","arguments","join","funcRes","argRes","N_functionDefinition","argNames","returnTypeRes","param","hoistedName","generateRandomSymbol","N_return","valRes","N_yield","N_indexed","base","index","baseRes","indexRes","objectRes","keyRes","N_class","methods","extends_","init","extendsRes","initRes","N_namespace","statements","N_tryCatch","catchBlock","catchRes","N_number","N_string","N_variable","N_undefined","N_break","N_continue","hash","WeakMap","Function","create","getPrototypeOf","Map","from","Set","add","depth","substring","ms","setTimeout","replace","characters","gen","charAt","floor","random","colouredStr","reverse","IllegalCharError","ExpectedCharError","expectedType","actualType","ref","TestFailed","Token","matches","Lexer","program","fileName","generate","tokens","includes","makeNumber","singleLineComment","multiLineComment","makeIdentifier","makeString","possibleAssignFirstChar","token","unknownChar","numStr","dotCount","strClose","idStr","posStart","tokType","triple","double","ParseResults","advanceCount","lastRegisteredAdvanceCount","reverseCount","registerAdvance","tryRegister","success","failure","Parser","tokenIdx","currentToken","amount","consume","errorMsg","clearEndStatements","firstStatement","statement","moreStatements","newLineCount","returnStatement","tryCatch","expr","isYield","exprRes","atom","tok","atomIdentifier","arrayExpr","objectExpr","ifExpr","prevNode","functionCall","tempNode","makeFunctionCall","makeIndex","power","binOp","factor","term","arithmeticExpr","comparisonExpr","initiateVar","whileExpr","forExpr","funcExpr","classExpr","namespace","ops","funcB","typeExpr","isConst","varName","bracesExp","addEndStatement","splice","condition","parameter","funcCore","methodId","elements","keyType","libs","fs","libName","raw","addModule","rawPath","scriptPath","existsSync","exDir","dirname","readFileSync","measurePerformance","currentDir","encoding_","encoding","write","data","writeFileSync","append","appendFileSync","timeData","lexerTotal","parserTotal","interpretTotal","nodeMax","nodeAvg","nodeTotal","lexerRes","finalRes","compileToJavaScript","comment","stdStr","compileToPython"],"sourceRoot":""}