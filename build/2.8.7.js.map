{"version":3,"file":"2.8.7.js","mappings":"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","sources":["webpack://es/webpack/universalModuleDefinition","webpack://es/webpack/bootstrap","webpack://es/webpack/runtime/define property getters","webpack://es/webpack/runtime/hasOwnProperty shorthand","webpack://es/webpack/runtime/make namespace object","webpack://es/./src/position.ts","webpack://es/./src/constants.ts","webpack://es/./src/runtime/primitives/primitive.ts","webpack://es/./src/runtime/primitives/esprimitive.ts","webpack://es/./src/runtime/primitives/eserrorprimitive.ts","webpack://es/./src/runtime/instantiator.ts","webpack://es/./src/runtime/primitives/estype.ts","webpack://es/./src/runtime/primitives/esundefined.ts","webpack://es/./src/runtime/primitives/esobject.ts","webpack://es/./src/runtime/primitives/esnamespace.ts","webpack://es/./src/runtime/primitives/esjsbinding.ts","webpack://es/./src/runtime/primitiveTypes.ts","webpack://es/./src/runtime/primitives/esfunction.ts","webpack://es/./src/runtime/functionCaller.ts","webpack://es/./src/runtime/context.ts","webpack://es/./src/runtime/primitives/esnumber.ts","webpack://es/./src/runtime/primitives/esboolean.ts","webpack://es/./src/runtime/primitives/esarray.ts","webpack://es/./src/runtime/primitives/esstring.ts","webpack://es/./src/runtime/symbol.ts","webpack://es/./src/runtime/primitives/wrapStrip.ts","webpack://es/./src/util/colours.ts","webpack://es/./src/built-in/builtInFunctions.ts","webpack://es/./src/built-in/built-in-modules/json.ts","webpack://es/./src/built-in/builtInModules.ts","webpack://es/./src/built-in/built-in-modules/ascii.ts","webpack://es/./src/init.ts","webpack://es/./src/built-in/globalConstants.ts","webpack://es/./src/built-in/built-in-modules/promise.ts","webpack://es/./src/built-in/built-in-modules/dom.ts","webpack://es/./src/runtime/argument.ts","webpack://es/./src/runtime/nodes.ts","webpack://es/./src/util/util.ts","webpack://es/./src/errors.ts","webpack://es/./src/parse/tokens.ts","webpack://es/./src/parse/lexer.ts","webpack://es/./src/parse/parser.ts","webpack://es/./src/index.ts","webpack://es/./src/built-in/nodeLibs.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"es\"] = factory();\n\telse\n\t\troot[\"es\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Position {\n    constructor(idx, ln, col, file = '(unknown)') {\n        this.idx = idx;\n        this.ln = ln;\n        this.col = col;\n        this.file = file;\n    }\n    advance(currentChar = '') {\n        this.idx++;\n        this.col++;\n        if (currentChar === '\\n') {\n            this.ln++;\n            this.col = 0;\n        }\n        return this;\n    }\n    get clone() {\n        return new Position(this.idx, this.ln, this.col, this.file);\n    }\n    get str() {\n        return `File ${this.file}, ${this.ln + 1}:${this.col + 1}`;\n    }\n    get isUnknown() {\n        return this.idx === -2;\n    }\n    static get unknown() {\n        return new Position(-2, -2, -2, '(unknown)');\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const digits = '0123456789';\nexport const identifierChars = '_$abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nexport const singleLineComment = '//';\nexport const multiLineCommentStart = '/*';\nexport const multiLineCommentEnd = '*/';\nexport let global;\nexport const setGlobalContext = (c) => void (global = c);\nexport const stringSurrounds = ['\\'', '`', '\"'];\nexport let IS_NODE_INSTANCE = typeof window === 'undefined';\nexport const runningInNode = () => void (IS_NODE_INSTANCE = true);\nexport const libs = {\n    print: console.log\n};\nexport const catchBlockErrorSymbolName = 'err';\nexport const KEYWORDS = [\n    'var',\n    'let',\n    'global',\n    'local',\n    'mutable',\n    'const',\n    'if',\n    'else',\n    'while',\n    'for',\n    'in',\n    'continue',\n    'break',\n    'func',\n    'return',\n    'yield',\n    'class',\n    'extends',\n    'namespace',\n    'export',\n    'try',\n    'catch'\n];\nexport let now = () => 0;\nexport function refreshPerformanceNow(IS_NODE_INSTANCE) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (IS_NODE_INSTANCE) {\n            now = () => Date.now();\n        }\n        else {\n            now = () => {\n                try {\n                    return performance === null || performance === void 0 ? void 0 : performance.now();\n                }\n                catch (e) {\n                    return 0;\n                }\n            };\n        }\n    });\n}\nrefreshPerformanceNow(IS_NODE_INSTANCE);\nexport const importCache = {};\nexport var tokenType;\n(function (tokenType) {\n    tokenType[tokenType[\"NUMBER\"] = 0] = \"NUMBER\";\n    tokenType[tokenType[\"STRING\"] = 1] = \"STRING\";\n    tokenType[tokenType[\"ENDSTATEMENT\"] = 2] = \"ENDSTATEMENT\";\n    tokenType[tokenType[\"IDENTIFIER\"] = 3] = \"IDENTIFIER\";\n    tokenType[tokenType[\"KEYWORD\"] = 4] = \"KEYWORD\";\n    tokenType[tokenType[\"COMMA\"] = 5] = \"COMMA\";\n    tokenType[tokenType[\"ASSIGN\"] = 6] = \"ASSIGN\";\n    tokenType[tokenType[\"ADD\"] = 7] = \"ADD\";\n    tokenType[tokenType[\"SUB\"] = 8] = \"SUB\";\n    tokenType[tokenType[\"MUL\"] = 9] = \"MUL\";\n    tokenType[tokenType[\"DIV\"] = 10] = \"DIV\";\n    tokenType[tokenType[\"POW\"] = 11] = \"POW\";\n    tokenType[tokenType[\"OPAREN\"] = 12] = \"OPAREN\";\n    tokenType[tokenType[\"CPAREN\"] = 13] = \"CPAREN\";\n    tokenType[tokenType[\"OBRACES\"] = 14] = \"OBRACES\";\n    tokenType[tokenType[\"CBRACES\"] = 15] = \"CBRACES\";\n    tokenType[tokenType[\"OSQUARE\"] = 16] = \"OSQUARE\";\n    tokenType[tokenType[\"CSQUARE\"] = 17] = \"CSQUARE\";\n    tokenType[tokenType[\"EQUALS\"] = 18] = \"EQUALS\";\n    tokenType[tokenType[\"NOTEQUALS\"] = 19] = \"NOTEQUALS\";\n    tokenType[tokenType[\"NOT\"] = 20] = \"NOT\";\n    tokenType[tokenType[\"GT\"] = 21] = \"GT\";\n    tokenType[tokenType[\"LT\"] = 22] = \"LT\";\n    tokenType[tokenType[\"GTE\"] = 23] = \"GTE\";\n    tokenType[tokenType[\"LTE\"] = 24] = \"LTE\";\n    tokenType[tokenType[\"AND\"] = 25] = \"AND\";\n    tokenType[tokenType[\"OR\"] = 26] = \"OR\";\n    tokenType[tokenType[\"COLON\"] = 27] = \"COLON\";\n    tokenType[tokenType[\"DOT\"] = 28] = \"DOT\";\n    tokenType[tokenType[\"EOF\"] = 29] = \"EOF\";\n    tokenType[tokenType[\"BITWISE_OR\"] = 30] = \"BITWISE_OR\";\n    tokenType[tokenType[\"BITWISE_AND\"] = 31] = \"BITWISE_AND\";\n    tokenType[tokenType[\"BITWISE_NOT\"] = 32] = \"BITWISE_NOT\";\n})(tokenType || (tokenType = {}));\nexport let tt = tokenType;\nexport const tokenTypeString = {\n    [tt.NUMBER]: 'Number',\n    [tt.STRING]: 'String',\n    [tt.ENDSTATEMENT]: ';',\n    [tt.IDENTIFIER]: 'Identifier',\n    [tt.KEYWORD]: 'Keyword',\n    [tt.COMMA]: ',',\n    [tt.OBRACES]: '{',\n    [tt.CBRACES]: '}',\n    [tt.OPAREN]: '(',\n    [tt.CPAREN]: ')',\n    [tt.OSQUARE]: '[',\n    [tt.CSQUARE]: ']',\n    [tt.ASSIGN]: '=',\n    [tt.ADD]: '+',\n    [tt.SUB]: '-',\n    [tt.MUL]: '*',\n    [tt.DIV]: '/',\n    [tt.POW]: '^',\n    [tt.EQUALS]: '==',\n    [tt.NOTEQUALS]: '!=',\n    [tt.NOT]: '!',\n    [tt.GT]: '>',\n    [tt.LT]: '<',\n    [tt.GTE]: '>=',\n    [tt.LTE]: '<=',\n    [tt.AND]: '&&',\n    [tt.OR]: '||',\n    [tt.COLON]: ':',\n    [tt.DOT]: '.',\n    [tt.EOF]: 'End of File',\n    [tt.BITWISE_AND]: '&',\n    [tt.BITWISE_OR]: '|',\n    [tt.BITWISE_NOT]: '~',\n};\nexport const singleCharTokens = {\n    '*': tt.MUL,\n    '/': tt.DIV,\n    '+': tt.ADD,\n    '-': tt.SUB,\n    '(': tt.OPAREN,\n    ')': tt.CPAREN,\n    '^': tt.POW,\n    '{': tt.OBRACES,\n    '}': tt.CBRACES,\n    ',': tt.COMMA,\n    '[': tt.OSQUARE,\n    ']': tt.CSQUARE,\n    ';': tt.ENDSTATEMENT,\n    ':': tt.COLON,\n    '.': tt.DOT,\n    '=': tt.ASSIGN,\n    '>': tt.GT,\n    '<': tt.LT,\n    '!': tt.NOT,\n    '|': tt.BITWISE_OR,\n    '&': tt.BITWISE_AND,\n    '~': tt.BITWISE_NOT\n};\nexport const doubleCharTokens = {\n    '==': tt.EQUALS,\n    '!=': tt.NOTEQUALS,\n    '>=': tt.GTE,\n    '<=': tt.LTE,\n    '+=': tt.ASSIGN,\n    '-=': tt.ASSIGN,\n    '*=': tt.ASSIGN,\n    '/=': tt.ASSIGN,\n    '&&': tt.AND,\n    '||': tt.OR\n};\nexport const tripleCharTokens = {};\nexport const primitiveMethods = [\n    '__add__',\n    '__subtract__',\n    '__multiply__',\n    '__divide__',\n    '__pow__',\n    '__eq__',\n    '__gt__',\n    '__lt__',\n    '__and__',\n    '__or__',\n    '__bool__',\n    '__setProperty__',\n    '__getProperty__',\n    '__call__',\n];\n","export const types = {};\n","import { InvalidOperationError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { types } from './primitive';\nimport { str } from '../../util/util';\nimport { strip } from './wrapStrip';\nexport class ESPrimitive {\n    constructor(value, type = types.any) {\n        this.self = this;\n        this.isa = (props, type) => {\n            return new ESBoolean(type === this.__type__);\n        };\n        this.is = (props, obj) => {\n            return new ESBoolean(obj === this);\n        };\n        this.valueOf = () => this.__value__;\n        this.typeName = () => this.__type__.__name__;\n        this.hasProperty = (props, key) => new ESBoolean(this.hasOwnProperty(str(key)));\n        this.describe = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            this.info.description = str(info);\n        };\n        this.detail = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            const res = strip(info, props);\n            if (typeof res !== 'object') {\n                return new TypeError(Position.unknown, 'object', this.typeName(), str(this));\n            }\n            this.info = Object.assign(Object.assign({}, this.info), res);\n            this.info.isBuiltIn = false;\n        };\n        this.__type__ = type || this;\n        this.__value__ = value;\n        this.info = {};\n    }\n    __add__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __subtract__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __multiply__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __divide__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __pow__(props, n) {\n        return new InvalidOperationError('__pow__', this);\n    }\n    __eq__(props, n) {\n        return new InvalidOperationError('__eq__', this);\n    }\n    __gt__(props, n) {\n        return new InvalidOperationError('__gt__', this);\n    }\n    __lt__(props, n) {\n        return new InvalidOperationError('__lt__', this);\n    }\n    __and__(props, n) {\n        return new InvalidOperationError('__and__', this);\n    }\n    __or__(props, n) {\n        return new InvalidOperationError('__or__', this);\n    }\n    __bool__(props) {\n        return new InvalidOperationError('__bool__', this);\n    }\n    __setProperty__(props, key, value) {\n        return new InvalidOperationError('__setProperty__', this, `[${str(key)}] = ${str(value)}`);\n    }\n    __call__(props, ...parameters) {\n        return new InvalidOperationError('__call__', this);\n    }\n}\n","import { ESPrimitive } from './esprimitive';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nimport { str } from \"../../util/util\";\nimport { ESArray } from \"./esarray\";\nexport class ESErrorPrimitive extends ESPrimitive {\n    constructor(error = new ESError(Position.unknown, 'Unknown', 'Error not specified')) {\n        super(error, types.error);\n        this.__getProperty__ = (props, key) => {\n            switch (str(key)) {\n                case 'name':\n                    return new ESString(this.valueOf().name);\n                case 'details':\n                    return new ESString(this.valueOf().details);\n                case 'traceback':\n                    return new ESArray(this.valueOf().traceback\n                        .map(s => new ESString(`${s.position.str} : ${s.line}`)));\n                default:\n                    if (this.self.hasOwnProperty(str(key))) {\n                        return wrap(this.self[str(key)]);\n                    }\n                    return new IndexError(Position.unknown, key.valueOf(), this);\n            }\n        };\n        this.cast = () => new ESError(Position.unknown, 'TypeError', `Cannot cast type 'error'`);\n        this.str = () => new ESString(`<Error: ${this.valueOf().str}>`);\n        this.__eq__ = (props, n) => new ESBoolean(n instanceof ESErrorPrimitive &&\n            this.valueOf().constructor === n.valueOf().constructor);\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.clone = () => new ESErrorPrimitive(this.valueOf());\n    }\n}\n","import { primitiveMethods } from '../constants';\nimport { Context } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESFunction, ESNumber, ESObject, ESString, ESType, ESUndefined } from \"./primitiveTypes\";\nfunction dealWithExtends(context, class_, instance, this_, callContext) {\n    if (!(class_ instanceof ESType)) {\n        return new TypeError(Position.unknown, 'Type', typeof class_, class_);\n    }\n    const superFunc = new ESFunction(({ context }, ...args) => {\n        const newContext = new Context();\n        newContext.parent = context;\n        if (class_.__extends__) {\n            let _a = dealWithExtends(newContext, class_.__extends__, instance, this_, callContext);\n            if (_a instanceof ESError) {\n                return _a;\n            }\n        }\n        const initFunc = class_ === null || class_ === void 0 ? void 0 : class_.__init__;\n        if (!initFunc) {\n            return;\n        }\n        initFunc.this_ = this_;\n        initFunc.__closure__ = newContext;\n        const res_ = initFunc.__call__({ context: newContext }, ...args);\n        if (res_ instanceof ESError) {\n            return res_;\n        }\n    }, undefined, 'super', this_);\n    let setRes = context.setOwn('super', superFunc);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    const res = createInstance(class_, { context }, [], false, instance);\n    if (res instanceof ESError) {\n        return res;\n    }\n}\nexport function createInstance(type, { context }, params, runInit = true, on = {}) {\n    var _b;\n    if (type.__isPrimitive__) {\n        if (params.length < 1) {\n            return new ESUndefined();\n        }\n        switch (type.__name__) {\n            case 'Undefined':\n            case 'Type':\n                if (params.length < 1) {\n                    return new ESType();\n                }\n                else {\n                    return new ESString(params[0].__type__.__name__);\n                }\n            case 'String':\n                return new ESString(params[0].str().valueOf());\n            case 'Array':\n                return new ESArray(params);\n            case 'Number':\n                return new ESNumber(params[0].valueOf());\n            case 'Function':\n                return new ESFunction(params[0].valueOf());\n            case 'Boolean':\n                return new ESBoolean(params[0].bool().valueOf());\n            default:\n                return wrap(params[0]);\n        }\n    }\n    const newContext = new Context();\n    newContext.parent = (_b = type.__init__) === null || _b === void 0 ? void 0 : _b.__closure__;\n    const instance = new ESObject();\n    if (type.__extends__) {\n        let res = dealWithExtends(newContext, type.__extends__, on, instance, context);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__value__ = on;\n    for (let method of type.__methods__) {\n        const methodClone = method.clone();\n        methodClone.this_ = instance;\n        on[method.name] = methodClone;\n        if (primitiveMethods.indexOf(method.name) !== -1) {\n            instance[method.name] = methodClone.__call__;\n        }\n    }\n    if (runInit && type.__init__) {\n        type.__init__.this_ = instance;\n        type.__init__.__closure__ = newContext;\n        const res = type.__init__.__call__({ context: newContext }, ...params);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__type__ = type;\n    type.__instances__.push(instance);\n    return instance;\n}\n","import { IndexError, InvalidOperationError } from '../../errors';\nimport { createInstance } from '../instantiator';\nimport { ESBoolean } from './esboolean';\nimport { ESFunction } from './esfunction';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nimport { Position } from \"../../position\";\nimport { str } from \"../../util/util\";\nexport class ESType extends ESPrimitive {\n    constructor(isPrimitive = false, name = '(anon)', __methods__ = [], __extends__, __init__) {\n        super(undefined, types === null || types === void 0 ? void 0 : types.type);\n        this.__instances__ = [];\n        this.clone = () => {\n            return new ESType(this.__isPrimitive__, this.__name__, this.__methods__, this.__extends__, this.__init__);\n        };\n        this.isa = ({}, type) => {\n            return new ESBoolean(type === types.type);\n        };\n        this.cast = ({}, type) => new InvalidOperationError('cast', this);\n        this.includesType = (props, t) => {\n            var _a, _b, _c, _d, _e, _f;\n            if (this.equals(props, types.any).bool().valueOf() ||\n                t.equals(props, types.any).bool().valueOf() ||\n                (((_a = this.__extends__) === null || _a === void 0 ? void 0 : _a.equals(props, t).valueOf()) === true) ||\n                (((_b = this.__extends__) === null || _b === void 0 ? void 0 : _b.equals(props, types.any).valueOf()) === true) ||\n                (((_c = this.__extends__) === null || _c === void 0 ? void 0 : _c.includesType(props, t).valueOf()) === true) ||\n                (((_d = t.__extends__) === null || _d === void 0 ? void 0 : _d.equals(props, this).valueOf()) === true) ||\n                (((_e = t.__extends__) === null || _e === void 0 ? void 0 : _e.equals(props, types.any).valueOf()) === true) ||\n                (((_f = t.__extends__) === null || _f === void 0 ? void 0 : _f.includesType(props, this).valueOf()) === true)) {\n                return new ESBoolean(true);\n            }\n            return this.equals(props, t);\n        };\n        this.equals = ({}, t) => {\n            return new ESBoolean(t.__name__ === this.__name__ &&\n                t.__isPrimitive__ === this.__isPrimitive__ &&\n                Object.is(this.valueOf(), t.valueOf()));\n        };\n        this.__call__ = ({ context }, ...params) => {\n            return createInstance(this, { context }, params || []);\n        };\n        this.str = () => new ESString(`<Type: ${this.__name__}>`);\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.__isPrimitive__ = isPrimitive;\n        this.__name__ = name;\n        this.info.name = name;\n        this.__extends__ = __extends__;\n        this.__methods__ = __methods__;\n        if (__init__) {\n            __init__.name = name;\n            this.__init__ = __init__;\n        }\n        if (!types.type) {\n            this.__type__ = this;\n        }\n    }\n}\n","import { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { str } from '../../util/util';\nimport { wrap } from \"./wrapStrip\";\nexport class ESUndefined extends ESPrimitive {\n    constructor() {\n        super(undefined, types.undefined);\n        this.cast = ({ context }, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber();\n                case types.string:\n                    return new ESString();\n                case types.array:\n                    return new ESArray();\n                case types.undefined:\n                    return new ESUndefined();\n                case types.type:\n                    return new ESType();\n                case types.error:\n                    return new ESErrorPrimitive();\n                case types.object:\n                case types.any:\n                    return new ESObject();\n                case types.function:\n                    return new ESFunction(() => { });\n                case types.boolean:\n                    return new ESBoolean();\n                default:\n                    if (!(type instanceof ESType)) {\n                        return new ESError(Position.unknown, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n                    }\n                    return type.__call__({ context });\n            }\n        };\n        this.str = () => new ESString('<Undefined>');\n        this.__eq__ = (props, n) => new ESBoolean(n instanceof ESUndefined ||\n            typeof n === 'undefined' ||\n            typeof n.valueOf() === 'undefined');\n        this.__bool__ = () => new ESBoolean();\n        this.bool = this.__bool__;\n        this.clone = () => new ESUndefined();\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.info = {\n            name: 'undefined',\n            description: 'Not defined, not a value.',\n            file: 'built-in',\n            isBuiltIn: true\n        };\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { types } from './primitive';\nimport { strip, wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESObject extends ESPrimitive {\n    constructor(val = {}) {\n        super(val, types.object);\n        this.isa = (props, type) => {\n            if (type === types.object) {\n                return new ESBoolean(true);\n            }\n            if (!(type instanceof ESType)) {\n                return new TypeError(Position.unknown, 'TypeError', 'type', str(type.typeName()), str(type));\n            }\n            return this.__type__.includesType(props, type);\n        };\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => {\n            let val = str(this.valueOf());\n            if (val[val.length - 1] === '\\n')\n                val = val.substr(0, val.length - 1);\n            return new ESString(`<ESObject ${val}>`);\n        };\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new ESBoolean();\n            }\n            if (n.keys.length !== this.keys.length) {\n                return new ESBoolean();\n            }\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const thisElement = this.valueOf()[key];\n                const nElement = n.valueOf()[key];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new TypeError(Position.unknown, 'object', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const res = this.__getProperty__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            for (let k of n.keys) {\n                const key = k.valueOf();\n                if (newOb.hasOwnProperty(key)) {\n                    continue;\n                }\n                const res = n.__getProperty__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            return new ESObject(newOb);\n        };\n        this.__subtract__ = (props, n) => {\n            let keysToRemove = [];\n            if (n instanceof ESString) {\n                keysToRemove = [str(n)];\n            }\n            else if (n instanceof ESArray) {\n                keysToRemove = strip(n, props);\n            }\n            else {\n                return new TypeError(Position.unknown, 'array | string', n.typeName().valueOf(), n);\n            }\n            if (!Array.isArray(keysToRemove)) {\n                return new TypeError(Position.unknown, 'array | string', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                if (keysToRemove.indexOf(key) === -1) {\n                    let res = this.__getProperty__(props, k);\n                    if (res instanceof ESError) {\n                        return res;\n                    }\n                    newOb[key] = res;\n                }\n            }\n            return new ESObject(newOb);\n        };\n        this.__getProperty__ = (props, k) => {\n            if (!(k instanceof ESString) && !(k instanceof ESNumber)) {\n                return new TypeError(Position.unknown, 'string | number', k.typeName(), str(k));\n            }\n            const key = k.valueOf();\n            if (this.valueOf().hasOwnProperty(key)) {\n                return this.valueOf()[key];\n            }\n            if (this.self.hasOwnProperty(key)) {\n                const val = this.self[key];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new ESUndefined();\n        };\n        this.__setProperty__ = ({}, key, value) => {\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.unknown, 'string', key.typeName(), str(key));\n            }\n            this.__value__[key.valueOf()] = value;\n        };\n        this.hasProperty = (props, k) => {\n            const key = str(k);\n            if (this.valueOf().hasOwnProperty(str(key))) {\n                return new ESBoolean(true);\n            }\n            return new ESBoolean(this.hasOwnProperty(key));\n        };\n        this.clone = () => {\n            const res = new ESObject();\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            res.__value__ = obj;\n            return res;\n        };\n    }\n    get keys() {\n        return Object.keys(this.valueOf()).map(s => new ESString(s));\n    }\n    set keys(val) { }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESNamespace extends ESPrimitive {\n    constructor(name, value, mutable = false) {\n        super(value, types.object);\n        this.cast = ({}) => {\n            return new ESError(Position.unknown, 'TypeError', `Cannot cast type 'namespace'`);\n        };\n        this.clone = () => {\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            return new ESNamespace(this.name, obj);\n        };\n        this.str = () => {\n            const keys = Object.keys(this.valueOf());\n            return new ESString(`<Namespace ${str(this.name)}${keys.length > 0 ? ': ' : ''}${keys.slice(0, 5)}${keys.length >= 5 ? '...' : ''}>`);\n        };\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.valueOf().hasOwnProperty(key.valueOf())) {\n                const symbol = this.valueOf()[key.valueOf()];\n                if (symbol.isAccessible) {\n                    return symbol.value;\n                }\n            }\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.unknown, 'string', key.typeName());\n            }\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this.self);\n        };\n        this.info.name = str(name);\n        this.mutable = mutable;\n    }\n    get name() {\n        return new ESString(this.info.name);\n    }\n    set name(v) {\n        this.info.name = v.valueOf();\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESString)) {\n            return new TypeError(Position.unknown, 'string', key.typeName().valueOf(), str(key));\n        }\n        let idx = str(key);\n        if (!this.mutable) {\n            return new TypeError(Position.unknown, 'mutable', 'immutable', `${str(this.name)}`);\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        const symbol = this.__value__[idx];\n        if (!symbol) {\n            return new ESError(Position.unknown, 'SymbolError', `Symbol ${idx} is not declared in namespace ${str(this.name)}.`);\n        }\n        if (symbol.isConstant) {\n            return new TypeError(Position.unknown, 'mutable', 'immutable', `${str(this.name)}[${idx}]`);\n        }\n        if (!symbol.isAccessible) {\n            return new TypeError(Position.unknown, 'accessible', 'inaccessible', `${str(this.name)}[${idx}]`);\n        }\n        symbol.value = value;\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { strip, wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESJSBinding extends ESPrimitive {\n    constructor(value, name = '<AnonNative>', functionsTakeProps = false) {\n        super(value, types.object);\n        this.cast = ({}) => {\n            return new ESError(Position.unknown, 'TypeError', `Cannot cast native object`);\n        };\n        this.clone = () => new ESJSBinding(this.__value__);\n        this.str = () => {\n            try {\n                return new ESString(JSON.stringify(this.__value__));\n            }\n            catch (e) {\n                return new ESString(`${this.__value__}`);\n            }\n        };\n        this.__eq__ = ({}, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, k) => {\n            const key = str(k);\n            const val = this.valueOf();\n            const res = val[key];\n            if (res === undefined) {\n                if (this.self.hasOwnProperty(key)) {\n                    const val = this.self[str(key)];\n                    if (typeof val === 'function') {\n                        return new ESFunction(val);\n                    }\n                    return wrap(val);\n                }\n                return new IndexError(Position.unknown, key, this);\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            if (typeof res === 'function') {\n                return new ESFunction(({ context }, ...args) => {\n                    args = args.map(o => strip(o, props));\n                    const res = val[key](...args);\n                    return wrap(res);\n                });\n            }\n            return wrap(res);\n        };\n        this.__call__ = (props, ...args) => {\n            if (typeof this.__value__ !== 'function') {\n                return new TypeError(Position.unknown, 'function', typeof this.__value__, str(this));\n            }\n            let res;\n            try {\n                res = new this.__value__(...args.map(o => strip(o, props)));\n            }\n            catch (_a) {\n                res = this.__value__(...args.map(o => strip(o, props)));\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            return wrap(res);\n        };\n        this.hasProperty = (props, key) => {\n            return new ESBoolean(!(this.__getProperty__(props, key) instanceof ESError));\n        };\n        this.info.name = str(name);\n    }\n}\n","import { types } from './primitives/primitive';\nimport { ESPrimitive } from './primitives/esprimitive';\nimport { ESArray } from './primitives/esarray';\nimport { ESBoolean } from './primitives/esboolean';\nimport { ESErrorPrimitive } from './primitives/eserrorprimitive';\nimport { ESFunction } from './primitives/esfunction';\nimport { ESNumber } from './primitives/esnumber';\nimport { ESObject } from './primitives/esobject';\nimport { ESString } from './primitives/esstring';\nimport { ESType } from './primitives/estype';\nimport { ESUndefined } from './primitives/esundefined';\nimport { ESNamespace } from './primitives/esnamespace';\nimport { ESJSBinding } from \"./primitives/esjsbinding\";\nexport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNumber, ESPrimitive, ESString, ESObject, ESType, ESUndefined, ESNamespace, ESJSBinding, types };\ntypes.type = new ESType(true, 'Type');\ntypes.undefined = new ESType(true, 'Undefined');\ntypes.string = new ESType(true, 'String');\ntypes.array = new ESType(true, 'Array');\ntypes.number = new ESType(true, 'Number');\ntypes.any = new ESType(true, 'Any');\ntypes.function = new ESType(true, 'Function');\ntypes.bool = new ESType(true, 'Boolean');\ntypes.object = new ESType(true, 'Object');\ntypes.error = new ESType(true, 'Error');\ntypes.any.info = {\n    name: 'any',\n    description: 'Matches any other type',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.number.info = {\n    name: 'any',\n    description: 'The ES Number type. Is a a double-precision 64-bit binary format IEEE 754 value, like double in Java and C#',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.string.info = {\n    name: 'string',\n    description: 'The ES String type. Holds an array of characters, and can be defined with any of \\', \" and `. Can be indexed like an array.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.bool.info = {\n    name: 'bool',\n    description: 'The ES Bool type. Exactly two instances exist, true and false.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.function.info = {\n    name: 'function',\n    description: 'The ES Function type. Is a block of code which executes when called and takes in 0+ parameters.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.array.info = {\n    name: 'array',\n    description: 'The ES Array type. Defines a set of items of any type which can be accessed by an index with [].',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.object.info = {\n    name: 'object',\n    description: 'The ES Object type. Similar to JS objects or python dictionaries.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.error.info = {\n    name: 'error',\n    description: 'The ES Error type. Call to throw an error.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.type.info = {\n    name: 'type',\n    description: 'The ES Type type. Call to get the type of a value at a string.',\n    file: 'built-in',\n    isBuiltIn: true\n};\n","import { ESPrimitive } from './esprimitive';\nimport { global } from '../../constants';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { call } from '../functionCaller';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nexport class ESFunction extends ESPrimitive {\n    constructor(func = (() => { }), arguments_ = [], name = '(anon)', this_ = new ESObject(), returnType = types.any, closure = global) {\n        super(func, types.function);\n        this.cast = ({}, type) => {\n            return new ESError(Position.unknown, 'TypeError', `Cannot cast type 'function'`);\n        };\n        this.clone = () => {\n            return new ESFunction(this.__value__, this.arguments_, this.name, this.this_, this.returnType, this.__closure__);\n        };\n        this.valueOf = () => this;\n        this.str = () => new ESString(`<Func: ${this.name}>`);\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESFunction))\n                return new ESBoolean(false);\n            return new ESBoolean(this.__value__ === n.__value__);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__call__ = ({ context }, ...params) => {\n            this.__closure__.path = context.path;\n            return call(this.__closure__, this, params);\n        };\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.arguments_ = arguments_;\n        this.info.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        this.__closure__ = closure;\n        this.info.returnType = str(returnType);\n        this.info.args = arguments_.map(arg => ({\n            name: arg.name,\n            defaultValue: str(arg.defaultValue),\n            type: arg.type.info.name,\n            required: true\n        }));\n    }\n    get name() {\n        var _a;\n        return (_a = this.info.name) !== null && _a !== void 0 ? _a : '(anonymous)';\n    }\n    set name(v) {\n        this.info.name = v;\n    }\n}\n","import { Node } from \"./nodes\";\nimport { generateESFunctionCallContext } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { ESObject, ESPrimitive, ESUndefined, types } from \"./primitiveTypes\";\nfunction callNode(self, context, params, fn) {\n    var _a, _b, _c, _d;\n    const res = fn.interpret(context);\n    if (res.error)\n        return res.error;\n    if (res.funcReturn !== undefined) {\n        res.val = res.funcReturn;\n        res.funcReturn = undefined;\n    }\n    if (self.returnType.includesType({ context }, (_b = (_a = res.val) === null || _a === void 0 ? void 0 : _a.__type__) !== null && _b !== void 0 ? _b : types.any).valueOf() === false) {\n        return new TypeError(Position.unknown, self.returnType.__name__, ((_c = res.val) === null || _c === void 0 ? void 0 : _c.typeName().valueOf()) || 'undefined', (_d = res.val) === null || _d === void 0 ? void 0 : _d.str().valueOf(), '(from function return)');\n    }\n    if (res.val) {\n        return res.val;\n    }\n    else {\n        return new ESUndefined();\n    }\n}\nfunction callNative(self, context, params, fn) {\n    for (let i = params.length; i < fn.length; i++)\n        params.push(new ESUndefined());\n    const res = fn({\n        context\n    }, ...params);\n    if (res instanceof ESError || res instanceof ESPrimitive) {\n        return res;\n    }\n    return new ESUndefined();\n}\nexport function call(context, self, params) {\n    var _a;\n    let callContext = context;\n    context = self.__closure__;\n    context.path = callContext.path;\n    const fn = self.__value__;\n    const newContext = generateESFunctionCallContext(params, self, context);\n    if (newContext instanceof ESError) {\n        return newContext;\n    }\n    let this_ = (_a = self.this_) !== null && _a !== void 0 ? _a : new ESObject();\n    if (!(this_ instanceof ESObject))\n        return new TypeError(Position.unknown, 'object', typeof this_, this_, '\\'this\\' must be an object');\n    let setRes = newContext.setOwn('this', this_);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    if (fn instanceof Node) {\n        return callNode(self, newContext, params, fn);\n    }\n    else if (typeof fn === 'function') {\n        return callNative(self, newContext, params, fn);\n    }\n    else {\n        return new TypeError(Position.unknown, 'function', typeof fn);\n    }\n}\n","import { initialise } from \"../init\";\nimport { ESError, TypeError, ReferenceError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESPrimitive, ESType, ESUndefined, types } from \"./primitiveTypes\";\nimport { str } from \"../util/util\";\nimport { ESSymbol } from './symbol';\nimport chalk from \"../util/colours\";\nexport class Context {\n    constructor() {\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        this.deleted = false;\n        this.path_ = '';\n    }\n    get path() {\n        if (this.path_ || !this.parent) {\n            return this.path_;\n        }\n        return this.parent.path;\n    }\n    set path(val) {\n        this.path_ = val;\n    }\n    get parent() {\n        return this.parent_;\n    }\n    set parent(val) {\n        if (val == this) {\n            console.error(chalk.red(`Setting context parent to self`));\n            return;\n        }\n        this.parent_ = val;\n    }\n    has(identifier) {\n        return this.get(identifier) !== undefined;\n    }\n    hasOwn(identifier) {\n        return this.symbolTable[identifier] instanceof ESSymbol;\n    }\n    get(identifier) {\n        let symbol = this.getSymbol(identifier);\n        if (symbol instanceof ESError || symbol == undefined) {\n            return symbol;\n        }\n        return symbol.value;\n    }\n    getRawSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key].value;\n        return symbols;\n    }\n    getSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key];\n        return symbols;\n    }\n    getSymbol(identifier) {\n        let symbol = this.symbolTable[identifier];\n        if (symbol !== undefined && !symbol.isAccessible)\n            return new TypeError(Position.unknown, 'assessable', 'inaccessible', symbol.identifier);\n        if (symbol === undefined && this.parent) {\n            let res = this.parent.getSymbol(identifier);\n            if (res instanceof ESError)\n                return res;\n            if (!res)\n                return new ReferenceError(Position.unknown, identifier);\n            symbol = res;\n        }\n        return symbol;\n    }\n    set(identifier, value, options = {}) {\n        let context = this;\n        if (options.global) {\n            context = this.root;\n        }\n        else {\n            while (!context.hasOwn(identifier) && context.parent !== undefined)\n                context = context.parent;\n            if (!context.hasOwn(identifier))\n                context = this;\n        }\n        return context.setOwn(identifier, value, options);\n    }\n    setOwn(identifier, value, options = {}) {\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        if (options.global && !this.initialisedAsGlobal)\n            options.global = false;\n        if (!options.forceThroughConst) {\n            let symbol = this.symbolTable[identifier];\n            if (symbol === null || symbol === void 0 ? void 0 : symbol.isConstant)\n                return new TypeError(Position.unknown, 'dynamic', 'constant', identifier);\n        }\n        this.symbolTable[identifier] = new ESSymbol(value, identifier, options);\n    }\n    remove(identifier) {\n        delete this.symbolTable[identifier];\n    }\n    clear() {\n        for (let symbol in this.symbolTable) {\n            this.remove(symbol);\n        }\n        this.parent = undefined;\n        this.deleted = true;\n    }\n    get root() {\n        let parent = this;\n        while (parent.parent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    get keys() {\n        return Object.keys(this.symbolTable);\n    }\n    resetAsGlobal() {\n        var _a, _b;\n        if (!this.initialisedAsGlobal)\n            return;\n        const printFunc = this.root.get('print');\n        const inputFunc = this.root.get('input');\n        if (!(printFunc instanceof ESPrimitive) || !(inputFunc instanceof ESPrimitive)) {\n            console.error('Error with print and input functions.');\n            return;\n        }\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        initialise(this, ((_a = printFunc.valueOf()) === null || _a === void 0 ? void 0 : _a.func) || console.log, ((_b = inputFunc.valueOf()) === null || _b === void 0 ? void 0 : _b.func) || (() => { }));\n    }\n    clone() {\n        const newContext = new Context();\n        newContext.parent = this.parent;\n        newContext.deleted = this.deleted;\n        newContext.initialisedAsGlobal = this.initialisedAsGlobal;\n        newContext.symbolTable = Object.assign(Object.assign({}, newContext.symbolTable), this.symbolTable);\n        return newContext;\n    }\n    deepClone() {\n        var _a;\n        let clone = this.clone();\n        clone.parent = (_a = clone.parent) === null || _a === void 0 ? void 0 : _a.deepClone();\n        return clone;\n    }\n    log() {\n        console.log('---- CONTEXT ----');\n        for (let key in this.symbolTable) {\n            const symbol = this.symbolTable[key];\n            let out = key;\n            if (symbol.isConstant)\n                out += ' (CONST)';\n            if (!symbol.isAccessible)\n                out += ' (INACCESSIBLE)';\n            out += ': ';\n            out += str(this.symbolTable[key].value);\n            console.log(out);\n        }\n        console.log('-----------------');\n    }\n}\nexport function generateESFunctionCallContext(params, self, parent) {\n    const newContext = new Context();\n    newContext.parent = parent;\n    let max = Math.max(params.length, self.arguments_.length);\n    for (let i = 0; i < max; i++) {\n        let value = new ESUndefined();\n        let type = types.any;\n        if (!self.arguments_[i]) {\n            continue;\n        }\n        const arg = self.arguments_[i];\n        if (!(arg.type instanceof ESType)) {\n            return new TypeError(Position.unknown, 'Type', typeof arg.type, arg.type);\n        }\n        if (params[i] instanceof ESPrimitive) {\n            type = params[i].__type__;\n            value = params[i];\n        }\n        const typeIncludes = arg.type.includesType({ context: parent }, type).bool().valueOf();\n        if (!typeIncludes) {\n            return new TypeError(Position.unknown, arg.type.__name__, type.__name__, str(value));\n        }\n        newContext.setOwn(arg.name, value, {\n            forceThroughConst: true\n        });\n    }\n    let setRes = newContext.setOwn('args', new ESArray(params), {\n        forceThroughConst: true\n    });\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    return newContext;\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { ESFunction } from \"./esfunction\";\nimport { wrap } from \"./wrapStrip\";\nexport class ESNumber extends ESPrimitive {\n    constructor(value = 0) {\n        super(value, types.number);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return this;\n                case types.string:\n                    return this.str();\n                case types.array:\n                    return new ESArray(new Array(this.valueOf()));\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(this.valueOf().toString());\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() + n.valueOf());\n        };\n        this.__subtract__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() - n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() * n.valueOf());\n        };\n        this.__divide__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() / n.valueOf());\n        };\n        this.__pow__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(Math.pow(this.valueOf(), n.valueOf()));\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new ESBoolean(false);\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() > n.valueOf());\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() < n.valueOf());\n        };\n        this.__bool__ = () => {\n            return new ESBoolean(this.valueOf() > 0);\n        };\n        this.bool = this.__bool__;\n        this.clone = () => new ESNumber(this.valueOf());\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { ESFunction } from \"./esfunction\";\nimport { wrap } from \"./wrapStrip\";\nexport class ESBoolean extends ESPrimitive {\n    constructor(val = false) {\n        super(Boolean(val), types.bool);\n        this.__getProperty__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESBoolean)) {\n                return new TypeError(Position.unknown, 'Boolean', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__bool__ = () => this;\n        this.__and__ = (props, n) => new ESBoolean(this.valueOf() && n.bool().valueOf());\n        this.__or__ = (props, n) => {\n            return new ESBoolean(this.valueOf() || n.bool().valueOf());\n        };\n        this.str = () => new ESString(this.valueOf() ? 'true' : 'false');\n        this.clone = () => new ESBoolean(this.valueOf());\n        this.bool = () => this;\n        this.info = {\n            name: str(val),\n            description: `Boolean global constant which evaluates to ${str(val)}, the opposite of ${str(!val)}`,\n            file: 'built-in',\n            isBuiltIn: true,\n            helpLink: 'https://en.wikipedia.org/wiki/Boolean_expression'\n        };\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { types } from './primitive';\nimport { wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESArray extends ESPrimitive {\n    constructor(values = []) {\n        super(values, types.array);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.len);\n                case types.boolean:\n                    return this.bool();\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(str(this.valueOf()));\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESArray)) {\n                return new ESBoolean();\n            }\n            if (n.len !== this.len) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.len; i++) {\n                const thisElement = this.valueOf()[i];\n                const nElement = n.valueOf()[i];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESArray)) {\n                return new TypeError(Position.unknown, 'array', n.typeName().valueOf(), n);\n            }\n            return new ESArray([...this.valueOf(), ...n.valueOf()]);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESUndefined();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return this.valueOf()[idx];\n            }\n            return new ESUndefined();\n        };\n        this.add = (props, val, idx = new ESNumber(this.len - 1)) => {\n            if (!(val instanceof ESPrimitive))\n                throw 'adding non-primitive to array: ' + str(val);\n            this.len++;\n            this.__value__.splice(idx.valueOf(), 0, val);\n            return new ESNumber(this.len);\n        };\n        this.contains = (props, val) => {\n            for (let element of this.__value__) {\n                if (val.__eq__(props, element)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        this.clone = () => {\n            const newArr = [];\n            for (let element of this.valueOf()) {\n                newArr.push(element);\n            }\n            return new ESArray(newArr);\n        };\n        this.len = values.length;\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESNumber)) {\n            return;\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        let idx = key.valueOf();\n        while (idx < 0) {\n            idx = this.valueOf().length + idx;\n        }\n        this.__value__[idx] = value;\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESString extends ESPrimitive {\n    constructor(value = '') {\n        super(value, types.string);\n        this.str = () => this;\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    const num = parseFloat(this.valueOf());\n                    if (isNaN(num))\n                        return new ESError(Position.unknown, 'TypeError', `This string is not a valid number`);\n                    return new ESNumber(num);\n                case types.string:\n                    return this;\n                case types.array:\n                    return new ESArray(this.valueOf().split('').map(s => new ESString(s)));\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.unknown, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESString(this.valueOf() + n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESString(this.valueOf().repeat(n.valueOf()));\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new ESBoolean(false);\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.unknown, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf().length > n.valueOf().length);\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.unknown, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf().length < n.valueOf().length);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.len = () => {\n            return new ESNumber(this.valueOf().length);\n        };\n        this.clone = () => new ESString(this.valueOf());\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESString();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return new ESString(this.valueOf()[idx]);\n            }\n            return new ESString();\n        };\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESNumber))\n            return;\n        if (!(value instanceof ESString))\n            value = new ESString(str(value));\n        let idx = key.valueOf();\n        while (idx < 0)\n            idx = this.valueOf().length + idx;\n        const strToInsert = value.str().valueOf();\n        let firstPart = this.__value__.substr(0, idx);\n        let lastPart = this.__value__.substr(idx + strToInsert.length);\n        this.__value__ = firstPart + strToInsert + lastPart;\n    }\n}\n","import { ESString } from './primitives/esstring';\nexport class ESSymbol {\n    constructor(value, identifier, options = {}) {\n        var _a, _b;\n        this.clone = () => {\n            return new ESSymbol(this.value.clone(), this.identifier, {\n                isConstant: this.isConstant,\n                isAccessible: this.isAccessible\n            });\n        };\n        this.str = () => new ESString(`<Symbol: ${this.identifier}>`);\n        this.value = value;\n        this.identifier = identifier;\n        this.isConstant = (_a = options.isConstant) !== null && _a !== void 0 ? _a : false;\n        this.isAccessible = (_b = options.isAccessible) !== null && _b !== void 0 ? _b : true;\n    }\n}\n","import { ESError } from '../../errors';\nimport { ESSymbol } from '../symbol';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESPrimitive } from './esprimitive';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESUndefined } from './esundefined';\nimport { ESJSBinding } from \"./esjsbinding\";\nexport function wrap(thing, functionsTakeProps = false) {\n    if (thing instanceof ESPrimitive) {\n        return thing;\n    }\n    else if (thing === undefined || thing === null) {\n        return new ESUndefined();\n    }\n    else if (thing instanceof ESError) {\n        return new ESErrorPrimitive(thing);\n    }\n    else if (thing instanceof ESSymbol) {\n        return thing.value;\n    }\n    else if (typeof thing === 'number') {\n        return new ESNumber(thing);\n    }\n    else if (typeof thing === 'string') {\n        return new ESString(thing);\n    }\n    else if (typeof thing === 'boolean') {\n        return new ESBoolean(thing);\n    }\n    else if (typeof thing === 'bigint') {\n        return new ESNumber(Number(thing));\n    }\n    else if (typeof thing === 'symbol') {\n        return new ESString(String(thing));\n    }\n    return new ESJSBinding(thing, undefined, functionsTakeProps);\n}\nexport function strip(thing, props) {\n    if (thing == undefined) {\n        return undefined;\n    }\n    else if (!(thing instanceof ESPrimitive)) {\n        return thing;\n    }\n    else if (thing instanceof ESArray) {\n        return thing.valueOf().map(m => strip(m, props), props);\n    }\n    else if (thing instanceof ESObject) {\n        let val = {};\n        for (let key in thing.valueOf()) {\n            val[key] = strip(thing.valueOf()[key], props);\n        }\n        return val;\n    }\n    else if (thing instanceof ESUndefined) {\n        return undefined;\n    }\n    else if (thing instanceof ESFunction) {\n        return (...args) => {\n            const res = thing.__call__(props, ...args.map(a => wrap(a)));\n            if (res instanceof ESError) {\n                return res;\n            }\n            return strip(res, props);\n        };\n    }\n    else if (thing instanceof ESType) {\n        return thing;\n    }\n    return thing.valueOf();\n}\n","import { IS_NODE_INSTANCE } from \"../constants\";\nconst codes = {\n    red: 31,\n    yellow: 33,\n    green: 32,\n    cyan: 36,\n    blue: 34,\n    grey: 2\n};\nconst c = {};\nfor (let code of Object.keys(codes)) {\n    c[code] = (s) => {\n        s || (s = '');\n        if (IS_NODE_INSTANCE) {\n            return `\\x1b[${codes[code]}m` + s + '\\x1b[0m';\n        }\n        return `<span style=\"color: ${code}\">${s}</span>`;\n    };\n}\nexport default c;\n","import { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from '../runtime/primitives/wrapStrip';\nimport { ESArray, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESUndefined } from '../runtime/primitiveTypes';\nimport { indent, sleep, str } from '../util/util';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport chalk from \"../util/colours\";\nexport const builtInFunctions = {\n    'range': [({ context }, minP, maxP, stepP) => {\n            if (!(minP instanceof ESNumber)) {\n                return new ESArray();\n            }\n            const min = minP.valueOf();\n            if (maxP instanceof ESUndefined) {\n                try {\n                    return new ESArray([...Array(min).keys()].map(n => new ESNumber(n)));\n                }\n                catch (e) {\n                    return new ESError(Position.unknown, 'RangeError', `Cannot make range of length '${str(min)}'`);\n                }\n            }\n            let step = 1;\n            if (!(maxP instanceof ESNumber)) {\n                return new TypeError(Position.unknown, 'number', maxP.typeName(), str(maxP));\n            }\n            let max = maxP.valueOf();\n            if (!(stepP instanceof ESUndefined)) {\n                if (!(stepP instanceof ESNumber)) {\n                    return new TypeError(Position.unknown, 'number', stepP.typeName(), str(stepP));\n                }\n                step = stepP.valueOf();\n            }\n            let arr = [];\n            let i = min;\n            while (i < max) {\n                arr.push(new ESNumber(i));\n                i += step;\n            }\n            return new ESArray(arr);\n        }, {\n            args: [{\n                    name: 'N',\n                    type: 'Number',\n                }],\n            description: 'Generates an array of integers given N. Starts at 0 and goes to N-1. Can be used like for i in range(10) ..., similarly to python.',\n            returns: 'array of numbers from 0 to N-1',\n            returnType: 'number[] | RangeError'\n        }],\n    'log': [({ context }, ...msgs) => {\n            console.log(...msgs.map(m => str(m)));\n        }, {\n            args: [{\n                    name: '...values',\n                    type: 'any[]'\n                }],\n            description: 'Uses console.log to log all values',\n            returnType: 'void'\n        }],\n    'parseNum': [({ context }, num) => {\n            try {\n                const val = parseFloat(str(num));\n                if (isNaN(val)) {\n                    return new ESError(Position.unknown, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n                }\n                return new ESNumber(val);\n            }\n            catch (e) {\n                return new ESError(Position.unknown, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n            }\n        }, {\n            args: [{\n                    name: 'num',\n                    type: 'any'\n                }],\n            description: `Converts a string of digits into a number. Works with decimals and integers. Calls .str() on value before using native JS 'parseFloat' function. Returns TypeError if the string can't be converted into a number.`,\n            returnType: 'number | TypeError'\n        }],\n    'help': [({ context }, ...things) => {\n            if (!things.length) {\n                return new ESString('Visit https://entropygames.io/entropy-script for help with Entropy Script!\\n' +\n                    'Try \\'help(<anything>)\\' for help about a particular object.');\n            }\n            let out = '';\n            for (const thing of things) {\n                if (!(thing instanceof ESPrimitive)) {\n                    console.log('Invalid arg not primitive: ' + str(thing));\n                    return;\n                }\n                const info = thing.info;\n                out += `${chalk.yellow(`Help on '${info.name || '(anonymous)'}'`)}:\n    \n    ${chalk.yellow('Value')}: ${indent(indent(str(thing)))}\n    ${chalk.yellow('Type')}: '${str(thing.typeName())}'\n    ${chalk.yellow('Location')}: ${info.file || chalk.yellow('(unknown)')}\n    \n        ${chalk.green(info.description) || `No description.`}\n        \n    ${info.helpLink ? chalk.cyan(info.helpLink + '\\n\\n') : ''}\n`;\n                if (info.args && thing instanceof ESFunction) {\n                    const total = info.args.length;\n                    const required = info.args.filter(a => a.required).length;\n                    if (total == required)\n                        out += chalk.yellow(`    Arguments (${total}): \\n`);\n                    else\n                        out += chalk.yellow(`    Arguments (${required}-${total}): \\n`);\n                    for (const [idx, arg] of info.args.entries()) {\n                        if (typeof arg !== 'object')\n                            out += `        ${idx + 1}. INVALID ARG INFO`;\n                        else\n                            out += `        ${idx + 1}. ${arg.name}${arg.required === false ? chalk.yellow(' (optional) ') : ' '}{${arg.type}} ${arg.description || ''}\\n`;\n                    }\n                    out += `\\n\\n`;\n                    if (info.returns)\n                        out += `    Returns: ${info.returns}\\n\\n`;\n                    if (info.returnType)\n                        out += `    Return Type: ${info.returnType}\\n\\n`;\n                }\n                if (info.contents && (thing instanceof ESObject || thing instanceof ESNamespace)) {\n                    out += '    Properties: \\n      ';\n                    for (let contents of info.contents)\n                        out += contents.name + '\\n      ';\n                }\n            }\n            console.log(out);\n            if (things.length > 1) {\n                return new ESArray(things);\n            }\n            if (things) {\n                return things[0];\n            }\n        }, {\n            args: [{\n                    name: 'value',\n                    type: 'any'\n                }],\n            description: 'logs info on value',\n            returns: 'value passed in'\n        }],\n    'delete': [({ context }, name) => {\n            const id = str(name);\n            if (!context.has(id)) {\n                return new ESError(Position.unknown, 'DeleteError', `Identifier '${id}' not found in the current context`);\n            }\n            context.set(id, new ESUndefined());\n        }, {\n            name: 'delete',\n            args: [{ name: 'identifier', type: 'string' }],\n            description: 'Deletes a variable from the current context'\n        }],\n    '__path': [({ context }) => {\n            return new ESString(context.path);\n        }, {\n            name: '__path',\n            args: [],\n            description: 'Returns the current path'\n        }],\n    '__symbols': [({ context }) => {\n            return wrap(context.keys);\n        }, {\n            name: '__allSymbols',\n            args: [],\n            description: 'Returns an array of the names of all symbols in the current context'\n        }],\n    'using': [({ context }, module, global_) => {\n            if (!(module instanceof ESNamespace) && !(module instanceof ESJSBinding)) {\n                return new TypeError(Position.unknown, 'Namespace', str(module.typeName()));\n            }\n            let global = true;\n            if (global_) {\n                if (!global_.bool().valueOf()) {\n                    global = false;\n                }\n            }\n            const values = module.valueOf();\n            if (global) {\n                context = context.root;\n            }\n            else if (context.parent) {\n                context = context.parent;\n            }\n            for (const key of Object.keys(values)) {\n                context.setOwn(key, values[key].value, {\n                    isConstant: values[key].isConstant,\n                    isAccessible: values[key].isAccessible,\n                    forceThroughConst: true\n                });\n            }\n        }, {\n            name: 'using',\n            args: [\n                { name: 'module', type: 'namespace' },\n                { name: 'global', type: 'bool' }\n            ],\n            description: 'Adds contents of a namespace to the global context'\n        }],\n    'sleep': [({ context }, time, cb) => {\n            if (!(time instanceof ESNumber)) {\n                return new TypeError(Position.unknown, 'number', str(time.typeName()), str(time));\n            }\n            sleep(time.valueOf())\n                .then(() => {\n                const res = cb.__call__({ context });\n                if (res instanceof ESError) {\n                    console.log(res.str);\n                }\n            });\n        }, {\n            name: 'sleep',\n            args: [{ name: 'n', type: 'number' }, { name: 'callback', type: 'function' }],\n            description: 'Waits n milliseconds and then executes the callback'\n        }],\n    'throw': [({ context }, name, details) => {\n            return new ESError(Position.unknown, str(name), str(details));\n        }, {\n            name: 'throw',\n            args: [{ name: 'name', type: 'string' }, { name: 'details', type: 'string' }]\n        }],\n};\n","import { Position } from '../../position';\nimport { strip } from '../../runtime/primitives/wrapStrip';\nimport { ESObject, ESString } from '../../runtime/primitiveTypes';\nimport { str } from '../../util/util';\nimport { TypeError } from '../../errors';\nconst module = {\n    parse: (props, json) => {\n        return new ESObject(JSON.parse(str(json)));\n    },\n    stringify: (props, json) => {\n        if (!(json instanceof ESObject)) {\n            return new TypeError(Position.unknown, 'object', str(json.typeName()), str(json));\n        }\n        return new ESString(JSON.stringify(strip(json, props)));\n    }\n};\nexport default module;\n","import { IS_NODE_INSTANCE, libs } from '../constants';\nimport { ESError } from '../errors';\nimport { wrap } from '../runtime/primitives/wrapStrip';\nimport { ESSymbol } from '../runtime/symbol';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport ascii from './built-in-modules/ascii';\nimport json from './built-in-modules/json';\nimport dom from './built-in-modules/dom';\nimport Promise from './built-in-modules/promise';\nconst modules = {\n    ascii, json,\n};\nconst processedModules = {};\nexport function initModules() {\n    processedModules['math'] = new ESJSBinding(Math);\n    processedModules['Promise'] = new ESJSBinding(Promise);\n    if (!IS_NODE_INSTANCE) {\n        const domRes = dom(libs);\n        if (!(domRes instanceof ESError)) {\n            modules['dom'] = domRes;\n        }\n        else {\n            return domRes;\n        }\n    }\n}\nexport function processRawModule(module, name) {\n    const moduleDict = {};\n    const moduleRaw = module.valueOf();\n    for (const key of Object.keys(moduleRaw)) {\n        moduleDict[key] = new ESSymbol(moduleRaw[key], key);\n    }\n    return new ESJSBinding(moduleDict, name);\n}\nexport function moduleExist(name) {\n    return name in modules || name in processedModules;\n}\nexport function addModule(name, body) {\n    modules[name] = {};\n    processedModules[name] = body;\n}\nexport function addModuleFromObj(name, raw) {\n    addModule(name, processRawModule(wrap(raw), name));\n}\nexport function getModule(name) {\n    if (name in processedModules) {\n        return processedModules[name];\n    }\n    if (name in modules) {\n        const res = new ESJSBinding(modules[name]);\n        const processed = processRawModule(res, name);\n        processedModules[name] = processed;\n        return processed;\n    }\n}\n","import { TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESNumber, ESString } from '../../runtime/primitiveTypes';\nimport { str } from '../../util/util';\nconst module = {\n    asciiToChar: (props, number) => {\n        if (!(number instanceof ESNumber)) {\n            return new TypeError(Position.unknown, 'number', str(number.typeName()), str(number));\n        }\n        return new ESString(String.fromCharCode(number.valueOf()));\n    },\n    charToAscii: (props, char) => {\n        if (!(char instanceof ESString)) {\n            return new TypeError(Position.unknown, 'string', str(char.typeName()), str(char));\n        }\n        return new ESNumber(str(char).charCodeAt(0));\n    },\n};\nexport default module;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { builtInFunctions } from \"./built-in/builtInFunctions\";\nimport { getModule, initModules, moduleExist } from './built-in/builtInModules';\nimport { Context } from \"./runtime/context\";\nimport { ESError, ImportError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { run } from \"./index\";\nimport { IS_NODE_INSTANCE } from \"./constants\";\nimport { str } from \"./util/util\";\nimport { ESFunction, ESNamespace, ESString } from './runtime/primitiveTypes';\nimport loadGlobalConstants from \"./built-in/globalConstants\";\nexport function initialise(globalContext, printFunc, inputFunc) {\n    builtInFunctions['import'] = [({ context }, rawUrl, callback) => {\n            if (IS_NODE_INSTANCE) {\n                return new ESError(Position.unknown, 'ImportError', 'Is running in node instance but trying to run browser import function');\n            }\n            const url = rawUrl.str();\n            if (moduleExist(str(url))) {\n                return getModule(str(url));\n            }\n            try {\n                fetch(str(url))\n                    .then(c => c.text())\n                    .then((code) => __awaiter(this, void 0, void 0, function* () {\n                    const env = new Context();\n                    env.parent = globalContext;\n                    const res = yield run(code);\n                    if (res.error) {\n                        printFunc(new ImportError(Position.unknown, str(url), res.error.str).str);\n                        return;\n                    }\n                    if (!(callback instanceof ESFunction))\n                        return;\n                    callback.__call__({ context }, new ESNamespace(url, env.getSymbolTableAsDict()));\n                }));\n            }\n            catch (E) {\n                return new ESError(Position.unknown, 'ImportError', E.toString());\n            }\n        }, {}];\n    builtInFunctions['print'] = [({ context }, ...args) => {\n            let out = ``;\n            for (let arg of args)\n                out += str(arg);\n            printFunc(out);\n        }, {}];\n    builtInFunctions['input'] = [({ context }, msg, cbRaw) => {\n            inputFunc(msg.valueOf(), (msg) => {\n                let cb = cbRaw === null || cbRaw === void 0 ? void 0 : cbRaw.valueOf();\n                if (cb instanceof ESFunction) {\n                    let res = cb.__call__({ context }, new ESString(msg));\n                    if (res instanceof ESError) {\n                        console.log(res.str);\n                    }\n                }\n                else if (typeof cb === 'function')\n                    cb(msg);\n                return new ESString('\\'input()\\' does not return anything. Pass in a function as the second argument, which will take the user input as an argument.');\n            });\n        }, {}];\n    for (let builtIn in builtInFunctions) {\n        const fn = new ESFunction(builtInFunctions[builtIn][0], [], builtIn, undefined, undefined, globalContext);\n        fn.info = builtInFunctions[builtIn][1];\n        fn.info.name = builtIn;\n        fn.info.isBuiltIn = true;\n        fn.info.file = 'built-in';\n        globalContext.set(builtIn, fn, {\n            global: true,\n            isConstant: true\n        });\n    }\n    loadGlobalConstants(globalContext);\n    const initModRes = initModules();\n    if (initModRes) {\n        return initModRes;\n    }\n    globalContext.initialisedAsGlobal = true;\n}\n","import { ESBoolean, ESUndefined, types } from '../runtime/primitiveTypes';\nexport default function load(context) {\n    const globalConstants = {\n        'false': new ESBoolean(false),\n        'true': new ESBoolean(true),\n        'nil': new ESUndefined(),\n        'any': types.any,\n        'number': types.number,\n        'string': types.string,\n        'bool': types.bool,\n        'function': types.function,\n        'array': types.array,\n        'object': types.object,\n        'type': types.type,\n        'error': types.error,\n        'undefined': types.undefined\n    };\n    for (let constant in globalConstants) {\n        const value = globalConstants[constant];\n        context.set(constant, value, {\n            global: true,\n            isConstant: true\n        });\n    }\n}\n","export default class {\n    constructor(cb) {\n        this.thens = [];\n        this.resolved = false;\n        cb((value) => {\n            this.resolved = true;\n            for (let then of this.thens) {\n                then(value);\n            }\n        }, (error) => {\n            this.resolved = true;\n            if (this.catch_) {\n                this.catch_(error);\n            }\n        });\n    }\n    then(cb) {\n        if (this.resolved) {\n            return;\n        }\n        this.thens.push(cb);\n        return this;\n    }\n    catch(cb) {\n        if (this.resolved) {\n            return;\n        }\n        this.catch_ = cb;\n        return this;\n    }\n}\n;\n","import { IS_NODE_INSTANCE } from '../../constants';\nimport { ReferenceError, InvalidRuntimeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESJSBinding } from \"../../runtime/primitives/esjsbinding\";\nconst module = () => {\n    if (IS_NODE_INSTANCE) {\n        return new InvalidRuntimeError();\n    }\n    const w = window;\n    if (typeof w === 'undefined' || !('$' in w)) {\n        return new ReferenceError(Position.unknown, '$ must be property of window to use dom library');\n    }\n    const $ = new ESJSBinding(w['$'], 'jquery');\n    return {\n        $,\n        window: new ESJSBinding(w, 'window'),\n        document: new ESJSBinding(w['document'], 'document'),\n    };\n};\nexport default module;\n","import { ESPrimitive, ESType } from \"./primitiveTypes\";\nimport { TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nexport function interpretArgument(arg, context) {\n    var _a;\n    let type;\n    const typeRes = arg.type.interpret(context);\n    if (typeRes.error)\n        return typeRes.error;\n    if (typeRes.val instanceof ESType)\n        type = typeRes.val;\n    else\n        return new TypeError(Position.unknown, 'Type', typeof typeRes.val, typeRes.val, 'Argument can\\'t be undefined');\n    let defaultValue;\n    if (arg.defaultValue) {\n        let defaultValRes = (_a = arg.defaultValue) === null || _a === void 0 ? void 0 : _a.interpret(context);\n        if (defaultValRes.error)\n            return defaultValRes.error;\n        if (defaultValRes.val instanceof ESPrimitive)\n            defaultValue = defaultValRes.val;\n    }\n    return {\n        name: arg.name,\n        type, defaultValue\n    };\n}\n","import { ESError, InvalidSyntaxError, ReferenceError, TypeError } from \"../errors\";\nimport { Context } from './context';\nimport { Position } from \"../position\";\nimport { catchBlockErrorSymbolName, now, tokenTypeString, tt } from \"../constants\";\nimport { interpretArgument } from \"./argument\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESType, ESUndefined, types } from \"./primitiveTypes\";\nimport { str } from '../util/util';\nexport class interpretResult {\n    constructor() {\n        this.val = new ESUndefined();\n        this.shouldBreak = false;\n        this.shouldContinue = false;\n    }\n}\nexport class Node {\n    constructor(pos, isTerminal = false) {\n        this.pos = pos;\n        this.isTerminal = isTerminal;\n    }\n    interpret(context) {\n        var _a;\n        const start = now();\n        const res = new interpretResult();\n        const val = this.interpret_(context);\n        if (val instanceof ESError)\n            res.error = val;\n        else if (val instanceof interpretResult) {\n            res.val = val.val;\n            res.error = val.error;\n            res.funcReturn = val.funcReturn;\n            res.shouldBreak = val.shouldBreak;\n            res.shouldContinue = val.shouldContinue;\n        }\n        else\n            res.val = val;\n        if (res.error && res.error.pos.isUnknown)\n            res.error.pos = this.pos;\n        if (!(res.val instanceof ESPrimitive)) {\n            res.error = new TypeError(Position.unknown, 'Primitive', 'Native JS value', str(res.val));\n            res.val = new ESUndefined();\n        }\n        ``;\n        (_a = res.val.info).file || (_a.file = this.pos.file);\n        Node.interprets++;\n        let time = now() - start;\n        Node.totalTime += time;\n        if (time > Node.maxTime)\n            Node.maxTime = time;\n        return res;\n    }\n}\nNode.interprets = 0;\nNode.totalTime = 0;\nNode.maxTime = 0;\nexport class N_binOp extends Node {\n    constructor(pos, left, opTok, right) {\n        super(pos);\n        this.left = left;\n        this.opTok = opTok;\n        this.right = right;\n    }\n    interpret_(context) {\n        const left = this.left.interpret(context);\n        if (left.error)\n            return left.error;\n        const right = this.right.interpret(context);\n        if (right.error)\n            return right.error;\n        const l = left.val;\n        const r = right.val;\n        if (typeof l === 'undefined')\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', l, 'N_binOp.interpret_');\n        if (typeof r === 'undefined')\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', r, 'N_binOp.interpret_');\n        switch (this.opTok.type) {\n            case tt.LTE: {\n                const lt = l.__lt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (lt instanceof ESError)\n                    return lt;\n                if (eq instanceof ESError)\n                    return eq;\n                return lt.__or__({ context }, eq);\n            }\n            case tt.GTE: {\n                const gt = l.__gt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (gt instanceof ESError)\n                    return gt;\n                if (eq instanceof ESError)\n                    return eq;\n                return gt.__or__({ context }, eq);\n            }\n            case tt.NOTEQUALS: {\n                const res = l.__eq__({ context }, r);\n                if (res instanceof ESError)\n                    return res;\n                return new ESBoolean(!res.bool().valueOf());\n            }\n            case tt.ADD:\n                return l.__add__({ context }, r);\n            case tt.SUB:\n                return l.__subtract__({ context }, r);\n            case tt.MUL:\n                return l.__multiply__({ context }, r);\n            case tt.DIV:\n                return l.__divide__({ context }, r);\n            case tt.POW:\n                return l.__pow__({ context }, r);\n            case tt.EQUALS:\n                return l.__eq__({ context }, r);\n            case tt.LT:\n                return l.__lt__({ context }, r);\n            case tt.GT:\n                return l.__gt__({ context }, r);\n            case tt.AND:\n                return l.__and__({ context }, r);\n            case tt.OR:\n                return l.__or__({ context }, r);\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid binary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n}\nexport class N_unaryOp extends Node {\n    constructor(pos, a, opTok) {\n        super(pos);\n        this.a = a;\n        this.opTok = opTok;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const res = this.a.interpret(context);\n        if (res.error)\n            return res.error;\n        switch (this.opTok.type) {\n            case tt.SUB:\n            case tt.ADD:\n                if (!(res.val instanceof ESNumber))\n                    return new TypeError(this.pos, 'Number', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().toString()) || 'undefined_', (_b = res.val) === null || _b === void 0 ? void 0 : _b.valueOf());\n                const numVal = res.val.valueOf();\n                return new ESNumber(this.opTok.type === tt.SUB ? -numVal : Math.abs(numVal));\n            case tt.NOT:\n                return new ESBoolean(!((_c = res === null || res === void 0 ? void 0 : res.val) === null || _c === void 0 ? void 0 : _c.bool().valueOf()));\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid unary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n}\nexport class N_varAssign extends Node {\n    constructor(pos, varNameTok, value, assignType = '=', isGlobal = false, isLocal = false, isConstant = false, isDeclaration = false, type = types.any) {\n        super(pos);\n        this.value = value;\n        this.varNameTok = varNameTok;\n        this.isGlobal = isGlobal;\n        this.assignType = assignType;\n        this.isConstant = isConstant;\n        this.isDeclaration = isDeclaration;\n        this.isLocal = isLocal;\n        if (type instanceof ESType) {\n            this.type = new N_primitiveWrapper(type);\n        }\n        else\n            this.type = type;\n    }\n    interpret_(context) {\n        var _a, _b, _c, _d;\n        if (this.isDeclaration && context.hasOwn(this.varNameTok.value)) {\n            return new InvalidSyntaxError(this.pos, `Symbol '${this.varNameTok.value}' already exists, and cannot be redeclared`);\n        }\n        const res = this.value.interpret(context);\n        const typeRes = this.type.interpret(context);\n        if (res.error)\n            return res.error;\n        if (typeRes.error)\n            return typeRes.error;\n        if (!typeRes.val || !(typeRes.val instanceof ESType)) {\n            return new TypeError(this.varNameTok.pos, 'Type', (_b = (_a = typeRes.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) !== null && _b !== void 0 ? _b : 'undefined', (_c = typeRes.val) === null || _c === void 0 ? void 0 : _c.str(), `@ !typeRes.val || !(typeRes.val instanceof ESType)`);\n        }\n        if (!res.val) {\n            return new TypeError(this.varNameTok.pos, '~undefined', 'undefined', 'N_varAssign.interpret_');\n        }\n        if (!typeRes.val.includesType({ context }, res.val.__type__).bool().valueOf()) {\n            return new TypeError(this.varNameTok.pos, str(typeRes.val), str((_d = res.val) === null || _d === void 0 ? void 0 : _d.typeName()), str(res.val));\n        }\n        if (this.isDeclaration) {\n            if (this.assignType !== '=')\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            context.setOwn(this.varNameTok.value, res.val, {\n                global: false,\n                isConstant: this.isConstant\n            });\n            return res.val;\n        }\n        if (this.assignType === '=') {\n            let value = res.val;\n            if (value === undefined)\n                value = new ESUndefined();\n            const setRes = context.set(this.varNameTok.value, value, {\n                global: this.isGlobal,\n                isConstant: this.isConstant\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n        }\n        else {\n            if (this.isDeclaration)\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            const currentVal = context.get(this.varNameTok.value);\n            if (currentVal instanceof ESError)\n                return currentVal;\n            if (currentVal == undefined)\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            let newVal;\n            let assignVal = res.val;\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError) {\n                return newVal;\n            }\n            let setRes = context.set(this.varNameTok.value, newVal, {\n                global: this.isGlobal,\n                isConstant: this.isConstant\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n            res.val = newVal;\n        }\n        if (res.val.info.name === '(anonymous)' || !res.val.info.name)\n            res.val.info.name = this.varNameTok.value;\n        return res;\n    }\n}\nexport class N_if extends Node {\n    constructor(pos, comparison, ifTrue, ifFalse) {\n        super(pos);\n        this.comparison = comparison;\n        this.ifFalse = ifFalse;\n        this.ifTrue = ifTrue;\n    }\n    interpret_(context) {\n        var _a;\n        let newContext = new Context();\n        newContext.parent = context;\n        let res = new interpretResult();\n        let compRes = this.comparison.interpret(context);\n        if (compRes.error)\n            return compRes;\n        if ((_a = compRes.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            res = this.ifTrue.interpret(newContext);\n            res.val = new ESUndefined();\n            if (res.error)\n                return res;\n        }\n        else if (this.ifFalse) {\n            res = this.ifFalse.interpret(newContext);\n            res.val = new ESUndefined();\n            if (res.error)\n                return res;\n        }\n        return res;\n    }\n}\nexport class N_while extends Node {\n    constructor(pos, comparison, loop) {\n        super(pos);\n        this.comparison = comparison;\n        this.loop = loop;\n    }\n    interpret_(context) {\n        var _a, _b;\n        let newContext = new Context();\n        newContext.parent = context;\n        while (true) {\n            let shouldLoop = this.comparison.interpret(context);\n            if (shouldLoop.error)\n                return shouldLoop;\n            if (!((_b = (_a = shouldLoop.val) === null || _a === void 0 ? void 0 : _a.bool()) === null || _b === void 0 ? void 0 : _b.valueOf()))\n                break;\n            let potentialError = this.loop.interpret(newContext);\n            if (potentialError.error)\n                return potentialError;\n            if (potentialError.shouldBreak)\n                break;\n        }\n        return new ESUndefined();\n    }\n}\nexport class N_for extends Node {\n    constructor(pos, body, array, identifier, isGlobalIdentifier, isConstIdentifier) {\n        super(pos);\n        this.body = body;\n        this.array = array;\n        this.identifier = identifier;\n        this.isGlobalId = isGlobalIdentifier;\n        this.isConstId = isConstIdentifier;\n    }\n    interpret_(context) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        let newContext = new Context();\n        newContext.parent = context;\n        const array = this.array.interpret(context);\n        if (array.error)\n            return array;\n        if (['Array', 'Number', 'Object', 'String', 'Any'].indexOf(((_a = array.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || '') === -1)\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val + ' | ' + ((_b = array.val) === null || _b === void 0 ? void 0 : _b.typeName()));\n        function iteration(body, id, element, isGlobal, isConstant) {\n            newContext.set(id, element, {\n                global: isGlobal,\n                isConstant\n            });\n            const res = body.interpret(newContext);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (res.shouldBreak) {\n                res.shouldBreak = false;\n                return 'break';\n            }\n            if (res.shouldContinue)\n                res.shouldContinue = false;\n        }\n        if (array.val instanceof ESNumber || typeof ((_c = array.val) === null || _c === void 0 ? void 0 : _c.valueOf()) == 'number') {\n            for (let i = 0; i < array.val.valueOf(); i++) {\n                const res = iteration(this.body, this.identifier.value, new ESNumber(i), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESObject ||\n            (typeof ((_d = array.val) === null || _d === void 0 ? void 0 : _d.valueOf()) == 'number' && !Array.isArray((_e = array.val) === null || _e === void 0 ? void 0 : _e.valueOf()))) {\n            for (let element in (_f = array.val) === null || _f === void 0 ? void 0 : _f.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, new ESString(element), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESArray || Array.isArray((_g = array.val) === null || _g === void 0 ? void 0 : _g.valueOf())) {\n            for (let element of (_h = array.val) === null || _h === void 0 ? void 0 : _h.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, element, this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val);\n        return new ESUndefined();\n    }\n}\nexport class N_array extends Node {\n    constructor(pos, items, shouldClone = false) {\n        super(pos);\n        this.items = items;\n        this.shouldClone = shouldClone;\n    }\n    interpret_(context) {\n        let result = new interpretResult();\n        let interpreted = [];\n        for (let item of this.items) {\n            const res = item.interpret(context);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (!res.val)\n                continue;\n            let val = res.val;\n            if (this.shouldClone)\n                val = val.clone();\n            interpreted.push(val);\n        }\n        result.val = new ESArray(interpreted);\n        return result;\n    }\n}\nexport class N_objectLiteral extends Node {\n    constructor(pos, properties) {\n        super(pos);\n        this.properties = properties;\n    }\n    interpret_(context) {\n        let interpreted = {};\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.interpret(context);\n            if (value.error)\n                return value.error;\n            const key = keyNode.interpret(context);\n            if (key.error)\n                return key.error;\n            if (key.val && value.val)\n                interpreted[key.val.valueOf()] = value.val;\n        }\n        return new ESObject(interpreted);\n    }\n}\nexport class N_emptyObject extends Node {\n    constructor(pos) {\n        super(pos);\n    }\n    interpret_(context) {\n        return new ESObject({});\n    }\n}\nexport class N_statements extends Node {\n    constructor(pos, items) {\n        super(pos);\n        this.items = items;\n    }\n    interpret_(context) {\n        let last;\n        for (let item of this.items) {\n            const res = item.interpret(context);\n            if (res.error || (typeof res.funcReturn !== 'undefined') || res.shouldBreak || res.shouldContinue)\n                return res;\n            last = res.val;\n        }\n        if (last)\n            return last;\n        return new ESUndefined();\n    }\n}\nexport class N_functionCall extends Node {\n    constructor(pos, to, args) {\n        super(pos);\n        this.arguments = args;\n        this.to = to;\n    }\n    interpret_(context) {\n        let { val, error } = this.to.interpret(context);\n        if (error) {\n            return error;\n        }\n        if (!val) {\n            return new TypeError(this.pos, 'any', 'undefined', undefined, 'On function call');\n        }\n        let params = [];\n        for (let arg of this.arguments) {\n            const res = arg.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (res.val) {\n                params.push(res.val);\n            }\n        }\n        const res = val.__call__({ context }, ...params);\n        if (res instanceof ESError) {\n            res.traceback.push({\n                position: this.pos,\n                line: `${val.info.name || '<AnonFunction>'}(${params.map(str).join(', ')})`\n            });\n        }\n        return res;\n    }\n}\nexport class N_functionDefinition extends Node {\n    constructor(pos, body, argNames, returnType, name = '(anon)', this_ = new ESObject(), description = '') {\n        super(pos);\n        this.arguments = argNames;\n        this.body = body;\n        this.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        this.description = description;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        let args = [];\n        for (let arg of this.arguments) {\n            const res = interpretArgument(arg, context);\n            if (res instanceof ESError)\n                return res;\n            args.push(res);\n        }\n        const returnTypeRes = this.returnType.interpret(context);\n        if (returnTypeRes.error)\n            return returnTypeRes.error;\n        if (!(returnTypeRes.val instanceof ESType))\n            return new TypeError(this.returnType.pos, 'Type', (_b = (_a = returnTypeRes.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) !== null && _b !== void 0 ? _b : '<Undefined>', (_c = returnTypeRes.val) === null || _c === void 0 ? void 0 : _c.str().valueOf(), `On func '${this.name}' return type`);\n        return new ESFunction(this.body, args, this.name, this.this_, returnTypeRes.val, context);\n    }\n}\nexport class N_return extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        res.funcReturn = val.val;\n        return res;\n    }\n}\nexport class N_yield extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        var _a;\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        if ((_a = val.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf())\n            res.funcReturn = val.val;\n        return res;\n    }\n}\nexport class N_indexed extends Node {\n    constructor(pos, base, index) {\n        super(pos);\n        this.base = base;\n        this.index = index;\n    }\n    interpret_(context) {\n        var _a;\n        let baseRes = this.base.interpret(context);\n        if (baseRes.error)\n            return baseRes;\n        let indexRes = this.index.interpret(context);\n        if (indexRes.error)\n            return indexRes;\n        const index = indexRes.val;\n        const base = baseRes.val;\n        if (!base || !index)\n            return new ESUndefined();\n        if (this.value !== undefined) {\n            let valRes = this.value.interpret(context);\n            if (valRes.error)\n                return valRes;\n            const currentVal = wrap(base.__getProperty__({ context }, index));\n            let newVal;\n            let assignVal = valRes.val;\n            (_a = this.assignType) !== null && _a !== void 0 ? _a : (this.assignType = '=');\n            if (!assignVal) {\n                return new TypeError(this.pos, '~undefined', 'undefined', 'undefined', 'N_indexed.interpret_');\n            }\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                case '=':\n                    newVal = assignVal;\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError)\n                return newVal;\n            if (!base.__setProperty__)\n                return new TypeError(this.pos, 'mutable', 'immutable', base.valueOf());\n            const res = base.__setProperty__({ context }, index, newVal !== null && newVal !== void 0 ? newVal : new ESUndefined());\n            if (res instanceof ESError)\n                return res;\n        }\n        return base.__getProperty__({ context }, index);\n    }\n}\nexport class N_class extends Node {\n    constructor(pos, methods, extends_, init, name = '<anon class>') {\n        super(pos);\n        this.init = init;\n        this.methods = methods;\n        this.name = name;\n        this.extends_ = extends_;\n        this.instances = [];\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const methods = [];\n        for (let method of this.methods) {\n            const res = method.interpret(context);\n            if (res.error)\n                return res.error;\n            if (!(res.val instanceof ESFunction))\n                return new TypeError(this.pos, 'Function', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            methods.push(res.val);\n        }\n        let extends_;\n        if (this.extends_) {\n            const extendsRes = this.extends_.interpret(context);\n            if (extendsRes.error)\n                return extendsRes.error;\n            if (!(extendsRes.val instanceof ESType))\n                return new TypeError(this.pos, 'Function', ((_b = extendsRes.val) === null || _b === void 0 ? void 0 : _b.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            extends_ = extendsRes.val;\n        }\n        let init;\n        if (this.init) {\n            const initRes = this.init.interpret(context);\n            if (initRes.error)\n                return initRes.error;\n            if (!(initRes.val instanceof ESFunction))\n                return new TypeError(this.pos, 'Function', ((_c = initRes.val) === null || _c === void 0 ? void 0 : _c.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            init = initRes.val;\n        }\n        return new ESType(false, this.name, methods, extends_, init);\n    }\n}\nexport class N_namespace extends Node {\n    constructor(pos, statements, name = '(anon)', mutable = false) {\n        super(pos);\n        this.name = name;\n        this.statements = statements;\n        this.mutable = mutable;\n    }\n    interpret_(context) {\n        const newContext = new Context();\n        newContext.parent = context;\n        const res = this.statements.interpret(newContext);\n        if (res.error)\n            return res;\n        return new ESNamespace(new ESString(this.name), newContext.getSymbolTableAsDict(), this.mutable);\n    }\n}\nexport class N_number extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        if (typeof val !== 'number')\n            return new TypeError(this.pos, 'number', typeof val);\n        const res = new interpretResult();\n        res.val = new ESNumber(val);\n        return res;\n    }\n}\nexport class N_string extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        if (typeof val !== 'string')\n            return new TypeError(this.pos, 'string', typeof val);\n        const res = new interpretResult();\n        res.val = new ESString(val);\n        return res;\n    }\n}\nexport class N_variable extends Node {\n    constructor(a) {\n        super(a.pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        if (!context.has(this.a.value))\n            return new ReferenceError(this.a.pos, this.a.value);\n        let res = new interpretResult();\n        let symbol = context.getSymbol(this.a.value);\n        if (!symbol)\n            return new ESUndefined();\n        if (symbol instanceof ESError)\n            return symbol;\n        res.val = symbol.value;\n        return res;\n    }\n}\nexport class N_undefined extends Node {\n    constructor(pos = Position.unknown) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.val = new ESUndefined();\n        return res;\n    }\n}\nexport class N_break extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldBreak = true;\n        return res;\n    }\n}\nexport class N_continue extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldContinue = true;\n        return res;\n    }\n}\nexport class N_primitiveWrapper extends Node {\n    constructor(val, pos = Position.unknown) {\n        super(pos, true);\n        this.value = val;\n    }\n    interpret_(context) {\n        return this.value;\n    }\n}\nexport class N_tryCatch extends Node {\n    constructor(pos, body, catchBlock) {\n        super(pos, true);\n        this.body = body;\n        this.catchBlock = catchBlock;\n    }\n    interpret_(context) {\n        const res = this.body.interpret(context);\n        if (res.error) {\n            const newContext = new Context();\n            newContext.parent = context;\n            newContext.setOwn(catchBlockErrorSymbolName, new ESErrorPrimitive(res.error), {\n                isConstant: true\n            });\n            const catchRes = this.catchBlock.interpret(newContext);\n            if (catchRes.error)\n                return catchRes.error;\n        }\n        return new interpretResult();\n    }\n}\n","import { Node } from \"../runtime/nodes\";\nimport { ESPrimitive } from '../runtime/primitiveTypes';\nexport function deepClone(obj, hash = new WeakMap()) {\n    let result;\n    if (Object(obj) !== obj || obj instanceof Function) {\n        return obj;\n    }\n    if (hash.has(obj)) {\n        return hash.get(obj);\n    }\n    try {\n        result = new obj.constructor();\n    }\n    catch (e) {\n        result = Object.create(Object.getPrototypeOf(obj));\n    }\n    if (obj instanceof Map) {\n        Array.from(obj, ([key, val]) => result.set(deepClone(key, hash), deepClone(val, hash)));\n    }\n    else if (obj instanceof Set) {\n        Array.from(obj, (key) => result.add(deepClone(key, hash)));\n    }\n    hash.set(obj, result);\n    return Object.assign(result, ...Object.keys(obj).map(key => ({ [key]: deepClone(obj[key], hash) })));\n}\nexport function str(val, depth = 0) {\n    if (typeof val === 'string') {\n        if (depth > 0) {\n            return `'${val}'`;\n        }\n        return val;\n    }\n    if (depth > 20) {\n        return '...';\n    }\n    let result = '';\n    if (typeof val === 'undefined') {\n        return 'undefined';\n    }\n    if (val instanceof ESPrimitive) {\n        return val.str().valueOf();\n    }\n    if (val instanceof Node) {\n        return `<RunTimeNode: ${val.constructor.name}>`;\n    }\n    switch (typeof val) {\n        case 'object':\n            if (Array.isArray(val)) {\n                result += '[';\n                for (let item of val) {\n                    try {\n                        result += str(item, depth + 1) + `, `;\n                    }\n                    catch (e) {\n                        result += '<large property>, ';\n                    }\n                }\n                if (val.length) {\n                    result = result.substring(0, result.length - 2);\n                }\n                result += ']';\n            }\n            else {\n                try {\n                    result += val.constructor.name;\n                }\n                catch (e) {\n                    result += 'UNKNOWN_CONSTRUCTOR';\n                }\n                result += ': {\\n';\n                let i = 0;\n                for (let item in val) {\n                    i++;\n                    if (!val.hasOwnProperty || !val.hasOwnProperty(item)) {\n                        continue;\n                    }\n                    result += `  ${item}: ${str(val[item], depth + 1) || ''}, \\n`;\n                }\n                if (i > 0) {\n                    result = result.substring(0, result.length - 3);\n                }\n                result += '\\n}\\n';\n            }\n            break;\n        case 'string':\n            result = `'${val}'`;\n            break;\n        case \"bigint\":\n        case \"number\":\n        case \"boolean\":\n            result = `${val}`;\n            break;\n        case \"undefined\":\n            result = '<NativeUndefined>';\n            break;\n        case \"function\":\n            result = `<NativeFunction ${val.name}>`;\n            break;\n    }\n    for (let i = 0; i < depth; i++)\n        result = indent(result);\n    return result;\n}\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms));\nexport function indent(str) {\n    return str.replace(/\\n/g, '\\n    ');\n}\nexport const validURI = (value) => /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(value);\n","import { IS_NODE_INSTANCE } from './constants';\nimport { Position } from \"./position\";\nimport { str } from \"./util/util\";\nimport chalk from \"./util/colours\";\nexport class ESError {\n    constructor(pos, name, details) {\n        this.traceback = [];\n        this.pos = pos;\n        this.name = name;\n        this.details = details;\n    }\n    get colouredStr() {\n        let out = '';\n        if (this.traceback.length) {\n            out = chalk.yellow('Error Traceback (most recent call last):\\n');\n            for (let pos of [...this.traceback].reverse())\n                out += `    ${chalk.cyan(pos.position.str)}:\\n        ${pos.line}\\n`;\n        }\n        out += `${chalk.red(this.name)}: ${this.details} \\n at ${chalk.cyan(this.pos.str)}`;\n        return out;\n    }\n    get str() {\n        return `${this.name}: ${this.details} \\n at ${this.pos.str}`;\n    }\n}\nexport class IllegalCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'IllegalCharError', `'${char}'`);\n    }\n}\nexport class InvalidSyntaxError extends ESError {\n    constructor(pos, details) {\n        super(pos, 'InvalidSyntaxError', details);\n    }\n}\nexport class ExpectedCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'ExpectedCharError', `'${char}'`);\n    }\n}\nexport class TypeError extends ESError {\n    constructor(pos, expectedType, actualType, value = '', detail = '') {\n        super(pos, 'TypeError', `Expected type '${expectedType}', got type '${actualType}' ${typeof value === 'undefined' ? '' : ` on value '${str(value)}'`} ${!detail ? '' : detail}`);\n    }\n}\nexport class ImportError extends ESError {\n    constructor(pos, url, detail = '') {\n        super(pos, 'ImportError', `Could not import ${url}: ${detail}`);\n    }\n}\nexport class ReferenceError extends ESError {\n    constructor(pos, ref) {\n        super(pos, 'ReferenceError', `${ref} is not defined`);\n    }\n}\nexport class IndexError extends ESError {\n    constructor(pos, ref, object) {\n        var _a;\n        super(pos, 'IndexError', `'${ref}' is not a property of '${((_a = object === null || object === void 0 ? void 0 : object.info) === null || _a === void 0 ? void 0 : _a.name) || str(object)}'`);\n    }\n}\nexport class InvalidOperationError extends ESError {\n    constructor(op, value, detail = '', pos = Position.unknown) {\n        var _a;\n        super(pos, 'TypeError', `Cannot perform '${op}' on value ${((_a = value === null || value === void 0 ? void 0 : value.info) === null || _a === void 0 ? void 0 : _a.name) || str(value)}: ${detail}`);\n    }\n}\nexport class InvalidRuntimeError extends ESError {\n    constructor() {\n        super(Position.unknown, 'InvalidRuntimeError', `Required runtime of ${IS_NODE_INSTANCE ? 'browser' : 'node'}`);\n    }\n}\nexport class TestFailed extends ESError {\n    constructor(detail) {\n        super(Position.unknown, 'TestFailed', detail);\n    }\n}\n","export class Token {\n    constructor(pos, type, value = undefined) {\n        this.type = type;\n        this.value = value;\n        this.pos = pos;\n    }\n    matches(type, val) {\n        return this.type === type && this.value === val;\n    }\n}\n","import { Position } from \"../position\";\nimport { digits, doubleCharTokens, identifierChars, KEYWORDS, multiLineCommentEnd, multiLineCommentStart, singleCharTokens, singleLineComment, stringSurrounds, tripleCharTokens, tt, } from '../constants';\nimport { IllegalCharError } from \"../errors\";\nimport { Token } from \"./tokens\";\nexport class Lexer {\n    constructor(program, fileName) {\n        this.text = program;\n        this.position = new Position(-1, 0, -1, fileName);\n        this.advance();\n    }\n    advance() {\n        this.position.advance(this.currentChar);\n        this.currentChar = this.text[this.position.idx];\n    }\n    generate() {\n        if (!this.text) {\n            return [new Token(this.position, tt.EOF)];\n        }\n        const tokens = [];\n        while (this.currentChar !== undefined) {\n            if (' \\t\\n'.includes(this.currentChar)) {\n                this.advance();\n            }\n            else if (digits.includes(this.currentChar)) {\n                tokens.push(this.makeNumber());\n            }\n            else if (this.currentChar === singleLineComment[0] &&\n                this.text[this.position.idx + 1] === singleLineComment[1]) {\n                this.singleLineComment();\n            }\n            else if (this.currentChar === multiLineCommentStart[0] &&\n                this.text[this.position.idx + 1] === multiLineCommentStart[1]) {\n                this.multiLineComment();\n            }\n            else if (identifierChars.includes(this.currentChar)) {\n                tokens.push(this.makeIdentifier());\n            }\n            else if (stringSurrounds.indexOf(this.currentChar) !== -1) {\n                tokens.push(this.makeString());\n            }\n            else {\n                const possibleAssignFirstChar = this.currentChar;\n                let token = this.unknownChar();\n                if (token) {\n                    if (token.type === tt.ASSIGN) {\n                        token.value = possibleAssignFirstChar;\n                    }\n                    tokens.push(token);\n                }\n                else {\n                    let pos = this.position.clone;\n                    let char = this.currentChar;\n                    this.advance();\n                    return new IllegalCharError(pos, char);\n                }\n            }\n        }\n        tokens.push(new Token(this.position, tt.EOF));\n        return tokens;\n    }\n    makeNumber() {\n        const pos = this.position.clone;\n        let numStr = '';\n        let dotCount = 0;\n        while (this.currentChar !== undefined && (digits + '._').includes(this.currentChar)) {\n            if (this.currentChar === '.') {\n                if (dotCount === 1) {\n                    break;\n                }\n                dotCount++;\n                numStr += '.';\n            }\n            else if (this.currentChar !== '_') {\n                numStr += this.currentChar;\n            }\n            this.advance();\n        }\n        return new Token(pos, tt.NUMBER, parseFloat(numStr));\n    }\n    makeString() {\n        const pos = this.position.clone;\n        let str = '';\n        let strClose = this.currentChar;\n        this.advance();\n        while (this.currentChar !== strClose && this.currentChar !== undefined) {\n            if (this.currentChar === '\\\\') {\n                this.advance();\n                if (this.currentChar === 'n') {\n                    str += '\\n';\n                    this.advance();\n                    continue;\n                }\n            }\n            str += this.currentChar;\n            this.advance();\n        }\n        this.advance();\n        return new Token(pos, tt.STRING, str);\n    }\n    makeIdentifier() {\n        let idStr = '';\n        const posStart = this.position.clone;\n        while (this.currentChar !== undefined && (identifierChars + digits).includes(this.currentChar)) {\n            idStr += this.currentChar;\n            this.advance();\n        }\n        let tokType = tt.IDENTIFIER;\n        if (KEYWORDS.indexOf(idStr) !== -1) {\n            tokType = tt.KEYWORD;\n        }\n        return new Token(posStart, tokType, idStr);\n    }\n    unknownChar() {\n        if (this.currentChar === undefined) {\n            return undefined;\n        }\n        for (let triple in tripleCharTokens) {\n            if (triple[0] === this.currentChar)\n                if (triple[1] === this.text[this.position.idx + 1])\n                    if (triple[2] === this.text[this.position.idx + 2]) {\n                        const pos = this.position.clone;\n                        this.advance();\n                        this.advance();\n                        this.advance();\n                        return new Token(pos, tripleCharTokens[triple]);\n                    }\n        }\n        for (let double in doubleCharTokens) {\n            if (double[0] === this.currentChar)\n                if (double[1] === this.text[this.position.idx + 1]) {\n                    const pos = this.position.clone;\n                    this.advance();\n                    this.advance();\n                    return new Token(pos, doubleCharTokens[double]);\n                }\n        }\n        if (singleCharTokens.hasOwnProperty(this.currentChar)) {\n            let pos = this.position.clone;\n            let val = singleCharTokens[this.currentChar];\n            this.advance();\n            return new Token(pos, val);\n        }\n        return undefined;\n    }\n    singleLineComment() {\n        this.advance();\n        while (this.currentChar !== '\\n' && this.currentChar !== undefined) {\n            this.advance();\n        }\n        this.advance();\n    }\n    multiLineComment() {\n        this.advance();\n        while (!(this.currentChar === multiLineCommentEnd[0] &&\n            this.text[this.position.idx + 1] === multiLineCommentEnd[1])) {\n            this.advance();\n        }\n        this.advance();\n        this.advance();\n    }\n}\n","import { tokenType, tokenTypeString, tt } from '../constants';\nimport { Token } from \"./tokens\";\nimport * as n from '../runtime/nodes';\nimport { N_functionDefinition, N_namespace, N_tryCatch, N_undefined, N_variable } from '../runtime/nodes';\nimport { ESError, InvalidSyntaxError } from \"../errors\";\nimport { types } from \"../runtime/primitiveTypes\";\nexport class ParseResults {\n    constructor() {\n        this.advanceCount = 0;\n        this.lastRegisteredAdvanceCount = 0;\n        this.reverseCount = 0;\n    }\n    registerAdvance() {\n        this.advanceCount = 1;\n        this.lastRegisteredAdvanceCount++;\n    }\n    register(res) {\n        this.lastRegisteredAdvanceCount = res.advanceCount;\n        this.advanceCount += res.advanceCount;\n        if (res.error) {\n            this.error = res.error;\n        }\n        if (!res.node) {\n            return new N_undefined();\n        }\n        return res.node;\n    }\n    tryRegister(res) {\n        if (res.error) {\n            this.reverseCount += res.advanceCount;\n            return;\n        }\n        return this.register(res);\n    }\n    success(node) {\n        this.node = node;\n        return this;\n    }\n    failure(error) {\n        this.error = error;\n        return this;\n    }\n}\nexport class Parser {\n    constructor(tokens) {\n        this.tokens = tokens;\n        this.tokenIdx = -1;\n        this.currentToken = tokens[0];\n        this.advance();\n    }\n    parse() {\n        var _a;\n        if (!this.currentToken || !this.tokens || (this.tokens.length === 1 && this.tokens[0].type === tt.EOF))\n            return new ParseResults();\n        const res = this.statements(true);\n        if (!res.error && this.currentToken.type !== tokenType.EOF) {\n            return res.failure(new InvalidSyntaxError((_a = this.currentToken) === null || _a === void 0 ? void 0 : _a.pos, `Expected 'End of File', got token of type'${tokenTypeString[this.currentToken.type]}' of value ${this.currentToken.value}`));\n        }\n        return res;\n    }\n    advance(res) {\n        if (res)\n            res.registerAdvance();\n        this.tokenIdx++;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    reverse(amount = 1) {\n        this.tokenIdx -= amount;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    consume(res, type, errorMsg) {\n        if (this.currentToken.type !== type)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, errorMsg !== null && errorMsg !== void 0 ? errorMsg : `Expected '${tokenTypeString[type]}' but got '${tokenTypeString[this.currentToken.type]}'`));\n        this.advance(res);\n    }\n    clearEndStatements(res) {\n        while (this.currentToken.type === tt.ENDSTATEMENT) {\n            this.advance(res);\n        }\n    }\n    statements(useArray = false) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let statements = [];\n        this.clearEndStatements(res);\n        const firstStatement = res.register(this.statement());\n        if (!firstStatement) {\n            return res;\n        }\n        statements.push(firstStatement);\n        if (res.error) {\n            return res;\n        }\n        let moreStatements = true;\n        while (true) {\n            let newLineCount = 0;\n            while (this.currentToken.type === tt.ENDSTATEMENT) {\n                this.advance(res);\n                newLineCount++;\n            }\n            if (newLineCount === 0)\n                moreStatements = false;\n            if (!moreStatements)\n                break;\n            const statement = res.tryRegister(this.statement());\n            if (!statement) {\n                this.reverse(res.reverseCount);\n                continue;\n            }\n            statements.push(statement);\n        }\n        this.clearEndStatements(res);\n        let node = new n.N_statements(pos, statements);\n        if (useArray)\n            node = new n.N_array(pos, statements, true);\n        return res.success(node);\n    }\n    statement() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        if (this.currentToken.matches(tt.KEYWORD, 'return')) {\n            this.advance(res);\n            let expr = new N_undefined(this.currentToken.pos);\n            if (this.currentToken.type !== tt.ENDSTATEMENT) {\n                let exprRes = res.register(this.expr());\n                if (!exprRes) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'Expected end of statement'));\n                }\n                expr = exprRes;\n            }\n            return res.success(new n.N_return(pos, expr));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'yield')) {\n            this.advance(res);\n            let expr = new N_undefined(this.currentToken.pos);\n            if (this.currentToken.type !== tt.ENDSTATEMENT) {\n                let exprRes = res.register(this.expr());\n                if (!exprRes) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'Expected end of statement'));\n                }\n                expr = exprRes;\n            }\n            return res.success(new n.N_yield(pos, expr));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'break')) {\n            this.advance(res);\n            return res.success(new n.N_break(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'continue')) {\n            this.advance(res);\n            return res.success(new n.N_continue(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'try')) {\n            return this.tryCatch();\n        }\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    atom() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        const pos = this.currentToken.pos;\n        switch (tok.type) {\n            case tt.NUMBER:\n                this.advance(res);\n                return res.success(new n.N_number(pos, tok));\n            case tt.STRING:\n                this.advance(res);\n                return res.success(new n.N_string(pos, tok));\n            case tt.IDENTIFIER:\n                return this.atomIdentifier(res, pos, tok);\n            case tt.OPAREN:\n                this.advance(res);\n                const expr = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type == tt.CPAREN) {\n                    this.advance(res);\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ')'\"));\n            case tt.OSQUARE:\n                let arrayExpr = res.register(this.array());\n                if (res.error)\n                    return res;\n                return res.success(arrayExpr);\n            case tt.OBRACES:\n                let objectExpr = res.register(this.object());\n                if (res.error)\n                    return res;\n                return res.success(objectExpr);\n            case tt.KEYWORD:\n                if (tok.value === 'if') {\n                    const expr = res.register(this.ifExpr());\n                    if (res.error)\n                        return res;\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Invalid Identifier ${tok.value}`));\n            default:\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected number, identifier, '(', '+' or '-'`));\n        }\n    }\n    atomIdentifier(res, pos, tok) {\n        this.advance(res);\n        let node = new n.N_variable(tok);\n        let prevNode = new n.N_undefined(pos);\n        let functionCall = false;\n        while ([tt.OPAREN, tt.OSQUARE, tt.DOT].indexOf(this.currentToken.type) !== -1) {\n            switch (this.currentToken.type) {\n                case tt.OPAREN:\n                    functionCall = true;\n                    const tempNode = node;\n                    node = res.register(this.makeFunctionCall(node, prevNode));\n                    prevNode = tempNode;\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.OSQUARE:\n                    prevNode = node;\n                    node = res.register(this.makeIndex(node));\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.DOT:\n                    this.advance(res);\n                    if (this.currentToken.type !== tt.IDENTIFIER)\n                        return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected identifier after '.'`));\n                    prevNode = node;\n                    node = new n.N_indexed(this.currentToken.pos, node, new n.N_string(this.currentToken.pos, this.currentToken));\n                    this.advance(res);\n            }\n        }\n        if (this.currentToken.type === tt.ASSIGN) {\n            let assignType = this.currentToken.value;\n            if (functionCall) {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot assign to return value of function`));\n            }\n            this.advance(res);\n            const value = res.register(this.expr());\n            if (node instanceof n.N_variable) {\n                node = new n.N_varAssign(pos, node.a, value, assignType, false);\n            }\n            else if (node instanceof n.N_indexed) {\n                node.value = value;\n                node.assignType = assignType;\n            }\n            else {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot have node of type ${this.currentToken.constructor.name}.\n                            Expected either index or variable node.`));\n            }\n            if (res.error)\n                return res;\n        }\n        return res.success(node);\n    }\n    power() {\n        return this.binOp(() => this.atom(), [tokenType.POW], () => this.factor());\n    }\n    factor() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        switch (tok.type) {\n            case tt.SUB:\n            case tt.ADD:\n                this.advance(res);\n                const factor = res.register(this.factor());\n                if (res.error)\n                    return res;\n                return res.success(new n.N_unaryOp(tok.pos, factor, tok));\n            default:\n                return this.power();\n        }\n    }\n    term() {\n        return this.binOp(() => this.factor(), [tt.MUL, tt.DIV]);\n    }\n    arithmeticExpr() {\n        return this.binOp(() => this.term(), [tt.ADD, tt.SUB]);\n    }\n    comparisonExpr() {\n        const res = new ParseResults();\n        if (this.currentToken.type === tt.NOT) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            let node = res.register(this.expr());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(opTok.pos, node, opTok));\n        }\n        let node = res.register(this.binOp(() => this.arithmeticExpr(), [tt.EQUALS, tt.NOTEQUALS, tt.GT, tt.GTE, tt.LTE, tt.LT]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    expr() {\n        const res = new ParseResults();\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.KEYWORD &&\n            ['var', 'let', 'global', 'mutable', 'const', 'local'].indexOf(this.currentToken.value) !== -1) {\n            return this.initiateVar(res);\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'if')) {\n            return this.ifExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'while')) {\n            return this.whileExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'for')) {\n            return this.forExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'func')) {\n            return this.funcExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'class')) {\n            return this.classExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'namespace')) {\n            return this.namespace();\n        }\n        let node = res.register(this.binOp(() => this.comparisonExpr(), [tt.AND, tt.OR]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    binOp(func, ops, funcB = func) {\n        const res = new ParseResults();\n        let left = res.register(func());\n        if (res.error)\n            return res;\n        while (ops.indexOf(this.currentToken.type) !== -1\n            || ops.indexOf([this.currentToken.type, this.currentToken.value]) !== -1) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            const right = res.register(funcB());\n            if (res.error)\n                return res;\n            left = new n.N_binOp(left.pos, left, opTok, right);\n        }\n        return res.success(left);\n    }\n    typeExpr() {\n        const res = new ParseResults();\n        if (this.currentToken.type !== tt.IDENTIFIER)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos.clone, `Expected an identifier`));\n        let tok = this.currentToken;\n        this.advance(res);\n        return res.success(new N_variable(tok));\n    }\n    makeFunctionCall(to, this_ = new n.N_undefined()) {\n        const res = new ParseResults();\n        let args = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OPAREN)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '['\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n            return res.success(new n.N_functionCall(pos, to, []));\n        }\n        args.push(res.register(this.expr()));\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid argument\"));\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            args.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CPAREN)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n        this.advance(res);\n        return res.success(new n.N_functionCall(pos, to, args));\n    }\n    makeIndex(to) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const base = to;\n        if (this.currentToken.type !== tt.OSQUARE)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, `Cannot index without expression`));\n        }\n        let index = res.register(this.expr());\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid index\"));\n        if (this.currentToken.type !== tt.CSQUARE)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ']'\"));\n        this.advance(res);\n        return res.success(new n.N_indexed(pos, base, index));\n    }\n    initiateVar(res) {\n        let pos = this.currentToken.pos;\n        let isConst = false;\n        let isLocal = false;\n        let isGlobal = false;\n        let isDeclaration = false;\n        if (this.currentToken.type === tt.KEYWORD && ['var', 'let'].indexOf(this.currentToken.value) !== -1) {\n            isDeclaration = true;\n            isLocal = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD && ['global', 'local'].indexOf(this.currentToken.value) !== -1) {\n            isDeclaration = true;\n            if (this.currentToken.value === 'global')\n                isGlobal = true;\n            else\n                isLocal = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD && ['const', 'mutable'].indexOf(this.currentToken.value) !== -1) {\n            isDeclaration = true;\n            if (this.currentToken.value === 'const')\n                isConst = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected Identifier 'var', 'let', 'const', 'mutable', 'local', or 'global', not ${this.currentToken.value}`));\n        }\n        if (this.currentToken.type !== tokenType.IDENTIFIER) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected Identifier or Keyword`));\n        }\n        const varName = this.currentToken;\n        this.advance(res);\n        let type = types.any;\n        if (this.currentToken.type === tt.COLON) {\n            isDeclaration = true;\n            this.consume(res, tt.COLON);\n            type = res.register(this.typeExpr());\n        }\n        if (this.currentToken.type !== tt.ASSIGN) {\n            if (isConst)\n                return res.failure(new InvalidSyntaxError(pos, 'Cannot initialise constant to undefined'));\n            return res.success(new n.N_varAssign(pos, varName, new n.N_undefined(this.currentToken.pos), '=', isGlobal, isLocal, isConst, isDeclaration, type));\n        }\n        let assignType = this.currentToken.value;\n        this.advance(res);\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        if (expr instanceof n.N_class || expr instanceof n.N_functionDefinition) {\n            expr.name = varName.value;\n        }\n        if (expr instanceof N_namespace) {\n            expr.name = varName.value;\n            expr.mutable = !isConst;\n        }\n        return res.success(new n.N_varAssign(pos, varName, expr, assignType, isGlobal, isLocal, isConst, isDeclaration, type));\n    }\n    bracesExp() {\n        const res = new ParseResults();\n        this.consume(res, tt.OBRACES);\n        if (res.error) {\n            return res;\n        }\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_undefined(this.currentToken.pos));\n        }\n        const expr = res.register(this.statements());\n        if (res.error) {\n            return res;\n        }\n        this.consume(res, tt.CBRACES);\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    addEndStatement(res) {\n        this.tokens.splice(this.tokenIdx, 0, new Token(this.currentToken.pos, tt.ENDSTATEMENT));\n        this.reverse();\n        this.advance(res);\n    }\n    ifExpr() {\n        const res = new ParseResults();\n        let ifTrue;\n        let ifFalse;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'if'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'if'\"));\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        ifTrue = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.clearEndStatements(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'else')) {\n            this.advance(res);\n            if (this.currentToken.type == tt.OBRACES) {\n                ifFalse = res.register(this.bracesExp());\n                if (res.error)\n                    return res;\n            }\n            else {\n                ifFalse = res.register(this.statement());\n                if (res.error)\n                    return res;\n            }\n        }\n        this.addEndStatement(res);\n        return res.success(new n.N_if(pos, condition, ifTrue, ifFalse));\n    }\n    whileExpr() {\n        const res = new ParseResults();\n        let loop;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'while'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'while'\"));\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        loop = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        return res.success(new n.N_while(pos, condition, loop));\n    }\n    parameter(res) {\n        let name;\n        let type = new n.N_primitiveWrapper(types.any);\n        if (this.currentToken.type !== tt.IDENTIFIER)\n            return new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\");\n        name = this.currentToken.value;\n        this.advance(res);\n        if (this.currentToken.type === tt.COLON) {\n            this.consume(res, tt.COLON);\n            if (res.error)\n                return res.error;\n            type = res.register(this.typeExpr());\n            if (res.error)\n                return res.error;\n        }\n        return { name, type };\n    }\n    funcCore() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, args = [], returnType = new n.N_primitiveWrapper(types.any);\n        this.consume(res, tt.OPAREN);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n        }\n        else {\n            let param = this.parameter(res);\n            if (param instanceof ESError)\n                return res.failure(param);\n            args.push(param);\n            while (this.currentToken.type === tt.COMMA) {\n                this.advance(res);\n                let param = this.parameter(res);\n                if (param instanceof ESError)\n                    return res.failure(param);\n                args.push(param);\n            }\n            if (this.currentToken.type !== tt.CPAREN)\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n            this.advance(res);\n        }\n        if (this.currentToken.type === tt.COLON) {\n            this.advance(res);\n            returnType = res.register(this.typeExpr());\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.OBRACES) {\n            body = new n.N_return(this.currentToken.pos, res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        else {\n            this.consume(res, tt.OBRACES);\n            if (res.error)\n                return res;\n            if (this.currentToken.type !== tt.CBRACES)\n                body = res.register(this.statements());\n            else\n                body = new n.N_undefined(this.currentToken.pos);\n            this.consume(res, tt.CBRACES);\n            if (res.error)\n                return res;\n        }\n        return res.success(new n.N_functionDefinition(pos, body, args, returnType));\n    }\n    funcExpr() {\n        const res = new ParseResults();\n        if (!this.currentToken.matches(tt.KEYWORD, 'func'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'func'\"));\n        this.advance(res);\n        const func = res.register(this.funcCore());\n        if (res.error)\n            return res;\n        return res.success(func);\n    }\n    classExpr(name) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const methods = [];\n        let init;\n        let extends_;\n        if (!this.currentToken.matches(tt.KEYWORD, 'class'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'class'\"));\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'extends')) {\n            this.advance(res);\n            extends_ = res.register(this.expr());\n            if (res.error)\n                return res;\n        }\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_class(pos, [], undefined, undefined, name));\n        }\n        while (true) {\n            if (this.currentToken.type !== tt.IDENTIFIER)\n                break;\n            let methodId = this.currentToken.value;\n            this.advance(res);\n            const func = res.register(this.funcCore());\n            if (res.error)\n                return res;\n            if (!(func instanceof N_functionDefinition))\n                return res.failure(new ESError(this.currentToken.pos, 'ParseError', `Tried to get function, but got ${func} instead`));\n            func.name = methodId;\n            if (methodId === 'init')\n                init = func;\n            else\n                methods.push(func);\n        }\n        this.consume(res, tt.CBRACES);\n        return res.success(new n.N_class(pos, methods, extends_, init, name));\n    }\n    forExpr() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, array, identifier, isGlobalIdentifier = false, isConstIdentifier = false;\n        if (!this.currentToken.matches(tt.KEYWORD, 'for'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'for'\"));\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'global')) {\n            isGlobalIdentifier = true;\n            this.advance(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'const')) {\n            isConstIdentifier = true;\n            this.advance(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'var') || this.currentToken.matches(tt.KEYWORD, 'let')) {\n            this.advance(res);\n        }\n        if (this.currentToken.type !== tt.IDENTIFIER)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\"));\n        identifier = this.currentToken;\n        this.advance(res);\n        if (!this.currentToken.matches(tt.KEYWORD, 'in'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected keyword 'in\"));\n        this.advance(res);\n        array = res.register(this.expr());\n        if (res.error)\n            return res;\n        body = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new n.N_for(pos, body, array, identifier, isGlobalIdentifier, isConstIdentifier));\n    }\n    array() {\n        const res = new ParseResults();\n        let elements = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OSQUARE)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            this.advance(res);\n            return res.success(new n.N_array(pos, []));\n        }\n        elements.push(res.register(this.expr()));\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ']', 'var', 'if', 'for', 'while', number, identifier, '+', '-', '(', '[' or '!' 2\"));\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            elements.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CSQUARE)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ']'\"));\n        this.advance(res);\n        return res.success(new n.N_array(pos, elements));\n    }\n    object() {\n        const res = new ParseResults();\n        let properties = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OBRACES)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '{\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_emptyObject(pos));\n        }\n        while (true) {\n            let keyType, key, value;\n            if (this.currentToken.type === tt.IDENTIFIER) {\n                keyType = 'id';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.STRING) {\n                keyType = 'string';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.OSQUARE) {\n                keyType = 'value';\n                this.advance(res);\n                key = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.CSQUARE)\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ']', got '${tokenTypeString[this.currentToken.type]}'`));\n                this.advance(res);\n            }\n            else\n                break;\n            if (this.currentToken.type === tt.COLON) {\n                this.advance(res);\n                value = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES)\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                if (this.currentToken.type === tt.COMMA)\n                    this.advance(res);\n            }\n            else {\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES)\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                if (keyType !== 'id')\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `You must specify a value when initialising an object literal with a key that is not an identifier.\n                        Try using \\`key: value\\` syntax.`));\n                this.reverse();\n                value = new n.N_variable(this.currentToken);\n                this.advance(res);\n                if (this.currentToken.type === tt.COMMA)\n                    this.advance(res);\n            }\n            properties.push([key, value]);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CBRACES)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier, ',' or '}'\"));\n        this.advance(res);\n        return res.success(new n.N_objectLiteral(pos, properties));\n    }\n    namespace() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_namespace(pos, new n.N_undefined()));\n        }\n        const statements = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        return res.success(new n.N_namespace(pos, statements));\n    }\n    tryCatch() {\n        const res = new ParseResults();\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'No empty try block'));\n        }\n        const body = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.value !== 'catch') {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'try block requires catch'));\n        }\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.success(new N_tryCatch(this.currentToken.pos, body, new N_undefined()));\n        }\n        const catchBlock = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new N_tryCatch(this.currentToken.pos, body, catchBlock));\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Lexer } from \"./parse/lexer\";\nimport { Parser } from \"./parse/parser\";\nimport { global, now, refreshPerformanceNow, runningInNode, setGlobalContext } from \"./constants\";\nimport { initialise } from \"./init\";\nimport { ESError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { interpretResult, Node } from \"./runtime/nodes\";\nimport { ESArray } from \"./runtime/primitiveTypes\";\nimport { Context } from \"./runtime/context\";\nimport addNodeLibs from \"./built-in/nodeLibs\";\nimport { libs as allLibs } from './constants';\nimport colours from './util/colours';\nexport { Context, colours };\nexport * from './runtime/primitiveTypes';\nexport * from './constants';\nexport * from './errors';\nexport * from './runtime/nodes';\nexport * from './util/util';\nexport * from './runtime/primitives/wrapStrip';\nexport * from './runtime/symbol';\nexport function init(printFunc = console.log, inputFunc, node = true, libs = { print: console.log }, context = new Context(), path = '') {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const res = initialise(context, printFunc, inputFunc);\n        if (res instanceof ESError) {\n            return res;\n        }\n        setGlobalContext(context);\n        (_a = libs['context']) !== null && _a !== void 0 ? _a : (libs['context'] = context);\n        if (path) {\n            context.path = path;\n        }\n        if (libs.print) {\n            allLibs.print = libs.print;\n        }\n        if (node) {\n            runningInNode();\n            yield refreshPerformanceNow(true);\n            addNodeLibs(libs, context);\n        }\n    });\n}\nexport function run(msg, { env = global, measurePerformance = false, fileName = '(unknown)', currentDir = '' } = {}) {\n    if (currentDir) {\n        env.path = currentDir;\n    }\n    Node.maxTime = 0;\n    Node.totalTime = 0;\n    Node.interprets = 0;\n    const timeData = {\n        total: 0,\n        lexerTotal: 0,\n        parserTotal: 0,\n        interpretTotal: 0,\n        nodeMax: 0,\n        nodeAvg: 0,\n        nodeTotal: 0,\n        interprets: 0,\n    };\n    let start = now();\n    if (!env.root.initialisedAsGlobal) {\n        const res = new interpretResult();\n        res.error = new ESError(Position.unknown, 'Uninitialised', 'Global context has not been initialised with global values');\n        return res;\n    }\n    const lexer = new Lexer(msg, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        const res_ = new interpretResult();\n        res_.error = lexerRes;\n        return res_;\n    }\n    timeData.lexerTotal = now() - start;\n    start = now();\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        const res_ = new interpretResult();\n        res_.error = res.error;\n        return res_;\n    }\n    timeData.parserTotal = now() - start;\n    start = now();\n    if (!res.node) {\n        const res = new interpretResult();\n        res.val = new ESArray([]);\n        return res;\n    }\n    const finalRes = res.node.interpret(env);\n    timeData.interpretTotal = now() - start;\n    timeData.total = now() - start;\n    timeData.nodeMax = Node.maxTime;\n    timeData.nodeTotal = Node.totalTime;\n    timeData.nodeAvg = Node.totalTime / Node.interprets;\n    timeData.interprets = Node.interprets;\n    if (measurePerformance) {\n        console.log(timeData);\n    }\n    return Object.assign(Object.assign({}, finalRes), { timeData });\n}\n","import { Position } from \"../position\";\nimport { Context } from \"../runtime/context\";\nimport { ESError, ImportError } from \"../errors\";\nimport { ESFunction, ESNamespace, ESObject, ESString, types } from '../runtime/primitiveTypes';\nimport { str } from \"../util/util\";\nimport { run } from \"../index\";\nimport { addModuleFromObj, getModule, moduleExist } from './builtInModules';\nimport { global, importCache } from \"../constants\";\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nfunction addNodeLibs(options, context) {\n    const { fs, path } = options;\n    for (let libName in options) {\n        if (options.hasOwnProperty(libName)) {\n            addModuleFromObj(libName, new ESJSBinding(options[libName], libName));\n        }\n    }\n    context.set('import', new ESFunction(({ context }, rawPath) => {\n        let scriptPath = str(rawPath);\n        if (moduleExist(scriptPath)) {\n            return getModule(scriptPath);\n        }\n        scriptPath = path.join(context.path, scriptPath);\n        if (scriptPath in importCache) {\n            return importCache[scriptPath];\n        }\n        try {\n            if (!fs.existsSync(scriptPath)) {\n                if (fs.existsSync('./particles/' + scriptPath)) {\n                    if (fs.existsSync('particles/' + scriptPath + '/main.es')) {\n                        scriptPath = 'particles/' + scriptPath + '/main.es';\n                    }\n                    else {\n                        return new ESError(Position.unknown, 'ImportError', `Module '${scriptPath}' has no entry point. Requires 'main.es'.`);\n                    }\n                }\n                else {\n                    return new ESError(Position.unknown, 'ImportError', `Can't find file '${scriptPath}' to import.`);\n                }\n            }\n            const exDir = path.dirname(scriptPath);\n            const code = fs.readFileSync(scriptPath, 'utf-8');\n            const env = new Context();\n            env.parent = global;\n            env.path = exDir;\n            const n = new ESNamespace(new ESString(scriptPath), {});\n            importCache[scriptPath] = n;\n            const res = run(code, {\n                env,\n                measurePerformance: false,\n                fileName: scriptPath,\n                currentDir: exDir,\n            });\n            n.__value__ = env.getSymbolTableAsDict();\n            if (res.error) {\n                return res.error;\n            }\n            return n;\n        }\n        catch (E) {\n            return new ESError(Position.unknown, 'ImportError', E.toString());\n        }\n    }, [{ name: 'path', type: types.string }], 'import', undefined, types.object), {\n        forceThroughConst: true,\n        isConstant: true\n    });\n    context.setOwn('open', new ESFunction(({ context }, path_, encoding_) => {\n        const path = str(path_);\n        const encoding = str(encoding_) || 'utf-8';\n        if (!fs.existsSync(path)) {\n            return new ImportError(Position.unknown, path);\n        }\n        return new ESObject({\n            str: new ESFunction(({ context }) => {\n                return new ESString(fs.readFileSync(context.path + path, encoding));\n            }, [], 'str', undefined, types.string),\n            write: new ESFunction(({ context }, data) => {\n                fs.writeFileSync(context.path + path, str(data));\n            }, [{ name: 'path', type: types.string }]),\n            append: new ESFunction(({ context }, data) => {\n                fs.appendFileSync(context.path + path, str(data));\n            }, [{ name: 'path', type: types.string }]),\n        });\n    }));\n}\nexport default addNodeLibs;\n"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Position","constructor","idx","ln","col","file","advance","currentChar","clone","str","isUnknown","unknown","digits","identifierChars","singleLineComment","multiLineCommentStart","multiLineCommentEnd","global","setGlobalContext","c","stringSurrounds","IS_NODE_INSTANCE","window","runningInNode","print","console","log","catchBlockErrorSymbolName","KEYWORDS","now","refreshPerformanceNow","thisArg","_arguments","generator","Date","performance","e","P","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","importCache","tokenType","tt","tokenTypeString","NUMBER","STRING","ENDSTATEMENT","IDENTIFIER","KEYWORD","COMMA","OBRACES","CBRACES","OPAREN","CPAREN","OSQUARE","CSQUARE","ASSIGN","ADD","SUB","MUL","DIV","POW","EQUALS","NOTEQUALS","NOT","GT","LT","GTE","LTE","AND","OR","COLON","DOT","EOF","BITWISE_AND","BITWISE_OR","BITWISE_NOT","singleCharTokens","doubleCharTokens","tripleCharTokens","primitiveMethods","types","ESPrimitive","type","any","self","isa","props","ESBoolean","__type__","is","valueOf","__value__","typeName","__name__","hasProperty","describe","info","isBuiltIn","description","detail","res","strip","TypeError","assign","__add__","n","InvalidOperationError","__subtract__","__multiply__","__divide__","__pow__","__eq__","__gt__","__lt__","__and__","__or__","__bool__","__setProperty__","__call__","parameters","ESErrorPrimitive","error","ESError","super","__getProperty__","ESString","name","details","ESArray","traceback","map","s","position","line","wrap","IndexError","cast","bool","dealWithExtends","context","class_","instance","this_","callContext","ESType","superFunc","ESFunction","args","newContext","Context","parent","__extends__","_a","initFunc","__init__","__closure__","res_","undefined","setRes","setOwn","createInstance","params","runInit","on","_b","__isPrimitive__","length","ESUndefined","ESNumber","ESObject","method","__methods__","methodClone","indexOf","__instances__","push","isPrimitive","includesType","t","_c","_d","_e","_f","equals","val","number","string","array","object","boolean","substr","keys","k","thisElement","nElement","newOb","keysToRemove","Array","isArray","toClone","ESNamespace","mutable","slice","symbol","isAccessible","v","isConstant","ESJSBinding","functionsTakeProps","JSON","stringify","func","arguments_","returnType","closure","path","fn","max","Math","i","arg","forceThroughConst","generateESFunctionCallContext","Node","interpret","funcReturn","callNode","callNative","defaultValue","required","toString","pow","Boolean","helpLink","values","len","add","splice","contains","element","newArr","num","parseFloat","isNaN","split","repeat","strToInsert","firstPart","lastPart","ESSymbol","identifier","options","thing","Number","String","m","a","codes","red","yellow","green","cyan","blue","grey","code","builtInFunctions","minP","maxP","stepP","min","arr","returns","msgs","things","out","indent","total","filter","entries","contents","id","has","set","global_","time","cb","sleep","parse","json","modules","ascii","asciiToChar","fromCharCode","charToAscii","char","charCodeAt","processedModules","processRawModule","moduleDict","moduleRaw","moduleExist","getModule","processed","initialise","globalContext","printFunc","inputFunc","rawUrl","callback","url","fetch","text","env","run","ImportError","getSymbolTableAsDict","E","msg","cbRaw","builtIn","globalConstants","constant","load","initModRes","thens","resolved","catch_","catch","domRes","InvalidRuntimeError","w","$","document","ReferenceError","dom","initModules","initialisedAsGlobal","symbolTable","deleted","path_","parent_","hasOwn","getSymbol","getRawSymbolTableAsDict","symbols","remove","clear","resetAsGlobal","deepClone","interpretArgument","typeRes","defaultValRes","interpretResult","shouldBreak","shouldContinue","pos","isTerminal","start","interpret_","interprets","totalTime","maxTime","N_binOp","left","opTok","right","l","r","lt","eq","gt","InvalidSyntaxError","N_unaryOp","numVal","abs","N_varAssign","varNameTok","assignType","isGlobal","isLocal","isDeclaration","N_primitiveWrapper","currentVal","newVal","assignVal","N_if","comparison","ifTrue","ifFalse","compRes","N_while","loop","shouldLoop","potentialError","N_for","body","isGlobalIdentifier","isConstIdentifier","isGlobalId","isConstId","_g","_h","iteration","N_array","items","shouldClone","interpreted","item","N_objectLiteral","properties","keyNode","valueNode","N_emptyObject","N_statements","last","N_functionCall","to","arguments","join","N_functionDefinition","argNames","returnTypeRes","N_return","N_yield","N_indexed","base","index","baseRes","indexRes","valRes","N_class","methods","extends_","init","instances","extendsRes","initRes","N_namespace","statements","N_number","N_string","N_variable","N_undefined","N_break","N_continue","N_tryCatch","catchBlock","catchRes","hash","WeakMap","Function","create","getPrototypeOf","Map","from","Set","depth","substring","ms","setTimeout","replace","validURI","test","colouredStr","reverse","IllegalCharError","ExpectedCharError","expectedType","actualType","ref","op","TestFailed","Token","matches","Lexer","program","fileName","generate","tokens","includes","makeNumber","multiLineComment","makeIdentifier","makeString","possibleAssignFirstChar","token","unknownChar","numStr","dotCount","strClose","idStr","posStart","tokType","triple","double","ParseResults","advanceCount","lastRegisteredAdvanceCount","reverseCount","registerAdvance","register","node","tryRegister","success","failure","Parser","tokenIdx","currentToken","amount","consume","errorMsg","clearEndStatements","useArray","firstStatement","statement","moreStatements","newLineCount","expr","exprRes","tryCatch","atom","tok","atomIdentifier","arrayExpr","objectExpr","ifExpr","prevNode","functionCall","tempNode","makeFunctionCall","makeIndex","power","binOp","factor","term","arithmeticExpr","comparisonExpr","initiateVar","whileExpr","forExpr","funcExpr","classExpr","namespace","ops","funcB","typeExpr","isConst","varName","bracesExp","addEndStatement","condition","parameter","funcCore","param","methodId","elements","keyType","libs","fs","libName","raw","addModule","rawPath","scriptPath","existsSync","exDir","dirname","readFileSync","measurePerformance","currentDir","encoding_","encoding","write","data","writeFileSync","append","appendFileSync","timeData","lexerTotal","parserTotal","interpretTotal","nodeMax","nodeAvg","nodeTotal","lexerRes","finalRes"],"sourceRoot":""}