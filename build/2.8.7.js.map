{"version":3,"file":"2.8.7.js","mappings":"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","sources":["webpack://es/webpack/universalModuleDefinition","webpack://es/webpack/bootstrap","webpack://es/webpack/runtime/define property getters","webpack://es/webpack/runtime/hasOwnProperty shorthand","webpack://es/webpack/runtime/make namespace object","webpack://es/./src/position.ts","webpack://es/./src/constants.ts","webpack://es/./src/runtime/primitives/primitive.ts","webpack://es/./src/runtime/primitives/esprimitive.ts","webpack://es/./src/runtime/primitives/eserrorprimitive.ts","webpack://es/./src/runtime/instantiator.ts","webpack://es/./src/runtime/primitives/estype.ts","webpack://es/./src/runtime/primitives/esundefined.ts","webpack://es/./src/runtime/primitives/esobject.ts","webpack://es/./src/runtime/primitives/esnamespace.ts","webpack://es/./src/runtime/primitives/esjsbinding.ts","webpack://es/./src/runtime/primitiveTypes.ts","webpack://es/./src/runtime/primitives/esfunction.ts","webpack://es/./src/runtime/functionCaller.ts","webpack://es/./src/runtime/context.ts","webpack://es/./src/runtime/primitives/esnumber.ts","webpack://es/./src/runtime/primitives/esboolean.ts","webpack://es/./src/runtime/primitives/esarray.ts","webpack://es/./src/runtime/primitives/esstring.ts","webpack://es/./src/runtime/symbol.ts","webpack://es/./src/runtime/primitives/wrapStrip.ts","webpack://es/./src/util/colours.ts","webpack://es/./src/built-in/builtInFunctions.ts","webpack://es/./src/built-in/built-in-modules/json.ts","webpack://es/./src/built-in/builtInModules.ts","webpack://es/./src/built-in/built-in-modules/ascii.ts","webpack://es/./src/init.ts","webpack://es/./src/built-in/globalConstants.ts","webpack://es/./src/built-in/built-in-modules/promise.ts","webpack://es/./src/built-in/built-in-modules/dom.ts","webpack://es/./src/runtime/argument.ts","webpack://es/./src/runtime/nodes.ts","webpack://es/./src/util/util.ts","webpack://es/./src/errors.ts","webpack://es/./src/parse/tokens.ts","webpack://es/./src/parse/lexer.ts","webpack://es/./src/parse/parser.ts","webpack://es/./src/index.ts","webpack://es/./src/built-in/nodeLibs.ts","webpack://es/./src/built-in/compiledSTD/std.txt.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"es\"] = factory();\n\telse\n\t\troot[\"es\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Position {\n    constructor(idx, ln, col, file = '(unknown)') {\n        this.idx = idx;\n        this.ln = ln;\n        this.col = col;\n        this.file = file;\n    }\n    advance(currentChar = '') {\n        this.idx++;\n        this.col++;\n        if (currentChar === '\\n') {\n            this.ln++;\n            this.col = 0;\n        }\n        return this;\n    }\n    get clone() {\n        return new Position(this.idx, this.ln, this.col, this.file);\n    }\n    get str() {\n        return `File ${this.file}, ${this.ln + 1}:${this.col + 1}`;\n    }\n    get isUnknown() {\n        return this.idx === -2;\n    }\n    static get unknown() {\n        return new Position(-2, -2, -2, '(unknown)');\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const digits = '0123456789';\nexport const identifierChars = '_$abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nexport const singleLineComment = '//';\nexport const multiLineCommentStart = '/*';\nexport const multiLineCommentEnd = '*/';\nexport let global;\nexport const setGlobalContext = (c) => void (global = c);\nexport const stringSurrounds = ['\\'', '`', '\"'];\nexport let IS_NODE_INSTANCE = typeof window === 'undefined';\nexport const runningInNode = () => void (IS_NODE_INSTANCE = true);\nimport PACKAGE_JSON from '../package.json';\nexport const VERSION = PACKAGE_JSON['version'];\nexport let permissions = {\n    networking: false,\n    imports: true,\n    accessDOM: false,\n    useSTD: true,\n    fileSystem: false,\n};\nexport function updatePermissions(newPermissions) {\n    permissions = Object.assign(Object.assign({}, permissions), newPermissions);\n}\nexport const libs = {\n    print: console.log\n};\nexport const catchBlockErrorSymbolName = 'err';\nexport const KEYWORDS = [\n    'var',\n    'let',\n    'global',\n    'local',\n    'mutable',\n    'const',\n    'if',\n    'else',\n    'while',\n    'for',\n    'in',\n    'continue',\n    'break',\n    'func',\n    'return',\n    'yield',\n    'class',\n    'extends',\n    'namespace',\n    'export',\n    'try',\n    'catch'\n];\nexport let now = () => 0;\nexport function refreshPerformanceNow(IS_NODE_INSTANCE) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (IS_NODE_INSTANCE) {\n            now = () => Date.now();\n        }\n        else {\n            now = () => {\n                try {\n                    return performance === null || performance === void 0 ? void 0 : performance.now();\n                }\n                catch (e) {\n                    return 0;\n                }\n            };\n        }\n    });\n}\nrefreshPerformanceNow(IS_NODE_INSTANCE);\nexport const importCache = {};\nexport var tokenType;\n(function (tokenType) {\n    tokenType[tokenType[\"NUMBER\"] = 0] = \"NUMBER\";\n    tokenType[tokenType[\"STRING\"] = 1] = \"STRING\";\n    tokenType[tokenType[\"ENDSTATEMENT\"] = 2] = \"ENDSTATEMENT\";\n    tokenType[tokenType[\"IDENTIFIER\"] = 3] = \"IDENTIFIER\";\n    tokenType[tokenType[\"KEYWORD\"] = 4] = \"KEYWORD\";\n    tokenType[tokenType[\"COMMA\"] = 5] = \"COMMA\";\n    tokenType[tokenType[\"ASSIGN\"] = 6] = \"ASSIGN\";\n    tokenType[tokenType[\"ADD\"] = 7] = \"ADD\";\n    tokenType[tokenType[\"SUB\"] = 8] = \"SUB\";\n    tokenType[tokenType[\"MUL\"] = 9] = \"MUL\";\n    tokenType[tokenType[\"DIV\"] = 10] = \"DIV\";\n    tokenType[tokenType[\"POW\"] = 11] = \"POW\";\n    tokenType[tokenType[\"OPAREN\"] = 12] = \"OPAREN\";\n    tokenType[tokenType[\"CPAREN\"] = 13] = \"CPAREN\";\n    tokenType[tokenType[\"OBRACES\"] = 14] = \"OBRACES\";\n    tokenType[tokenType[\"CBRACES\"] = 15] = \"CBRACES\";\n    tokenType[tokenType[\"OSQUARE\"] = 16] = \"OSQUARE\";\n    tokenType[tokenType[\"CSQUARE\"] = 17] = \"CSQUARE\";\n    tokenType[tokenType[\"EQUALS\"] = 18] = \"EQUALS\";\n    tokenType[tokenType[\"NOTEQUALS\"] = 19] = \"NOTEQUALS\";\n    tokenType[tokenType[\"NOT\"] = 20] = \"NOT\";\n    tokenType[tokenType[\"GT\"] = 21] = \"GT\";\n    tokenType[tokenType[\"LT\"] = 22] = \"LT\";\n    tokenType[tokenType[\"GTE\"] = 23] = \"GTE\";\n    tokenType[tokenType[\"LTE\"] = 24] = \"LTE\";\n    tokenType[tokenType[\"AND\"] = 25] = \"AND\";\n    tokenType[tokenType[\"OR\"] = 26] = \"OR\";\n    tokenType[tokenType[\"COLON\"] = 27] = \"COLON\";\n    tokenType[tokenType[\"DOT\"] = 28] = \"DOT\";\n    tokenType[tokenType[\"EOF\"] = 29] = \"EOF\";\n    tokenType[tokenType[\"BITWISE_OR\"] = 30] = \"BITWISE_OR\";\n    tokenType[tokenType[\"BITWISE_AND\"] = 31] = \"BITWISE_AND\";\n    tokenType[tokenType[\"BITWISE_NOT\"] = 32] = \"BITWISE_NOT\";\n})(tokenType || (tokenType = {}));\nexport let tt = tokenType;\nexport const tokenTypeString = {\n    [tt.NUMBER]: 'Number',\n    [tt.STRING]: 'String',\n    [tt.ENDSTATEMENT]: ';',\n    [tt.IDENTIFIER]: 'Identifier',\n    [tt.KEYWORD]: 'Keyword',\n    [tt.COMMA]: ',',\n    [tt.OBRACES]: '{',\n    [tt.CBRACES]: '}',\n    [tt.OPAREN]: '(',\n    [tt.CPAREN]: ')',\n    [tt.OSQUARE]: '[',\n    [tt.CSQUARE]: ']',\n    [tt.ASSIGN]: '=',\n    [tt.ADD]: '+',\n    [tt.SUB]: '-',\n    [tt.MUL]: '*',\n    [tt.DIV]: '/',\n    [tt.POW]: '^',\n    [tt.EQUALS]: '==',\n    [tt.NOTEQUALS]: '!=',\n    [tt.NOT]: '!',\n    [tt.GT]: '>',\n    [tt.LT]: '<',\n    [tt.GTE]: '>=',\n    [tt.LTE]: '<=',\n    [tt.AND]: '&&',\n    [tt.OR]: '||',\n    [tt.COLON]: ':',\n    [tt.DOT]: '.',\n    [tt.EOF]: 'End of File',\n    [tt.BITWISE_AND]: '&',\n    [tt.BITWISE_OR]: '|',\n    [tt.BITWISE_NOT]: '~',\n};\nexport const singleCharTokens = {\n    '*': tt.MUL,\n    '/': tt.DIV,\n    '+': tt.ADD,\n    '-': tt.SUB,\n    '(': tt.OPAREN,\n    ')': tt.CPAREN,\n    '^': tt.POW,\n    '{': tt.OBRACES,\n    '}': tt.CBRACES,\n    ',': tt.COMMA,\n    '[': tt.OSQUARE,\n    ']': tt.CSQUARE,\n    ';': tt.ENDSTATEMENT,\n    ':': tt.COLON,\n    '.': tt.DOT,\n    '=': tt.ASSIGN,\n    '>': tt.GT,\n    '<': tt.LT,\n    '!': tt.NOT,\n    '|': tt.BITWISE_OR,\n    '&': tt.BITWISE_AND,\n    '~': tt.BITWISE_NOT\n};\nexport const doubleCharTokens = {\n    '==': tt.EQUALS,\n    '!=': tt.NOTEQUALS,\n    '>=': tt.GTE,\n    '<=': tt.LTE,\n    '+=': tt.ASSIGN,\n    '-=': tt.ASSIGN,\n    '*=': tt.ASSIGN,\n    '/=': tt.ASSIGN,\n    '&&': tt.AND,\n    '||': tt.OR\n};\nexport const tripleCharTokens = {};\nexport const primitiveMethods = [\n    '__add__',\n    '__subtract__',\n    '__multiply__',\n    '__divide__',\n    '__pow__',\n    '__eq__',\n    '__gt__',\n    '__lt__',\n    '__and__',\n    '__or__',\n    '__bool__',\n    '__setProperty__',\n    '__getProperty__',\n    '__call__',\n];\n","export const types = {};\n","import { InvalidOperationError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { types } from './primitive';\nimport { str } from '../../util/util';\nimport { strip } from './wrapStrip';\nexport class ESPrimitive {\n    constructor(value, type = types.any) {\n        this.self = this;\n        this.isa = (props, type) => {\n            return new ESBoolean(type === this.__type__);\n        };\n        this.is = (props, obj) => {\n            return new ESBoolean(obj === this);\n        };\n        this.valueOf = () => this.__value__;\n        this.typeName = () => this.__type__.__name__;\n        this.hasProperty = (props, key) => new ESBoolean(this.hasOwnProperty(str(key)));\n        this.describe = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            this.info.description = str(info);\n        };\n        this.detail = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            const res = strip(info, props);\n            if (typeof res !== 'object') {\n                return new TypeError(Position.unknown, 'object', this.typeName(), str(this));\n            }\n            this.info = Object.assign(Object.assign({}, this.info), res);\n            this.info.isBuiltIn = false;\n        };\n        this.__type__ = type || this;\n        this.__value__ = value;\n        this.info = {};\n    }\n    __add__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __subtract__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __multiply__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __divide__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __pow__(props, n) {\n        return new InvalidOperationError('__pow__', this);\n    }\n    __eq__(props, n) {\n        return new InvalidOperationError('__eq__', this);\n    }\n    __gt__(props, n) {\n        return new InvalidOperationError('__gt__', this);\n    }\n    __lt__(props, n) {\n        return new InvalidOperationError('__lt__', this);\n    }\n    __and__(props, n) {\n        return new InvalidOperationError('__and__', this);\n    }\n    __or__(props, n) {\n        return new InvalidOperationError('__or__', this);\n    }\n    __bool__(props) {\n        return new InvalidOperationError('__bool__', this);\n    }\n    __setProperty__(props, key, value) {\n        return new InvalidOperationError('__setProperty__', this, `[${str(key)}] = ${str(value)}`);\n    }\n    __call__(props, ...parameters) {\n        return new InvalidOperationError('__call__', this);\n    }\n}\n","import { ESPrimitive } from './esprimitive';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nimport { str } from \"../../util/util\";\nimport { ESArray } from \"./esarray\";\nexport class ESErrorPrimitive extends ESPrimitive {\n    constructor(error = new ESError(Position.unknown, 'Unknown', 'Error not specified')) {\n        super(error, types.error);\n        this.__getProperty__ = (props, key) => {\n            switch (str(key)) {\n                case 'name':\n                    return new ESString(this.valueOf().name);\n                case 'details':\n                    return new ESString(this.valueOf().details);\n                case 'traceback':\n                    return new ESArray(this.valueOf().traceback\n                        .map(s => new ESString(`${s.position.str} : ${s.line}`)));\n                default:\n                    if (this.self.hasOwnProperty(str(key))) {\n                        return wrap(this.self[str(key)]);\n                    }\n                    return new IndexError(Position.unknown, key.valueOf(), this);\n            }\n        };\n        this.cast = () => new ESError(Position.unknown, 'TypeError', `Cannot cast type 'error'`);\n        this.str = () => new ESString(`<Error: ${this.valueOf().str}>`);\n        this.__eq__ = (props, n) => new ESBoolean(n instanceof ESErrorPrimitive &&\n            this.valueOf().constructor === n.valueOf().constructor);\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.clone = () => new ESErrorPrimitive(this.valueOf());\n    }\n}\n","import { primitiveMethods } from '../constants';\nimport { Context } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESFunction, ESNumber, ESObject, ESString, ESType, ESUndefined } from \"./primitiveTypes\";\nfunction dealWithExtends(context, class_, instance, this_, callContext) {\n    if (!(class_ instanceof ESType)) {\n        return new TypeError(Position.unknown, 'Type', typeof class_, class_);\n    }\n    const superFunc = new ESFunction(({ context }, ...args) => {\n        const newContext = new Context();\n        newContext.parent = context;\n        if (class_.__extends__) {\n            let _a = dealWithExtends(newContext, class_.__extends__, instance, this_, callContext);\n            if (_a instanceof ESError) {\n                return _a;\n            }\n        }\n        const initFunc = class_ === null || class_ === void 0 ? void 0 : class_.__init__;\n        if (!initFunc) {\n            return;\n        }\n        initFunc.this_ = this_;\n        initFunc.__closure__ = newContext;\n        const res_ = initFunc.__call__({ context: newContext }, ...args);\n        if (res_ instanceof ESError) {\n            return res_;\n        }\n    }, undefined, 'super', this_);\n    let setRes = context.setOwn('super', superFunc);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    const res = createInstance(class_, { context }, [], false, instance);\n    if (res instanceof ESError) {\n        return res;\n    }\n}\nexport function createInstance(type, { context }, params, runInit = true, on = {}) {\n    var _b;\n    if (type.__isPrimitive__) {\n        if (params.length < 1) {\n            return new ESUndefined();\n        }\n        switch (type.__name__) {\n            case 'Undefined':\n            case 'Type':\n                if (params.length < 1) {\n                    return new ESType();\n                }\n                else {\n                    return new ESString(params[0].__type__.__name__);\n                }\n            case 'String':\n                return new ESString(params[0].str().valueOf());\n            case 'Array':\n                return new ESArray(params);\n            case 'Number':\n                return new ESNumber(params[0].valueOf());\n            case 'Function':\n                return new ESFunction(params[0].valueOf());\n            case 'Boolean':\n                return new ESBoolean(params[0].bool().valueOf());\n            default:\n                return wrap(params[0]);\n        }\n    }\n    const newContext = new Context();\n    newContext.parent = (_b = type.__init__) === null || _b === void 0 ? void 0 : _b.__closure__;\n    const instance = new ESObject();\n    if (type.__extends__) {\n        let res = dealWithExtends(newContext, type.__extends__, on, instance, context);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__value__ = on;\n    for (let method of type.__methods__) {\n        const methodClone = method.clone();\n        methodClone.this_ = instance;\n        on[method.name] = methodClone;\n        if (primitiveMethods.indexOf(method.name) !== -1) {\n            instance[method.name] = methodClone.__call__;\n        }\n    }\n    if (runInit && type.__init__) {\n        type.__init__.this_ = instance;\n        type.__init__.__closure__ = newContext;\n        const res = type.__init__.__call__({ context: newContext }, ...params);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__type__ = type;\n    type.__instances__.push(instance);\n    return instance;\n}\n","import { IndexError, InvalidOperationError } from '../../errors';\nimport { createInstance } from '../instantiator';\nimport { ESBoolean } from './esboolean';\nimport { ESFunction } from './esfunction';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nimport { Position } from \"../../position\";\nimport { str } from \"../../util/util\";\nexport class ESType extends ESPrimitive {\n    constructor(isPrimitive = false, name = '(anon)', __methods__ = [], __extends__, __init__) {\n        super(undefined, types === null || types === void 0 ? void 0 : types.type);\n        this.__instances__ = [];\n        this.clone = () => {\n            return new ESType(this.__isPrimitive__, this.__name__, this.__methods__, this.__extends__, this.__init__);\n        };\n        this.isa = ({}, type) => {\n            return new ESBoolean(type === types.type);\n        };\n        this.cast = ({}, type) => new InvalidOperationError('cast', this);\n        this.includesType = (props, t) => {\n            var _a, _b, _c, _d, _e, _f;\n            if (this.equals(props, types.any).bool().valueOf() ||\n                t.equals(props, types.any).bool().valueOf() ||\n                (((_a = this.__extends__) === null || _a === void 0 ? void 0 : _a.equals(props, t).valueOf()) === true) ||\n                (((_b = this.__extends__) === null || _b === void 0 ? void 0 : _b.equals(props, types.any).valueOf()) === true) ||\n                (((_c = this.__extends__) === null || _c === void 0 ? void 0 : _c.includesType(props, t).valueOf()) === true) ||\n                (((_d = t.__extends__) === null || _d === void 0 ? void 0 : _d.equals(props, this).valueOf()) === true) ||\n                (((_e = t.__extends__) === null || _e === void 0 ? void 0 : _e.equals(props, types.any).valueOf()) === true) ||\n                (((_f = t.__extends__) === null || _f === void 0 ? void 0 : _f.includesType(props, this).valueOf()) === true)) {\n                return new ESBoolean(true);\n            }\n            return this.equals(props, t);\n        };\n        this.equals = ({}, t) => {\n            return new ESBoolean(t.__name__ === this.__name__ &&\n                t.__isPrimitive__ === this.__isPrimitive__ &&\n                Object.is(this.valueOf(), t.valueOf()));\n        };\n        this.__call__ = ({ context }, ...params) => {\n            return createInstance(this, { context }, params || []);\n        };\n        this.str = () => new ESString(`<Type: ${this.__name__}>`);\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.__isPrimitive__ = isPrimitive;\n        this.__name__ = name;\n        this.info.name = name;\n        this.__extends__ = __extends__;\n        this.__methods__ = __methods__;\n        if (__init__) {\n            __init__.name = name;\n            this.__init__ = __init__;\n        }\n        if (!types.type) {\n            this.__type__ = this;\n        }\n    }\n}\n","import { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { str } from '../../util/util';\nimport { wrap } from \"./wrapStrip\";\nexport class ESUndefined extends ESPrimitive {\n    constructor() {\n        super(undefined, types.undefined);\n        this.cast = ({ context }, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber();\n                case types.string:\n                    return new ESString();\n                case types.array:\n                    return new ESArray();\n                case types.undefined:\n                    return new ESUndefined();\n                case types.type:\n                    return new ESType();\n                case types.error:\n                    return new ESErrorPrimitive();\n                case types.object:\n                case types.any:\n                    return new ESObject();\n                case types.function:\n                    return new ESFunction(() => { });\n                case types.boolean:\n                    return new ESBoolean();\n                default:\n                    if (!(type instanceof ESType)) {\n                        return new ESError(Position.unknown, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n                    }\n                    return type.__call__({ context });\n            }\n        };\n        this.str = () => new ESString('<Undefined>');\n        this.__eq__ = (props, n) => new ESBoolean(n instanceof ESUndefined ||\n            typeof n === 'undefined' ||\n            typeof n.valueOf() === 'undefined');\n        this.__bool__ = () => new ESBoolean();\n        this.bool = this.__bool__;\n        this.clone = () => new ESUndefined();\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.info = {\n            name: 'undefined',\n            description: 'Not defined, not a value.',\n            file: 'built-in',\n            isBuiltIn: true\n        };\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { types } from './primitive';\nimport { strip, wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESObject extends ESPrimitive {\n    constructor(val = {}) {\n        super(val, types.object);\n        this.isa = (props, type) => {\n            if (type === types.object) {\n                return new ESBoolean(true);\n            }\n            if (!(type instanceof ESType)) {\n                return new TypeError(Position.unknown, 'TypeError', 'type', str(type.typeName()), str(type));\n            }\n            return this.__type__.includesType(props, type);\n        };\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => {\n            let val = str(this.valueOf());\n            if (val[val.length - 1] === '\\n')\n                val = val.substr(0, val.length - 1);\n            return new ESString(`<ESObject ${val}>`);\n        };\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new ESBoolean();\n            }\n            if (n.keys.length !== this.keys.length) {\n                return new ESBoolean();\n            }\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const thisElement = this.valueOf()[key];\n                const nElement = n.valueOf()[key];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new TypeError(Position.unknown, 'object', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const res = this.__getProperty__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            for (let k of n.keys) {\n                const key = k.valueOf();\n                if (newOb.hasOwnProperty(key)) {\n                    continue;\n                }\n                const res = n.__getProperty__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            return new ESObject(newOb);\n        };\n        this.__subtract__ = (props, n) => {\n            let keysToRemove = [];\n            if (n instanceof ESString) {\n                keysToRemove = [str(n)];\n            }\n            else if (n instanceof ESArray) {\n                keysToRemove = strip(n, props);\n            }\n            else {\n                return new TypeError(Position.unknown, 'array | string', n.typeName().valueOf(), n);\n            }\n            if (!Array.isArray(keysToRemove)) {\n                return new TypeError(Position.unknown, 'array | string', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                if (keysToRemove.indexOf(key) === -1) {\n                    let res = this.__getProperty__(props, k);\n                    if (res instanceof ESError) {\n                        return res;\n                    }\n                    newOb[key] = res;\n                }\n            }\n            return new ESObject(newOb);\n        };\n        this.__getProperty__ = (props, k) => {\n            if (!(k instanceof ESString) && !(k instanceof ESNumber)) {\n                return new TypeError(Position.unknown, 'string | number', k.typeName(), str(k));\n            }\n            const key = k.valueOf();\n            if (this.valueOf().hasOwnProperty(key)) {\n                return this.valueOf()[key];\n            }\n            if (this.self.hasOwnProperty(key)) {\n                const val = this.self[key];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new ESUndefined();\n        };\n        this.__setProperty__ = ({}, key, value) => {\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.unknown, 'string', key.typeName(), str(key));\n            }\n            this.__value__[key.valueOf()] = value;\n        };\n        this.hasProperty = (props, k) => {\n            const key = str(k);\n            if (this.valueOf().hasOwnProperty(str(key))) {\n                return new ESBoolean(true);\n            }\n            return new ESBoolean(this.hasOwnProperty(key));\n        };\n        this.clone = () => {\n            const res = new ESObject();\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            res.__value__ = obj;\n            return res;\n        };\n    }\n    get keys() {\n        return Object.keys(this.valueOf()).map(s => new ESString(s));\n    }\n    set keys(val) { }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESNamespace extends ESPrimitive {\n    constructor(name, value, mutable = false) {\n        super(value, types.object);\n        this.cast = ({}) => {\n            return new ESError(Position.unknown, 'TypeError', `Cannot cast type 'namespace'`);\n        };\n        this.clone = () => {\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            return new ESNamespace(this.name, obj);\n        };\n        this.str = () => {\n            const keys = Object.keys(this.valueOf());\n            return new ESString(`<Namespace ${str(this.name)}${keys.length > 0 ? ': ' : ''}${keys.slice(0, 5)}${keys.length >= 5 ? '...' : ''}>`);\n        };\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.valueOf().hasOwnProperty(key.valueOf())) {\n                const symbol = this.valueOf()[key.valueOf()];\n                if (symbol.isAccessible) {\n                    return symbol.value;\n                }\n            }\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.unknown, 'string', key.typeName());\n            }\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this.self);\n        };\n        this.info.name = str(name);\n        this.mutable = mutable;\n    }\n    get name() {\n        return new ESString(this.info.name);\n    }\n    set name(v) {\n        this.info.name = v.valueOf();\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESString)) {\n            return new TypeError(Position.unknown, 'string', key.typeName().valueOf(), str(key));\n        }\n        let idx = str(key);\n        if (!this.mutable) {\n            return new TypeError(Position.unknown, 'mutable', 'immutable', `${str(this.name)}`);\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        const symbol = this.__value__[idx];\n        if (!symbol) {\n            return new ESError(Position.unknown, 'SymbolError', `Symbol ${idx} is not declared in namespace ${str(this.name)}.`);\n        }\n        if (symbol.isConstant) {\n            return new TypeError(Position.unknown, 'mutable', 'immutable', `${str(this.name)}[${idx}]`);\n        }\n        if (!symbol.isAccessible) {\n            return new TypeError(Position.unknown, 'accessible', 'inaccessible', `${str(this.name)}[${idx}]`);\n        }\n        symbol.value = value;\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { strip, wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESJSBinding extends ESPrimitive {\n    constructor(value, name = '<AnonNative>', functionsTakeProps = false) {\n        super(value, types.object);\n        this.cast = ({}) => {\n            return new ESError(Position.unknown, 'TypeError', `Cannot cast native object`);\n        };\n        this.clone = () => new ESJSBinding(this.__value__);\n        this.str = () => {\n            try {\n                return new ESString(JSON.stringify(this.__value__));\n            }\n            catch (e) {\n                return new ESString(`${this.__value__}`);\n            }\n        };\n        this.__eq__ = ({}, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, k) => {\n            const key = str(k);\n            const val = this.valueOf();\n            const res = val[key];\n            if (res === undefined) {\n                if (this.self.hasOwnProperty(key)) {\n                    const val = this.self[str(key)];\n                    if (typeof val === 'function') {\n                        return new ESFunction(val);\n                    }\n                    return wrap(val);\n                }\n                return new IndexError(Position.unknown, key, this);\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            if (typeof res === 'function') {\n                return new ESFunction(({ context }, ...args) => {\n                    args = args.map(o => strip(o, props));\n                    const res = val[key](...args);\n                    return wrap(res);\n                });\n            }\n            return wrap(res);\n        };\n        this.__call__ = (props, ...args) => {\n            if (typeof this.__value__ !== 'function') {\n                return new TypeError(Position.unknown, 'function', typeof this.__value__, str(this));\n            }\n            let res;\n            try {\n                res = new this.__value__(...args.map(o => strip(o, props)));\n            }\n            catch (_a) {\n                res = this.__value__(...args.map(o => strip(o, props)));\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            return wrap(res);\n        };\n        this.hasProperty = (props, key) => {\n            return new ESBoolean(!(this.__getProperty__(props, key) instanceof ESError));\n        };\n        this.info.name = str(name);\n    }\n}\n","import { types } from './primitives/primitive';\nimport { ESPrimitive } from './primitives/esprimitive';\nimport { ESArray } from './primitives/esarray';\nimport { ESBoolean } from './primitives/esboolean';\nimport { ESErrorPrimitive } from './primitives/eserrorprimitive';\nimport { ESFunction } from './primitives/esfunction';\nimport { ESNumber } from './primitives/esnumber';\nimport { ESObject } from './primitives/esobject';\nimport { ESString } from './primitives/esstring';\nimport { ESType } from './primitives/estype';\nimport { ESUndefined } from './primitives/esundefined';\nimport { ESNamespace } from './primitives/esnamespace';\nimport { ESJSBinding } from \"./primitives/esjsbinding\";\nexport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNumber, ESPrimitive, ESString, ESObject, ESType, ESUndefined, ESNamespace, ESJSBinding, types };\ntypes.type = new ESType(true, 'Type');\ntypes.undefined = new ESType(true, 'Undefined');\ntypes.string = new ESType(true, 'String');\ntypes.array = new ESType(true, 'Array');\ntypes.number = new ESType(true, 'Number');\ntypes.any = new ESType(true, 'Any');\ntypes.function = new ESType(true, 'Function');\ntypes.bool = new ESType(true, 'Boolean');\ntypes.object = new ESType(true, 'Object');\ntypes.error = new ESType(true, 'Error');\ntypes.any.info = {\n    name: 'any',\n    description: 'Matches any other type',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.number.info = {\n    name: 'any',\n    description: 'The ES Number type. Is a a double-precision 64-bit binary format IEEE 754 value, like double in Java and C#',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.string.info = {\n    name: 'string',\n    description: 'The ES String type. Holds an array of characters, and can be defined with any of \\', \" and `. Can be indexed like an array.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.bool.info = {\n    name: 'bool',\n    description: 'The ES Bool type. Exactly two instances exist, true and false.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.function.info = {\n    name: 'function',\n    description: 'The ES Function type. Is a block of code which executes when called and takes in 0+ parameters.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.array.info = {\n    name: 'array',\n    description: 'The ES Array type. Defines a set of items of any type which can be accessed by an index with [].',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.object.info = {\n    name: 'object',\n    description: 'The ES Object type. Similar to JS objects or python dictionaries.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.error.info = {\n    name: 'error',\n    description: 'The ES Error type. Call to throw an error.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.type.info = {\n    name: 'type',\n    description: 'The ES Type type. Call to get the type of a value at a string.',\n    file: 'built-in',\n    isBuiltIn: true\n};\n","import { ESPrimitive } from './esprimitive';\nimport { global } from '../../constants';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { call } from '../functionCaller';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nexport class ESFunction extends ESPrimitive {\n    constructor(func = (() => { }), arguments_ = [], name = '(anon)', this_ = new ESObject(), returnType = types.any, closure = global) {\n        super(func, types.function);\n        this.cast = ({}, type) => {\n            return new ESError(Position.unknown, 'TypeError', `Cannot cast type 'function'`);\n        };\n        this.clone = () => {\n            return new ESFunction(this.__value__, this.arguments_, this.name, this.this_, this.returnType, this.__closure__);\n        };\n        this.valueOf = () => this;\n        this.str = () => new ESString(`<Func: ${this.name}>`);\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESFunction))\n                return new ESBoolean(false);\n            return new ESBoolean(this.__value__ === n.__value__);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__call__ = ({ context }, ...params) => {\n            this.__closure__.path = context.path;\n            return call(this.__closure__, this, params);\n        };\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.arguments_ = arguments_;\n        this.info.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        this.__closure__ = closure;\n        this.info.returnType = str(returnType);\n        this.info.args = arguments_.map(arg => ({\n            name: arg.name,\n            defaultValue: str(arg.defaultValue),\n            type: arg.type.info.name,\n            required: true\n        }));\n    }\n    get name() {\n        var _a;\n        return (_a = this.info.name) !== null && _a !== void 0 ? _a : '(anonymous)';\n    }\n    set name(v) {\n        this.info.name = v;\n    }\n}\n","import { Node } from \"./nodes\";\nimport { generateESFunctionCallContext } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { ESObject, ESPrimitive, ESUndefined, types } from \"./primitiveTypes\";\nfunction callNode(self, context, params, fn) {\n    var _a, _b, _c, _d;\n    const res = fn.interpret(context);\n    if (res.error)\n        return res.error;\n    if (res.funcReturn !== undefined) {\n        res.val = res.funcReturn;\n        res.funcReturn = undefined;\n    }\n    if (self.returnType.includesType({ context }, (_b = (_a = res.val) === null || _a === void 0 ? void 0 : _a.__type__) !== null && _b !== void 0 ? _b : types.any).valueOf() === false) {\n        return new TypeError(Position.unknown, self.returnType.__name__, ((_c = res.val) === null || _c === void 0 ? void 0 : _c.typeName().valueOf()) || 'undefined', (_d = res.val) === null || _d === void 0 ? void 0 : _d.str().valueOf(), '(from function return)');\n    }\n    if (res.val) {\n        return res.val;\n    }\n    else {\n        return new ESUndefined();\n    }\n}\nfunction callNative(self, context, params, fn) {\n    for (let i = params.length; i < fn.length; i++)\n        params.push(new ESUndefined());\n    const res = fn({\n        context\n    }, ...params);\n    if (res instanceof ESError || res instanceof ESPrimitive) {\n        return res;\n    }\n    return new ESUndefined();\n}\nexport function call(context, self, params) {\n    var _a;\n    let callContext = context;\n    context = self.__closure__;\n    context.path = callContext.path;\n    const fn = self.__value__;\n    const newContext = generateESFunctionCallContext(params, self, context);\n    if (newContext instanceof ESError) {\n        return newContext;\n    }\n    let this_ = (_a = self.this_) !== null && _a !== void 0 ? _a : new ESObject();\n    if (!(this_ instanceof ESObject))\n        return new TypeError(Position.unknown, 'object', typeof this_, this_, '\\'this\\' must be an object');\n    let setRes = newContext.setOwn('this', this_);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    if (fn instanceof Node) {\n        return callNode(self, newContext, params, fn);\n    }\n    else if (typeof fn === 'function') {\n        return callNative(self, newContext, params, fn);\n    }\n    else {\n        return new TypeError(Position.unknown, 'function', typeof fn);\n    }\n}\n","import { initialise } from \"../init\";\nimport { ESError, TypeError, ReferenceError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESPrimitive, ESType, ESUndefined, types } from \"./primitiveTypes\";\nimport { str } from \"../util/util\";\nimport { ESSymbol } from './symbol';\nimport chalk from \"../util/colours\";\nexport class Context {\n    constructor() {\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        this.deleted = false;\n        this.path_ = '';\n    }\n    get path() {\n        if (this.path_ || !this.parent) {\n            return this.path_;\n        }\n        return this.parent.path;\n    }\n    set path(val) {\n        this.path_ = val;\n    }\n    get parent() {\n        return this.parent_;\n    }\n    set parent(val) {\n        if (val == this) {\n            console.error(chalk.red(`Setting context parent to self`));\n            return;\n        }\n        this.parent_ = val;\n    }\n    has(identifier) {\n        return this.get(identifier) !== undefined;\n    }\n    hasOwn(identifier) {\n        return this.symbolTable[identifier] instanceof ESSymbol;\n    }\n    get(identifier) {\n        let symbol = this.getSymbol(identifier);\n        if (symbol instanceof ESError || symbol == undefined) {\n            return symbol;\n        }\n        return symbol.value;\n    }\n    getRawSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key].value;\n        return symbols;\n    }\n    getSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key];\n        return symbols;\n    }\n    getSymbol(identifier) {\n        let symbol = this.symbolTable[identifier];\n        if (symbol !== undefined && !symbol.isAccessible)\n            return new TypeError(Position.unknown, 'assessable', 'inaccessible', symbol.identifier);\n        if (symbol === undefined && this.parent) {\n            let res = this.parent.getSymbol(identifier);\n            if (res instanceof ESError)\n                return res;\n            if (!res)\n                return new ReferenceError(Position.unknown, identifier);\n            symbol = res;\n        }\n        return symbol;\n    }\n    set(identifier, value, options = {}) {\n        let context = this;\n        if (options.global) {\n            context = this.root;\n        }\n        else {\n            while (!context.hasOwn(identifier) && context.parent !== undefined)\n                context = context.parent;\n            if (!context.hasOwn(identifier))\n                context = this;\n        }\n        return context.setOwn(identifier, value, options);\n    }\n    setOwn(identifier, value, options = {}) {\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        if (options.global && !this.initialisedAsGlobal)\n            options.global = false;\n        if (!options.forceThroughConst) {\n            let symbol = this.symbolTable[identifier];\n            if (symbol === null || symbol === void 0 ? void 0 : symbol.isConstant)\n                return new TypeError(Position.unknown, 'dynamic', 'constant', identifier);\n        }\n        this.symbolTable[identifier] = new ESSymbol(value, identifier, options);\n    }\n    remove(identifier) {\n        delete this.symbolTable[identifier];\n    }\n    clear() {\n        for (let symbol in this.symbolTable) {\n            this.remove(symbol);\n        }\n        this.parent = undefined;\n        this.deleted = true;\n    }\n    get root() {\n        let parent = this;\n        while (parent.parent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    get keys() {\n        return Object.keys(this.symbolTable);\n    }\n    resetAsGlobal() {\n        var _a, _b;\n        if (!this.initialisedAsGlobal)\n            return;\n        const printFunc = this.root.get('print');\n        const inputFunc = this.root.get('input');\n        if (!(printFunc instanceof ESPrimitive) || !(inputFunc instanceof ESPrimitive)) {\n            console.error('Error with print and input functions.');\n            return;\n        }\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        initialise(this, ((_a = printFunc.valueOf()) === null || _a === void 0 ? void 0 : _a.func) || console.log, ((_b = inputFunc.valueOf()) === null || _b === void 0 ? void 0 : _b.func) || (() => { }));\n    }\n    clone() {\n        const newContext = new Context();\n        newContext.parent = this.parent;\n        newContext.deleted = this.deleted;\n        newContext.initialisedAsGlobal = this.initialisedAsGlobal;\n        newContext.symbolTable = Object.assign(Object.assign({}, newContext.symbolTable), this.symbolTable);\n        return newContext;\n    }\n    deepClone() {\n        var _a;\n        let clone = this.clone();\n        clone.parent = (_a = clone.parent) === null || _a === void 0 ? void 0 : _a.deepClone();\n        return clone;\n    }\n    log() {\n        console.log('---- CONTEXT ----');\n        for (let key in this.symbolTable) {\n            const symbol = this.symbolTable[key];\n            let out = key;\n            if (symbol.isConstant)\n                out += ' (CONST)';\n            if (!symbol.isAccessible)\n                out += ' (INACCESSIBLE)';\n            out += ': ';\n            out += str(this.symbolTable[key].value);\n            console.log(out);\n        }\n        console.log('-----------------');\n    }\n}\nexport function generateESFunctionCallContext(params, self, parent) {\n    const newContext = new Context();\n    newContext.parent = parent;\n    let max = Math.max(params.length, self.arguments_.length);\n    for (let i = 0; i < max; i++) {\n        let value = new ESUndefined();\n        let type = types.any;\n        if (!self.arguments_[i]) {\n            continue;\n        }\n        const arg = self.arguments_[i];\n        if (!(arg.type instanceof ESType)) {\n            return new TypeError(Position.unknown, 'Type', typeof arg.type, arg.type);\n        }\n        if (params[i] instanceof ESPrimitive) {\n            type = params[i].__type__;\n            value = params[i];\n        }\n        const typeIncludes = arg.type.includesType({ context: parent }, type).bool().valueOf();\n        if (!typeIncludes) {\n            return new TypeError(Position.unknown, arg.type.__name__, type.__name__, str(value));\n        }\n        newContext.setOwn(arg.name, value, {\n            forceThroughConst: true\n        });\n    }\n    let setRes = newContext.setOwn('args', new ESArray(params), {\n        forceThroughConst: true\n    });\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    return newContext;\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { ESFunction } from \"./esfunction\";\nimport { wrap } from \"./wrapStrip\";\nexport class ESNumber extends ESPrimitive {\n    constructor(value = 0) {\n        super(value, types.number);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return this;\n                case types.string:\n                    return this.str();\n                case types.array:\n                    return new ESArray(new Array(this.valueOf()));\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(this.valueOf().toString());\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() + n.valueOf());\n        };\n        this.__subtract__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() - n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() * n.valueOf());\n        };\n        this.__divide__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() / n.valueOf());\n        };\n        this.__pow__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(Math.pow(this.valueOf(), n.valueOf()));\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new ESBoolean(false);\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() > n.valueOf());\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() < n.valueOf());\n        };\n        this.__bool__ = () => {\n            return new ESBoolean(this.valueOf() > 0);\n        };\n        this.bool = this.__bool__;\n        this.clone = () => new ESNumber(this.valueOf());\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { ESFunction } from \"./esfunction\";\nimport { wrap } from \"./wrapStrip\";\nexport class ESBoolean extends ESPrimitive {\n    constructor(val = false) {\n        super(Boolean(val), types.bool);\n        this.__getProperty__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESBoolean)) {\n                return new TypeError(Position.unknown, 'Boolean', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__bool__ = () => this;\n        this.__and__ = (props, n) => new ESBoolean(this.valueOf() && n.bool().valueOf());\n        this.__or__ = (props, n) => {\n            return new ESBoolean(this.valueOf() || n.bool().valueOf());\n        };\n        this.str = () => new ESString(this.valueOf() ? 'true' : 'false');\n        this.clone = () => new ESBoolean(this.valueOf());\n        this.bool = () => this;\n        this.info = {\n            name: str(val),\n            description: `Boolean global constant which evaluates to ${str(val)}, the opposite of ${str(!val)}`,\n            file: 'built-in',\n            isBuiltIn: true,\n            helpLink: 'https://en.wikipedia.org/wiki/Boolean_expression'\n        };\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { types } from './primitive';\nimport { wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESArray extends ESPrimitive {\n    constructor(values = []) {\n        super(values, types.array);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.len);\n                case types.boolean:\n                    return this.bool();\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(str(this.valueOf()));\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESArray)) {\n                return new ESBoolean();\n            }\n            if (n.len !== this.len) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.len; i++) {\n                const thisElement = this.valueOf()[i];\n                const nElement = n.valueOf()[i];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESArray)) {\n                return new TypeError(Position.unknown, 'array', n.typeName().valueOf(), n);\n            }\n            return new ESArray([...this.valueOf(), ...n.valueOf()]);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESUndefined();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return this.valueOf()[idx];\n            }\n            return new ESUndefined();\n        };\n        this.add = (props, val, idx = new ESNumber(this.len - 1)) => {\n            if (!(val instanceof ESPrimitive))\n                throw 'adding non-primitive to array: ' + str(val);\n            this.len++;\n            this.__value__.splice(idx.valueOf(), 0, val);\n            return new ESNumber(this.len);\n        };\n        this.contains = (props, val) => {\n            for (let element of this.__value__) {\n                if (val.__eq__(props, element)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        this.clone = () => {\n            const newArr = [];\n            for (let element of this.valueOf()) {\n                newArr.push(element);\n            }\n            return new ESArray(newArr);\n        };\n        this.len = values.length;\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESNumber)) {\n            return;\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        let idx = key.valueOf();\n        while (idx < 0) {\n            idx = this.valueOf().length + idx;\n        }\n        this.__value__[idx] = value;\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESString extends ESPrimitive {\n    constructor(value = '') {\n        super(value, types.string);\n        this.str = () => this;\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    const num = parseFloat(this.valueOf());\n                    if (isNaN(num))\n                        return new ESError(Position.unknown, 'TypeError', `This string is not a valid number`);\n                    return new ESNumber(num);\n                case types.string:\n                    return this;\n                case types.array:\n                    return new ESArray(this.valueOf().split('').map(s => new ESString(s)));\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.unknown, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESString(this.valueOf() + n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESString(this.valueOf().repeat(n.valueOf()));\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new ESBoolean(false);\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.unknown, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf().length > n.valueOf().length);\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.unknown, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf().length < n.valueOf().length);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.len = () => {\n            return new ESNumber(this.valueOf().length);\n        };\n        this.clone = () => new ESString(this.valueOf());\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESString();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return new ESString(this.valueOf()[idx]);\n            }\n            return new ESString();\n        };\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESNumber))\n            return;\n        if (!(value instanceof ESString))\n            value = new ESString(str(value));\n        let idx = key.valueOf();\n        while (idx < 0)\n            idx = this.valueOf().length + idx;\n        const strToInsert = value.str().valueOf();\n        let firstPart = this.__value__.substr(0, idx);\n        let lastPart = this.__value__.substr(idx + strToInsert.length);\n        this.__value__ = firstPart + strToInsert + lastPart;\n    }\n}\n","import { ESString } from './primitives/esstring';\nexport class ESSymbol {\n    constructor(value, identifier, options = {}) {\n        var _a, _b;\n        this.clone = () => {\n            return new ESSymbol(this.value.clone(), this.identifier, {\n                isConstant: this.isConstant,\n                isAccessible: this.isAccessible\n            });\n        };\n        this.str = () => new ESString(`<Symbol: ${this.identifier}>`);\n        this.value = value;\n        this.identifier = identifier;\n        this.isConstant = (_a = options.isConstant) !== null && _a !== void 0 ? _a : false;\n        this.isAccessible = (_b = options.isAccessible) !== null && _b !== void 0 ? _b : true;\n    }\n}\n","import { ESError } from '../../errors';\nimport { ESSymbol } from '../symbol';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESPrimitive } from './esprimitive';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESUndefined } from './esundefined';\nimport { ESJSBinding } from \"./esjsbinding\";\nexport function wrap(thing, functionsTakeProps = false) {\n    if (thing instanceof ESPrimitive) {\n        return thing;\n    }\n    else if (thing === undefined || thing === null) {\n        return new ESUndefined();\n    }\n    else if (thing instanceof ESError) {\n        return new ESErrorPrimitive(thing);\n    }\n    else if (thing instanceof ESSymbol) {\n        return thing.value;\n    }\n    else if (typeof thing === 'number') {\n        return new ESNumber(thing);\n    }\n    else if (typeof thing === 'string') {\n        return new ESString(thing);\n    }\n    else if (typeof thing === 'boolean') {\n        return new ESBoolean(thing);\n    }\n    else if (typeof thing === 'bigint') {\n        return new ESNumber(Number(thing));\n    }\n    else if (typeof thing === 'symbol') {\n        return new ESString(String(thing));\n    }\n    return new ESJSBinding(thing, undefined, functionsTakeProps);\n}\nexport function strip(thing, props) {\n    if (thing == undefined) {\n        return undefined;\n    }\n    else if (!(thing instanceof ESPrimitive)) {\n        return thing;\n    }\n    else if (thing instanceof ESArray) {\n        return thing.valueOf().map(m => strip(m, props), props);\n    }\n    else if (thing instanceof ESObject) {\n        let val = {};\n        for (let key in thing.valueOf()) {\n            val[key] = strip(thing.valueOf()[key], props);\n        }\n        return val;\n    }\n    else if (thing instanceof ESUndefined) {\n        return undefined;\n    }\n    else if (thing instanceof ESFunction) {\n        return (...args) => {\n            const res = thing.__call__(props, ...args.map(a => wrap(a)));\n            if (res instanceof ESError) {\n                return res;\n            }\n            return strip(res, props);\n        };\n    }\n    else if (thing instanceof ESType) {\n        return thing;\n    }\n    return thing.valueOf();\n}\n","import { IS_NODE_INSTANCE } from \"../constants\";\nconst codes = {\n    red: 31,\n    yellow: 33,\n    green: 32,\n    cyan: 36,\n    blue: 34,\n    grey: 2\n};\nconst c = {};\nfor (let code of Object.keys(codes)) {\n    c[code] = (s) => {\n        s || (s = '');\n        if (IS_NODE_INSTANCE) {\n            return `\\x1b[${codes[code]}m` + s + '\\x1b[0m';\n        }\n        return `<span style=\"color: ${code}\">${s}</span>`;\n    };\n}\nexport default c;\n","import { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from '../runtime/primitives/wrapStrip';\nimport { ESArray, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESUndefined } from '../runtime/primitiveTypes';\nimport { indent, sleep, str } from '../util/util';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport chalk from \"../util/colours\";\nexport const builtInFunctions = {\n    'range': [({ context }, minP, maxP, stepP) => {\n            if (!(minP instanceof ESNumber)) {\n                return new ESArray();\n            }\n            const min = minP.valueOf();\n            if (maxP instanceof ESUndefined) {\n                try {\n                    return new ESArray([...Array(min).keys()].map(n => new ESNumber(n)));\n                }\n                catch (e) {\n                    return new ESError(Position.unknown, 'RangeError', `Cannot make range of length '${str(min)}'`);\n                }\n            }\n            let step = 1;\n            if (!(maxP instanceof ESNumber)) {\n                return new TypeError(Position.unknown, 'number', maxP.typeName(), str(maxP));\n            }\n            let max = maxP.valueOf();\n            if (!(stepP instanceof ESUndefined)) {\n                if (!(stepP instanceof ESNumber)) {\n                    return new TypeError(Position.unknown, 'number', stepP.typeName(), str(stepP));\n                }\n                step = stepP.valueOf();\n            }\n            let arr = [];\n            let i = min;\n            while (i < max) {\n                arr.push(new ESNumber(i));\n                i += step;\n            }\n            return new ESArray(arr);\n        }, {\n            args: [{\n                    name: 'N',\n                    type: 'Number',\n                }],\n            description: 'Generates an array of integers given N. Starts at 0 and goes to N-1. Can be used like for i in range(10) ..., similarly to python.',\n            returns: 'array of numbers from 0 to N-1',\n            returnType: 'number[] | RangeError'\n        }],\n    'log': [({ context }, ...msgs) => {\n            console.log(...msgs.map(m => str(m)));\n        }, {\n            args: [{\n                    name: '...values',\n                    type: 'any[]'\n                }],\n            description: 'Uses console.log to log all values',\n            returnType: 'void'\n        }],\n    'parseNum': [({ context }, num) => {\n            try {\n                const val = parseFloat(str(num));\n                if (isNaN(val)) {\n                    return new ESError(Position.unknown, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n                }\n                return new ESNumber(val);\n            }\n            catch (e) {\n                return new ESError(Position.unknown, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n            }\n        }, {\n            args: [{\n                    name: 'num',\n                    type: 'any'\n                }],\n            description: `Converts a string of digits into a number. Works with decimals and integers. Calls .str() on value before using native JS 'parseFloat' function. Returns TypeError if the string can't be converted into a number.`,\n            returnType: 'number | TypeError'\n        }],\n    'help': [({ context }, ...things) => {\n            if (!things.length) {\n                return new ESString('Visit https://entropygames.io/entropy-script for help with Entropy Script!\\n' +\n                    'Try \\'help(<anything>)\\' for help about a particular object.');\n            }\n            let out = '';\n            for (const thing of things) {\n                if (!(thing instanceof ESPrimitive)) {\n                    console.log('Invalid arg not primitive: ' + str(thing));\n                    return;\n                }\n                const info = thing.info;\n                out += `${chalk.yellow(`Help on '${info.name || '(anonymous)'}'`)}:\n    \n    ${chalk.yellow('Value')}: ${indent(indent(str(thing)))}\n    ${chalk.yellow('Type')}: '${str(thing.typeName())}'\n    ${chalk.yellow('Location')}: ${info.file || chalk.yellow('(unknown)')}\n    \n        ${chalk.green(info.description) || `No description.`}\n        \n    ${info.helpLink ? chalk.cyan(info.helpLink + '\\n\\n') : ''}\n`;\n                if (info.args && thing instanceof ESFunction) {\n                    const total = info.args.length;\n                    const required = info.args.filter(a => a.required).length;\n                    if (total == required)\n                        out += chalk.yellow(`    Arguments (${total}): \\n`);\n                    else\n                        out += chalk.yellow(`    Arguments (${required}-${total}): \\n`);\n                    for (const [idx, arg] of info.args.entries()) {\n                        if (typeof arg !== 'object')\n                            out += `        ${idx + 1}. INVALID ARG INFO`;\n                        else\n                            out += `        ${idx + 1}. ${arg.name}${arg.required === false ? chalk.yellow(' (optional) ') : ' '}{${arg.type}} ${arg.description || ''}\\n`;\n                    }\n                    out += `\\n\\n`;\n                    if (info.returns)\n                        out += `    Returns: ${info.returns}\\n\\n`;\n                    if (info.returnType)\n                        out += `    Return Type: ${info.returnType}\\n\\n`;\n                }\n                if (info.contents && (thing instanceof ESObject || thing instanceof ESNamespace)) {\n                    out += '    Properties: \\n      ';\n                    for (let contents of info.contents)\n                        out += contents.name + '\\n      ';\n                }\n            }\n            console.log(out);\n            if (things.length > 1) {\n                return new ESArray(things);\n            }\n            if (things) {\n                return things[0];\n            }\n        }, {\n            args: [{\n                    name: 'value',\n                    type: 'any'\n                }],\n            description: 'logs info on value',\n            returns: 'value passed in'\n        }],\n    'delete': [({ context }, name) => {\n            const id = str(name);\n            if (!context.has(id)) {\n                return new ESError(Position.unknown, 'DeleteError', `Identifier '${id}' not found in the current context`);\n            }\n            context.set(id, new ESUndefined());\n        }, {\n            name: 'delete',\n            args: [{ name: 'identifier', type: 'string' }],\n            description: 'Deletes a variable from the current context'\n        }],\n    '__path': [({ context }) => {\n            return new ESString(context.path);\n        }, {\n            name: '__path',\n            args: [],\n            description: 'Returns the current path'\n        }],\n    '__symbols': [({ context }) => {\n            return wrap(context.keys);\n        }, {\n            name: '__allSymbols',\n            args: [],\n            description: 'Returns an array of the names of all symbols in the current context'\n        }],\n    'using': [({ context }, module, global_) => {\n            if (!(module instanceof ESNamespace) && !(module instanceof ESJSBinding)) {\n                return new TypeError(Position.unknown, 'Namespace', str(module.typeName()));\n            }\n            let global = true;\n            if (global_) {\n                if (!global_.bool().valueOf()) {\n                    global = false;\n                }\n            }\n            const values = module.valueOf();\n            if (global) {\n                context = context.root;\n            }\n            else if (context.parent) {\n                context = context.parent;\n            }\n            for (const key of Object.keys(values)) {\n                context.setOwn(key, values[key].value, {\n                    isConstant: values[key].isConstant,\n                    isAccessible: values[key].isAccessible,\n                    forceThroughConst: true\n                });\n            }\n        }, {\n            name: 'using',\n            args: [\n                { name: 'module', type: 'namespace' },\n                { name: 'global', type: 'bool' }\n            ],\n            description: 'Adds contents of a namespace to the global context'\n        }],\n    'sleep': [({ context }, time, cb) => {\n            if (!(time instanceof ESNumber)) {\n                return new TypeError(Position.unknown, 'number', str(time.typeName()), str(time));\n            }\n            sleep(time.valueOf())\n                .then(() => {\n                const res = cb.__call__({ context });\n                if (res instanceof ESError) {\n                    console.log(res.str);\n                }\n            });\n        }, {\n            name: 'sleep',\n            args: [{ name: 'n', type: 'number' }, { name: 'callback', type: 'function' }],\n            description: 'Waits n milliseconds and then executes the callback'\n        }],\n    'throw': [({ context }, name, details) => {\n            return new ESError(Position.unknown, str(name), str(details));\n        }, {\n            name: 'throw',\n            args: [{ name: 'name', type: 'string' }, { name: 'details', type: 'string' }]\n        }],\n};\n","import { Position } from '../../position';\nimport { strip } from '../../runtime/primitives/wrapStrip';\nimport { ESObject, ESString } from '../../runtime/primitiveTypes';\nimport { str } from '../../util/util';\nimport { TypeError } from '../../errors';\nconst module = {\n    parse: (props, json) => {\n        return new ESObject(JSON.parse(str(json)));\n    },\n    stringify: (props, json) => {\n        if (!(json instanceof ESObject)) {\n            return new TypeError(Position.unknown, 'object', str(json.typeName()), str(json));\n        }\n        return new ESString(JSON.stringify(strip(json, props)));\n    }\n};\nexport default module;\n","import { IS_NODE_INSTANCE, libs } from '../constants';\nimport { ESError } from '../errors';\nimport { wrap } from '../runtime/primitives/wrapStrip';\nimport { ESSymbol } from '../runtime/symbol';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport ascii from './built-in-modules/ascii';\nimport json from './built-in-modules/json';\nimport dom from './built-in-modules/dom';\nimport Promise from './built-in-modules/promise';\nconst modules = {\n    ascii, json,\n};\nconst processedModules = {};\nexport function initModules() {\n    processedModules['math'] = new ESJSBinding(Math);\n    processedModules['Promise'] = new ESJSBinding(Promise);\n    if (!IS_NODE_INSTANCE) {\n        const domRes = dom(libs);\n        if (!(domRes instanceof ESError)) {\n            modules['dom'] = domRes;\n        }\n        else {\n            return domRes;\n        }\n    }\n}\nexport function processRawModule(module, name) {\n    const moduleDict = {};\n    const moduleRaw = module.valueOf();\n    for (const key of Object.keys(moduleRaw)) {\n        moduleDict[key] = new ESSymbol(moduleRaw[key], key);\n    }\n    return new ESJSBinding(moduleDict, name);\n}\nexport function moduleExist(name) {\n    return name in modules || name in processedModules;\n}\nexport function addModule(name, body) {\n    modules[name] = {};\n    processedModules[name] = body;\n}\nexport function addModuleFromObj(name, raw) {\n    addModule(name, processRawModule(wrap(raw), name));\n}\nexport function getModule(name) {\n    if (name in processedModules) {\n        return processedModules[name];\n    }\n    if (name in modules) {\n        const res = new ESJSBinding(modules[name]);\n        const processed = processRawModule(res, name);\n        processedModules[name] = processed;\n        return processed;\n    }\n}\n","import { TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESNumber, ESString } from '../../runtime/primitiveTypes';\nimport { str } from '../../util/util';\nconst module = {\n    asciiToChar: (props, number) => {\n        if (!(number instanceof ESNumber)) {\n            return new TypeError(Position.unknown, 'number', str(number.typeName()), str(number));\n        }\n        return new ESString(String.fromCharCode(number.valueOf()));\n    },\n    charToAscii: (props, char) => {\n        if (!(char instanceof ESString)) {\n            return new TypeError(Position.unknown, 'string', str(char.typeName()), str(char));\n        }\n        return new ESNumber(str(char).charCodeAt(0));\n    },\n};\nexport default module;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { builtInFunctions } from \"./built-in/builtInFunctions\";\nimport { getModule, initModules, moduleExist } from './built-in/builtInModules';\nimport { Context } from \"./runtime/context\";\nimport { ESError, ImportError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { run } from \"./index\";\nimport { IS_NODE_INSTANCE } from \"./constants\";\nimport { str } from \"./util/util\";\nimport { ESFunction, ESNamespace, ESString } from './runtime/primitiveTypes';\nimport loadGlobalConstants from \"./built-in/globalConstants\";\nexport function initialise(globalContext, printFunc, inputFunc) {\n    builtInFunctions['import'] = [({ context }, rawUrl, callback) => {\n            if (IS_NODE_INSTANCE) {\n                return new ESError(Position.unknown, 'ImportError', 'Is running in node instance but trying to run browser import function');\n            }\n            const url = rawUrl.str();\n            if (moduleExist(str(url))) {\n                return getModule(str(url));\n            }\n            try {\n                fetch(str(url))\n                    .then(c => c.text())\n                    .then((code) => __awaiter(this, void 0, void 0, function* () {\n                    const env = new Context();\n                    env.parent = globalContext;\n                    const res = yield run(code);\n                    if (res.error) {\n                        printFunc(new ImportError(Position.unknown, str(url), res.error.str).str);\n                        return;\n                    }\n                    if (!(callback instanceof ESFunction))\n                        return;\n                    callback.__call__({ context }, new ESNamespace(url, env.getSymbolTableAsDict()));\n                }));\n            }\n            catch (E) {\n                return new ESError(Position.unknown, 'ImportError', E.toString());\n            }\n        }, {}];\n    builtInFunctions['print'] = [({ context }, ...args) => {\n            let out = ``;\n            for (let arg of args)\n                out += str(arg);\n            printFunc(out);\n        }, {}];\n    builtInFunctions['input'] = [({ context }, msg, cbRaw) => {\n            inputFunc(msg.valueOf(), (msg) => {\n                let cb = cbRaw === null || cbRaw === void 0 ? void 0 : cbRaw.valueOf();\n                if (cb instanceof ESFunction) {\n                    let res = cb.__call__({ context }, new ESString(msg));\n                    if (res instanceof ESError) {\n                        console.log(res.str);\n                    }\n                }\n                else if (typeof cb === 'function')\n                    cb(msg);\n                return new ESString('\\'input()\\' does not return anything. Pass in a function as the second argument, which will take the user input as an argument.');\n            });\n        }, {}];\n    for (let builtIn in builtInFunctions) {\n        const fn = new ESFunction(builtInFunctions[builtIn][0], [], builtIn, undefined, undefined, globalContext);\n        fn.info = builtInFunctions[builtIn][1];\n        fn.info.name = builtIn;\n        fn.info.isBuiltIn = true;\n        fn.info.file = 'built-in';\n        globalContext.set(builtIn, fn, {\n            global: true,\n            isConstant: true\n        });\n    }\n    loadGlobalConstants(globalContext);\n    const initModRes = initModules();\n    if (initModRes) {\n        return initModRes;\n    }\n    globalContext.initialisedAsGlobal = true;\n}\n","import { ESBoolean, ESUndefined, types } from '../runtime/primitiveTypes';\nexport default function load(context) {\n    const globalConstants = {\n        'false': new ESBoolean(false),\n        'true': new ESBoolean(true),\n        'nil': new ESUndefined(),\n        'any': types.any,\n        'number': types.number,\n        'string': types.string,\n        'bool': types.bool,\n        'function': types.function,\n        'array': types.array,\n        'object': types.object,\n        'type': types.type,\n        'error': types.error,\n        'undefined': types.undefined\n    };\n    for (let constant in globalConstants) {\n        const value = globalConstants[constant];\n        context.set(constant, value, {\n            global: true,\n            isConstant: true\n        });\n    }\n}\n","export default class {\n    constructor(cb) {\n        this.thens = [];\n        this.resolved = false;\n        cb((value) => {\n            if (this.resolved) {\n                return;\n            }\n            this.resolved = true;\n            for (let then of this.thens) {\n                then(value);\n            }\n        }, (error) => {\n            if (this.resolved) {\n                return;\n            }\n            this.resolved = true;\n            if (this.catch_) {\n                this.catch_(error);\n            }\n        });\n    }\n    then(cb) {\n        if (this.resolved) {\n            return;\n        }\n        this.thens.push(cb);\n        return this;\n    }\n    catch(cb) {\n        if (this.resolved) {\n            return;\n        }\n        this.catch_ = cb;\n        return this;\n    }\n}\n;\n","import { IS_NODE_INSTANCE, permissions } from '../../constants';\nimport { ReferenceError, InvalidRuntimeError, PermissionRequiredError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESJSBinding } from \"../../runtime/primitives/esjsbinding\";\nconst module = () => {\n    if (!permissions.accessDOM) {\n        return new PermissionRequiredError('No access to DOM');\n    }\n    if (IS_NODE_INSTANCE) {\n        return new InvalidRuntimeError();\n    }\n    const w = window;\n    if (typeof w === 'undefined' || !('$' in w)) {\n        return new ReferenceError(Position.unknown, '$ must be property of window to use dom library');\n    }\n    const $ = new ESJSBinding(w['$'], 'jquery');\n    return {\n        $,\n        window: new ESJSBinding(w, 'window'),\n        document: new ESJSBinding(w['document'], 'document'),\n    };\n};\nexport default module;\n","import { ESPrimitive, ESType } from \"./primitiveTypes\";\nimport { TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nexport function interpretArgument(arg, context) {\n    var _a;\n    let type;\n    const typeRes = arg.type.interpret(context);\n    if (typeRes.error)\n        return typeRes.error;\n    if (typeRes.val instanceof ESType)\n        type = typeRes.val;\n    else\n        return new TypeError(Position.unknown, 'Type', typeof typeRes.val, typeRes.val, 'Argument can\\'t be undefined');\n    let defaultValue;\n    if (arg.defaultValue) {\n        let defaultValRes = (_a = arg.defaultValue) === null || _a === void 0 ? void 0 : _a.interpret(context);\n        if (defaultValRes.error)\n            return defaultValRes.error;\n        if (defaultValRes.val instanceof ESPrimitive)\n            defaultValue = defaultValRes.val;\n    }\n    return {\n        name: arg.name,\n        type, defaultValue\n    };\n}\n","import { ESError, InvalidSyntaxError, ReferenceError, TypeError } from \"../errors\";\nimport { Context } from './context';\nimport { Position } from \"../position\";\nimport { catchBlockErrorSymbolName, now, tokenTypeString, tt } from \"../constants\";\nimport { interpretArgument } from \"./argument\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESType, ESUndefined, types } from \"./primitiveTypes\";\nimport { str } from '../util/util';\nexport class interpretResult {\n    constructor() {\n        this.val = new ESUndefined();\n        this.shouldBreak = false;\n        this.shouldContinue = false;\n    }\n}\nexport class compileResult {\n    constructor(val) {\n        this.val = '';\n        if (typeof val === 'string') {\n            this.val = val;\n        }\n        else if (val) {\n            this.error = val;\n        }\n    }\n}\nexport class Node {\n    constructor(pos, isTerminal = false) {\n        this.pos = pos;\n        this.isTerminal = isTerminal;\n    }\n    interpret(context) {\n        var _a;\n        const start = now();\n        const res = new interpretResult;\n        const val = this.interpret_(context);\n        if (val instanceof ESError) {\n            res.error = val;\n        }\n        else if (val instanceof interpretResult) {\n            res.val = val.val;\n            res.error = val.error;\n            res.funcReturn = val.funcReturn;\n            res.shouldBreak = val.shouldBreak;\n            res.shouldContinue = val.shouldContinue;\n        }\n        else {\n            res.val = val;\n        }\n        if (res.error && res.error.pos.isUnknown) {\n            res.error.pos = this.pos;\n        }\n        if (!(res.val instanceof ESPrimitive)) {\n            res.error = new TypeError(Position.unknown, 'Primitive', 'Native JS value', str(res.val));\n            res.val = new ESUndefined();\n        }\n        ``;\n        (_a = res.val.info).file || (_a.file = this.pos.file);\n        Node.interprets++;\n        let time = now() - start;\n        Node.totalTime += time;\n        if (time > Node.maxTime)\n            Node.maxTime = time;\n        return res;\n    }\n}\nNode.interprets = 0;\nNode.totalTime = 0;\nNode.maxTime = 0;\nexport class N_binOp extends Node {\n    constructor(pos, left, opTok, right) {\n        super(pos);\n        this.left = left;\n        this.opTok = opTok;\n        this.right = right;\n    }\n    interpret_(context) {\n        const left = this.left.interpret(context);\n        if (left.error)\n            return left.error;\n        const right = this.right.interpret(context);\n        if (right.error)\n            return right.error;\n        const l = left.val;\n        const r = right.val;\n        if (typeof l === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', l, 'N_binOp.interpret_');\n        }\n        if (typeof r === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', r, 'N_binOp.interpret_');\n        }\n        switch (this.opTok.type) {\n            case tt.LTE: {\n                const lt = l.__lt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (lt instanceof ESError)\n                    return lt;\n                if (eq instanceof ESError)\n                    return eq;\n                return lt.__or__({ context }, eq);\n            }\n            case tt.GTE: {\n                const gt = l.__gt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (gt instanceof ESError)\n                    return gt;\n                if (eq instanceof ESError)\n                    return eq;\n                return gt.__or__({ context }, eq);\n            }\n            case tt.NOTEQUALS: {\n                const res = l.__eq__({ context }, r);\n                if (res instanceof ESError)\n                    return res;\n                return new ESBoolean(!res.bool().valueOf());\n            }\n            case tt.ADD:\n                return l.__add__({ context }, r);\n            case tt.SUB:\n                return l.__subtract__({ context }, r);\n            case tt.MUL:\n                return l.__multiply__({ context }, r);\n            case tt.DIV:\n                return l.__divide__({ context }, r);\n            case tt.POW:\n                return l.__pow__({ context }, r);\n            case tt.EQUALS:\n                return l.__eq__({ context }, r);\n            case tt.LT:\n                return l.__lt__({ context }, r);\n            case tt.GT:\n                return l.__gt__({ context }, r);\n            case tt.AND:\n                return l.__and__({ context }, r);\n            case tt.OR:\n                return l.__or__({ context }, r);\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid binary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(config) {\n        const left = this.left.compileJS(config);\n        if (left.error)\n            return left;\n        const right = this.right.compileJS(config);\n        if (right.error)\n            return right;\n        const res = new compileResult;\n        res.val = `${left.val}${tokenTypeString[this.opTok.type]}${right.val}`;\n        return res;\n    }\n}\nexport class N_unaryOp extends Node {\n    constructor(pos, a, opTok) {\n        super(pos);\n        this.a = a;\n        this.opTok = opTok;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const res = this.a.interpret(context);\n        if (res.error)\n            return res.error;\n        switch (this.opTok.type) {\n            case tt.SUB:\n            case tt.ADD:\n                if (!(res.val instanceof ESNumber)) {\n                    return new TypeError(this.pos, 'Number', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().toString()) || 'undefined_', (_b = res.val) === null || _b === void 0 ? void 0 : _b.valueOf());\n                }\n                const numVal = res.val.valueOf();\n                return new ESNumber(this.opTok.type === tt.SUB ? -numVal : Math.abs(numVal));\n            case tt.NOT:\n                return new ESBoolean(!((_c = res === null || res === void 0 ? void 0 : res.val) === null || _c === void 0 ? void 0 : _c.bool().valueOf()));\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid unary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(config) {\n        const val = this.a.compileJS(config);\n        if (val.error)\n            return val;\n        return new compileResult(`${tokenTypeString[this.opTok.type]}${val.val}`);\n    }\n}\nexport class N_varAssign extends Node {\n    constructor(pos, varNameTok, value, assignType = '=', isGlobal = false, isLocal = false, isConstant = false, isDeclaration = false, type = types.any) {\n        super(pos);\n        this.value = value;\n        this.varNameTok = varNameTok;\n        this.isGlobal = isGlobal;\n        this.assignType = assignType;\n        this.isConstant = isConstant;\n        this.isDeclaration = isDeclaration;\n        this.isLocal = isLocal;\n        if (type instanceof ESType) {\n            this.type = new N_primitiveWrapper(type);\n        }\n        else\n            this.type = type;\n    }\n    interpret_(context) {\n        var _a, _b, _c, _d;\n        if (this.isDeclaration && context.hasOwn(this.varNameTok.value)) {\n            return new InvalidSyntaxError(this.pos, `Symbol '${this.varNameTok.value}' already exists, and cannot be redeclared`);\n        }\n        const res = this.value.interpret(context);\n        const typeRes = this.type.interpret(context);\n        if (res.error)\n            return res.error;\n        if (typeRes.error)\n            return typeRes.error;\n        if (!typeRes.val || !(typeRes.val instanceof ESType)) {\n            return new TypeError(this.varNameTok.pos, 'Type', (_b = (_a = typeRes.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) !== null && _b !== void 0 ? _b : 'undefined', (_c = typeRes.val) === null || _c === void 0 ? void 0 : _c.str(), `@ !typeRes.val || !(typeRes.val instanceof ESType)`);\n        }\n        if (!res.val) {\n            return new TypeError(this.varNameTok.pos, '~undefined', 'undefined', 'N_varAssign.interpret_');\n        }\n        if (!typeRes.val.includesType({ context }, res.val.__type__).bool().valueOf()) {\n            return new TypeError(this.varNameTok.pos, str(typeRes.val), str((_d = res.val) === null || _d === void 0 ? void 0 : _d.typeName()), str(res.val));\n        }\n        if (this.isDeclaration) {\n            if (this.assignType !== '=')\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            context.setOwn(this.varNameTok.value, res.val, {\n                global: false,\n                isConstant: this.isConstant\n            });\n            return res.val;\n        }\n        if (this.assignType === '=') {\n            let value = res.val;\n            if (value === undefined)\n                value = new ESUndefined();\n            const setRes = context.set(this.varNameTok.value, value, {\n                global: this.isGlobal,\n                isConstant: this.isConstant\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n        }\n        else {\n            if (this.isDeclaration)\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            const currentVal = context.get(this.varNameTok.value);\n            if (currentVal instanceof ESError)\n                return currentVal;\n            if (currentVal == undefined)\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            let newVal;\n            let assignVal = res.val;\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError) {\n                return newVal;\n            }\n            let setRes = context.set(this.varNameTok.value, newVal, {\n                global: this.isGlobal,\n                isConstant: this.isConstant\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n            res.val = newVal;\n        }\n        if (res.val.info.name === '(anonymous)' || !res.val.info.name) {\n            res.val.info.name = this.varNameTok.value;\n        }\n        return res;\n    }\n    compileJS(config) {\n        const val = this.value.compileJS(config);\n        if (val.error)\n            return val;\n        let declaration = '';\n        if (this.isDeclaration) {\n            if (this.isGlobal) {\n                declaration = 'var';\n            }\n            else if (this.isConstant) {\n                declaration = 'const';\n            }\n            else {\n                declaration = 'let';\n            }\n        }\n        return new compileResult(`${declaration} ${this.varNameTok.value}${this.assignType}${val.val}`);\n    }\n}\nexport class N_if extends Node {\n    constructor(pos, comparison, ifTrue, ifFalse) {\n        super(pos);\n        this.comparison = comparison;\n        this.ifFalse = ifFalse;\n        this.ifTrue = ifTrue;\n    }\n    interpret_(context) {\n        var _a;\n        let newContext = new Context();\n        newContext.parent = context;\n        let res = new interpretResult();\n        let compRes = this.comparison.interpret(context);\n        if (compRes.error)\n            return compRes;\n        if ((_a = compRes.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            res = this.ifTrue.interpret(newContext);\n            res.val = new ESUndefined();\n            if (res.error)\n                return res;\n        }\n        else if (this.ifFalse) {\n            res = this.ifFalse.interpret(newContext);\n            res.val = new ESUndefined();\n            if (res.error)\n                return res;\n        }\n        return res;\n    }\n    compileJS(config) {\n        const statementRes = this.comparison.compileJS(config);\n        if (statementRes.error)\n            return statementRes;\n        const ifTrueRes = this.ifTrue.compileJS(config);\n        if (ifTrueRes.error)\n            return ifTrueRes;\n        if (!this.ifFalse) {\n            return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}`);\n        }\n        const ifFalseRes = this.ifFalse.compileJS(config);\n        if (ifFalseRes.error)\n            return ifFalseRes;\n        return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}}else{${ifFalseRes.val}}`);\n    }\n}\nexport class N_while extends Node {\n    constructor(pos, comparison, loop) {\n        super(pos);\n        this.comparison = comparison;\n        this.loop = loop;\n    }\n    interpret_(context) {\n        var _a, _b;\n        let newContext = new Context();\n        newContext.parent = context;\n        while (true) {\n            let shouldLoop = this.comparison.interpret(context);\n            if (shouldLoop.error)\n                return shouldLoop;\n            if (!((_b = (_a = shouldLoop.val) === null || _a === void 0 ? void 0 : _a.bool()) === null || _b === void 0 ? void 0 : _b.valueOf()))\n                break;\n            let potentialError = this.loop.interpret(newContext);\n            if (potentialError.error)\n                return potentialError;\n            if (potentialError.shouldBreak)\n                break;\n        }\n        return new ESUndefined();\n    }\n    compileJS(config) {\n        const comparisonRes = this.comparison.compileJS(config);\n        if (comparisonRes.error)\n            return comparisonRes;\n        const bodyRes = this.loop.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        return new compileResult(`while(${comparisonRes.val}){${bodyRes.val}}`);\n    }\n}\nexport class N_for extends Node {\n    constructor(pos, body, array, identifier, isGlobalIdentifier, isConstIdentifier) {\n        super(pos);\n        this.body = body;\n        this.array = array;\n        this.identifier = identifier;\n        this.isGlobalId = isGlobalIdentifier;\n        this.isConstId = isConstIdentifier;\n    }\n    interpret_(context) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        let newContext = new Context();\n        newContext.parent = context;\n        const array = this.array.interpret(context);\n        if (array.error)\n            return array;\n        if (['Array', 'Number', 'Object', 'String', 'Any'].indexOf(((_a = array.val) === null || _a === void 0 ? void 0 : _a.typeName()) || '') === -1) {\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val + ' | ' + ((_b = array.val) === null || _b === void 0 ? void 0 : _b.typeName()));\n        }\n        function iteration(body, id, element, isGlobal, isConstant) {\n            newContext.set(id, element, {\n                global: isGlobal,\n                isConstant\n            });\n            const res = body.interpret(newContext);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (res.shouldBreak) {\n                res.shouldBreak = false;\n                return 'break';\n            }\n            if (res.shouldContinue)\n                res.shouldContinue = false;\n        }\n        if (array.val instanceof ESNumber || typeof ((_c = array.val) === null || _c === void 0 ? void 0 : _c.valueOf()) == 'number') {\n            for (let i = 0; i < array.val.valueOf(); i++) {\n                const res = iteration(this.body, this.identifier.value, new ESNumber(i), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESObject ||\n            (typeof ((_d = array.val) === null || _d === void 0 ? void 0 : _d.valueOf()) == 'number' && !Array.isArray((_e = array.val) === null || _e === void 0 ? void 0 : _e.valueOf()))) {\n            for (let element in (_f = array.val) === null || _f === void 0 ? void 0 : _f.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, new ESString(element), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESArray || Array.isArray((_g = array.val) === null || _g === void 0 ? void 0 : _g.valueOf())) {\n            for (let element of (_h = array.val) === null || _h === void 0 ? void 0 : _h.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, element, this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val);\n        return new ESUndefined();\n    }\n    compileJS(config) {\n        const iteratorRes = this.array.compileJS(config);\n        if (iteratorRes.error)\n            return iteratorRes;\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        let declaration = 'let';\n        if (this.isGlobalId) {\n            declaration = 'var';\n        }\n        else if (this.isConstId) {\n            declaration = 'const';\n        }\n        return new compileResult(`for(${declaration} ${this.identifier.value} of ${iteratorRes.val}){${bodyRes.val}}`);\n    }\n}\nexport class N_array extends Node {\n    constructor(pos, items, shouldClone = false) {\n        super(pos);\n        this.items = items;\n        this.shouldClone = shouldClone;\n    }\n    interpret_(context) {\n        let result = new interpretResult();\n        let interpreted = [];\n        for (let item of this.items) {\n            const res = item.interpret(context);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (!res.val)\n                continue;\n            let val = res.val;\n            if (this.shouldClone) {\n                val = val.clone();\n            }\n            interpreted.push(val);\n        }\n        result.val = new ESArray(interpreted);\n        return result;\n    }\n    compileJS(config) {\n        const res = new compileResult('[');\n        for (let item of this.items) {\n            const itemRes = item.compileJS(config);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ',';\n        }\n        res.val += ']';\n        return res;\n    }\n}\nexport class N_objectLiteral extends Node {\n    constructor(pos, properties) {\n        super(pos);\n        this.properties = properties;\n    }\n    interpret_(context) {\n        let interpreted = {};\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.interpret(context);\n            if (value.error)\n                return value.error;\n            const key = keyNode.interpret(context);\n            if (key.error)\n                return key.error;\n            if (key.val && value.val) {\n                interpreted[key.val.valueOf()] = value.val;\n            }\n        }\n        return new ESObject(interpreted);\n    }\n    compileJS(config) {\n        const res = new compileResult('{');\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.compileJS(config);\n            if (value.error)\n                return value;\n            const key = keyNode.compileJS(config);\n            if (key.error)\n                return key;\n            if (key.val && value.val) {\n                res.val += `[${key.val}]: ${value.val},`;\n            }\n        }\n        res.val += '}';\n        return res;\n    }\n}\nexport class N_statements extends Node {\n    constructor(pos, items, topLevel = false) {\n        super(pos);\n        this.items = items;\n        this.topLevel = topLevel;\n    }\n    interpret_(context) {\n        if (!this.topLevel) {\n            let last;\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (typeof res.funcReturn !== 'undefined') || res.shouldBreak || res.shouldContinue)\n                    return res;\n                last = res.val;\n            }\n            if (last)\n                return last;\n            return new ESUndefined();\n        }\n        else {\n            let result = new interpretResult();\n            let interpreted = [];\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (res.funcReturn !== undefined))\n                    return res;\n                if (!res.val)\n                    continue;\n                let val = res.val.clone();\n                interpreted.push(val);\n            }\n            result.val = new ESArray(interpreted);\n            return result;\n        }\n    }\n    compileJS(config) {\n        const res = new compileResult;\n        for (let item of this.items) {\n            const itemRes = item.compileJS(config);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ';';\n        }\n        return res;\n    }\n}\nexport class N_functionCall extends Node {\n    constructor(pos, to, args) {\n        super(pos);\n        this.arguments = args;\n        this.to = to;\n    }\n    interpret_(context) {\n        let { val, error } = this.to.interpret(context);\n        if (error) {\n            return error;\n        }\n        if (!val) {\n            return new TypeError(this.pos, 'any', 'undefined', undefined, 'On function call');\n        }\n        let params = [];\n        for (let arg of this.arguments) {\n            const res = arg.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (res.val) {\n                params.push(res.val);\n            }\n        }\n        const res = val.__call__({ context }, ...params);\n        if (res instanceof ESError) {\n            res.traceback.push({\n                position: this.pos,\n                line: `${val.info.name || '<AnonFunction>'}(${params.map(str).join(', ')})`\n            });\n        }\n        return res;\n    }\n    compileJS(config) {\n        const res = new compileResult;\n        const funcRes = this.to.compileJS(config);\n        if (funcRes.error)\n            return funcRes;\n        res.val = funcRes.val + '(';\n        for (let arg of this.arguments) {\n            const argRes = arg.compileJS(config);\n            if (argRes.error)\n                return argRes;\n            res.val += argRes.val + ',';\n        }\n        res.val += ')';\n        return res;\n    }\n}\nexport class N_functionDefinition extends Node {\n    constructor(pos, body, argNames, returnType, name = '(anon)', this_ = new ESObject(), description = '') {\n        super(pos);\n        this.arguments = argNames;\n        this.body = body;\n        this.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        this.description = description;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        let args = [];\n        for (let arg of this.arguments) {\n            const res = interpretArgument(arg, context);\n            if (res instanceof ESError)\n                return res;\n            args.push(res);\n        }\n        const returnTypeRes = this.returnType.interpret(context);\n        if (returnTypeRes.error)\n            return returnTypeRes.error;\n        if (!(returnTypeRes.val instanceof ESType))\n            return new TypeError(this.returnType.pos, 'Type', (_b = (_a = returnTypeRes.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) !== null && _b !== void 0 ? _b : '<Undefined>', (_c = returnTypeRes.val) === null || _c === void 0 ? void 0 : _c.str().valueOf(), `On func '${this.name}' return type`);\n        return new ESFunction(this.body, args, this.name, this.this_, returnTypeRes.val, context);\n    }\n    compileJS(config) {\n        const res = new compileResult('function(');\n        for (let param of this.arguments) {\n            res.val += param.name + ',';\n        }\n        res.val += '){';\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        res.val += bodyRes.val + '}';\n        return res;\n    }\n}\nexport class N_return extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        res.funcReturn = val.val;\n        return res;\n    }\n    compileJS(config) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(config);\n        if (valRes === null || valRes === void 0 ? void 0 : valRes.error)\n            return valRes;\n        return new compileResult(`return(${valRes === null || valRes === void 0 ? void 0 : valRes.val})`);\n    }\n}\nexport class N_yield extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        var _a;\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        if ((_a = val.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            res.funcReturn = val.val;\n        }\n        return res;\n    }\n    compileJS(config) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(config);\n        if (!valRes || !valRes.val) {\n            return new compileResult('');\n        }\n        return new compileResult(`if(_=${valRes.val}){return(_))`);\n    }\n}\nexport class N_indexed extends Node {\n    constructor(pos, base, index) {\n        super(pos);\n        this.base = base;\n        this.index = index;\n    }\n    interpret_(context) {\n        var _a;\n        let baseRes = this.base.interpret(context);\n        if (baseRes.error)\n            return baseRes;\n        let indexRes = this.index.interpret(context);\n        if (indexRes.error)\n            return indexRes;\n        const index = indexRes.val;\n        const base = baseRes.val;\n        if (!base || !index)\n            return new ESUndefined();\n        if (this.value !== undefined) {\n            let valRes = this.value.interpret(context);\n            if (valRes.error)\n                return valRes;\n            const currentVal = wrap(base.__getProperty__({ context }, index));\n            let newVal;\n            let assignVal = valRes.val;\n            (_a = this.assignType) !== null && _a !== void 0 ? _a : (this.assignType = '=');\n            if (!assignVal) {\n                return new TypeError(this.pos, '~undefined', 'undefined', 'undefined', 'N_indexed.interpret_');\n            }\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                case '=':\n                    newVal = assignVal;\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError)\n                return newVal;\n            if (!base.__setProperty__)\n                return new TypeError(this.pos, 'mutable', 'immutable', base.valueOf());\n            const res = base.__setProperty__({ context }, index, newVal !== null && newVal !== void 0 ? newVal : new ESUndefined());\n            if (res instanceof ESError)\n                return res;\n        }\n        return base.__getProperty__({ context }, index);\n    }\n    compileJS(config) {\n        const objectRes = this.base.compileJS(config);\n        if (objectRes.error)\n            return objectRes;\n        const keyRes = this.index.compileJS(config);\n        if (keyRes.error)\n            return keyRes;\n        if (!this.value) {\n            return new compileResult(`${objectRes.val}[${keyRes.val}]`);\n        }\n        const valRes = this.value.compileJS(config);\n        if (valRes.error)\n            return valRes;\n        return new compileResult(`${objectRes.val}[${keyRes.val}]${this.assignType || '='}${valRes.val}`);\n    }\n}\nexport class N_class extends Node {\n    constructor(pos, methods, extends_, init, name = '<anon class>') {\n        super(pos);\n        this.init = init;\n        this.methods = methods;\n        this.name = name;\n        this.extends_ = extends_;\n        this.instances = [];\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const methods = [];\n        for (let method of this.methods) {\n            const res = method.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (!(res.val instanceof ESFunction))\n                return new TypeError(this.pos, 'Function', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            methods.push(res.val);\n        }\n        let extends_;\n        if (this.extends_) {\n            const extendsRes = this.extends_.interpret(context);\n            if (extendsRes.error) {\n                return extendsRes.error;\n            }\n            if (!(extendsRes.val instanceof ESType))\n                return new TypeError(this.pos, 'Function', ((_b = extendsRes.val) === null || _b === void 0 ? void 0 : _b.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            extends_ = extendsRes.val;\n        }\n        let init;\n        if (this.init) {\n            const initRes = this.init.interpret(context);\n            if (initRes.error) {\n                return initRes.error;\n            }\n            if (!(initRes.val instanceof ESFunction)) {\n                return new TypeError(this.pos, 'Function', ((_c = initRes.val) === null || _c === void 0 ? void 0 : _c.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            init = initRes.val;\n        }\n        return new ESType(false, this.name, methods, extends_, init);\n    }\n    compileJS(config) {\n        return new compileResult('function(){return{};}');\n    }\n}\nexport class N_namespace extends Node {\n    constructor(pos, statements, name = '(anon)', mutable = false) {\n        super(pos);\n        this.name = name;\n        this.statements = statements;\n        this.mutable = mutable;\n    }\n    interpret_(context) {\n        const newContext = new Context();\n        newContext.parent = context;\n        const res = this.statements.interpret(newContext);\n        if (res.error)\n            return res;\n        return new ESNamespace(new ESString(this.name), newContext.getSymbolTableAsDict(), this.mutable);\n    }\n    compileJS(config) {\n        const bodyRes = this.statements.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        return new compileResult(`(() => {${bodyRes.val}})()`);\n    }\n}\nexport class N_tryCatch extends Node {\n    constructor(pos, body, catchBlock) {\n        super(pos, true);\n        this.body = body;\n        this.catchBlock = catchBlock;\n    }\n    interpret_(context) {\n        const res = this.body.interpret(context);\n        if (res.error) {\n            const newContext = new Context();\n            newContext.parent = context;\n            newContext.setOwn(catchBlockErrorSymbolName, new ESErrorPrimitive(res.error), {\n                isConstant: true\n            });\n            const catchRes = this.catchBlock.interpret(newContext);\n            if (catchRes.error)\n                return catchRes.error;\n        }\n        return new interpretResult();\n    }\n    compileJS(config) {\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        const catchRes = this.catchBlock.compileJS(config);\n        if (catchRes.error)\n            return catchRes;\n        return new compileResult(`try{${bodyRes.val}}catch(${catchBlockErrorSymbolName}){${catchRes.val}}`);\n    }\n}\nexport class N_number extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        if (typeof val !== 'number') {\n            return new TypeError(this.pos, 'number', typeof val);\n        }\n        const res = new interpretResult();\n        res.val = new ESNumber(val);\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult(this.a.value.toString());\n    }\n}\nexport class N_string extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        if (typeof val !== 'string')\n            return new TypeError(this.pos, 'string', typeof val);\n        const res = new interpretResult();\n        res.val = new ESString(val);\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult(`'${this.a.value}'`);\n    }\n}\nexport class N_variable extends Node {\n    constructor(a) {\n        super(a.pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        if (!context.has(this.a.value))\n            return new ReferenceError(this.a.pos, this.a.value);\n        let res = new interpretResult();\n        let symbol = context.getSymbol(this.a.value);\n        if (!symbol) {\n            return new ESUndefined();\n        }\n        if (symbol instanceof ESError) {\n            return symbol;\n        }\n        res.val = symbol.value;\n        return res;\n    }\n    compileJS(config) {\n        let val = this.a.value.toString();\n        if (val === 'import') {\n            val = 'import_';\n        }\n        return new compileResult(val);\n    }\n}\nexport class N_undefined extends Node {\n    constructor(pos = Position.unknown) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.val = new ESUndefined();\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('undefined');\n    }\n}\nexport class N_break extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldBreak = true;\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('break');\n    }\n}\nexport class N_continue extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldContinue = true;\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('continue');\n    }\n}\nexport class N_primitiveWrapper extends Node {\n    constructor(val, pos = Position.unknown) {\n        super(pos, true);\n        this.value = val;\n    }\n    interpret_(context) {\n        return this.value;\n    }\n    compileJS(config) {\n        return new compileResult(JSON.stringify(this.value.valueOf()));\n    }\n}\n","import { Node } from \"../runtime/nodes\";\nimport { ESPrimitive } from '../runtime/primitiveTypes';\nexport function deepClone(obj, hash = new WeakMap()) {\n    let result;\n    if (Object(obj) !== obj || obj instanceof Function) {\n        return obj;\n    }\n    if (hash.has(obj)) {\n        return hash.get(obj);\n    }\n    try {\n        result = new obj.constructor();\n    }\n    catch (e) {\n        result = Object.create(Object.getPrototypeOf(obj));\n    }\n    if (obj instanceof Map) {\n        Array.from(obj, ([key, val]) => result.set(deepClone(key, hash), deepClone(val, hash)));\n    }\n    else if (obj instanceof Set) {\n        Array.from(obj, (key) => result.add(deepClone(key, hash)));\n    }\n    hash.set(obj, result);\n    return Object.assign(result, ...Object.keys(obj).map(key => ({ [key]: deepClone(obj[key], hash) })));\n}\nexport function str(val, depth = 0) {\n    if (typeof val === 'string') {\n        if (depth > 0) {\n            return `'${val}'`;\n        }\n        return val;\n    }\n    if (depth > 20) {\n        return '...';\n    }\n    let result = '';\n    if (typeof val === 'undefined') {\n        return 'undefined';\n    }\n    if (val instanceof ESPrimitive) {\n        return val.str().valueOf();\n    }\n    if (val instanceof Node) {\n        return `<RunTimeNode: ${val.constructor.name}>`;\n    }\n    switch (typeof val) {\n        case 'object':\n            if (Array.isArray(val)) {\n                result += '[';\n                for (let item of val) {\n                    try {\n                        result += str(item, depth + 1) + `, `;\n                    }\n                    catch (e) {\n                        result += '<large property>, ';\n                    }\n                }\n                if (val.length) {\n                    result = result.substring(0, result.length - 2);\n                }\n                result += ']';\n            }\n            else {\n                try {\n                    result += val.constructor.name;\n                }\n                catch (e) {\n                    result += 'UNKNOWN_CONSTRUCTOR';\n                }\n                result += ': {\\n';\n                let i = 0;\n                for (let item in val) {\n                    i++;\n                    if (!val.hasOwnProperty || !val.hasOwnProperty(item)) {\n                        continue;\n                    }\n                    result += `  ${item}: ${str(val[item], depth + 1) || ''}, \\n`;\n                }\n                if (i > 0) {\n                    result = result.substring(0, result.length - 3);\n                }\n                result += '\\n}\\n';\n            }\n            break;\n        case 'string':\n            result = `'${val}'`;\n            break;\n        case \"bigint\":\n        case \"number\":\n        case \"boolean\":\n            result = `${val}`;\n            break;\n        case \"undefined\":\n            result = '<NativeUndefined>';\n            break;\n        case \"function\":\n            result = `<NativeFunction ${val.name}>`;\n            break;\n    }\n    for (let i = 0; i < depth; i++)\n        result = indent(result);\n    return result;\n}\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms));\nexport function indent(str) {\n    return str.replace(/\\n/g, '\\n    ');\n}\nexport const validURI = (value) => /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(value);\n","import { IS_NODE_INSTANCE } from './constants';\nimport { Position } from \"./position\";\nimport { str } from \"./util/util\";\nimport chalk from \"./util/colours\";\nexport class ESError {\n    constructor(pos, name, details) {\n        this.traceback = [];\n        this.pos = pos;\n        this.name = name;\n        this.details = details;\n    }\n    get colouredStr() {\n        let out = '';\n        if (this.traceback.length) {\n            out = chalk.yellow('Error Traceback (most recent call last):\\n');\n            for (let pos of [...this.traceback].reverse())\n                out += `    ${chalk.cyan(pos.position.str)}:\\n        ${pos.line}\\n`;\n        }\n        out += `${chalk.red(this.name)}: ${this.details} \\n at ${chalk.cyan(this.pos.str)}`;\n        return out;\n    }\n    get str() {\n        return `${this.name}: ${this.details} \\n at ${this.pos.str}`;\n    }\n}\nexport class IllegalCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'IllegalCharError', `'${char}'`);\n    }\n}\nexport class InvalidSyntaxError extends ESError {\n    constructor(pos, details) {\n        super(pos, 'InvalidSyntaxError', details);\n    }\n}\nexport class ExpectedCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'ExpectedCharError', `'${char}'`);\n    }\n}\nexport class TypeError extends ESError {\n    constructor(pos, expectedType, actualType, value = '', detail = '') {\n        super(pos, 'TypeError', `Expected type '${expectedType}', got type '${actualType}' ${typeof value === 'undefined' ? '' : ` on value '${str(value)}'`} ${!detail ? '' : detail}`);\n    }\n}\nexport class ImportError extends ESError {\n    constructor(pos, url, detail = '') {\n        super(pos, 'ImportError', `Could not import ${url}: ${detail}`);\n    }\n}\nexport class ReferenceError extends ESError {\n    constructor(pos, ref) {\n        super(pos, 'ReferenceError', `${ref} is not defined`);\n    }\n}\nexport class IndexError extends ESError {\n    constructor(pos, ref, object) {\n        var _a;\n        super(pos, 'IndexError', `'${ref}' is not a property of '${((_a = object === null || object === void 0 ? void 0 : object.info) === null || _a === void 0 ? void 0 : _a.name) || str(object)}'`);\n    }\n}\nexport class InvalidOperationError extends ESError {\n    constructor(op, value, detail = '', pos = Position.unknown) {\n        var _a;\n        super(pos, 'TypeError', `Cannot perform '${op}' on value ${((_a = value === null || value === void 0 ? void 0 : value.info) === null || _a === void 0 ? void 0 : _a.name) || str(value)}: ${detail}`);\n    }\n}\nexport class InvalidRuntimeError extends ESError {\n    constructor() {\n        super(Position.unknown, 'InvalidRuntimeError', `Required runtime of ${IS_NODE_INSTANCE ? 'browser' : 'node'}`);\n    }\n}\nexport class TestFailed extends ESError {\n    constructor(detail) {\n        super(Position.unknown, 'TestFailed', detail);\n    }\n}\nexport class PermissionRequiredError extends ESError {\n    constructor(detail) {\n        super(Position.unknown, 'PermissionRequiredError', detail);\n    }\n}\n","export class Token {\n    constructor(pos, type, value = undefined) {\n        this.type = type;\n        this.value = value;\n        this.pos = pos;\n    }\n    matches(type, val) {\n        return this.type === type && this.value === val;\n    }\n}\n","import { Position } from \"../position\";\nimport { digits, doubleCharTokens, identifierChars, KEYWORDS, multiLineCommentEnd, multiLineCommentStart, singleCharTokens, singleLineComment, stringSurrounds, tripleCharTokens, tt, } from '../constants';\nimport { IllegalCharError } from \"../errors\";\nimport { Token } from \"./tokens\";\nexport class Lexer {\n    constructor(program, fileName) {\n        this.text = program;\n        this.position = new Position(-1, 0, -1, fileName);\n        this.advance();\n    }\n    advance() {\n        this.position.advance(this.currentChar);\n        this.currentChar = this.text[this.position.idx];\n    }\n    generate() {\n        if (!this.text) {\n            return [new Token(this.position, tt.EOF)];\n        }\n        const tokens = [];\n        while (this.currentChar !== undefined) {\n            if (' \\t\\n'.includes(this.currentChar)) {\n                this.advance();\n            }\n            else if (digits.includes(this.currentChar)) {\n                tokens.push(this.makeNumber());\n            }\n            else if (this.currentChar === singleLineComment[0] &&\n                this.text[this.position.idx + 1] === singleLineComment[1]) {\n                this.singleLineComment();\n            }\n            else if (this.currentChar === multiLineCommentStart[0] &&\n                this.text[this.position.idx + 1] === multiLineCommentStart[1]) {\n                this.multiLineComment();\n            }\n            else if (identifierChars.includes(this.currentChar)) {\n                tokens.push(this.makeIdentifier());\n            }\n            else if (stringSurrounds.indexOf(this.currentChar) !== -1) {\n                tokens.push(this.makeString());\n            }\n            else {\n                const possibleAssignFirstChar = this.currentChar;\n                let token = this.unknownChar();\n                if (token) {\n                    if (token.type === tt.ASSIGN) {\n                        token.value = possibleAssignFirstChar;\n                    }\n                    tokens.push(token);\n                }\n                else {\n                    let pos = this.position.clone;\n                    let char = this.currentChar;\n                    this.advance();\n                    return new IllegalCharError(pos, char);\n                }\n            }\n        }\n        tokens.push(new Token(this.position, tt.EOF));\n        return tokens;\n    }\n    makeNumber() {\n        const pos = this.position.clone;\n        let numStr = '';\n        let dotCount = 0;\n        while (this.currentChar !== undefined && (digits + '._').includes(this.currentChar)) {\n            if (this.currentChar === '.') {\n                if (dotCount === 1) {\n                    break;\n                }\n                dotCount++;\n                numStr += '.';\n            }\n            else if (this.currentChar !== '_') {\n                numStr += this.currentChar;\n            }\n            this.advance();\n        }\n        return new Token(pos, tt.NUMBER, parseFloat(numStr));\n    }\n    makeString() {\n        const pos = this.position.clone;\n        let str = '';\n        let strClose = this.currentChar;\n        this.advance();\n        while (this.currentChar !== strClose && this.currentChar !== undefined) {\n            if (this.currentChar === '\\\\') {\n                this.advance();\n                if (this.currentChar === 'n') {\n                    str += '\\n';\n                    this.advance();\n                    continue;\n                }\n            }\n            str += this.currentChar;\n            this.advance();\n        }\n        this.advance();\n        return new Token(pos, tt.STRING, str);\n    }\n    makeIdentifier() {\n        let idStr = '';\n        const posStart = this.position.clone;\n        while (this.currentChar !== undefined && (identifierChars + digits).includes(this.currentChar)) {\n            idStr += this.currentChar;\n            this.advance();\n        }\n        let tokType = tt.IDENTIFIER;\n        if (KEYWORDS.indexOf(idStr) !== -1) {\n            tokType = tt.KEYWORD;\n        }\n        return new Token(posStart, tokType, idStr);\n    }\n    unknownChar() {\n        if (this.currentChar === undefined) {\n            return undefined;\n        }\n        for (let triple in tripleCharTokens) {\n            if (triple[0] === this.currentChar)\n                if (triple[1] === this.text[this.position.idx + 1])\n                    if (triple[2] === this.text[this.position.idx + 2]) {\n                        const pos = this.position.clone;\n                        this.advance();\n                        this.advance();\n                        this.advance();\n                        return new Token(pos, tripleCharTokens[triple]);\n                    }\n        }\n        for (let double in doubleCharTokens) {\n            if (double[0] === this.currentChar)\n                if (double[1] === this.text[this.position.idx + 1]) {\n                    const pos = this.position.clone;\n                    this.advance();\n                    this.advance();\n                    return new Token(pos, doubleCharTokens[double]);\n                }\n        }\n        if (singleCharTokens.hasOwnProperty(this.currentChar)) {\n            let pos = this.position.clone;\n            let val = singleCharTokens[this.currentChar];\n            this.advance();\n            return new Token(pos, val);\n        }\n        return undefined;\n    }\n    singleLineComment() {\n        this.advance();\n        while (this.currentChar !== '\\n' && this.currentChar !== undefined) {\n            this.advance();\n        }\n        this.advance();\n    }\n    multiLineComment() {\n        this.advance();\n        while (!(this.currentChar === multiLineCommentEnd[0] &&\n            this.text[this.position.idx + 1] === multiLineCommentEnd[1])) {\n            this.advance();\n        }\n        this.advance();\n        this.advance();\n    }\n}\n","import { tokenType, tokenTypeString, tt } from '../constants';\nimport { Token } from \"./tokens\";\nimport * as n from '../runtime/nodes';\nimport { N_functionDefinition, N_namespace, N_tryCatch, N_undefined, N_variable } from '../runtime/nodes';\nimport { ESError, InvalidSyntaxError } from \"../errors\";\nimport { types } from \"../runtime/primitiveTypes\";\nexport class ParseResults {\n    constructor() {\n        this.advanceCount = 0;\n        this.lastRegisteredAdvanceCount = 0;\n        this.reverseCount = 0;\n    }\n    registerAdvance() {\n        this.advanceCount = 1;\n        this.lastRegisteredAdvanceCount++;\n    }\n    register(res) {\n        this.lastRegisteredAdvanceCount = res.advanceCount;\n        this.advanceCount += res.advanceCount;\n        if (res.error) {\n            this.error = res.error;\n        }\n        if (!res.node) {\n            return new N_undefined();\n        }\n        return res.node;\n    }\n    tryRegister(res) {\n        if (res.error) {\n            this.reverseCount += res.advanceCount;\n            return;\n        }\n        return this.register(res);\n    }\n    success(node) {\n        this.node = node;\n        return this;\n    }\n    failure(error) {\n        this.error = error;\n        return this;\n    }\n}\nexport class Parser {\n    constructor(tokens) {\n        this.tokens = tokens;\n        this.tokenIdx = -1;\n        this.currentToken = tokens[0];\n        this.advance();\n    }\n    parse() {\n        var _a;\n        if (!this.currentToken || !this.tokens || (this.tokens.length === 1 && this.tokens[0].type === tt.EOF))\n            return new ParseResults();\n        const res = this.statements(true);\n        if (!res.error && this.currentToken.type !== tokenType.EOF) {\n            return res.failure(new InvalidSyntaxError((_a = this.currentToken) === null || _a === void 0 ? void 0 : _a.pos, `Expected 'End of File', got token of type'${tokenTypeString[this.currentToken.type]}' of value ${this.currentToken.value}`));\n        }\n        return res;\n    }\n    advance(res) {\n        if (res)\n            res.registerAdvance();\n        this.tokenIdx++;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    reverse(amount = 1) {\n        this.tokenIdx -= amount;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    consume(res, type, errorMsg) {\n        if (this.currentToken.type !== type)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, errorMsg !== null && errorMsg !== void 0 ? errorMsg : `Expected '${tokenTypeString[type]}' but got '${tokenTypeString[this.currentToken.type]}'`));\n        this.advance(res);\n    }\n    clearEndStatements(res) {\n        while (this.currentToken.type === tt.ENDSTATEMENT) {\n            this.advance(res);\n        }\n    }\n    statements(topLevel = false) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let statements = [];\n        this.clearEndStatements(res);\n        const firstStatement = res.register(this.statement());\n        if (!firstStatement) {\n            return res;\n        }\n        statements.push(firstStatement);\n        if (res.error) {\n            return res;\n        }\n        let moreStatements = true;\n        while (true) {\n            let newLineCount = 0;\n            while (this.currentToken.type === tt.ENDSTATEMENT) {\n                this.advance(res);\n                newLineCount++;\n            }\n            if (newLineCount === 0)\n                moreStatements = false;\n            if (!moreStatements)\n                break;\n            const statement = res.tryRegister(this.statement());\n            if (!statement) {\n                this.reverse(res.reverseCount);\n                continue;\n            }\n            statements.push(statement);\n        }\n        this.clearEndStatements(res);\n        let node = new n.N_statements(pos, statements, topLevel);\n        return res.success(node);\n    }\n    statement() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        if (this.currentToken.matches(tt.KEYWORD, 'return')) {\n            this.advance(res);\n            let expr = new N_undefined(this.currentToken.pos);\n            if (this.currentToken.type !== tt.ENDSTATEMENT) {\n                let exprRes = res.register(this.expr());\n                if (!exprRes) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'Expected end of statement'));\n                }\n                expr = exprRes;\n            }\n            return res.success(new n.N_return(pos, expr));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'yield')) {\n            this.advance(res);\n            let expr = new N_undefined(this.currentToken.pos);\n            if (this.currentToken.type !== tt.ENDSTATEMENT) {\n                let exprRes = res.register(this.expr());\n                if (!exprRes) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'Expected end of statement'));\n                }\n                expr = exprRes;\n            }\n            return res.success(new n.N_yield(pos, expr));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'break')) {\n            this.advance(res);\n            return res.success(new n.N_break(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'continue')) {\n            this.advance(res);\n            return res.success(new n.N_continue(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'try')) {\n            return this.tryCatch();\n        }\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    atom() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        const pos = this.currentToken.pos;\n        switch (tok.type) {\n            case tt.NUMBER:\n                this.advance(res);\n                return res.success(new n.N_number(pos, tok));\n            case tt.STRING:\n                this.advance(res);\n                return res.success(new n.N_string(pos, tok));\n            case tt.IDENTIFIER:\n                return this.atomIdentifier(res, pos, tok);\n            case tt.OPAREN:\n                this.advance(res);\n                const expr = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type == tt.CPAREN) {\n                    this.advance(res);\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ')'\"));\n            case tt.OSQUARE:\n                let arrayExpr = res.register(this.array());\n                if (res.error)\n                    return res;\n                return res.success(arrayExpr);\n            case tt.OBRACES:\n                let objectExpr = res.register(this.object());\n                if (res.error)\n                    return res;\n                return res.success(objectExpr);\n            case tt.KEYWORD:\n                if (tok.value === 'if') {\n                    const expr = res.register(this.ifExpr());\n                    if (res.error)\n                        return res;\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Invalid Identifier ${tok.value}`));\n            default:\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected number, identifier, '(', '+' or '-'`));\n        }\n    }\n    atomIdentifier(res, pos, tok) {\n        this.advance(res);\n        let node = new n.N_variable(tok);\n        let prevNode = new n.N_undefined(pos);\n        let functionCall = false;\n        while ([tt.OPAREN, tt.OSQUARE, tt.DOT].indexOf(this.currentToken.type) !== -1) {\n            switch (this.currentToken.type) {\n                case tt.OPAREN:\n                    functionCall = true;\n                    const tempNode = node;\n                    node = res.register(this.makeFunctionCall(node, prevNode));\n                    prevNode = tempNode;\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.OSQUARE:\n                    prevNode = node;\n                    node = res.register(this.makeIndex(node));\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.DOT:\n                    this.advance(res);\n                    if (this.currentToken.type !== tt.IDENTIFIER)\n                        return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected identifier after '.'`));\n                    prevNode = node;\n                    node = new n.N_indexed(this.currentToken.pos, node, new n.N_string(this.currentToken.pos, this.currentToken));\n                    this.advance(res);\n            }\n        }\n        if (this.currentToken.type === tt.ASSIGN) {\n            let assignType = this.currentToken.value;\n            if (functionCall) {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot assign to return value of function`));\n            }\n            this.advance(res);\n            const value = res.register(this.expr());\n            if (node instanceof n.N_variable) {\n                node = new n.N_varAssign(pos, node.a, value, assignType, false);\n            }\n            else if (node instanceof n.N_indexed) {\n                node.value = value;\n                node.assignType = assignType;\n            }\n            else {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot have node of type ${this.currentToken.constructor.name}.\n                            Expected either index or variable node.`));\n            }\n            if (res.error)\n                return res;\n        }\n        return res.success(node);\n    }\n    power() {\n        return this.binOp(() => this.atom(), [tokenType.POW], () => this.factor());\n    }\n    factor() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        switch (tok.type) {\n            case tt.SUB:\n            case tt.ADD:\n                this.advance(res);\n                const factor = res.register(this.factor());\n                if (res.error)\n                    return res;\n                return res.success(new n.N_unaryOp(tok.pos, factor, tok));\n            default:\n                return this.power();\n        }\n    }\n    term() {\n        return this.binOp(() => this.factor(), [tt.MUL, tt.DIV]);\n    }\n    arithmeticExpr() {\n        return this.binOp(() => this.term(), [tt.ADD, tt.SUB]);\n    }\n    comparisonExpr() {\n        const res = new ParseResults();\n        if (this.currentToken.type === tt.NOT) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            let node = res.register(this.expr());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(opTok.pos, node, opTok));\n        }\n        let node = res.register(this.binOp(() => this.arithmeticExpr(), [tt.EQUALS, tt.NOTEQUALS, tt.GT, tt.GTE, tt.LTE, tt.LT]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    expr() {\n        const res = new ParseResults();\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.KEYWORD &&\n            ['var', 'let', 'global', 'mutable', 'const', 'local'].indexOf(this.currentToken.value) !== -1) {\n            return this.initiateVar(res);\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'if')) {\n            return this.ifExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'while')) {\n            return this.whileExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'for')) {\n            return this.forExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'func')) {\n            return this.funcExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'class')) {\n            return this.classExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'namespace')) {\n            return this.namespace();\n        }\n        let node = res.register(this.binOp(() => this.comparisonExpr(), [tt.AND, tt.OR]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    binOp(func, ops, funcB = func) {\n        const res = new ParseResults();\n        let left = res.register(func());\n        if (res.error)\n            return res;\n        while (ops.indexOf(this.currentToken.type) !== -1\n            || ops.indexOf([this.currentToken.type, this.currentToken.value]) !== -1) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            const right = res.register(funcB());\n            if (res.error)\n                return res;\n            left = new n.N_binOp(left.pos, left, opTok, right);\n        }\n        return res.success(left);\n    }\n    typeExpr() {\n        const res = new ParseResults();\n        if (this.currentToken.type !== tt.IDENTIFIER)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos.clone, `Expected an identifier`));\n        let tok = this.currentToken;\n        this.advance(res);\n        return res.success(new N_variable(tok));\n    }\n    makeFunctionCall(to, this_ = new n.N_undefined()) {\n        const res = new ParseResults();\n        let args = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OPAREN)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '['\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n            return res.success(new n.N_functionCall(pos, to, []));\n        }\n        args.push(res.register(this.expr()));\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid argument\"));\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            args.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CPAREN)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n        this.advance(res);\n        return res.success(new n.N_functionCall(pos, to, args));\n    }\n    makeIndex(to) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const base = to;\n        if (this.currentToken.type !== tt.OSQUARE)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, `Cannot index without expression`));\n        }\n        let index = res.register(this.expr());\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid index\"));\n        if (this.currentToken.type !== tt.CSQUARE)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ']'\"));\n        this.advance(res);\n        return res.success(new n.N_indexed(pos, base, index));\n    }\n    initiateVar(res) {\n        let pos = this.currentToken.pos;\n        let isConst = false;\n        let isLocal = false;\n        let isGlobal = false;\n        let isDeclaration = false;\n        if (this.currentToken.type === tt.KEYWORD && ['var', 'let'].indexOf(this.currentToken.value) !== -1) {\n            isDeclaration = true;\n            isLocal = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD && ['global', 'local'].indexOf(this.currentToken.value) !== -1) {\n            isDeclaration = true;\n            if (this.currentToken.value === 'global')\n                isGlobal = true;\n            else\n                isLocal = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD && ['const', 'mutable'].indexOf(this.currentToken.value) !== -1) {\n            isDeclaration = true;\n            if (this.currentToken.value === 'const')\n                isConst = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected Identifier 'var', 'let', 'const', 'mutable', 'local', or 'global', not ${this.currentToken.value}`));\n        }\n        if (this.currentToken.type !== tokenType.IDENTIFIER) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected Identifier or Keyword`));\n        }\n        const varName = this.currentToken;\n        this.advance(res);\n        let type = types.any;\n        if (this.currentToken.type === tt.COLON) {\n            isDeclaration = true;\n            this.consume(res, tt.COLON);\n            type = res.register(this.typeExpr());\n        }\n        if (this.currentToken.type !== tt.ASSIGN) {\n            if (isConst)\n                return res.failure(new InvalidSyntaxError(pos, 'Cannot initialise constant to undefined'));\n            return res.success(new n.N_varAssign(pos, varName, new n.N_undefined(this.currentToken.pos), '=', isGlobal, isLocal, isConst, isDeclaration, type));\n        }\n        let assignType = this.currentToken.value;\n        this.advance(res);\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        if (expr instanceof n.N_class || expr instanceof n.N_functionDefinition) {\n            expr.name = varName.value;\n        }\n        if (expr instanceof N_namespace) {\n            expr.name = varName.value;\n            expr.mutable = !isConst;\n        }\n        return res.success(new n.N_varAssign(pos, varName, expr, assignType, isGlobal, isLocal, isConst, isDeclaration, type));\n    }\n    bracesExp() {\n        const res = new ParseResults();\n        this.consume(res, tt.OBRACES);\n        if (res.error) {\n            return res;\n        }\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_undefined(this.currentToken.pos));\n        }\n        const expr = res.register(this.statements());\n        if (res.error) {\n            return res;\n        }\n        this.consume(res, tt.CBRACES);\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    addEndStatement(res) {\n        this.tokens.splice(this.tokenIdx, 0, new Token(this.currentToken.pos, tt.ENDSTATEMENT));\n        this.reverse();\n        this.advance(res);\n    }\n    ifExpr() {\n        const res = new ParseResults();\n        let ifTrue;\n        let ifFalse;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'if'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'if'\"));\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        ifTrue = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.clearEndStatements(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'else')) {\n            this.advance(res);\n            if (this.currentToken.type == tt.OBRACES) {\n                ifFalse = res.register(this.bracesExp());\n                if (res.error)\n                    return res;\n            }\n            else {\n                ifFalse = res.register(this.statement());\n                if (res.error)\n                    return res;\n            }\n        }\n        this.addEndStatement(res);\n        return res.success(new n.N_if(pos, condition, ifTrue, ifFalse));\n    }\n    whileExpr() {\n        const res = new ParseResults();\n        let loop;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'while'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'while'\"));\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        loop = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        return res.success(new n.N_while(pos, condition, loop));\n    }\n    parameter(res) {\n        let name;\n        let type = new n.N_primitiveWrapper(types.any);\n        if (this.currentToken.type !== tt.IDENTIFIER)\n            return new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\");\n        name = this.currentToken.value;\n        this.advance(res);\n        if (this.currentToken.type === tt.COLON) {\n            this.consume(res, tt.COLON);\n            if (res.error)\n                return res.error;\n            type = res.register(this.typeExpr());\n            if (res.error)\n                return res.error;\n        }\n        return { name, type };\n    }\n    funcCore() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, args = [], returnType = new n.N_primitiveWrapper(types.any);\n        this.consume(res, tt.OPAREN);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n        }\n        else {\n            let param = this.parameter(res);\n            if (param instanceof ESError)\n                return res.failure(param);\n            args.push(param);\n            while (this.currentToken.type === tt.COMMA) {\n                this.advance(res);\n                let param = this.parameter(res);\n                if (param instanceof ESError)\n                    return res.failure(param);\n                args.push(param);\n            }\n            if (this.currentToken.type !== tt.CPAREN)\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n            this.advance(res);\n        }\n        if (this.currentToken.type === tt.COLON) {\n            this.advance(res);\n            returnType = res.register(this.typeExpr());\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.OBRACES) {\n            body = new n.N_return(this.currentToken.pos, res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        else {\n            this.consume(res, tt.OBRACES);\n            if (res.error)\n                return res;\n            if (this.currentToken.type !== tt.CBRACES)\n                body = res.register(this.statements());\n            else\n                body = new n.N_undefined(this.currentToken.pos);\n            this.consume(res, tt.CBRACES);\n            if (res.error)\n                return res;\n        }\n        return res.success(new n.N_functionDefinition(pos, body, args, returnType));\n    }\n    funcExpr() {\n        const res = new ParseResults();\n        if (!this.currentToken.matches(tt.KEYWORD, 'func'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'func'\"));\n        this.advance(res);\n        const func = res.register(this.funcCore());\n        if (res.error)\n            return res;\n        return res.success(func);\n    }\n    classExpr(name) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const methods = [];\n        let init;\n        let extends_;\n        if (!this.currentToken.matches(tt.KEYWORD, 'class'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'class'\"));\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'extends')) {\n            this.advance(res);\n            extends_ = res.register(this.expr());\n            if (res.error)\n                return res;\n        }\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_class(pos, [], undefined, undefined, name));\n        }\n        while (true) {\n            if (this.currentToken.type !== tt.IDENTIFIER) {\n                break;\n            }\n            let methodId = this.currentToken.value;\n            this.advance(res);\n            const func = res.register(this.funcCore());\n            if (res.error)\n                return res;\n            if (!(func instanceof N_functionDefinition)) {\n                return res.failure(new ESError(this.currentToken.pos, 'ParseError', `Tried to get function, but got ${func} instead`));\n            }\n            func.name = methodId;\n            if (methodId === 'init') {\n                init = func;\n            }\n            else {\n                methods.push(func);\n            }\n        }\n        this.consume(res, tt.CBRACES);\n        return res.success(new n.N_class(pos, methods, extends_, init, name));\n    }\n    forExpr() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, array, identifier, isGlobalIdentifier = false, isConstIdentifier = false;\n        if (!this.currentToken.matches(tt.KEYWORD, 'for'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'for'\"));\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'global')) {\n            isGlobalIdentifier = true;\n            this.advance(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'const')) {\n            isConstIdentifier = true;\n            this.advance(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'var') || this.currentToken.matches(tt.KEYWORD, 'let')) {\n            this.advance(res);\n        }\n        if (this.currentToken.type !== tt.IDENTIFIER)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\"));\n        identifier = this.currentToken;\n        this.advance(res);\n        if (!this.currentToken.matches(tt.KEYWORD, 'in'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected keyword 'in\"));\n        this.advance(res);\n        array = res.register(this.expr());\n        if (res.error)\n            return res;\n        body = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new n.N_for(pos, body, array, identifier, isGlobalIdentifier, isConstIdentifier));\n    }\n    array() {\n        const res = new ParseResults();\n        let elements = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OSQUARE)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            this.advance(res);\n            return res.success(new n.N_array(pos, []));\n        }\n        elements.push(res.register(this.expr()));\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ']', 'var', 'if', 'for', 'while', number, identifier, '+', '-', '(', '[' or '!' 2\"));\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            elements.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CSQUARE)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ']'\"));\n        this.advance(res);\n        return res.success(new n.N_array(pos, elements));\n    }\n    object() {\n        const res = new ParseResults();\n        let properties = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OBRACES)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '{\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_objectLiteral(pos, []));\n        }\n        while (true) {\n            let keyType, key, value;\n            if (this.currentToken.type === tt.IDENTIFIER) {\n                keyType = 'id';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.STRING) {\n                keyType = 'string';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.OSQUARE) {\n                keyType = 'value';\n                this.advance(res);\n                key = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.CSQUARE)\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ']', got '${tokenTypeString[this.currentToken.type]}'`));\n                this.advance(res);\n            }\n            else\n                break;\n            if (this.currentToken.type === tt.COLON) {\n                this.advance(res);\n                value = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES)\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                if (this.currentToken.type === tt.COMMA)\n                    this.advance(res);\n            }\n            else {\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES)\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                if (keyType !== 'id')\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `You must specify a value when initialising an object literal with a key that is not an identifier.\n                        Try using \\`key: value\\` syntax.`));\n                this.reverse();\n                value = new n.N_variable(this.currentToken);\n                this.advance(res);\n                if (this.currentToken.type === tt.COMMA)\n                    this.advance(res);\n            }\n            properties.push([key, value]);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CBRACES)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier, ',' or '}'\"));\n        this.advance(res);\n        return res.success(new n.N_objectLiteral(pos, properties));\n    }\n    namespace() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_namespace(pos, new n.N_undefined()));\n        }\n        const statements = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        return res.success(new n.N_namespace(pos, statements));\n    }\n    tryCatch() {\n        const res = new ParseResults();\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'No empty try block'));\n        }\n        const body = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.value !== 'catch') {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'try block requires catch'));\n        }\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.success(new N_tryCatch(this.currentToken.pos, body, new N_undefined()));\n        }\n        const catchBlock = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new N_tryCatch(this.currentToken.pos, body, catchBlock));\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Lexer } from \"./parse/lexer\";\nimport { Parser } from \"./parse/parser\";\nimport { global, libs as allLibs, now, refreshPerformanceNow, runningInNode, setGlobalContext, VERSION } from \"./constants\";\nimport { initialise } from \"./init\";\nimport { ESError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { compileResult, interpretResult, Node } from \"./runtime/nodes\";\nimport { ESArray } from \"./runtime/primitiveTypes\";\nimport { Context } from \"./runtime/context\";\nimport addNodeLibs from \"./built-in/nodeLibs\";\nimport colours from './util/colours';\nimport JS_STD_TXT_RAW from 'raw-loader!./built-in/compiledSTD/std.txt.js';\nexport { Context, colours };\nexport * from './runtime/primitiveTypes';\nexport * from './constants';\nexport * from './errors';\nexport * from './runtime/nodes';\nexport * from './util/util';\nexport * from './runtime/primitives/wrapStrip';\nexport * from './runtime/symbol';\nexport function init(printFunc = console.log, inputFunc, node = true, libs = { print: console.log }, context = new Context(), path = '') {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const res = initialise(context, printFunc, inputFunc);\n        if (res instanceof ESError) {\n            return res;\n        }\n        setGlobalContext(context);\n        (_a = libs['context']) !== null && _a !== void 0 ? _a : (libs['context'] = context);\n        if (path) {\n            context.path = path;\n        }\n        if (libs.print) {\n            allLibs.print = libs.print;\n        }\n        if (node) {\n            runningInNode();\n            yield refreshPerformanceNow(true);\n            addNodeLibs(libs, context);\n        }\n    });\n}\nexport function run(msg, { env = global, measurePerformance = false, fileName = '(unknown)', currentDir = '' } = {}) {\n    if (currentDir) {\n        env.path = currentDir;\n    }\n    Node.maxTime = 0;\n    Node.totalTime = 0;\n    Node.interprets = 0;\n    const timeData = {\n        total: 0,\n        lexerTotal: 0,\n        parserTotal: 0,\n        interpretTotal: 0,\n        nodeMax: 0,\n        nodeAvg: 0,\n        nodeTotal: 0,\n        interprets: 0,\n    };\n    let start = now();\n    if (!env.root.initialisedAsGlobal) {\n        const res = new interpretResult();\n        res.error = new ESError(Position.unknown, 'Uninitialised', 'Global context has not been initialised with global values');\n        return res;\n    }\n    const lexer = new Lexer(msg, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        const res_ = new interpretResult();\n        res_.error = lexerRes;\n        return res_;\n    }\n    timeData.lexerTotal = now() - start;\n    start = now();\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        const res_ = new interpretResult();\n        res_.error = res.error;\n        return res_;\n    }\n    timeData.parserTotal = now() - start;\n    start = now();\n    if (!res.node) {\n        const res = new interpretResult();\n        res.val = new ESArray([]);\n        return res;\n    }\n    const finalRes = res.node.interpret(env);\n    timeData.interpretTotal = now() - start;\n    timeData.total = now() - start;\n    timeData.nodeMax = Node.maxTime;\n    timeData.nodeTotal = Node.totalTime;\n    timeData.nodeAvg = Node.totalTime / Node.interprets;\n    timeData.interprets = Node.interprets;\n    if (measurePerformance) {\n        console.log(timeData);\n    }\n    return Object.assign(Object.assign({}, finalRes), { timeData });\n}\nexport function parse(code, { fileName = '(unknown)', currentDir = '' } = {}) {\n    const lexer = new Lexer(code, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        return {\n            error: lexerRes\n        };\n    }\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        return {\n            error: res.error\n        };\n    }\n    if (!res.node) {\n        return {\n            error: new ESError(Position.unknown, 'Error', 'no output')\n        };\n    }\n    return {\n        compileToJavaScript: (config) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            const comment = `// Generated by EntropyScript->JavaScript compiler v${VERSION}\\n`;\n            const stdStr = JS_STD_TXT_RAW.toString().replace(/(\\r\\n|\\n|\\r)/gm, '') + '\\n';\n            const out = res.node.compileJS(config);\n            if (out.error)\n                return out;\n            return new compileResult(comment + stdStr + out.val);\n        },\n        interpret: (env = global) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            if (currentDir) {\n                env.path = currentDir;\n            }\n            if (!env.root.initialisedAsGlobal) {\n                const res = new interpretResult();\n                res.error = new ESError(Position.unknown, 'Uninitialised', 'Global context has not been initialised with global values');\n                return res;\n            }\n            return res.node.interpret(env);\n        },\n    };\n}\n","import { Position } from \"../position\";\nimport { Context } from \"../runtime/context\";\nimport { ESError, ImportError, PermissionRequiredError } from '../errors';\nimport { ESFunction, ESNamespace, ESObject, ESString, types } from '../runtime/primitiveTypes';\nimport { str } from \"../util/util\";\nimport { permissions, run } from '../index';\nimport { addModuleFromObj, getModule, moduleExist } from './builtInModules';\nimport { global, importCache } from \"../constants\";\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nfunction addNodeLibs(options, context) {\n    const { fs, path } = options;\n    for (let libName in options) {\n        if (options.hasOwnProperty(libName)) {\n            addModuleFromObj(libName, new ESJSBinding(options[libName], libName));\n        }\n    }\n    context.set('import', new ESFunction(({ context }, rawPath) => {\n        if (!permissions.imports) {\n            return new PermissionRequiredError('Imports not allowed');\n        }\n        if (!permissions.imports) {\n            return new PermissionRequiredError('Imports not allowed');\n        }\n        let scriptPath = str(rawPath);\n        if (permissions.useSTD && moduleExist(scriptPath)) {\n            return getModule(scriptPath);\n        }\n        scriptPath = path.join(context.path, scriptPath);\n        if (scriptPath in importCache) {\n            return importCache[scriptPath];\n        }\n        try {\n            if (!fs.existsSync(scriptPath)) {\n                if (fs.existsSync('./particles/' + scriptPath)) {\n                    if (fs.existsSync('particles/' + scriptPath + '/main.es')) {\n                        scriptPath = 'particles/' + scriptPath + '/main.es';\n                    }\n                    else {\n                        return new ESError(Position.unknown, 'ImportError', `Module '${scriptPath}' has no entry point. Requires 'main.es'.`);\n                    }\n                }\n                else {\n                    return new ESError(Position.unknown, 'ImportError', `Can't find file '${scriptPath}' to import.`);\n                }\n            }\n            const exDir = path.dirname(scriptPath);\n            const code = fs.readFileSync(scriptPath, 'utf-8');\n            const env = new Context();\n            env.parent = global;\n            env.path = exDir;\n            const n = new ESNamespace(new ESString(scriptPath), {});\n            importCache[scriptPath] = n;\n            const res = run(code, {\n                env,\n                measurePerformance: false,\n                fileName: scriptPath,\n                currentDir: exDir,\n            });\n            n.__value__ = env.getSymbolTableAsDict();\n            if (res.error) {\n                return res.error;\n            }\n            return n;\n        }\n        catch (E) {\n            return new ESError(Position.unknown, 'ImportError', E.toString());\n        }\n    }, [{ name: 'path', type: types.string }], 'import', undefined, types.object), {\n        forceThroughConst: true,\n        isConstant: true\n    });\n    context.setOwn('open', new ESFunction(({ context }, path_, encoding_) => {\n        if (!permissions.fileSystem) {\n            return new PermissionRequiredError('No access to file system');\n        }\n        const path = str(path_);\n        const encoding = str(encoding_) || 'utf-8';\n        if (!fs.existsSync(path)) {\n            return new ImportError(Position.unknown, path);\n        }\n        return new ESObject({\n            str: new ESFunction(({ context }) => {\n                return new ESString(fs.readFileSync(context.path + path, encoding));\n            }, [], 'str', undefined, types.string),\n            write: new ESFunction(({ context }, data) => {\n                fs.writeFileSync(context.path + path, str(data));\n            }, [{ name: 'path', type: types.string }]),\n            append: new ESFunction(({ context }, data) => {\n                fs.appendFileSync(context.path + path, str(data));\n            }, [{ name: 'path', type: types.string }]),\n        });\n    }));\n}\nexport default addNodeLibs;\n","export default \"Array.prototype.contains = function (element) {\\n\\treturn this.indexOf(element) !== -1;\\n};\\n\\nfunction parseNum (str) {\\n\\treturn parseFloat(str);\\n}\\n\\nconst print = console.log;\\n\\nNumber.prototype[Symbol.iterator] = function () {\\n\\treturn {\\n\\t\\tcurrent: 0,\\n\\t\\tlast: this,\\n\\t\\tnext() {\\n\\t\\t\\tif (this.current <= this.last) {\\n\\t\\t\\t\\treturn { done: false, value: this.current++ };\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn { done: true };\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n};\\n\\nconst private = {\\n\\tbims: {\\n\\t\\tmath: Math\\n\\t}\\n};\\n\\nfunction import_ (path) {\\n\\tif (private.bims.hasOwnProperty(path)) {\\n\\t\\treturn private.bims[path];\\n\\t}\\n}\\n\";"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Position","constructor","idx","ln","col","file","advance","currentChar","clone","str","isUnknown","unknown","digits","identifierChars","singleLineComment","multiLineCommentStart","multiLineCommentEnd","global","setGlobalContext","c","stringSurrounds","IS_NODE_INSTANCE","window","runningInNode","VERSION","permissions","networking","imports","accessDOM","useSTD","fileSystem","updatePermissions","newPermissions","assign","print","console","log","catchBlockErrorSymbolName","KEYWORDS","now","refreshPerformanceNow","thisArg","_arguments","generator","Date","performance","e","P","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","importCache","tokenType","tt","tokenTypeString","NUMBER","STRING","ENDSTATEMENT","IDENTIFIER","KEYWORD","COMMA","OBRACES","CBRACES","OPAREN","CPAREN","OSQUARE","CSQUARE","ASSIGN","ADD","SUB","MUL","DIV","POW","EQUALS","NOTEQUALS","NOT","GT","LT","GTE","LTE","AND","OR","COLON","DOT","EOF","BITWISE_AND","BITWISE_OR","BITWISE_NOT","singleCharTokens","doubleCharTokens","tripleCharTokens","primitiveMethods","types","ESPrimitive","type","any","self","isa","props","ESBoolean","__type__","is","valueOf","__value__","typeName","__name__","hasProperty","describe","info","isBuiltIn","description","detail","res","strip","TypeError","__add__","n","InvalidOperationError","__subtract__","__multiply__","__divide__","__pow__","__eq__","__gt__","__lt__","__and__","__or__","__bool__","__setProperty__","__call__","parameters","ESErrorPrimitive","error","ESError","super","__getProperty__","ESString","name","details","ESArray","traceback","map","s","position","line","wrap","IndexError","cast","bool","dealWithExtends","context","class_","instance","this_","callContext","ESType","superFunc","ESFunction","args","newContext","Context","parent","__extends__","_a","initFunc","__init__","__closure__","res_","undefined","setRes","setOwn","createInstance","params","runInit","on","_b","__isPrimitive__","length","ESUndefined","ESNumber","ESObject","method","__methods__","methodClone","indexOf","__instances__","push","isPrimitive","includesType","t","_c","_d","_e","_f","equals","val","number","string","array","object","boolean","substr","keys","k","thisElement","nElement","newOb","keysToRemove","Array","isArray","toClone","ESNamespace","mutable","slice","symbol","isAccessible","v","isConstant","ESJSBinding","functionsTakeProps","JSON","stringify","func","arguments_","returnType","closure","path","fn","max","Math","i","arg","forceThroughConst","generateESFunctionCallContext","Node","interpret","funcReturn","callNode","callNative","defaultValue","required","toString","pow","Boolean","helpLink","values","len","add","splice","contains","element","newArr","num","parseFloat","isNaN","split","repeat","strToInsert","firstPart","lastPart","ESSymbol","identifier","options","thing","Number","String","m","a","codes","red","yellow","green","cyan","blue","grey","code","builtInFunctions","minP","maxP","stepP","min","arr","returns","msgs","things","out","indent","total","filter","entries","contents","id","has","set","global_","time","cb","sleep","parse","json","modules","ascii","asciiToChar","fromCharCode","charToAscii","char","charCodeAt","processedModules","processRawModule","moduleDict","moduleRaw","moduleExist","getModule","processed","initialise","globalContext","printFunc","inputFunc","rawUrl","callback","url","fetch","text","env","run","ImportError","getSymbolTableAsDict","E","msg","cbRaw","builtIn","globalConstants","constant","load","initModRes","thens","resolved","catch_","catch","domRes","PermissionRequiredError","InvalidRuntimeError","w","$","document","ReferenceError","dom","initModules","initialisedAsGlobal","symbolTable","deleted","path_","parent_","hasOwn","getSymbol","getRawSymbolTableAsDict","symbols","remove","clear","resetAsGlobal","deepClone","interpretArgument","typeRes","defaultValRes","interpretResult","shouldBreak","shouldContinue","compileResult","pos","isTerminal","start","interpret_","interprets","totalTime","maxTime","N_binOp","left","opTok","right","l","r","lt","eq","gt","InvalidSyntaxError","compileJS","config","N_unaryOp","numVal","abs","N_varAssign","varNameTok","assignType","isGlobal","isLocal","isDeclaration","N_primitiveWrapper","currentVal","newVal","assignVal","declaration","N_if","comparison","ifTrue","ifFalse","compRes","statementRes","ifTrueRes","ifFalseRes","N_while","loop","shouldLoop","potentialError","comparisonRes","bodyRes","N_for","body","isGlobalIdentifier","isConstIdentifier","isGlobalId","isConstId","_g","_h","iteration","iteratorRes","N_array","items","shouldClone","interpreted","item","itemRes","N_objectLiteral","properties","keyNode","valueNode","N_statements","topLevel","last","N_functionCall","to","arguments","join","funcRes","argRes","N_functionDefinition","argNames","returnTypeRes","param","N_return","valRes","N_yield","N_indexed","base","index","baseRes","indexRes","objectRes","keyRes","N_class","methods","extends_","init","instances","extendsRes","initRes","N_namespace","statements","N_tryCatch","catchBlock","catchRes","N_number","N_string","N_variable","N_undefined","N_break","N_continue","hash","WeakMap","Function","create","getPrototypeOf","Map","from","Set","depth","substring","ms","setTimeout","replace","validURI","test","colouredStr","reverse","IllegalCharError","ExpectedCharError","expectedType","actualType","ref","op","TestFailed","Token","matches","Lexer","program","fileName","generate","tokens","includes","makeNumber","multiLineComment","makeIdentifier","makeString","possibleAssignFirstChar","token","unknownChar","numStr","dotCount","strClose","idStr","posStart","tokType","triple","double","ParseResults","advanceCount","lastRegisteredAdvanceCount","reverseCount","registerAdvance","register","node","tryRegister","success","failure","Parser","tokenIdx","currentToken","amount","consume","errorMsg","clearEndStatements","firstStatement","statement","moreStatements","newLineCount","expr","exprRes","tryCatch","atom","tok","atomIdentifier","arrayExpr","objectExpr","ifExpr","prevNode","functionCall","tempNode","makeFunctionCall","makeIndex","power","binOp","factor","term","arithmeticExpr","comparisonExpr","initiateVar","whileExpr","forExpr","funcExpr","classExpr","namespace","ops","funcB","typeExpr","isConst","varName","bracesExp","addEndStatement","condition","parameter","funcCore","methodId","elements","keyType","libs","fs","libName","raw","addModule","rawPath","scriptPath","existsSync","exDir","dirname","readFileSync","measurePerformance","currentDir","encoding_","encoding","write","data","writeFileSync","append","appendFileSync","timeData","lexerTotal","parserTotal","interpretTotal","nodeMax","nodeAvg","nodeTotal","lexerRes","finalRes","compileToJavaScript","comment","stdStr"],"sourceRoot":""}