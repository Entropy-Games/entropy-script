{"version":3,"file":"2.9.0.js","mappings":"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","sources":["webpack://es/webpack/universalModuleDefinition","webpack://es/webpack/bootstrap","webpack://es/webpack/runtime/define property getters","webpack://es/webpack/runtime/hasOwnProperty shorthand","webpack://es/webpack/runtime/make namespace object","webpack://es/./src/position.ts","webpack://es/./src/constants.ts","webpack://es/./src/runtime/primitives/primitive.ts","webpack://es/./src/runtime/primitives/eserrorprimitive.ts","webpack://es/./src/runtime/symbol.ts","webpack://es/./src/util/colours.ts","webpack://es/./src/runtime/primitives/esnamespace.ts","webpack://es/./src/built-in/builtInFunctions.ts","webpack://es/./src/built-in/built-in-modules/ascii.ts","webpack://es/./src/runtime/instantiator.ts","webpack://es/./src/runtime/primitives/estype.ts","webpack://es/./src/runtime/strip.ts","webpack://es/./src/built-in/built-in-modules/json.ts","webpack://es/./src/built-in/builtInModules.ts","webpack://es/./src/init.ts","webpack://es/./src/built-in/globalConstants.ts","webpack://es/./src/built-in/built-in-modules/promise.ts","webpack://es/./src/built-in/built-in-modules/dom.ts","webpack://es/./src/runtime/context.ts","webpack://es/./src/runtime/primitives/esfunction.ts","webpack://es/./src/runtime/functionCaller.ts","webpack://es/./src/runtime/primitives/esjsbinding.ts","webpack://es/./src/runtime/wrap.ts","webpack://es/./src/runtime/primitives/esstring.ts","webpack://es/./src/runtime/primitives/esnumber.ts","webpack://es/./src/runtime/primitives/esarray.ts","webpack://es/./src/runtime/primitives/esobject.ts","webpack://es/./src/runtime/primitives/esprimitive.ts","webpack://es/./src/runtime/primitives/esboolean.ts","webpack://es/./src/runtime/primitives/esundefined.ts","webpack://es/./src/nodes/node.ts","webpack://es/./src/util/util.ts","webpack://es/./src/errors.ts","webpack://es/./src/parse/tokens.ts","webpack://es/./src/parse/lexer.ts","webpack://es/./src/nodes/index.ts","webpack://es/./src/nodes/terminal.ts","webpack://es/./src/nodes/statements.ts","webpack://es/./src/nodes/return.ts","webpack://es/./src/nodes/yield.ts","webpack://es/./src/nodes/while.ts","webpack://es/./src/nodes/objectLiteral.ts","webpack://es/./src/nodes/array.ts","webpack://es/./src/nodes/if.ts","webpack://es/./src/runtime/argument.ts","webpack://es/./src/nodes/function.ts","webpack://es/./src/nodes/varAssign.ts","webpack://es/./src/nodes/binOp.ts","webpack://es/./src/nodes/class.ts","webpack://es/./src/nodes/for.ts","webpack://es/./src/nodes/call.ts","webpack://es/./src/nodes/namespace.ts","webpack://es/./src/nodes/unaryOp.ts","webpack://es/./src/nodes/indexed.ts","webpack://es/./src/nodes/tryCatch.ts","webpack://es/./src/parse/parser.ts","webpack://es/./src/index.ts","webpack://es/./src/built-in/nodeLibs.ts","webpack://es/./src/built-in/compiledSTD/std.txt.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"es\"] = factory();\n\telse\n\t\troot[\"es\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Position {\n    constructor(idx, ln, col, file = '(unknown)') {\n        this.idx = idx;\n        this.ln = ln;\n        this.col = col;\n        this.file = file;\n    }\n    advance(currentChar = '') {\n        this.idx++;\n        this.col++;\n        if (currentChar === '\\n') {\n            this.ln++;\n            this.col = 0;\n        }\n        return this;\n    }\n    get clone() {\n        return new Position(this.idx, this.ln, this.col, this.file);\n    }\n    get str() {\n        return `File ${this.file}, ${this.ln + 1}:${this.col + 1}`;\n    }\n    get isUnknown() {\n        return this.idx === -2;\n    }\n    static get unknown() {\n        return new Position(-2, -2, -2, '(unknown)');\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const digits = '0123456789';\nexport const identifierChars = '_$abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nexport const singleLineComment = '//';\nexport const multiLineCommentStart = '/*';\nexport const multiLineCommentEnd = '*/';\nexport let global;\nexport const setGlobalContext = (c) => void (global = c);\nexport const stringSurrounds = ['\\'', '`', '\"'];\nexport let IS_NODE_INSTANCE = typeof window === 'undefined';\nexport const runningInNode = () => void (IS_NODE_INSTANCE = true);\nexport let permissions = {\n    networking: false,\n    imports: true,\n    accessDOM: false,\n    useSTD: true,\n    fileSystem: false,\n};\nexport function updatePermissions(newPermissions) {\n    permissions = Object.assign(Object.assign({}, permissions), newPermissions);\n}\nexport const libs = {\n    print: console.log\n};\nexport const catchBlockErrorSymbolName = 'err';\nexport const KEYWORDS = [\n    'var',\n    'let',\n    'global',\n    'local',\n    'mutable',\n    'const',\n    'if',\n    'else',\n    'while',\n    'for',\n    'in',\n    'continue',\n    'break',\n    'func',\n    'return',\n    'yield',\n    'class',\n    'extends',\n    'namespace',\n    'export',\n    'try',\n    'catch'\n];\nexport let now = () => 0;\nexport function refreshPerformanceNow(IS_NODE_INSTANCE) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (IS_NODE_INSTANCE) {\n            now = () => Date.now();\n        }\n        else {\n            now = () => {\n                try {\n                    return performance === null || performance === void 0 ? void 0 : performance.now();\n                }\n                catch (e) {\n                    return 0;\n                }\n            };\n        }\n    });\n}\nrefreshPerformanceNow(IS_NODE_INSTANCE);\nexport var tokenType;\n(function (tokenType) {\n    tokenType[tokenType[\"NUMBER\"] = 0] = \"NUMBER\";\n    tokenType[tokenType[\"STRING\"] = 1] = \"STRING\";\n    tokenType[tokenType[\"ENDSTATEMENT\"] = 2] = \"ENDSTATEMENT\";\n    tokenType[tokenType[\"IDENTIFIER\"] = 3] = \"IDENTIFIER\";\n    tokenType[tokenType[\"KEYWORD\"] = 4] = \"KEYWORD\";\n    tokenType[tokenType[\"COMMA\"] = 5] = \"COMMA\";\n    tokenType[tokenType[\"ASSIGN\"] = 6] = \"ASSIGN\";\n    tokenType[tokenType[\"ADD\"] = 7] = \"ADD\";\n    tokenType[tokenType[\"SUB\"] = 8] = \"SUB\";\n    tokenType[tokenType[\"MUL\"] = 9] = \"MUL\";\n    tokenType[tokenType[\"DIV\"] = 10] = \"DIV\";\n    tokenType[tokenType[\"POW\"] = 11] = \"POW\";\n    tokenType[tokenType[\"OPAREN\"] = 12] = \"OPAREN\";\n    tokenType[tokenType[\"CPAREN\"] = 13] = \"CPAREN\";\n    tokenType[tokenType[\"OBRACES\"] = 14] = \"OBRACES\";\n    tokenType[tokenType[\"CBRACES\"] = 15] = \"CBRACES\";\n    tokenType[tokenType[\"OSQUARE\"] = 16] = \"OSQUARE\";\n    tokenType[tokenType[\"CSQUARE\"] = 17] = \"CSQUARE\";\n    tokenType[tokenType[\"EQUALS\"] = 18] = \"EQUALS\";\n    tokenType[tokenType[\"NOTEQUALS\"] = 19] = \"NOTEQUALS\";\n    tokenType[tokenType[\"NOT\"] = 20] = \"NOT\";\n    tokenType[tokenType[\"GT\"] = 21] = \"GT\";\n    tokenType[tokenType[\"LT\"] = 22] = \"LT\";\n    tokenType[tokenType[\"GTE\"] = 23] = \"GTE\";\n    tokenType[tokenType[\"LTE\"] = 24] = \"LTE\";\n    tokenType[tokenType[\"AND\"] = 25] = \"AND\";\n    tokenType[tokenType[\"OR\"] = 26] = \"OR\";\n    tokenType[tokenType[\"COLON\"] = 27] = \"COLON\";\n    tokenType[tokenType[\"DOT\"] = 28] = \"DOT\";\n    tokenType[tokenType[\"EOF\"] = 29] = \"EOF\";\n    tokenType[tokenType[\"BITWISE_OR\"] = 30] = \"BITWISE_OR\";\n    tokenType[tokenType[\"BITWISE_AND\"] = 31] = \"BITWISE_AND\";\n    tokenType[tokenType[\"BITWISE_NOT\"] = 32] = \"BITWISE_NOT\";\n})(tokenType || (tokenType = {}));\nexport let tt = tokenType;\nexport const tokenTypeString = {\n    [tt.NUMBER]: 'Number',\n    [tt.STRING]: 'String',\n    [tt.ENDSTATEMENT]: ';',\n    [tt.IDENTIFIER]: 'Identifier',\n    [tt.KEYWORD]: 'Keyword',\n    [tt.COMMA]: ',',\n    [tt.OBRACES]: '{',\n    [tt.CBRACES]: '}',\n    [tt.OPAREN]: '(',\n    [tt.CPAREN]: ')',\n    [tt.OSQUARE]: '[',\n    [tt.CSQUARE]: ']',\n    [tt.ASSIGN]: '=',\n    [tt.ADD]: '+',\n    [tt.SUB]: '-',\n    [tt.MUL]: '*',\n    [tt.DIV]: '/',\n    [tt.POW]: '^',\n    [tt.EQUALS]: '==',\n    [tt.NOTEQUALS]: '!=',\n    [tt.NOT]: '!',\n    [tt.GT]: '>',\n    [tt.LT]: '<',\n    [tt.GTE]: '>=',\n    [tt.LTE]: '<=',\n    [tt.AND]: '&&',\n    [tt.OR]: '||',\n    [tt.COLON]: ':',\n    [tt.DOT]: '.',\n    [tt.EOF]: 'End of File',\n    [tt.BITWISE_AND]: '&',\n    [tt.BITWISE_OR]: '|',\n    [tt.BITWISE_NOT]: '~',\n};\nexport const singleCharTokens = {\n    '*': tt.MUL,\n    '/': tt.DIV,\n    '+': tt.ADD,\n    '-': tt.SUB,\n    '(': tt.OPAREN,\n    ')': tt.CPAREN,\n    '^': tt.POW,\n    '{': tt.OBRACES,\n    '}': tt.CBRACES,\n    ',': tt.COMMA,\n    '[': tt.OSQUARE,\n    ']': tt.CSQUARE,\n    ';': tt.ENDSTATEMENT,\n    ':': tt.COLON,\n    '.': tt.DOT,\n    '=': tt.ASSIGN,\n    '>': tt.GT,\n    '<': tt.LT,\n    '!': tt.NOT,\n    '|': tt.BITWISE_OR,\n    '&': tt.BITWISE_AND,\n    '~': tt.BITWISE_NOT\n};\nexport const doubleCharTokens = {\n    '==': tt.EQUALS,\n    '!=': tt.NOTEQUALS,\n    '>=': tt.GTE,\n    '<=': tt.LTE,\n    '+=': tt.ASSIGN,\n    '-=': tt.ASSIGN,\n    '*=': tt.ASSIGN,\n    '/=': tt.ASSIGN,\n    '&&': tt.AND,\n    '||': tt.OR\n};\nexport const tripleCharTokens = {};\nexport const primitiveMethods = [\n    '__add__',\n    '__subtract__',\n    '__multiply__',\n    '__divide__',\n    '__pow__',\n    '__eq__',\n    '__gt__',\n    '__lt__',\n    '__and__',\n    '__or__',\n    '__bool__',\n    '__setProperty__',\n    '__getProperty__',\n    '__call__',\n];\n","export const types = {};\n","import { ESPrimitive } from './esprimitive';\nimport { ESError, IndexError } from '../../errors';\nimport { types } from './primitive';\nimport { wrap } from \"../wrap\";\nimport { str } from \"../../util/util\";\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESArray } from \"./esarray\";\nexport class ESErrorPrimitive extends ESPrimitive {\n    constructor(error = new ESError(Position.unknown, 'Unknown', 'Error not specified')) {\n        super(error, types.error);\n        this.__getProperty__ = (props, key) => {\n            switch (str(key)) {\n                case 'name':\n                    return new ESString(this.valueOf().name);\n                case 'details':\n                    return new ESString(this.valueOf().details);\n                case 'traceback':\n                    return new ESArray(this.valueOf().traceback\n                        .map(s => new ESString(`${s.position.str} : ${s.line}`)));\n                default:\n                    if (this.self.hasOwnProperty(str(key))) {\n                        return wrap(this.self[str(key)]);\n                    }\n                    return new IndexError(Position.unknown, key.valueOf(), this);\n            }\n        };\n        this.cast = () => new ESError(Position.unknown, 'TypeError', `Cannot cast type 'error'`);\n        this.str = () => new ESString(`<Error: ${this.valueOf().str}>`);\n        this.__eq__ = (props, n) => new ESBoolean(n instanceof ESErrorPrimitive &&\n            this.valueOf().constructor === n.valueOf().constructor);\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.clone = () => new ESErrorPrimitive(this.valueOf());\n    }\n}\n","import { ESString } from './primitives/esstring';\nexport class ESSymbol {\n    constructor(value, identifier, options = {}) {\n        var _a, _b;\n        this.clone = () => {\n            return new ESSymbol(this.value.clone(), this.identifier, {\n                isConstant: this.isConstant,\n                isAccessible: this.isAccessible\n            });\n        };\n        this.str = () => new ESString(`<Symbol: ${this.identifier}>`);\n        this.value = value;\n        this.identifier = identifier;\n        this.isConstant = (_a = options.isConstant) !== null && _a !== void 0 ? _a : false;\n        this.isAccessible = (_b = options.isAccessible) !== null && _b !== void 0 ? _b : true;\n    }\n}\n","import { IS_NODE_INSTANCE } from \"../constants\";\nconst codes = {\n    red: 31,\n    yellow: 33,\n    green: 32,\n    cyan: 36,\n    blue: 34,\n    grey: 2\n};\nconst c = {};\nfor (let code of Object.keys(codes)) {\n    c[code] = (s) => {\n        s || (s = '');\n        if (IS_NODE_INSTANCE) {\n            return `\\x1b[${codes[code]}m` + s + '\\x1b[0m';\n        }\n        return `<span style=\"color: ${code}\">${s}</span>`;\n    };\n}\nexport default c;\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { wrap } from '../wrap';\nimport { ESFunction } from \"./esfunction\";\nexport class ESNamespace extends ESPrimitive {\n    constructor(name, value, mutable = false) {\n        super(value, types.object);\n        this.cast = ({}) => {\n            return new ESError(Position.unknown, 'TypeError', `Cannot cast type 'namespace'`);\n        };\n        this.clone = () => {\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            return new ESNamespace(this.name, obj);\n        };\n        this.str = () => {\n            const keys = Object.keys(this.valueOf());\n            return new ESString(`<Namespace ${str(this.name)}${keys.length > 0 ? ': ' : ''}${keys.slice(0, 5)}${keys.length >= 5 ? '...' : ''}>`);\n        };\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.valueOf().hasOwnProperty(key.valueOf())) {\n                const symbol = this.valueOf()[key.valueOf()];\n                if (symbol.isAccessible) {\n                    return symbol.value;\n                }\n            }\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.unknown, 'string', key.typeName());\n            }\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this.self);\n        };\n        this.info.name = str(name);\n        this.mutable = mutable;\n    }\n    get name() {\n        return new ESString(this.info.name);\n    }\n    set name(v) {\n        this.info.name = v.valueOf();\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESString)) {\n            return new TypeError(Position.unknown, 'string', key.typeName().valueOf(), str(key));\n        }\n        let idx = str(key);\n        if (!this.mutable) {\n            return new TypeError(Position.unknown, 'mutable', 'immutable', `${str(this.name)}`);\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        const symbol = this.__value__[idx];\n        if (!symbol) {\n            return new ESError(Position.unknown, 'SymbolError', `Symbol ${idx} is not declared in namespace ${str(this.name)}.`);\n        }\n        if (symbol.isConstant) {\n            return new TypeError(Position.unknown, 'mutable', 'immutable', `${str(this.name)}[${idx}]`);\n        }\n        if (!symbol.isAccessible) {\n            return new TypeError(Position.unknown, 'accessible', 'inaccessible', `${str(this.name)}[${idx}]`);\n        }\n        symbol.value = value;\n    }\n}\n","import { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from '../runtime/wrap';\nimport { indent, sleep, str } from '../util/util';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport chalk from \"../util/colours\";\nimport { ESNumber } from \"../runtime/primitives/esnumber\";\nimport { ESArray } from \"../runtime/primitives/esarray\";\nimport { ESUndefined } from \"../runtime/primitives/esundefined\";\nimport { ESString } from \"../runtime/primitives/esstring\";\nimport { ESObject } from \"../runtime/primitives/esobject\";\nimport { ESNamespace } from \"../runtime/primitives/esnamespace\";\nimport { ESFunction } from \"../runtime/primitives/esfunction\";\nexport const builtInFunctions = {\n    'range': [({ context }, minP, maxP, stepP) => {\n            if (!(minP instanceof ESNumber)) {\n                return new ESArray();\n            }\n            const min = minP.valueOf();\n            if (maxP instanceof ESUndefined) {\n                try {\n                    return new ESArray([...Array(min).keys()].map(n => new ESNumber(n)));\n                }\n                catch (e) {\n                    return new ESError(Position.unknown, 'RangeError', `Cannot make range of length '${str(min)}'`);\n                }\n            }\n            let step = 1;\n            if (!(maxP instanceof ESNumber)) {\n                return new TypeError(Position.unknown, 'number', maxP.typeName(), str(maxP));\n            }\n            let max = maxP.valueOf();\n            if (!(stepP instanceof ESUndefined)) {\n                if (!(stepP instanceof ESNumber)) {\n                    return new TypeError(Position.unknown, 'number', stepP.typeName(), str(stepP));\n                }\n                step = stepP.valueOf();\n            }\n            let arr = [];\n            let i = min;\n            while (i < max) {\n                arr.push(new ESNumber(i));\n                i += step;\n            }\n            return new ESArray(arr);\n        }, {\n            args: [{\n                    name: 'N',\n                    type: 'Number',\n                }],\n            description: 'Generates an array of integers given N. Starts at 0 and goes to N-1. Can be used like for i in range(10) ..., similarly to python.',\n            returns: 'array of numbers from 0 to N-1',\n            returnType: 'number[] | RangeError'\n        }],\n    'log': [({ context }, ...msgs) => {\n            console.log(...msgs.map(m => str(m)));\n        }, {\n            args: [{\n                    name: '...values',\n                    type: 'any[]'\n                }],\n            description: 'Uses console.log to log all values',\n            returnType: 'void'\n        }],\n    'parseNum': [({ context }, num) => {\n            try {\n                const val = parseFloat(str(num));\n                if (isNaN(val)) {\n                    return new ESError(Position.unknown, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n                }\n                return new ESNumber(val);\n            }\n            catch (e) {\n                return new ESError(Position.unknown, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n            }\n        }, {\n            args: [{\n                    name: 'num',\n                    type: 'any'\n                }],\n            description: `Converts a string of digits into a number. Works with decimals and integers. Calls .str() on value before using native JS 'parseFloat' function. Returns TypeError if the string can't be converted into a number.`,\n            returnType: 'number | TypeError'\n        }],\n    'help': [({ context }, ...things) => {\n            if (!things.length) {\n                return new ESString('Visit https://entropygames.io/entropy-script for help with Entropy Script!\\n' +\n                    'Try \\'help(<anything>)\\' for help about a particular object.');\n            }\n            let out = '';\n            for (const thing of things) {\n                const info = thing.info;\n                out += `${chalk.yellow(`Help on '${info.name || '(anonymous)'}'`)}:\n    \n    ${chalk.yellow('Value')}: ${indent(indent(str(thing)))}\n    ${chalk.yellow('Type')}: '${str(thing.typeName())}'\n    ${chalk.yellow('Location')}: ${info.file || chalk.yellow('(unknown)')}\n    \n        ${chalk.green(info.description) || `No description.`}\n        \n    ${info.helpLink ? chalk.cyan(info.helpLink + '\\n\\n') : ''}\n`;\n                if (info.args && thing instanceof ESFunction) {\n                    const total = info.args.length;\n                    const required = info.args.filter(a => a.required).length;\n                    if (total == required)\n                        out += chalk.yellow(`    Arguments (${total}): \\n`);\n                    else\n                        out += chalk.yellow(`    Arguments (${required}-${total}): \\n`);\n                    for (const [idx, arg] of info.args.entries()) {\n                        if (typeof arg !== 'object')\n                            out += `        ${idx + 1}. INVALID ARG INFO`;\n                        else\n                            out += `        ${idx + 1}. ${arg.name}${arg.required === false ? chalk.yellow(' (optional) ') : ' '}{${arg.type}} ${arg.description || ''}\\n`;\n                    }\n                    out += `\\n\\n`;\n                    if (info.returns)\n                        out += `    Returns: ${info.returns}\\n\\n`;\n                    if (info.returnType)\n                        out += `    Return Type: ${info.returnType}\\n\\n`;\n                }\n                if (info.contents && (thing instanceof ESObject || thing instanceof ESNamespace)) {\n                    out += '    Properties: \\n      ';\n                    for (let contents of info.contents)\n                        out += contents.name + '\\n      ';\n                }\n            }\n            console.log(out);\n            if (things.length > 1) {\n                return new ESArray(things);\n            }\n            if (things) {\n                return things[0];\n            }\n        }, {\n            args: [{\n                    name: 'value',\n                    type: 'any'\n                }],\n            description: 'logs info on value',\n            returns: 'value passed in'\n        }],\n    'delete': [({ context }, name) => {\n            const id = str(name);\n            if (!context.has(id)) {\n                return new ESError(Position.unknown, 'DeleteError', `Identifier '${id}' not found in the current context`);\n            }\n            context.set(id, new ESUndefined());\n        }, {\n            name: 'delete',\n            args: [{ name: 'identifier', type: 'string' }],\n            description: 'Deletes a variable from the current context'\n        }],\n    '__path': [({ context }) => {\n            return new ESString(context.path);\n        }, {\n            name: '__path',\n            args: [],\n            description: 'Returns the current path'\n        }],\n    '__symbols': [({ context }) => {\n            return wrap(context.keys);\n        }, {\n            name: '__allSymbols',\n            args: [],\n            description: 'Returns an array of the names of all symbols in the current context'\n        }],\n    'using': [({ context }, module, global_) => {\n            if (!(module instanceof ESNamespace) && !(module instanceof ESJSBinding)) {\n                return new TypeError(Position.unknown, 'Namespace', str(module.typeName()));\n            }\n            let global = true;\n            if (global_) {\n                if (!global_.bool().valueOf()) {\n                    global = false;\n                }\n            }\n            const values = module.valueOf();\n            if (global) {\n                context = context.root;\n            }\n            else if (context.parent) {\n                context = context.parent;\n            }\n            for (const key of Object.keys(values)) {\n                context.setOwn(key, values[key].value, {\n                    isConstant: values[key].isConstant,\n                    isAccessible: values[key].isAccessible,\n                    forceThroughConst: true\n                });\n            }\n        }, {\n            name: 'using',\n            args: [\n                { name: 'module', type: 'namespace' },\n                { name: 'global', type: 'bool' }\n            ],\n            description: 'Adds contents of a namespace to the global context'\n        }],\n    'sleep': [({ context }, time, cb) => {\n            if (!(time instanceof ESNumber)) {\n                return new TypeError(Position.unknown, 'number', str(time.typeName()), str(time));\n            }\n            sleep(time.valueOf())\n                .then(() => {\n                const res = cb.__call__({ context });\n                if (res instanceof ESError) {\n                    console.log(res.str);\n                }\n            });\n        }, {\n            name: 'sleep',\n            args: [{ name: 'n', type: 'number' }, { name: 'callback', type: 'function' }],\n            description: 'Waits n milliseconds and then executes the callback'\n        }],\n    'throw': [({ context }, name, details) => {\n            return new ESError(Position.unknown, str(name), str(details));\n        }, {\n            name: 'throw',\n            args: [{ name: 'name', type: 'string' }, { name: 'details', type: 'string' }]\n        }],\n};\n","import { TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESNumber } from \"../../runtime/primitives/esnumber\";\nimport { ESString } from \"../../runtime/primitives/esstring\";\nconst module = {\n    asciiToChar: (props, number) => {\n        if (!(number instanceof ESNumber)) {\n            return new TypeError(Position.unknown, 'number', str(number.typeName()), str(number));\n        }\n        return new ESString(String.fromCharCode(number.valueOf()));\n    },\n    charToAscii: (props, char) => {\n        if (!(char instanceof ESString)) {\n            return new TypeError(Position.unknown, 'string', str(char.typeName()), str(char));\n        }\n        return new ESNumber(str(char).charCodeAt(0));\n    },\n};\nexport default module;\n","import { primitiveMethods } from '../constants';\nimport { Context } from \"./context\";\nimport { ESError } from \"../errors\";\nimport { wrap } from './wrap';\nimport { ESFunction } from \"./primitives/esfunction\";\nimport { ESObject } from \"./primitives/esobject\";\nimport { ESUndefined } from \"./primitives/esundefined\";\nimport { ESString } from \"./primitives/esstring\";\nimport { ESArray } from \"./primitives/esarray\";\nimport { ESBoolean } from \"./primitives/esboolean\";\nimport { ESNumber } from \"./primitives/esnumber\";\nfunction dealWithExtends(context, class_, instance, this_, callContext) {\n    const superFunc = new ESFunction(({ context }, ...args) => {\n        const newContext = new Context();\n        newContext.parent = context;\n        if (class_.__extends__) {\n            let _a = dealWithExtends(newContext, class_.__extends__, instance, this_, callContext);\n            if (_a instanceof ESError) {\n                return _a;\n            }\n        }\n        const initFunc = class_ === null || class_ === void 0 ? void 0 : class_.__init__;\n        if (!initFunc) {\n            return;\n        }\n        initFunc.this_ = this_;\n        initFunc.__closure__ = newContext;\n        const res_ = initFunc.__call__({ context: newContext }, ...args);\n        if (res_ instanceof ESError) {\n            return res_;\n        }\n    }, undefined, 'super', this_);\n    let setRes = context.setOwn('super', superFunc);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    const res = createInstance(class_, { context }, [], false, instance);\n    if (res instanceof ESError) {\n        return res;\n    }\n}\nfunction callPrimitive(type, params) {\n    var _b, _c, _d, _e, _f, _g, _h, _j;\n    if (params.length < 1) {\n        return new ESUndefined();\n    }\n    switch (type.__name__) {\n        case 'Undefined':\n        case 'Type':\n            return new ESString((_c = (_b = params[0]) === null || _b === void 0 ? void 0 : _b.__type__) === null || _c === void 0 ? void 0 : _c.__name__);\n        case 'String':\n            return new ESString((_e = (_d = params[0]) === null || _d === void 0 ? void 0 : _d.str()) === null || _e === void 0 ? void 0 : _e.valueOf());\n        case 'Array':\n            return new ESArray(params);\n        case 'Number':\n            return new ESNumber((_f = params[0]) === null || _f === void 0 ? void 0 : _f.valueOf());\n        case 'Function':\n            return new ESFunction((_g = params[0]) === null || _g === void 0 ? void 0 : _g.valueOf());\n        case 'Boolean':\n            return new ESBoolean((_j = (_h = params[0]) === null || _h === void 0 ? void 0 : _h.bool()) === null || _j === void 0 ? void 0 : _j.valueOf());\n        default:\n            return wrap(params[0]);\n    }\n}\nexport function createInstance(type, { context }, params, runInit = true, on = {}) {\n    var _b;\n    if (type.__isPrimitive__) {\n        return callPrimitive(type, params);\n    }\n    const newContext = new Context();\n    newContext.parent = (_b = type.__init__) === null || _b === void 0 ? void 0 : _b.__closure__;\n    const instance = new ESObject();\n    if (type.__extends__) {\n        let res = dealWithExtends(newContext, type.__extends__, on, instance, context);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__value__ = on;\n    for (let method of type.__methods__) {\n        const methodClone = method.clone();\n        methodClone.this_ = instance;\n        on[method.name] = methodClone;\n        if (primitiveMethods.indexOf(method.name) !== -1) {\n            instance[method.name] = methodClone.__call__;\n        }\n    }\n    if (runInit && type.__init__) {\n        type.__init__.this_ = instance;\n        type.__init__.__closure__ = newContext;\n        const res = type.__init__.__call__({ context: newContext }, ...params);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__type__ = type;\n    type.__instances__.push(instance);\n    return instance;\n}\n","import { ESPrimitive } from './esprimitive';\nimport { IndexError, InvalidOperationError } from '../../errors';\nimport { createInstance } from '../instantiator';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { wrap } from \"../wrap\";\nimport { Position } from \"../../position\";\nimport { str } from \"../../util/util\";\nexport class ESType extends ESPrimitive {\n    constructor(isPrimitive = false, name = '(anon)', __methods__ = [], __extends__, __init__) {\n        super(undefined, types === null || types === void 0 ? void 0 : types.type);\n        this.__instances__ = [];\n        this.clone = () => {\n            return new ESType(this.__isPrimitive__, this.__name__, this.__methods__, this.__extends__, this.__init__);\n        };\n        this.isa = ({}, type) => {\n            return new ESBoolean(type === types.type);\n        };\n        this.cast = (props, type) => {\n            return new InvalidOperationError('cast', this);\n        };\n        this.includesType = (props, t) => {\n            var _a, _b, _c, _d, _e, _f;\n            if (this.equals(props, types.any).bool().valueOf() ||\n                t.equals(props, types.any).bool().valueOf() ||\n                (((_a = this.__extends__) === null || _a === void 0 ? void 0 : _a.equals(props, t).valueOf()) === true) ||\n                (((_b = this.__extends__) === null || _b === void 0 ? void 0 : _b.equals(props, types.any).valueOf()) === true) ||\n                (((_c = this.__extends__) === null || _c === void 0 ? void 0 : _c.includesType(props, t).valueOf()) === true) ||\n                (((_d = t.__extends__) === null || _d === void 0 ? void 0 : _d.equals(props, this).valueOf()) === true) ||\n                (((_e = t.__extends__) === null || _e === void 0 ? void 0 : _e.equals(props, types.any).valueOf()) === true) ||\n                (((_f = t.__extends__) === null || _f === void 0 ? void 0 : _f.includesType(props, this).valueOf()) === true)) {\n                return new ESBoolean(true);\n            }\n            return this.equals(props, t);\n        };\n        this.equals = ({}, t) => {\n            return new ESBoolean(t.__name__ === this.__name__ &&\n                t.__isPrimitive__ === this.__isPrimitive__ &&\n                Object.is(this.valueOf(), t.valueOf()));\n        };\n        this.__call__ = ({ context }, ...params) => {\n            return createInstance(this, { context }, params || []);\n        };\n        this.str = () => new ESString(`<Type: ${this.__name__}>`);\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)]);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.__isPrimitive__ = isPrimitive;\n        this.__name__ = name;\n        this.info.name = name;\n        this.__extends__ = __extends__;\n        this.__methods__ = __methods__;\n        if (__init__) {\n            __init__.name = name;\n            this.__init__ = __init__;\n        }\n        if (!types.type) {\n            this.__type__ = this;\n        }\n    }\n}\n","import { ESArray } from \"./primitives/esarray\";\nimport { ESObject } from \"./primitives/esobject\";\nimport { ESUndefined } from \"./primitives/esundefined\";\nimport { ESFunction } from \"./primitives/esfunction\";\nimport { ESType } from \"./primitives/estype\";\nimport { ESError } from \"../errors\";\nimport { wrap } from \"./wrap\";\nexport function strip(thing, props) {\n    if (thing == undefined) {\n        return undefined;\n    }\n    else if (thing instanceof ESArray) {\n        return thing.valueOf().map(m => strip(m, props), props);\n    }\n    else if (thing instanceof ESObject) {\n        let val = {};\n        for (let key in thing.valueOf()) {\n            val[key] = strip(thing.valueOf()[key], props);\n        }\n        return val;\n    }\n    else if (thing instanceof ESUndefined) {\n        return undefined;\n    }\n    else if (thing instanceof ESFunction) {\n        if (typeof thing.__value__ === 'function') {\n            return thing.__value__;\n        }\n        return (...args) => {\n            const res = thing.__call__(props, ...args.map(a => wrap(a)));\n            if (res instanceof ESError) {\n                return res;\n            }\n            return strip(res, props);\n        };\n    }\n    else if (thing instanceof ESType) {\n        return thing;\n    }\n    return thing.valueOf();\n}\n","import { Position } from '../../position';\nimport { strip } from '../../runtime/strip';\nimport { str } from '../../util/util';\nimport { TypeError } from '../../errors';\nimport { ESObject } from \"../../runtime/primitives/esobject\";\nimport { ESString } from \"../../runtime/primitives/esstring\";\nconst module = {\n    parse: (props, json) => {\n        return new ESObject(JSON.parse(str(json)));\n    },\n    stringify: (props, json) => {\n        if (!(json instanceof ESObject)) {\n            return new TypeError(Position.unknown, 'object', str(json.typeName()), str(json));\n        }\n        return new ESString(JSON.stringify(strip(json, props)));\n    }\n};\nexport default module;\n","import { IS_NODE_INSTANCE, libs } from '../constants';\nimport { ESError } from '../errors';\nimport { ESSymbol } from '../runtime/symbol';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport ascii from './built-in-modules/ascii';\nimport json from './built-in-modules/json';\nimport dom from './built-in-modules/dom';\nimport Promise from './built-in-modules/promise';\nimport { wrap } from \"../runtime/wrap\";\nconst modules = {\n    ascii, json,\n};\nconst processedModules = {};\nexport function initModules() {\n    processedModules['math'] = new ESJSBinding(Math);\n    processedModules['Promise'] = new ESJSBinding(Promise);\n    if (!IS_NODE_INSTANCE) {\n        const domRes = dom(libs);\n        if (!(domRes instanceof ESError)) {\n            modules['dom'] = domRes;\n        }\n        else {\n            return domRes;\n        }\n    }\n}\nexport function processRawModule(module, name) {\n    const moduleDict = {};\n    const moduleRaw = module.valueOf();\n    for (const key of Object.keys(moduleRaw)) {\n        moduleDict[key] = new ESSymbol(moduleRaw[key], key);\n    }\n    return new ESJSBinding(moduleDict, name);\n}\nexport function moduleExist(name) {\n    return name in modules || name in processedModules;\n}\nexport function addModule(name, body) {\n    modules[name] = {};\n    processedModules[name] = body;\n}\nexport function addModuleFromObj(name, raw) {\n    addModule(name, processRawModule(wrap(raw), name));\n}\nexport function getModule(name) {\n    if (name in processedModules) {\n        return processedModules[name];\n    }\n    if (name in modules) {\n        const res = new ESJSBinding(modules[name]);\n        const processed = processRawModule(res, name);\n        processedModules[name] = processed;\n        return processed;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { builtInFunctions } from \"./built-in/builtInFunctions\";\nimport { getModule, initModules, moduleExist } from './built-in/builtInModules';\nimport { Context } from \"./runtime/context\";\nimport { ESError, ImportError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { run } from \"./index\";\nimport { IS_NODE_INSTANCE } from \"./constants\";\nimport { str } from \"./util/util\";\nimport loadGlobalConstants from \"./built-in/globalConstants\";\nimport { ESType } from \"./runtime/primitives/estype\";\nimport { types } from \"./runtime/primitives/primitive\";\nimport { ESString } from \"./runtime/primitives/esstring\";\nimport { ESNamespace } from \"./runtime/primitives/esnamespace\";\nimport { ESFunction } from \"./runtime/primitives/esfunction\";\nexport function initialise(globalContext, printFunc, inputFunc) {\n    initTypes();\n    builtInFunctions['import'] = [({ context }, rawUrl, callback) => {\n            if (IS_NODE_INSTANCE) {\n                return new ESError(Position.unknown, 'ImportError', 'Is running in node instance but trying to run browser import function');\n            }\n            const url = rawUrl.str();\n            if (moduleExist(str(url))) {\n                return getModule(str(url));\n            }\n            try {\n                fetch(str(url))\n                    .then(c => c.text())\n                    .then((code) => __awaiter(this, void 0, void 0, function* () {\n                    const env = new Context();\n                    env.parent = globalContext;\n                    const res = yield run(code);\n                    if (res.error) {\n                        printFunc(new ImportError(Position.unknown, str(url), res.error.str).str);\n                        return;\n                    }\n                    if (!(callback instanceof ESFunction))\n                        return;\n                    callback.__call__({ context }, new ESNamespace(url, env.getSymbolTableAsDict()));\n                }));\n            }\n            catch (E) {\n                return new ESError(Position.unknown, 'ImportError', E.toString());\n            }\n        }, {}];\n    builtInFunctions['print'] = [({ context }, ...args) => {\n            let out = ``;\n            for (let arg of args)\n                out += str(arg);\n            printFunc(out);\n        }, {}];\n    builtInFunctions['input'] = [({ context }, msg, cbRaw) => {\n            inputFunc(msg.valueOf(), (msg) => {\n                let cb = cbRaw === null || cbRaw === void 0 ? void 0 : cbRaw.valueOf();\n                if (cb instanceof ESFunction) {\n                    let res = cb.__call__({ context }, new ESString(msg));\n                    if (res instanceof ESError) {\n                        console.log(res.str);\n                    }\n                }\n                else if (typeof cb === 'function')\n                    cb(msg);\n                return new ESString('\\'input()\\' does not return anything. Pass in a function as the second argument, which will take the user input as an argument.');\n            });\n        }, {}];\n    for (let builtIn in builtInFunctions) {\n        const fn = new ESFunction(builtInFunctions[builtIn][0], [], builtIn, undefined, undefined, globalContext);\n        fn.info = builtInFunctions[builtIn][1];\n        fn.info.name = builtIn;\n        fn.info.isBuiltIn = true;\n        fn.info.file = 'built-in';\n        globalContext.set(builtIn, fn, {\n            global: true,\n            isConstant: true\n        });\n    }\n    loadGlobalConstants(globalContext);\n    const initModRes = initModules();\n    if (initModRes) {\n        return initModRes;\n    }\n    globalContext.initialisedAsGlobal = true;\n}\nfunction initTypes() {\n    types.type = new ESType(true, 'Type');\n    types.undefined = new ESType(true, 'Undefined');\n    types.string = new ESType(true, 'String');\n    types.array = new ESType(true, 'Array');\n    types.number = new ESType(true, 'Number');\n    types.any = new ESType(true, 'Any');\n    types.function = new ESType(true, 'Function');\n    types.bool = new ESType(true, 'Boolean');\n    types.object = new ESType(true, 'Object');\n    types.error = new ESType(true, 'Error');\n    types.any.info = {\n        name: 'any',\n        description: 'Matches any other type',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.number.info = {\n        name: 'any',\n        description: 'The ES Number type. Is a a double-precision 64-bit binary format IEEE 754 value, like double in Java and C#',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.string.info = {\n        name: 'string',\n        description: 'The ES String type. Holds an array of characters, and can be defined with any of \\', \" and `. Can be indexed like an array.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.bool.info = {\n        name: 'bool',\n        description: 'The ES Bool type. Exactly two instances exist, true and false.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.function.info = {\n        name: 'function',\n        description: 'The ES Function type. Is a block of code which executes when called and takes in 0+ parameters.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.array.info = {\n        name: 'array',\n        description: 'The ES Array type. Defines a set of items of any type which can be accessed by an index with [].',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.object.info = {\n        name: 'object',\n        description: 'The ES Object type. Similar to JS objects or python dictionaries.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.error.info = {\n        name: 'error',\n        description: 'The ES Error type. Call to throw an error.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.type.info = {\n        name: 'type',\n        description: 'The ES Type type. Call to get the type of a value at a string.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n}\n","import { types } from \"../runtime/primitives/primitive\";\nimport { ESBoolean } from \"../runtime/primitives/esboolean\";\nimport { ESUndefined } from \"../runtime/primitives/esundefined\";\nexport default function load(context) {\n    const globalConstants = {\n        'false': new ESBoolean(false),\n        'true': new ESBoolean(true),\n        'nil': new ESUndefined(),\n        'any': types.any,\n        'number': types.number,\n        'string': types.string,\n        'bool': types.bool,\n        'function': types.function,\n        'array': types.array,\n        'object': types.object,\n        'type': types.type,\n        'error': types.error,\n        'undefined': types.undefined\n    };\n    for (let constant in globalConstants) {\n        const value = globalConstants[constant];\n        context.set(constant, value, {\n            global: true,\n            isConstant: true\n        });\n    }\n}\n","export default class {\n    constructor(cb) {\n        this.thens = [];\n        this.resolved = false;\n        cb((value) => {\n            if (this.resolved) {\n                return;\n            }\n            this.resolved = true;\n            for (let then of this.thens) {\n                then(value);\n            }\n        }, (error) => {\n            if (this.resolved) {\n                return;\n            }\n            this.resolved = true;\n            if (this.catch_) {\n                this.catch_(error);\n            }\n        });\n    }\n    then(cb) {\n        if (this.resolved) {\n            return;\n        }\n        this.thens.push(cb);\n        return this;\n    }\n    catch(cb) {\n        if (this.resolved) {\n            return;\n        }\n        this.catch_ = cb;\n        return this;\n    }\n}\n;\n","import { IS_NODE_INSTANCE, permissions } from '../../constants';\nimport { ReferenceError, InvalidRuntimeError, PermissionRequiredError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESJSBinding } from \"../../runtime/primitives/esjsbinding\";\nconst module = () => {\n    if (!permissions.accessDOM) {\n        return new PermissionRequiredError('No access to DOM');\n    }\n    if (IS_NODE_INSTANCE) {\n        return new InvalidRuntimeError();\n    }\n    const w = window;\n    if (typeof w === 'undefined' || !('$' in w)) {\n        return new ReferenceError(Position.unknown, '$ must be property of window to use dom library');\n    }\n    const $ = new ESJSBinding(w['$'], 'jquery');\n    return {\n        $,\n        window: new ESJSBinding(w, 'window'),\n        document: new ESJSBinding(w['document'], 'document'),\n    };\n};\nexport default module;\n","import { initialise } from \"../init\";\nimport { ESError, TypeError, ReferenceError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { str } from \"../util/util\";\nimport { ESSymbol } from './symbol';\nimport chalk from \"../util/colours\";\nexport class Context {\n    constructor() {\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        this.deleted = false;\n        this.path_ = '';\n    }\n    get path() {\n        if (this.path_ || !this.parent) {\n            return this.path_;\n        }\n        return this.parent.path;\n    }\n    set path(val) {\n        this.path_ = val;\n    }\n    get parent() {\n        return this.parent_;\n    }\n    set parent(val) {\n        if (val == this) {\n            console.error(chalk.red(`Setting context parent to self`));\n            return;\n        }\n        this.parent_ = val;\n    }\n    has(identifier) {\n        return this.get(identifier) !== undefined;\n    }\n    hasOwn(identifier) {\n        return this.symbolTable[identifier] instanceof ESSymbol;\n    }\n    get(identifier) {\n        let symbol = this.getSymbol(identifier);\n        if (symbol instanceof ESError || symbol == undefined) {\n            return symbol;\n        }\n        return symbol.value;\n    }\n    getRawSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key].value;\n        return symbols;\n    }\n    getSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key];\n        return symbols;\n    }\n    getSymbol(identifier) {\n        let symbol = this.symbolTable[identifier];\n        if (symbol !== undefined && !symbol.isAccessible)\n            return new TypeError(Position.unknown, 'assessable', 'inaccessible', symbol.identifier);\n        if (symbol === undefined && this.parent) {\n            let res = this.parent.getSymbol(identifier);\n            if (res instanceof ESError)\n                return res;\n            if (!res)\n                return new ReferenceError(Position.unknown, identifier);\n            symbol = res;\n        }\n        return symbol;\n    }\n    set(identifier, value, options = {}) {\n        let context = this;\n        if (options.global) {\n            context = this.root;\n        }\n        else {\n            while (!context.hasOwn(identifier) && context.parent !== undefined)\n                context = context.parent;\n            if (!context.hasOwn(identifier))\n                context = this;\n        }\n        return context.setOwn(identifier, value, options);\n    }\n    setOwn(identifier, value, options = {}) {\n        var _a;\n        if (options.global && !this.initialisedAsGlobal) {\n            options.global = false;\n        }\n        if (!options.forceThroughConst) {\n            if ((_a = this.symbolTable[identifier]) === null || _a === void 0 ? void 0 : _a.isConstant) {\n                return new TypeError(Position.unknown, 'dynamic', 'constant', identifier);\n            }\n        }\n        this.symbolTable[identifier] = new ESSymbol(value, identifier, options);\n    }\n    remove(identifier) {\n        delete this.symbolTable[identifier];\n    }\n    clear() {\n        for (let symbol in this.symbolTable) {\n            this.remove(symbol);\n        }\n        this.parent = undefined;\n        this.deleted = true;\n    }\n    get root() {\n        let parent = this;\n        while (parent.parent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    get keys() {\n        return Object.keys(this.symbolTable);\n    }\n    resetAsGlobal() {\n        var _a, _b;\n        if (!this.initialisedAsGlobal)\n            return;\n        const printFunc = this.root.get('print');\n        const inputFunc = this.root.get('input');\n        if (!printFunc || !inputFunc) {\n            console.error('Error with print and input functions.');\n            return;\n        }\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        initialise(this, ((_a = printFunc.valueOf()) === null || _a === void 0 ? void 0 : _a.func) || console.log, ((_b = inputFunc.valueOf()) === null || _b === void 0 ? void 0 : _b.func) || (() => { }));\n    }\n    clone() {\n        const newContext = new Context();\n        newContext.parent = this.parent;\n        newContext.deleted = this.deleted;\n        newContext.initialisedAsGlobal = this.initialisedAsGlobal;\n        newContext.symbolTable = Object.assign(Object.assign({}, newContext.symbolTable), this.symbolTable);\n        return newContext;\n    }\n    deepClone() {\n        var _a;\n        let clone = this.clone();\n        clone.parent = (_a = clone.parent) === null || _a === void 0 ? void 0 : _a.deepClone();\n        return clone;\n    }\n    log() {\n        console.log('---- CONTEXT ----');\n        for (let key in this.symbolTable) {\n            const symbol = this.symbolTable[key];\n            let out = key;\n            if (symbol.isConstant)\n                out += ' (CONST)';\n            if (!symbol.isAccessible)\n                out += ' (INACCESSIBLE)';\n            out += ': ';\n            out += str(this.symbolTable[key].value);\n            console.log(out);\n        }\n        console.log('-----------------');\n    }\n}\n","import { ESPrimitive } from './esprimitive';\nimport { global } from '../../constants';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { call } from '../functionCaller';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { wrap } from \"../wrap\";\nexport class ESFunction extends ESPrimitive {\n    constructor(func = (() => { }), arguments_ = [], name = '(anon)', this_ = new ESObject(), returnType = types.any, closure = global) {\n        super(func, types.function);\n        this.cast = (props, type) => {\n            return new ESError(Position.unknown, 'TypeError', `Cannot cast type 'function'`);\n        };\n        this.clone = () => {\n            return new ESFunction(this.__value__, this.arguments_, this.name, this.this_, this.returnType, this.__closure__);\n        };\n        this.valueOf = () => this;\n        this.str = () => new ESString(`<Func: ${this.name}>`);\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESFunction))\n                return new ESBoolean(false);\n            return new ESBoolean(this.__value__ === n.__value__);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__call__ = ({ context }, ...params) => {\n            this.__closure__.path = context.path;\n            return call(this.__closure__, this, params);\n        };\n        this.__getProperty__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.arguments_ = arguments_;\n        this.info.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        this.__closure__ = closure;\n        this.info.returnType = str(returnType);\n        this.info.args = arguments_.map(arg => ({\n            name: arg.name,\n            defaultValue: str(arg.defaultValue),\n            type: arg.type.info.name,\n            required: true\n        }));\n    }\n    get name() {\n        var _a;\n        return (_a = this.info.name) !== null && _a !== void 0 ? _a : '(anonymous)';\n    }\n    set name(v) {\n        this.info.name = v;\n    }\n}\n","import { Node } from \"../nodes/node\";\nimport { Context } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { types } from './primitives/primitive';\nimport { str } from \"../util/util\";\nimport { ESUndefined } from \"./primitives/esundefined\";\nimport { ESType } from \"./primitives/estype\";\nimport { ESPrimitive } from \"./primitives/esprimitive\";\nimport { ESArray } from \"./primitives/esarray\";\nimport { ESObject } from \"./primitives/esobject\";\nexport function generateESFunctionCallContext(params, self, parent) {\n    const newContext = new Context();\n    newContext.parent = parent;\n    let max = Math.max(params.length, self.arguments_.length);\n    for (let i = 0; i < max; i++) {\n        let value = new ESUndefined();\n        let type = types.any;\n        if (!self.arguments_[i]) {\n            continue;\n        }\n        const arg = self.arguments_[i];\n        if (!(arg.type instanceof ESType)) {\n            return new TypeError(Position.unknown, 'Type', typeof arg.type, arg.type);\n        }\n        if (params[i] instanceof ESPrimitive) {\n            type = params[i].__type__;\n            value = params[i];\n        }\n        const typeIncludes = arg.type.includesType({ context: parent }, type).bool().valueOf();\n        if (!typeIncludes) {\n            return new TypeError(Position.unknown, arg.type.__name__, type.__name__, str(value));\n        }\n        newContext.setOwn(arg.name, value, {\n            forceThroughConst: true\n        });\n    }\n    let setRes = newContext.setOwn('args', new ESArray(params), {\n        forceThroughConst: true\n    });\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    return newContext;\n}\nfunction callNode(self, context, params, fn) {\n    var _a, _b, _c, _d;\n    const res = fn.interpret(context);\n    if (res.error)\n        return res.error;\n    if (res.funcReturn !== undefined) {\n        res.val = res.funcReturn;\n        res.funcReturn = undefined;\n    }\n    if (self.returnType.includesType({ context }, (_b = (_a = res.val) === null || _a === void 0 ? void 0 : _a.__type__) !== null && _b !== void 0 ? _b : types.any).valueOf() === false) {\n        return new TypeError(Position.unknown, self.returnType.__name__, ((_c = res.val) === null || _c === void 0 ? void 0 : _c.typeName().valueOf()) || 'undefined', (_d = res.val) === null || _d === void 0 ? void 0 : _d.str().valueOf(), '(from function return)');\n    }\n    if (res.val) {\n        return res.val;\n    }\n    else {\n        return new ESUndefined();\n    }\n}\nfunction callNative(self, context, params, fn) {\n    for (let i = params.length; i < fn.length; i++)\n        params.push(new ESUndefined());\n    const res = fn({\n        context\n    }, ...params);\n    if (res instanceof ESError || res instanceof ESPrimitive) {\n        return res;\n    }\n    return new ESUndefined();\n}\nexport function call(context, self, params) {\n    var _a;\n    let callContext = context;\n    context = self.__closure__;\n    context.path = callContext.path;\n    const fn = self.__value__;\n    const newContext = generateESFunctionCallContext(params, self, context);\n    if (newContext instanceof ESError) {\n        return newContext;\n    }\n    let this_ = (_a = self.this_) !== null && _a !== void 0 ? _a : new ESObject();\n    if (!(this_ instanceof ESObject)) {\n        return new TypeError(Position.unknown, 'object', typeof this_, this_, '\\'this\\' must be an object');\n    }\n    let setRes = newContext.setOwn('this', this_);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    if (fn instanceof Node) {\n        return callNode(self, newContext, params, fn);\n    }\n    else if (typeof fn === 'function') {\n        return callNative(self, newContext, params, fn);\n    }\n    else {\n        return new TypeError(Position.unknown, 'function', typeof fn);\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { str } from '../../util/util';\nimport { Position } from '../../position';\nimport { types } from './primitive';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { ESFunction } from \"./esfunction\";\nimport { strip } from \"../strip\";\nimport { wrap } from \"../wrap\";\nexport class ESJSBinding extends ESPrimitive {\n    constructor(value, name = '<AnonNative>', functionsTakeProps = false) {\n        super(value, types.object);\n        this.cast = (props) => {\n            return new ESError(Position.unknown, 'TypeError', `Cannot cast native object`);\n        };\n        this.clone = () => new ESJSBinding(this.__value__);\n        this.str = () => {\n            try {\n                return new ESString(JSON.stringify(this.__value__));\n            }\n            catch (e) {\n                return new ESString(`${this.__value__}`);\n            }\n        };\n        this.__eq__ = ({}, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, k) => {\n            const key = str(k);\n            const val = this.valueOf();\n            const res = val[key];\n            if (res === undefined) {\n                if (this.self.hasOwnProperty(key)) {\n                    const val = this.self[str(key)];\n                    if (typeof val === 'function') {\n                        return new ESFunction(val);\n                    }\n                    return new ESJSBinding(val);\n                }\n                return new IndexError(Position.unknown, key, this);\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            if (typeof res === 'function') {\n                return new ESFunction(({ context }, ...args) => {\n                    args = args.map(o => strip(o, props));\n                    const res = val[key](...args);\n                    return wrap(res);\n                });\n            }\n            return wrap(res);\n        };\n        this.__call__ = (props, ...args) => {\n            if (typeof this.__value__ !== 'function') {\n                return new TypeError(Position.unknown, 'function', typeof this.__value__, str(this));\n            }\n            let res;\n            if (this.functionsTakeProps) {\n                try {\n                    res = new this.__value__(props, ...args.map(o => strip(o, props)));\n                }\n                catch (_a) {\n                    res = this.__value__(props, ...args.map(o => strip(o, props)));\n                }\n            }\n            else {\n                try {\n                    res = new this.__value__(...args.map(o => strip(o, props)));\n                }\n                catch (_b) {\n                    res = this.__value__(...args.map(o => strip(o, props)));\n                }\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            return wrap(res);\n        };\n        this.hasProperty = (props, key) => {\n            return new ESBoolean(!(this.__getProperty__(props, key) instanceof ESError));\n        };\n        this.info.name = str(name);\n        this.functionsTakeProps = functionsTakeProps;\n    }\n}\n","import { ESPrimitive } from \"./primitives/esprimitive\";\nimport { ESUndefined } from \"./primitives/esundefined\";\nimport { ESError } from \"../errors\";\nimport { ESErrorPrimitive } from \"./primitives/eserrorprimitive\";\nimport { ESSymbol } from \"./symbol\";\nimport { ESNumber } from \"./primitives/esnumber\";\nimport { ESString } from \"./primitives/esstring\";\nimport { ESBoolean } from \"./primitives/esboolean\";\nimport { ESJSBinding } from \"./primitives/esjsbinding\";\nexport function wrap(thing, functionsTakeProps = false) {\n    if (thing instanceof ESPrimitive) {\n        return thing;\n    }\n    else if (thing === undefined || thing === null) {\n        return new ESUndefined();\n    }\n    else if (thing instanceof ESError) {\n        return new ESErrorPrimitive(thing);\n    }\n    else if (thing instanceof ESSymbol) {\n        return thing.value;\n    }\n    else if (typeof thing === 'number') {\n        return new ESNumber(thing);\n    }\n    else if (typeof thing === 'string') {\n        return new ESString(thing);\n    }\n    else if (typeof thing === 'boolean') {\n        return new ESBoolean(thing);\n    }\n    else if (typeof thing === 'bigint') {\n        return new ESNumber(Number(thing));\n    }\n    else if (typeof thing === 'symbol') {\n        return new ESString(String(thing));\n    }\n    return new ESJSBinding(thing, undefined, functionsTakeProps);\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { wrap } from '../wrap';\nimport { ESFunction } from \"./esfunction\";\nexport class ESString extends ESPrimitive {\n    constructor(value = '') {\n        super(value, types.string);\n        this.str = () => this;\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    const num = parseFloat(this.valueOf());\n                    if (isNaN(num))\n                        return new ESError(Position.unknown, 'TypeError', `This string is not a valid number`);\n                    return new ESNumber(num);\n                case types.string:\n                    return this;\n                case types.array:\n                    return new ESArray(this.valueOf().split('').map(s => new ESString(s)));\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.unknown, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESString(this.valueOf() + n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESString(this.valueOf().repeat(n.valueOf()));\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new ESBoolean(false);\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.unknown, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf().length > n.valueOf().length);\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.unknown, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf().length < n.valueOf().length);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.len = () => {\n            return new ESNumber(this.valueOf().length);\n        };\n        this.clone = () => new ESString(this.valueOf());\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESString();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return new ESString(this.valueOf()[idx]);\n            }\n            return new ESString();\n        };\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESNumber))\n            return;\n        if (!(value instanceof ESString))\n            value = new ESString(str(value));\n        let idx = key.valueOf();\n        while (idx < 0)\n            idx = this.valueOf().length + idx;\n        const strToInsert = value.str().valueOf();\n        let firstPart = this.__value__.substr(0, idx);\n        let lastPart = this.__value__.substr(idx + strToInsert.length);\n        this.__value__ = firstPart + strToInsert + lastPart;\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { ESFunction } from \"./esfunction\";\nimport { wrap } from \"../wrap\";\nexport class ESNumber extends ESPrimitive {\n    constructor(value = 0) {\n        super(value, types.number);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return this;\n                case types.string:\n                    return this.str();\n                case types.array:\n                    return new ESArray(new Array(this.valueOf()));\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(this.valueOf().toString());\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() + n.valueOf());\n        };\n        this.__subtract__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() - n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() * n.valueOf());\n        };\n        this.__divide__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() / n.valueOf());\n        };\n        this.__pow__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(Math.pow(this.valueOf(), n.valueOf()));\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new ESBoolean(false);\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() > n.valueOf());\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() < n.valueOf());\n        };\n        this.__bool__ = () => {\n            return new ESBoolean(this.valueOf() > 0);\n        };\n        this.bool = this.__bool__;\n        this.clone = () => new ESNumber(this.valueOf());\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { types } from './primitive';\nimport { ESFunction } from \"./esfunction\";\nimport { wrap } from \"../wrap\";\nexport class ESArray extends ESPrimitive {\n    constructor(values = []) {\n        super(values, types.array);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.len);\n                case types.boolean:\n                    return this.bool();\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(str(this.valueOf()));\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESArray)) {\n                return new ESBoolean();\n            }\n            if (n.len !== this.len) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.len; i++) {\n                const thisElement = this.valueOf()[i];\n                const nElement = n.valueOf()[i];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESArray)) {\n                return new TypeError(Position.unknown, 'array', n.typeName().valueOf(), n);\n            }\n            return new ESArray([...this.valueOf(), ...n.valueOf()]);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESUndefined();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return this.valueOf()[idx];\n            }\n            return new ESUndefined();\n        };\n        this.add = (props, val, idx = new ESNumber(this.len - 1)) => {\n            if (!(val instanceof ESPrimitive))\n                throw 'adding non-primitive to array: ' + str(val);\n            this.len++;\n            this.__value__.splice(idx.valueOf(), 0, val);\n            return new ESNumber(this.len);\n        };\n        this.contains = (props, val) => {\n            for (let element of this.__value__) {\n                if (val.__eq__(props, element)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        this.clone = () => {\n            const newArr = [];\n            for (let element of this.valueOf()) {\n                newArr.push(element);\n            }\n            return new ESArray(newArr);\n        };\n        this.len = values.length;\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESNumber)) {\n            return;\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        let idx = key.valueOf();\n        while (idx < 0) {\n            idx = this.valueOf().length + idx;\n        }\n        this.__value__[idx] = value;\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { types } from './primitive';\nimport { wrap } from '../wrap';\nimport { strip } from \"../strip\";\nimport { ESFunction } from \"./esfunction\";\nexport class ESObject extends ESPrimitive {\n    constructor(val = {}) {\n        super(val, types.object);\n        this.isa = (props, type) => {\n            if (type === types.object) {\n                return new ESBoolean(true);\n            }\n            if (!(type instanceof ESType)) {\n                return new TypeError(Position.unknown, 'TypeError', 'type', type.typeName(), str(type));\n            }\n            return this.__type__.includesType(props, type);\n        };\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => {\n            let val = str(this.valueOf());\n            if (val[val.length - 1] === '\\n')\n                val = val.substr(0, val.length - 1);\n            return new ESString(`<ESObject ${val}>`);\n        };\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new ESBoolean();\n            }\n            if (n.keys.length !== this.keys.length) {\n                return new ESBoolean();\n            }\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const thisElement = this.valueOf()[key];\n                const nElement = n.valueOf()[key];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new TypeError(Position.unknown, 'object', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const res = this.__getProperty__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            for (let k of n.keys) {\n                const key = k.valueOf();\n                if (newOb.hasOwnProperty(key)) {\n                    continue;\n                }\n                const res = n.__getProperty__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            return new ESObject(newOb);\n        };\n        this.__subtract__ = (props, n) => {\n            let keysToRemove = [];\n            if (n instanceof ESString) {\n                keysToRemove = [str(n)];\n            }\n            else if (n instanceof ESArray) {\n                keysToRemove = strip(n, props);\n            }\n            else {\n                return new TypeError(Position.unknown, 'array | string', n.typeName().valueOf(), n);\n            }\n            if (!Array.isArray(keysToRemove)) {\n                return new TypeError(Position.unknown, 'array | string', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                if (keysToRemove.indexOf(key) === -1) {\n                    let res = this.__getProperty__(props, k);\n                    if (res instanceof ESError) {\n                        return res;\n                    }\n                    newOb[key] = res;\n                }\n            }\n            return new ESObject(newOb);\n        };\n        this.__getProperty__ = (props, k) => {\n            if (!(k instanceof ESString) && !(k instanceof ESNumber)) {\n                return new TypeError(Position.unknown, 'string | number', k.typeName(), str(k));\n            }\n            const key = k.valueOf();\n            if (this.valueOf().hasOwnProperty(key)) {\n                return this.valueOf()[key];\n            }\n            if (this.self.hasOwnProperty(key)) {\n                const val = this.self[key];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new ESUndefined();\n        };\n        this.__setProperty__ = ({}, key, value) => {\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.unknown, 'string', key.typeName(), str(key));\n            }\n            this.__value__[key.valueOf()] = value;\n        };\n        this.hasProperty = (props, k) => {\n            const key = str(k);\n            if (this.valueOf().hasOwnProperty(str(key))) {\n                return new ESBoolean(true);\n            }\n            return new ESBoolean(this.hasOwnProperty(key));\n        };\n        this.clone = () => {\n            const res = new ESObject();\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            res.__value__ = obj;\n            return res;\n        };\n    }\n    get keys() {\n        return Object.keys(this.valueOf()).map(s => new ESString(s));\n    }\n    set keys(val) { }\n}\n","import { InvalidOperationError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { str } from '../../util/util';\nimport { ESObject } from \"./esobject\";\nimport { strip } from \"../strip\";\nexport class ESPrimitive {\n    constructor(value, type) {\n        this.self = this;\n        this.isa = (props, type) => {\n            return new ESBoolean(type === this.__type__);\n        };\n        this.is = (props, obj) => {\n            return new ESBoolean(obj === this);\n        };\n        this.valueOf = () => this.__value__;\n        this.typeName = () => this.__type__.__name__;\n        this.hasProperty = (props, key) => new ESBoolean(this.hasOwnProperty(str(key)));\n        this.describe = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            this.info.description = str(info);\n        };\n        this.detail = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            if (!(info instanceof ESObject)) {\n                return new TypeError(Position.unknown, 'object', info.typeName(), str(info));\n            }\n            const res = strip(info, props);\n            this.info = Object.assign(Object.assign({}, this.info), res);\n            this.info.isBuiltIn = false;\n        };\n        this.__type__ = type || this;\n        this.__value__ = value;\n        this.info = {};\n    }\n    __add__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __subtract__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __multiply__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __divide__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __pow__(props, n) {\n        return new InvalidOperationError('__pow__', this);\n    }\n    __eq__(props, n) {\n        return new InvalidOperationError('__eq__', this);\n    }\n    __gt__(props, n) {\n        return new InvalidOperationError('__gt__', this);\n    }\n    __lt__(props, n) {\n        return new InvalidOperationError('__lt__', this);\n    }\n    __and__(props, n) {\n        return new InvalidOperationError('__and__', this);\n    }\n    __or__(props, n) {\n        return new InvalidOperationError('__or__', this);\n    }\n    __bool__(props) {\n        return new InvalidOperationError('__bool__', this);\n    }\n    __setProperty__(props, key, value) {\n        return new InvalidOperationError('__setProperty__', this, `[${str(key)}] = ${str(value)}`);\n    }\n    __call__(props, ...parameters) {\n        return new InvalidOperationError('__call__', this);\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { ESFunction } from \"./esfunction\";\nimport { wrap } from \"../wrap\";\nexport class ESBoolean extends ESPrimitive {\n    constructor(val = false) {\n        super(Boolean(val), types.bool);\n        this.__getProperty__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESBoolean)) {\n                return new TypeError(Position.unknown, 'Boolean', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__bool__ = () => this;\n        this.__and__ = (props, n) => new ESBoolean(this.valueOf() && n.bool().valueOf());\n        this.__or__ = (props, n) => {\n            return new ESBoolean(this.valueOf() || n.bool().valueOf());\n        };\n        this.str = () => new ESString(this.valueOf() ? 'true' : 'false');\n        this.clone = () => new ESBoolean(this.valueOf());\n        this.bool = () => this;\n        this.info = {\n            name: str(val),\n            description: `Boolean global constant which evaluates to ${str(val)}, the opposite of ${str(!val)}`,\n            file: 'built-in',\n            isBuiltIn: true,\n            helpLink: 'https://en.wikipedia.org/wiki/Boolean_expression'\n        };\n    }\n}\n","import { IndexError, InvalidOperationError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { str } from '../../util/util';\nimport { wrap } from \"../wrap\";\nexport class ESUndefined extends ESPrimitive {\n    constructor() {\n        super(undefined, types.undefined);\n        this.str = () => new ESString('<Undefined>');\n        this.__eq__ = (props, n) => new ESBoolean(n instanceof ESUndefined ||\n            typeof n === 'undefined' ||\n            typeof n.valueOf() === 'undefined');\n        this.__bool__ = () => new ESBoolean();\n        this.bool = this.__bool__;\n        this.clone = () => new ESUndefined();\n        this.__getProperty__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)]);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.cast = (config, type) => {\n            return new InvalidOperationError('cast', this);\n        };\n        this.info = {\n            name: 'undefined',\n            description: 'Not defined, not a value.',\n            file: 'built-in',\n            isBuiltIn: true\n        };\n    }\n}\n","import { ESError } from \"../errors\";\nimport { now } from \"../constants\";\nimport { ESUndefined } from \"../runtime/primitives/esundefined\";\nimport { ESPrimitive } from \"../runtime/primitives/esprimitive\";\nexport class Node {\n    constructor(pos, isTerminal = false) {\n        this.pos = pos;\n        this.isTerminal = isTerminal;\n    }\n    interpret(context) {\n        var _a;\n        const start = now();\n        let res = {\n            val: new ESUndefined()\n        };\n        const val = this.interpret_(context);\n        if (val instanceof ESError) {\n            res.error = val;\n        }\n        else if (val instanceof ESPrimitive) {\n            res.val = val;\n        }\n        else {\n            res.val = val.val;\n            res.error = val.error;\n            res.funcReturn = val.funcReturn;\n            res.shouldBreak = val.shouldBreak;\n            res.shouldContinue = val.shouldContinue;\n        }\n        if (res.error && res.error.pos.isUnknown) {\n            res.error.pos = this.pos;\n        }\n        (_a = res.val.info).file || (_a.file = this.pos.file);\n        Node.interprets++;\n        let time = now() - start;\n        Node.totalTime += time;\n        if (time > Node.maxTime)\n            Node.maxTime = time;\n        return res;\n    }\n}\nNode.interprets = 0;\nNode.totalTime = 0;\nNode.maxTime = 0;\n","import { Node } from \"../nodes/node\";\nimport { ESPrimitive } from \"../runtime/primitives/esprimitive\";\nexport function deepClone(obj, hash = new WeakMap()) {\n    let result;\n    if (Object(obj) !== obj || obj instanceof Function) {\n        return obj;\n    }\n    if (hash.has(obj)) {\n        return hash.get(obj);\n    }\n    try {\n        result = new obj.constructor();\n    }\n    catch (e) {\n        result = Object.create(Object.getPrototypeOf(obj));\n    }\n    if (obj instanceof Map) {\n        Array.from(obj, ([key, val]) => result.set(deepClone(key, hash), deepClone(val, hash)));\n    }\n    else if (obj instanceof Set) {\n        Array.from(obj, (key) => result.add(deepClone(key, hash)));\n    }\n    hash.set(obj, result);\n    return Object.assign(result, ...Object.keys(obj).map(key => ({ [key]: deepClone(obj[key], hash) })));\n}\nexport function str(val, depth = 0) {\n    if (typeof val === 'string') {\n        if (depth > 0) {\n            return `'${val}'`;\n        }\n        return val;\n    }\n    if (depth > 20) {\n        return '...';\n    }\n    let result = '';\n    if (typeof val === 'undefined') {\n        return 'undefined';\n    }\n    if (val instanceof ESPrimitive) {\n        return val.str().valueOf();\n    }\n    if (val instanceof Node) {\n        return `<RunTimeNode: ${val.constructor.name}>`;\n    }\n    switch (typeof val) {\n        case 'object':\n            if (Array.isArray(val)) {\n                result += '[';\n                for (let item of val) {\n                    try {\n                        result += str(item, depth + 1) + `, `;\n                    }\n                    catch (e) {\n                        result += '<large property>, ';\n                    }\n                }\n                if (val.length) {\n                    result = result.substring(0, result.length - 2);\n                }\n                result += ']';\n            }\n            else {\n                try {\n                    result += val.constructor.name;\n                }\n                catch (e) {\n                    result += 'UNKNOWN_CONSTRUCTOR';\n                }\n                result += ': {\\n';\n                let i = 0;\n                for (let item in val) {\n                    i++;\n                    if (!val.hasOwnProperty || !val.hasOwnProperty(item)) {\n                        continue;\n                    }\n                    result += `  ${item}: ${str(val[item], depth + 1) || ''}, \\n`;\n                }\n                if (i > 0) {\n                    result = result.substring(0, result.length - 3);\n                }\n                result += '\\n}\\n';\n            }\n            break;\n        case 'string':\n            result = `'${val}'`;\n            break;\n        case \"bigint\":\n        case \"number\":\n        case \"boolean\":\n            result = `${val}`;\n            break;\n        case \"undefined\":\n            result = '<NativeUndefined>';\n            break;\n        case \"function\":\n            result = `<NativeFunction ${val.name}>`;\n            break;\n    }\n    for (let i = 0; i < depth; i++)\n        result = indent(result);\n    return result;\n}\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms));\nexport function indent(str) {\n    return str.replace(/\\n/g, '\\n    ');\n}\nexport const validURI = (value) => /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(value);\n","import { IS_NODE_INSTANCE } from './constants';\nimport { Position } from \"./position\";\nimport { str } from \"./util/util\";\nimport chalk from \"./util/colours\";\nexport class ESError {\n    constructor(pos, name, details) {\n        this.traceback = [];\n        this.pos = pos;\n        this.name = name;\n        this.details = details;\n    }\n    get colouredStr() {\n        let out = '';\n        if (this.traceback.length) {\n            out = chalk.yellow('Error Traceback (most recent call last):\\n');\n            for (let pos of [...this.traceback].reverse())\n                out += `    ${chalk.cyan(pos.position.str)}:\\n        ${pos.line}\\n`;\n        }\n        out += `${chalk.red(this.name)}: ${this.details} \\n at ${chalk.cyan(this.pos.str)}`;\n        return out;\n    }\n    get str() {\n        return `${this.name}: ${this.details} \\n at ${this.pos.str}`;\n    }\n}\nexport class IllegalCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'IllegalCharError', `'${char}'`);\n    }\n}\nexport class InvalidSyntaxError extends ESError {\n    constructor(pos, details) {\n        super(pos, 'InvalidSyntaxError', details);\n    }\n}\nexport class ExpectedCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'ExpectedCharError', `'${char}'`);\n    }\n}\nexport class TypeError extends ESError {\n    constructor(pos, expectedType, actualType, value = '', detail = '') {\n        super(pos, 'TypeError', `Expected type '${expectedType}', got type '${actualType}' ${typeof value === 'undefined' ? '' : ` on value '${str(value)}'`} ${!detail ? '' : detail}`);\n    }\n}\nexport class ImportError extends ESError {\n    constructor(pos, url, detail = '') {\n        super(pos, 'ImportError', `Could not import ${url}: ${detail}`);\n    }\n}\nexport class ReferenceError extends ESError {\n    constructor(pos, ref) {\n        super(pos, 'ReferenceError', `${ref} is not defined`);\n    }\n}\nexport class IndexError extends ESError {\n    constructor(pos, ref, object) {\n        var _a;\n        super(pos, 'IndexError', `'${ref}' is not a property of '${((_a = object === null || object === void 0 ? void 0 : object.info) === null || _a === void 0 ? void 0 : _a.name) || str(object)}'`);\n    }\n}\nexport class InvalidOperationError extends ESError {\n    constructor(op, value, detail = '', pos = Position.unknown) {\n        var _a;\n        super(pos, 'TypeError', `Cannot perform '${op}' on value ${((_a = value === null || value === void 0 ? void 0 : value.info) === null || _a === void 0 ? void 0 : _a.name) || str(value)}: ${detail}`);\n    }\n}\nexport class InvalidRuntimeError extends ESError {\n    constructor() {\n        super(Position.unknown, 'InvalidRuntimeError', `Required runtime of ${IS_NODE_INSTANCE ? 'browser' : 'node'}`);\n    }\n}\nexport class TestFailed extends ESError {\n    constructor(detail) {\n        super(Position.unknown, 'TestFailed', detail);\n    }\n}\nexport class PermissionRequiredError extends ESError {\n    constructor(detail) {\n        super(Position.unknown, 'PermissionRequiredError', detail);\n    }\n}\n","export class Token {\n    constructor(pos, type, value = undefined) {\n        this.type = type;\n        this.value = value;\n        this.pos = pos;\n    }\n    matches(type, val) {\n        return this.type === type && this.value === val;\n    }\n}\n","import { Position } from \"../position\";\nimport { digits, doubleCharTokens, identifierChars, KEYWORDS, multiLineCommentEnd, multiLineCommentStart, singleCharTokens, singleLineComment, stringSurrounds, tripleCharTokens, tt, } from '../constants';\nimport { IllegalCharError } from \"../errors\";\nimport { Token } from \"./tokens\";\nexport class Lexer {\n    constructor(program, fileName) {\n        this.text = program;\n        this.position = new Position(-1, 0, -1, fileName);\n        this.advance();\n    }\n    advance() {\n        this.position.advance(this.currentChar);\n        this.currentChar = this.text[this.position.idx];\n    }\n    generate() {\n        if (!this.text) {\n            return [new Token(this.position, tt.EOF)];\n        }\n        const tokens = [];\n        while (this.currentChar !== undefined) {\n            if (' \\t\\n'.includes(this.currentChar)) {\n                this.advance();\n            }\n            else if (digits.includes(this.currentChar)) {\n                tokens.push(this.makeNumber());\n            }\n            else if (this.currentChar === singleLineComment[0] &&\n                this.text[this.position.idx + 1] === singleLineComment[1]) {\n                this.singleLineComment();\n            }\n            else if (this.currentChar === multiLineCommentStart[0] &&\n                this.text[this.position.idx + 1] === multiLineCommentStart[1]) {\n                this.multiLineComment();\n            }\n            else if (identifierChars.includes(this.currentChar)) {\n                tokens.push(this.makeIdentifier());\n            }\n            else if (stringSurrounds.indexOf(this.currentChar) !== -1) {\n                tokens.push(this.makeString());\n            }\n            else {\n                const possibleAssignFirstChar = this.currentChar;\n                let token = this.unknownChar();\n                if (token) {\n                    if (token.type === tt.ASSIGN) {\n                        token.value = possibleAssignFirstChar;\n                    }\n                    tokens.push(token);\n                }\n                else {\n                    let pos = this.position.clone;\n                    let char = this.currentChar;\n                    this.advance();\n                    return new IllegalCharError(pos, char);\n                }\n            }\n        }\n        tokens.push(new Token(this.position, tt.EOF));\n        return tokens;\n    }\n    makeNumber() {\n        const pos = this.position.clone;\n        let numStr = '';\n        let dotCount = 0;\n        while (this.currentChar !== undefined && (digits + '._').includes(this.currentChar)) {\n            if (this.currentChar === '.') {\n                if (dotCount === 1) {\n                    break;\n                }\n                dotCount++;\n                numStr += '.';\n            }\n            else if (this.currentChar !== '_') {\n                numStr += this.currentChar;\n            }\n            this.advance();\n        }\n        return new Token(pos, tt.NUMBER, parseFloat(numStr));\n    }\n    makeString() {\n        const pos = this.position.clone;\n        let str = '';\n        let strClose = this.currentChar;\n        this.advance();\n        while (this.currentChar !== strClose && this.currentChar !== undefined) {\n            if (this.currentChar === '\\\\') {\n                this.advance();\n                if (this.currentChar === 'n') {\n                    str += '\\n';\n                    this.advance();\n                    continue;\n                }\n            }\n            str += this.currentChar;\n            this.advance();\n        }\n        this.advance();\n        return new Token(pos, tt.STRING, str);\n    }\n    makeIdentifier() {\n        let idStr = '';\n        const posStart = this.position.clone;\n        while (this.currentChar !== undefined && (identifierChars + digits).includes(this.currentChar)) {\n            idStr += this.currentChar;\n            this.advance();\n        }\n        let tokType = tt.IDENTIFIER;\n        if (KEYWORDS.indexOf(idStr) !== -1) {\n            tokType = tt.KEYWORD;\n        }\n        return new Token(posStart, tokType, idStr);\n    }\n    unknownChar() {\n        if (this.currentChar === undefined) {\n            return undefined;\n        }\n        for (let triple in tripleCharTokens) {\n            if (triple[0] === this.currentChar)\n                if (triple[1] === this.text[this.position.idx + 1])\n                    if (triple[2] === this.text[this.position.idx + 2]) {\n                        const pos = this.position.clone;\n                        this.advance();\n                        this.advance();\n                        this.advance();\n                        return new Token(pos, tripleCharTokens[triple]);\n                    }\n        }\n        for (let double in doubleCharTokens) {\n            if (double[0] === this.currentChar)\n                if (double[1] === this.text[this.position.idx + 1]) {\n                    const pos = this.position.clone;\n                    this.advance();\n                    this.advance();\n                    return new Token(pos, doubleCharTokens[double]);\n                }\n        }\n        if (singleCharTokens.hasOwnProperty(this.currentChar)) {\n            let pos = this.position.clone;\n            let val = singleCharTokens[this.currentChar];\n            this.advance();\n            return new Token(pos, val);\n        }\n        return undefined;\n    }\n    singleLineComment() {\n        this.advance();\n        while (this.currentChar !== '\\n' && this.currentChar !== undefined) {\n            this.advance();\n        }\n        this.advance();\n    }\n    multiLineComment() {\n        this.advance();\n        while (!(this.currentChar === multiLineCommentEnd[0] &&\n            this.text[this.position.idx + 1] === multiLineCommentEnd[1])) {\n            this.advance();\n        }\n        this.advance();\n        this.advance();\n    }\n}\n","export class compileResult {\n    constructor(val) {\n        this.val = '';\n        if (typeof val === 'string') {\n            this.val = val;\n        }\n        else if (val) {\n            this.error = val;\n        }\n    }\n}\n","import { compileResult } from \"./index\";\nimport { Node } from \"./node\";\nimport { Position } from \"../position\";\nimport { ESError, ReferenceError, TypeError } from \"../errors\";\nimport { ESNumber } from \"../runtime/primitives/esnumber\";\nimport { ESString } from \"../runtime/primitives/esstring\";\nimport { ESUndefined } from \"../runtime/primitives/esundefined\";\nexport class N_number extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        if (typeof val !== 'number') {\n            return new TypeError(this.pos, 'number', typeof val);\n        }\n        return {\n            val: new ESNumber(val)\n        };\n    }\n    compileJS(options) {\n        return new compileResult(this.a.value.toString());\n    }\n}\nexport class N_string extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        if (typeof val !== 'string')\n            return new TypeError(this.pos, 'string', typeof val);\n        return {\n            val: new ESString(val)\n        };\n    }\n    compileJS(options) {\n        return new compileResult(`'${this.a.value}'`);\n    }\n}\nexport class N_variable extends Node {\n    constructor(a) {\n        super(a.pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        if (!context.has(this.a.value))\n            return new ReferenceError(this.a.pos, this.a.value);\n        let res = {\n            val: new ESUndefined()\n        };\n        let symbol = context.getSymbol(this.a.value);\n        if (!symbol) {\n            return new ESUndefined();\n        }\n        if (symbol instanceof ESError) {\n            return symbol;\n        }\n        res.val = symbol.value;\n        return res;\n    }\n    compileJS(options) {\n        let val = this.a.value.toString();\n        switch (val) {\n            case 'import':\n                return new compileResult('import_');\n            default:\n                return new compileResult(this.a.value.toString());\n        }\n    }\n}\nexport class N_undefined extends Node {\n    constructor(pos = Position.unknown) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        return {\n            val: new ESUndefined()\n        };\n    }\n    compileJS(options) {\n        return new compileResult('undefined');\n    }\n}\nexport class N_break extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        return {\n            val: new ESUndefined(),\n            shouldBreak: true\n        };\n    }\n    compileJS(options) {\n        return new compileResult('break');\n    }\n}\nexport class N_continue extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        return {\n            val: new ESUndefined(),\n            shouldContinue: true\n        };\n    }\n    compileJS(options) {\n        return new compileResult('continue');\n    }\n}\nexport class N_primitiveWrapper extends Node {\n    constructor(val, pos = Position.unknown) {\n        super(pos, true);\n        this.value = val;\n    }\n    interpret_(context) {\n        return this.value;\n    }\n    compileJS(options) {\n        return new compileResult(JSON.stringify(this.value.valueOf()));\n    }\n}\n","import { compileResult } from \"./index\";\nimport { Node } from \"./node\";\nimport { ESUndefined } from \"../runtime/primitives/esundefined\";\nimport { ESArray } from \"../runtime/primitives/esarray\";\nexport class N_statements extends Node {\n    constructor(pos, items, topLevel = false) {\n        super(pos);\n        this.items = items;\n        this.topLevel = topLevel;\n    }\n    interpret_(context) {\n        if (!this.topLevel) {\n            let last;\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (typeof res.funcReturn !== 'undefined') || res.shouldBreak || res.shouldContinue) {\n                    return res;\n                }\n                last = res.val;\n            }\n            if (last)\n                return last;\n            return new ESUndefined();\n        }\n        else {\n            let result = {\n                val: new ESUndefined()\n            };\n            let interpreted = [];\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (res.funcReturn !== undefined))\n                    return res;\n                if (!res.val)\n                    continue;\n                let val = res.val.clone();\n                interpreted.push(val);\n            }\n            result.val = new ESArray(interpreted);\n            return result;\n        }\n    }\n    compileJS(options) {\n        const res = new compileResult;\n        for (let item of this.items) {\n            const itemRes = item.compileJS(options);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ';';\n            if (!options.minify) {\n                res.val += '\\n';\n            }\n        }\n        return res;\n    }\n}\n","import { compileResult } from \"./index\";\nimport { Node } from \"./node\";\nimport { ESUndefined } from \"../runtime/primitives/esundefined\";\nexport class N_return extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        let res = {\n            val: new ESUndefined()\n        };\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        res.funcReturn = val.val;\n        return res;\n    }\n    compileJS(options) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(options);\n        if (valRes === null || valRes === void 0 ? void 0 : valRes.error)\n            return valRes;\n        return new compileResult(`return(${valRes === null || valRes === void 0 ? void 0 : valRes.val})`);\n    }\n}\n","import { compileResult } from \"./index\";\nimport { Node } from \"./node\";\nimport { ESUndefined } from \"../runtime/primitives/esundefined\";\nexport class N_yield extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        var _a;\n        if (this.value === undefined) {\n            return {\n                val: new ESUndefined(),\n                funcReturn: new ESUndefined()\n            };\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        if ((_a = val.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            return {\n                val: new ESUndefined(),\n                funcReturn: val.val\n            };\n        }\n        return {\n            val: new ESUndefined()\n        };\n    }\n    compileJS(options) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(options);\n        if (!valRes || !valRes.val) {\n            return new compileResult('');\n        }\n        return new compileResult(`if(_=${valRes.val}){return(_))`);\n    }\n}\n","import { compileResult } from \"./index\";\nimport { Node } from \"./node\";\nimport { Context } from \"../runtime/context\";\nimport { ESUndefined } from \"../runtime/primitives/esundefined\";\nexport class N_while extends Node {\n    constructor(pos, comparison, loop) {\n        super(pos);\n        this.comparison = comparison;\n        this.loop = loop;\n    }\n    interpret_(context) {\n        var _a, _b;\n        let newContext = new Context();\n        newContext.parent = context;\n        while (true) {\n            let shouldLoop = this.comparison.interpret(context);\n            if (shouldLoop.error)\n                return shouldLoop;\n            if (!((_b = (_a = shouldLoop.val) === null || _a === void 0 ? void 0 : _a.bool()) === null || _b === void 0 ? void 0 : _b.valueOf()))\n                break;\n            let potentialError = this.loop.interpret(newContext);\n            if (potentialError.error)\n                return potentialError;\n            if (potentialError.shouldBreak)\n                break;\n        }\n        return new ESUndefined();\n    }\n    compileJS(options) {\n        const comparisonRes = this.comparison.compileJS(options);\n        if (comparisonRes.error)\n            return comparisonRes;\n        const bodyRes = this.loop.compileJS(options);\n        if (bodyRes.error)\n            return bodyRes;\n        return new compileResult(`while(${comparisonRes.val}){${bodyRes.val}}`);\n    }\n}\n","import { compileResult } from \"./index\";\nimport { Node } from \"./node\";\nimport { ESObject } from \"../runtime/primitives/esobject\";\nexport class N_objectLiteral extends Node {\n    constructor(pos, properties) {\n        super(pos);\n        this.properties = properties;\n    }\n    interpret_(context) {\n        let interpreted = {};\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.interpret(context);\n            if (value.error)\n                return value.error;\n            const key = keyNode.interpret(context);\n            if (key.error)\n                return key.error;\n            if (key.val && value.val) {\n                interpreted[key.val.valueOf()] = value.val;\n            }\n        }\n        return new ESObject(interpreted);\n    }\n    compileJS(options) {\n        const res = new compileResult('{');\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.compileJS(options);\n            if (value.error)\n                return value;\n            const key = keyNode.compileJS(options);\n            if (key.error)\n                return key;\n            if (key.val && value.val) {\n                res.val += `[${key.val}]: ${value.val},`;\n            }\n        }\n        res.val += '}';\n        return res;\n    }\n}\n","import { compileResult } from \"./index\";\nimport { Node } from \"./node\";\nimport { ESArray } from \"../runtime/primitives/esarray\";\nexport class N_array extends Node {\n    constructor(pos, items, shouldClone = false) {\n        super(pos);\n        this.items = items;\n        this.shouldClone = shouldClone;\n    }\n    interpret_(context) {\n        let interpreted = [];\n        for (let item of this.items) {\n            const res = item.interpret(context);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (!res.val)\n                continue;\n            let val = res.val;\n            if (this.shouldClone) {\n                val = val.clone();\n            }\n            interpreted.push(val);\n        }\n        return {\n            val: new ESArray(interpreted)\n        };\n    }\n    compileJS(options) {\n        const res = new compileResult('[');\n        for (let item of this.items) {\n            const itemRes = item.compileJS(options);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ',';\n        }\n        res.val += ']';\n        return res;\n    }\n}\n","import { compileResult } from \"./index\";\nimport { Node } from \"./node\";\nimport { Context } from \"../runtime/context\";\nimport { ESUndefined } from \"../runtime/primitives/esundefined\";\nexport class N_if extends Node {\n    constructor(pos, comparison, ifTrue, ifFalse) {\n        super(pos);\n        this.comparison = comparison;\n        this.ifFalse = ifFalse;\n        this.ifTrue = ifTrue;\n    }\n    interpret_(context) {\n        var _a;\n        let newContext = new Context();\n        newContext.parent = context;\n        let res = {\n            val: new ESUndefined()\n        };\n        let compRes = this.comparison.interpret(context);\n        if (compRes.error)\n            return compRes;\n        if ((_a = compRes.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            res = this.ifTrue.interpret(newContext);\n            res.val = new ESUndefined();\n            if (res.error)\n                return res;\n        }\n        else if (this.ifFalse) {\n            res = this.ifFalse.interpret(newContext);\n            res.val = new ESUndefined();\n            if (res.error)\n                return res;\n        }\n        return res;\n    }\n    compileJS(options) {\n        const statementRes = this.comparison.compileJS(options);\n        if (statementRes.error)\n            return statementRes;\n        const ifTrueRes = this.ifTrue.compileJS(options);\n        if (ifTrueRes.error)\n            return ifTrueRes;\n        if (!this.ifFalse) {\n            return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}`);\n        }\n        const ifFalseRes = this.ifFalse.compileJS(options);\n        if (ifFalseRes.error)\n            return ifFalseRes;\n        return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}}else{${ifFalseRes.val}}`);\n    }\n}\n","import { TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { ESType } from \"./primitives/estype\";\nimport { ESPrimitive } from \"./primitives/esprimitive\";\nexport function interpretArgument(arg, context) {\n    var _a;\n    let type;\n    const typeRes = arg.type.interpret(context);\n    if (typeRes.error)\n        return typeRes.error;\n    if (typeRes.val instanceof ESType)\n        type = typeRes.val;\n    else\n        return new TypeError(Position.unknown, 'Type', typeof typeRes.val, typeRes.val, 'Argument can\\'t be undefined');\n    let defaultValue;\n    if (arg.defaultValue) {\n        let defaultValRes = (_a = arg.defaultValue) === null || _a === void 0 ? void 0 : _a.interpret(context);\n        if (defaultValRes.error)\n            return defaultValRes.error;\n        if (defaultValRes.val instanceof ESPrimitive)\n            defaultValue = defaultValRes.val;\n    }\n    return {\n        name: arg.name,\n        type, defaultValue\n    };\n}\n","import { compileResult } from \"./index\";\nimport { Node } from \"./node\";\nimport { interpretArgument } from \"../runtime/argument\";\nimport { ESObject } from \"../runtime/primitives/esobject\";\nimport { ESError, TypeError } from \"../errors\";\nimport { ESType } from \"../runtime/primitives/estype\";\nimport { ESFunction } from \"../runtime/primitives/esfunction\";\nexport class N_functionDefinition extends Node {\n    constructor(pos, body, argNames, returnType, name = '(anon)', this_ = new ESObject(), description = '') {\n        super(pos);\n        this.arguments = argNames;\n        this.body = body;\n        this.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        this.description = description;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        let args = [];\n        for (let arg of this.arguments) {\n            const res = interpretArgument(arg, context);\n            if (res instanceof ESError)\n                return res;\n            args.push(res);\n        }\n        const returnTypeRes = this.returnType.interpret(context);\n        if (returnTypeRes.error)\n            return returnTypeRes.error;\n        if (!(returnTypeRes.val instanceof ESType))\n            return new TypeError(this.returnType.pos, 'Type', (_b = (_a = returnTypeRes.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) !== null && _b !== void 0 ? _b : '<Undefined>', (_c = returnTypeRes.val) === null || _c === void 0 ? void 0 : _c.str().valueOf(), `On func '${this.name}' return type`);\n        return new ESFunction(this.body, args, this.name, this.this_, returnTypeRes.val, context);\n    }\n    compileJS(options) {\n        const res = new compileResult('function(');\n        for (let param of this.arguments) {\n            res.val += param.name + ',';\n        }\n        res.val += '){';\n        const bodyRes = this.body.compileJS(options);\n        if (bodyRes.error)\n            return bodyRes;\n        res.val += bodyRes.val + '}';\n        return res;\n    }\n}\n","import { ESType } from \"../runtime/primitives/estype\";\nimport { types } from \"../runtime/primitives/primitive\";\nimport { ESError, InvalidSyntaxError, TypeError } from \"../errors\";\nimport { str } from \"../util/util\";\nimport { ESUndefined } from \"../runtime/primitives/esundefined\";\nimport { compileResult } from \"./index\";\nimport { Node } from \"./node\";\nimport { N_primitiveWrapper } from \"./terminal\";\nexport class N_varAssign extends Node {\n    constructor(pos, varNameTok, value, assignType = '=', isGlobal = false, isLocal = false, isConstant = false, isDeclaration = false, type = types.any) {\n        super(pos);\n        this.value = value;\n        this.varNameTok = varNameTok;\n        this.isGlobal = isGlobal;\n        this.assignType = assignType;\n        this.isConstant = isConstant;\n        this.isDeclaration = isDeclaration;\n        this.isLocal = isLocal;\n        if (type instanceof ESType) {\n            this.type = new N_primitiveWrapper(type);\n        }\n        else\n            this.type = type;\n    }\n    interpret_(context) {\n        var _a, _b, _c, _d;\n        if (this.isDeclaration && context.hasOwn(this.varNameTok.value)) {\n            return new InvalidSyntaxError(this.pos, `Symbol '${this.varNameTok.value}' already exists, and cannot be redeclared`);\n        }\n        const res = this.value.interpret(context);\n        const typeRes = this.type.interpret(context);\n        if (res.error)\n            return res.error;\n        if (typeRes.error)\n            return typeRes.error;\n        if (!typeRes.val || !(typeRes.val instanceof ESType)) {\n            return new TypeError(this.varNameTok.pos, 'Type', (_b = (_a = typeRes.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) !== null && _b !== void 0 ? _b : 'undefined', (_c = typeRes.val) === null || _c === void 0 ? void 0 : _c.str(), `@ !typeRes.val || !(typeRes.val instanceof ESType)`);\n        }\n        if (!res.val) {\n            return new TypeError(this.varNameTok.pos, '~undefined', 'undefined', 'N_varAssign.interpret_');\n        }\n        if (!typeRes.val.includesType({ context }, res.val.__type__).bool().valueOf()) {\n            return new TypeError(this.varNameTok.pos, str(typeRes.val), str((_d = res.val) === null || _d === void 0 ? void 0 : _d.typeName()), str(res.val));\n        }\n        if (this.isDeclaration) {\n            if (this.assignType !== '=')\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            context.setOwn(this.varNameTok.value, res.val, {\n                global: false,\n                isConstant: this.isConstant\n            });\n            return res.val;\n        }\n        if (this.assignType === '=') {\n            let value = res.val;\n            if (value === undefined)\n                value = new ESUndefined();\n            const setRes = context.set(this.varNameTok.value, value, {\n                global: this.isGlobal,\n                isConstant: this.isConstant\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n        }\n        else {\n            if (this.isDeclaration)\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            const currentVal = context.get(this.varNameTok.value);\n            if (currentVal instanceof ESError)\n                return currentVal;\n            if (currentVal == undefined)\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            let newVal;\n            let assignVal = res.val;\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError) {\n                return newVal;\n            }\n            let setRes = context.set(this.varNameTok.value, newVal, {\n                global: this.isGlobal,\n                isConstant: this.isConstant\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n            res.val = newVal;\n        }\n        if (res.val.info.name === '(anonymous)' || !res.val.info.name) {\n            res.val.info.name = this.varNameTok.value;\n        }\n        return res;\n    }\n    compileJS(options) {\n        const val = this.value.compileJS(options);\n        if (val.error)\n            return val;\n        let declaration = '';\n        if (this.isDeclaration) {\n            if (this.isGlobal) {\n                declaration = 'var';\n            }\n            else if (this.isConstant) {\n                declaration = 'const';\n            }\n            else {\n                declaration = 'let';\n            }\n        }\n        return new compileResult(`${declaration} ${this.varNameTok.value}${this.assignType}${val.val}`);\n    }\n}\n","import { ESError, InvalidSyntaxError, TypeError } from \"../errors\";\nimport { tokenTypeString, tt } from \"../constants\";\nimport { ESBoolean } from \"../runtime/primitives/esboolean\";\nimport { compileResult } from \"./index\";\nimport { Node } from \"./node\";\nexport class N_binOp extends Node {\n    constructor(pos, left, opTok, right) {\n        super(pos);\n        this.left = left;\n        this.opTok = opTok;\n        this.right = right;\n    }\n    interpret_(context) {\n        const left = this.left.interpret(context);\n        if (left.error)\n            return left.error;\n        const right = this.right.interpret(context);\n        if (right.error)\n            return right.error;\n        const l = left.val;\n        const r = right.val;\n        if (typeof l === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', l, 'N_binOp.interpret_');\n        }\n        if (typeof r === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', r, 'N_binOp.interpret_');\n        }\n        switch (this.opTok.type) {\n            case tt.LTE: {\n                const lt = l.__lt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (lt instanceof ESError)\n                    return lt;\n                if (eq instanceof ESError)\n                    return eq;\n                return lt.__or__({ context }, eq);\n            }\n            case tt.GTE: {\n                const gt = l.__gt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (gt instanceof ESError)\n                    return gt;\n                if (eq instanceof ESError)\n                    return eq;\n                return gt.__or__({ context }, eq);\n            }\n            case tt.NOTEQUALS: {\n                const res = l.__eq__({ context }, r);\n                if (res instanceof ESError)\n                    return res;\n                return new ESBoolean(!res.bool().valueOf());\n            }\n            case tt.ADD:\n                return l.__add__({ context }, r);\n            case tt.SUB:\n                return l.__subtract__({ context }, r);\n            case tt.MUL:\n                return l.__multiply__({ context }, r);\n            case tt.DIV:\n                return l.__divide__({ context }, r);\n            case tt.POW:\n                return l.__pow__({ context }, r);\n            case tt.EQUALS:\n                return l.__eq__({ context }, r);\n            case tt.LT:\n                return l.__lt__({ context }, r);\n            case tt.GT:\n                return l.__gt__({ context }, r);\n            case tt.AND:\n                return l.__and__({ context }, r);\n            case tt.OR:\n                return l.__or__({ context }, r);\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid binary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(options) {\n        const left = this.left.compileJS(options);\n        if (left.error)\n            return left;\n        const right = this.right.compileJS(options);\n        if (right.error)\n            return right;\n        const res = new compileResult;\n        res.val = `${left.val}${tokenTypeString[this.opTok.type]}${right.val}`;\n        return res;\n    }\n}\n","import { compileResult } from \"./index\";\nimport { Node } from \"./node\";\nimport { ESFunction } from \"../runtime/primitives/esfunction\";\nimport { TypeError } from \"../errors\";\nimport { ESType } from \"../runtime/primitives/estype\";\nexport class N_class extends Node {\n    constructor(pos, methods, extends_, init, name = '<anon class>') {\n        super(pos);\n        this.init = init;\n        this.methods = methods;\n        this.name = name;\n        this.extends_ = extends_;\n        this.instances = [];\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const methods = [];\n        for (let method of this.methods) {\n            const res = method.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (!(res.val instanceof ESFunction))\n                return new TypeError(this.pos, 'Function', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            methods.push(res.val);\n        }\n        let extends_;\n        if (this.extends_) {\n            const extendsRes = this.extends_.interpret(context);\n            if (extendsRes.error) {\n                return extendsRes.error;\n            }\n            if (!(extendsRes.val instanceof ESType))\n                return new TypeError(this.pos, 'Function', ((_b = extendsRes.val) === null || _b === void 0 ? void 0 : _b.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            extends_ = extendsRes.val;\n        }\n        let init;\n        if (this.init) {\n            const initRes = this.init.interpret(context);\n            if (initRes.error) {\n                return initRes.error;\n            }\n            if (!(initRes.val instanceof ESFunction)) {\n                return new TypeError(this.pos, 'Function', ((_c = initRes.val) === null || _c === void 0 ? void 0 : _c.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            init = initRes.val;\n        }\n        return new ESType(false, this.name, methods, extends_, init);\n    }\n    compileJS(options) {\n        return new compileResult('function(){return{};}');\n    }\n}\n","import { compileResult } from \"./index\";\nimport { Node } from \"./node\";\nimport { Context } from \"../runtime/context\";\nimport { TypeError } from \"../errors\";\nimport { ESNumber } from \"../runtime/primitives/esnumber\";\nimport { ESObject } from \"../runtime/primitives/esobject\";\nimport { ESString } from \"../runtime/primitives/esstring\";\nimport { ESArray } from \"../runtime/primitives/esarray\";\nimport { ESUndefined } from \"../runtime/primitives/esundefined\";\nexport class N_for extends Node {\n    constructor(pos, body, array, identifier, isGlobalIdentifier, isConstIdentifier) {\n        super(pos);\n        this.body = body;\n        this.array = array;\n        this.identifier = identifier;\n        this.isGlobalId = isGlobalIdentifier;\n        this.isConstId = isConstIdentifier;\n    }\n    interpret_(context) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        let newContext = new Context();\n        newContext.parent = context;\n        const array = this.array.interpret(context);\n        if (array.error)\n            return array;\n        if (['Array', 'Number', 'Object', 'String', 'Any'].indexOf(((_a = array.val) === null || _a === void 0 ? void 0 : _a.typeName()) || '') === -1) {\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val + ' | ' + ((_b = array.val) === null || _b === void 0 ? void 0 : _b.typeName()));\n        }\n        function iteration(body, id, element, isGlobal, isConstant) {\n            newContext.set(id, element, {\n                global: isGlobal,\n                isConstant\n            });\n            const res = body.interpret(newContext);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (res.shouldBreak) {\n                res.shouldBreak = false;\n                return 'break';\n            }\n            if (res.shouldContinue)\n                res.shouldContinue = false;\n        }\n        if (array.val instanceof ESNumber || typeof ((_c = array.val) === null || _c === void 0 ? void 0 : _c.valueOf()) == 'number') {\n            for (let i = 0; i < array.val.valueOf(); i++) {\n                const res = iteration(this.body, this.identifier.value, new ESNumber(i), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESObject ||\n            (typeof ((_d = array.val) === null || _d === void 0 ? void 0 : _d.valueOf()) == 'number' && !Array.isArray((_e = array.val) === null || _e === void 0 ? void 0 : _e.valueOf()))) {\n            for (let element in (_f = array.val) === null || _f === void 0 ? void 0 : _f.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, new ESString(element), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESArray || Array.isArray((_g = array.val) === null || _g === void 0 ? void 0 : _g.valueOf())) {\n            for (let element of (_h = array.val) === null || _h === void 0 ? void 0 : _h.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, element, this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val);\n        return new ESUndefined();\n    }\n    compileJS(options) {\n        const iteratorRes = this.array.compileJS(options);\n        if (iteratorRes.error)\n            return iteratorRes;\n        const bodyRes = this.body.compileJS(options);\n        if (bodyRes.error)\n            return bodyRes;\n        let declaration = 'let';\n        if (this.isGlobalId) {\n            declaration = 'var';\n        }\n        else if (this.isConstId) {\n            declaration = 'const';\n        }\n        return new compileResult(`for(${declaration} ${this.identifier.value} of ${iteratorRes.val}){${bodyRes.val}}`);\n    }\n}\n","import { compileResult } from \"./index\";\nimport { Node } from \"./node\";\nimport { ESError, TypeError } from \"../errors\";\nimport { str } from \"../util/util\";\nexport class N_functionCall extends Node {\n    constructor(pos, to, args) {\n        super(pos);\n        this.arguments = args;\n        this.to = to;\n    }\n    interpret_(context) {\n        let { val, error } = this.to.interpret(context);\n        if (error) {\n            return error;\n        }\n        if (!val) {\n            return new TypeError(this.pos, 'any', 'undefined', undefined, 'On function call');\n        }\n        let params = [];\n        for (let arg of this.arguments) {\n            const res = arg.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (res.val) {\n                params.push(res.val);\n            }\n        }\n        const res = val.__call__({ context }, ...params);\n        if (res instanceof ESError) {\n            res.traceback.push({\n                position: this.pos,\n                line: `${val.info.name || '<AnonFunction>'}(${params.map(str).join(', ')})`\n            });\n        }\n        return res;\n    }\n    compileJS(options) {\n        const res = new compileResult;\n        const funcRes = this.to.compileJS(options);\n        if (funcRes.error)\n            return funcRes;\n        res.val = funcRes.val + '(';\n        for (let arg of this.arguments) {\n            const argRes = arg.compileJS(options);\n            if (argRes.error)\n                return argRes;\n            res.val += argRes.val;\n            if (arg !== this.arguments[this.arguments.length - 1]) {\n                res.val += ',';\n            }\n        }\n        res.val += ')';\n        return res;\n    }\n}\n","import { compileResult } from \"./index\";\nimport { Node } from \"./node\";\nimport { Context } from \"../runtime/context\";\nimport { ESNamespace } from \"../runtime/primitives/esnamespace\";\nimport { ESString } from \"../runtime/primitives/esstring\";\nexport class N_namespace extends Node {\n    constructor(pos, statements, name = '(anon)', mutable = false) {\n        super(pos);\n        this.name = name;\n        this.statements = statements;\n        this.mutable = mutable;\n    }\n    interpret_(context) {\n        const newContext = new Context();\n        newContext.parent = context;\n        const res = this.statements.interpret(newContext);\n        if (res.error)\n            return res;\n        return new ESNamespace(new ESString(this.name), newContext.getSymbolTableAsDict(), this.mutable);\n    }\n    compileJS(options) {\n        const bodyRes = this.statements.compileJS(options);\n        if (bodyRes.error)\n            return bodyRes;\n        return new compileResult(`(() => {${bodyRes.val}})()`);\n    }\n}\n","import { InvalidSyntaxError, TypeError } from \"../errors\";\nimport { tokenTypeString, tt } from \"../constants\";\nimport { ESNumber } from \"../runtime/primitives/esnumber\";\nimport { ESBoolean } from \"../runtime/primitives/esboolean\";\nimport { compileResult } from \"./index\";\nimport { Node } from \"./node\";\nexport class N_unaryOp extends Node {\n    constructor(pos, a, opTok) {\n        super(pos);\n        this.a = a;\n        this.opTok = opTok;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const res = this.a.interpret(context);\n        if (res.error)\n            return res.error;\n        switch (this.opTok.type) {\n            case tt.SUB:\n            case tt.ADD:\n                if (!(res.val instanceof ESNumber))\n                    return new TypeError(this.pos, 'Number', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().toString()) || 'undefined_', (_b = res.val) === null || _b === void 0 ? void 0 : _b.valueOf());\n                const numVal = res.val.valueOf();\n                return new ESNumber(this.opTok.type === tt.SUB ? -numVal : Math.abs(numVal));\n            case tt.NOT:\n                return new ESBoolean(!((_c = res === null || res === void 0 ? void 0 : res.val) === null || _c === void 0 ? void 0 : _c.bool().valueOf()));\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid unary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(options) {\n        const val = this.a.compileJS(options);\n        if (val.error)\n            return val;\n        return new compileResult(`${tokenTypeString[this.opTok.type]}${val.val}`);\n    }\n}\n","import { compileResult } from \"./index\";\nimport { Node } from \"./node\";\nimport { ESUndefined } from \"../runtime/primitives/esundefined\";\nimport { ESError, TypeError } from \"../errors\";\nexport class N_indexed extends Node {\n    constructor(pos, base, index) {\n        super(pos);\n        this.base = base;\n        this.index = index;\n    }\n    interpret_(context) {\n        var _a;\n        let baseRes = this.base.interpret(context);\n        if (baseRes.error)\n            return baseRes;\n        let indexRes = this.index.interpret(context);\n        if (indexRes.error)\n            return indexRes;\n        const index = indexRes.val;\n        const base = baseRes.val;\n        if (!base || !index) {\n            return new ESUndefined();\n        }\n        if (this.value !== undefined) {\n            let valRes = this.value.interpret(context);\n            if (valRes.error)\n                return valRes;\n            const currentVal = base.__getProperty__({ context }, index);\n            if (currentVal instanceof ESError) {\n                return currentVal;\n            }\n            let newVal;\n            let assignVal = valRes.val;\n            (_a = this.assignType) !== null && _a !== void 0 ? _a : (this.assignType = '=');\n            if (!assignVal) {\n                return new TypeError(this.pos, '~undefined', 'undefined', 'undefined', 'N_indexed.interpret_');\n            }\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                case '=':\n                    newVal = assignVal;\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError) {\n                return newVal;\n            }\n            if (!base.__setProperty__) {\n                return new TypeError(this.pos, 'mutable', 'immutable', base.valueOf());\n            }\n            const res = base.__setProperty__({ context }, index, newVal !== null && newVal !== void 0 ? newVal : new ESUndefined());\n            if (res instanceof ESError) {\n                return res;\n            }\n        }\n        return base.__getProperty__({ context }, index);\n    }\n    compileJS(options) {\n        const objectRes = this.base.compileJS(options);\n        if (objectRes.error)\n            return objectRes;\n        const keyRes = this.index.compileJS(options);\n        if (keyRes.error)\n            return keyRes;\n        if (!this.value) {\n            return new compileResult(`${objectRes.val}[${keyRes.val}]`);\n        }\n        const valRes = this.value.compileJS(options);\n        if (valRes.error)\n            return valRes;\n        return new compileResult(`${objectRes.val}[${keyRes.val}]${this.assignType || '='}${valRes.val}`);\n    }\n}\n","import { compileResult } from \"./index\";\nimport { Node } from \"./node\";\nimport { Context } from \"../runtime/context\";\nimport { catchBlockErrorSymbolName } from \"../constants\";\nimport { ESErrorPrimitive } from \"../runtime/primitives/eserrorprimitive\";\nimport { ESUndefined } from \"../runtime/primitives/esundefined\";\nexport class N_tryCatch extends Node {\n    constructor(pos, body, catchBlock) {\n        super(pos, true);\n        this.body = body;\n        this.catchBlock = catchBlock;\n    }\n    interpret_(context) {\n        const res = this.body.interpret(context);\n        if (res.error) {\n            const newContext = new Context();\n            newContext.parent = context;\n            newContext.setOwn(catchBlockErrorSymbolName, new ESErrorPrimitive(res.error), {\n                isConstant: true\n            });\n            const catchRes = this.catchBlock.interpret(newContext);\n            if (catchRes.error)\n                return catchRes.error;\n        }\n        return {\n            val: new ESUndefined()\n        };\n    }\n    compileJS(options) {\n        const bodyRes = this.body.compileJS(options);\n        if (bodyRes.error)\n            return bodyRes;\n        const catchRes = this.catchBlock.compileJS(options);\n        if (catchRes.error)\n            return catchRes;\n        return new compileResult(`try{${bodyRes.val}}catch(${catchBlockErrorSymbolName}){${catchRes.val}}`);\n    }\n}\n","import { tokenType, tokenTypeString, tt } from '../constants';\nimport { Token } from \"./tokens\";\nimport { N_break, N_continue, N_number, N_primitiveWrapper, N_string, N_undefined, N_variable } from \"../nodes/terminal\";\nimport { N_statements } from \"../nodes/statements\";\nimport { N_return } from \"../nodes/return\";\nimport { N_yield } from \"../nodes/yield\";\nimport { N_while } from \"../nodes/while\";\nimport { N_objectLiteral } from \"../nodes/objectLiteral\";\nimport { N_array } from \"../nodes/array\";\nimport { N_if } from \"../nodes/if\";\nimport { N_functionDefinition } from \"../nodes/function\";\nimport { N_varAssign } from \"../nodes/varAssign\";\nimport { N_binOp } from \"../nodes/binOp\";\nimport { N_class } from \"../nodes/class\";\nimport { N_for } from \"../nodes/for\";\nimport { N_functionCall } from \"../nodes/call\";\nimport { N_namespace } from \"../nodes/namespace\";\nimport { N_unaryOp } from \"../nodes/unaryOp\";\nimport { N_indexed } from \"../nodes/indexed\";\nimport { N_tryCatch } from \"../nodes/tryCatch\";\nimport { types } from \"../runtime/primitives/primitive\";\nimport { ESError, InvalidSyntaxError } from \"../errors\";\nexport class ParseResults {\n    constructor() {\n        this.advanceCount = 0;\n        this.lastRegisteredAdvanceCount = 0;\n        this.reverseCount = 0;\n    }\n    registerAdvance() {\n        this.advanceCount = 1;\n        this.lastRegisteredAdvanceCount++;\n    }\n    register(res) {\n        this.lastRegisteredAdvanceCount = res.advanceCount;\n        this.advanceCount += res.advanceCount;\n        if (res.error) {\n            this.error = res.error;\n        }\n        if (!res.node) {\n            return new N_undefined();\n        }\n        return res.node;\n    }\n    tryRegister(res) {\n        if (res.error) {\n            this.reverseCount += res.advanceCount;\n            return;\n        }\n        return this.register(res);\n    }\n    success(node) {\n        this.node = node;\n        return this;\n    }\n    failure(error) {\n        this.error = error;\n        return this;\n    }\n}\nexport class Parser {\n    constructor(tokens) {\n        this.tokens = tokens;\n        this.tokenIdx = -1;\n        this.currentToken = tokens[0];\n        this.advance();\n    }\n    parse() {\n        var _a;\n        if (!this.currentToken || !this.tokens || (this.tokens.length === 1 && this.tokens[0].type === tt.EOF))\n            return new ParseResults();\n        const res = this.statements(true);\n        if (!res.error && this.currentToken.type !== tokenType.EOF) {\n            return res.failure(new InvalidSyntaxError((_a = this.currentToken) === null || _a === void 0 ? void 0 : _a.pos, `Expected 'End of File', got token of type'${tokenTypeString[this.currentToken.type]}' of value ${this.currentToken.value}`));\n        }\n        return res;\n    }\n    advance(res) {\n        if (res)\n            res.registerAdvance();\n        this.tokenIdx++;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    reverse(amount = 1) {\n        this.tokenIdx -= amount;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    consume(res, type, errorMsg) {\n        if (this.currentToken.type !== type)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, errorMsg !== null && errorMsg !== void 0 ? errorMsg : `Expected '${tokenTypeString[type]}' but got '${tokenTypeString[this.currentToken.type]}'`));\n        this.advance(res);\n    }\n    clearEndStatements(res) {\n        while (this.currentToken.type === tt.ENDSTATEMENT) {\n            this.advance(res);\n        }\n    }\n    statements(topLevel = false) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let statements = [];\n        this.clearEndStatements(res);\n        const firstStatement = res.register(this.statement());\n        if (!firstStatement) {\n            return res;\n        }\n        statements.push(firstStatement);\n        if (res.error) {\n            return res;\n        }\n        let moreStatements = true;\n        while (true) {\n            let newLineCount = 0;\n            while (this.currentToken.type === tt.ENDSTATEMENT) {\n                this.advance(res);\n                newLineCount++;\n            }\n            if (newLineCount === 0)\n                moreStatements = false;\n            if (!moreStatements)\n                break;\n            const statement = res.tryRegister(this.statement());\n            if (!statement) {\n                this.reverse(res.reverseCount);\n                continue;\n            }\n            statements.push(statement);\n        }\n        this.clearEndStatements(res);\n        let node = new N_statements(pos, statements, topLevel);\n        return res.success(node);\n    }\n    statement() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        if (this.currentToken.matches(tt.KEYWORD, 'return')) {\n            this.advance(res);\n            let expr = new N_undefined(this.currentToken.pos);\n            if (this.currentToken.type !== tt.ENDSTATEMENT) {\n                let exprRes = res.register(this.expr());\n                if (!exprRes) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'Expected end of statement'));\n                }\n                expr = exprRes;\n            }\n            return res.success(new N_return(pos, expr));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'yield')) {\n            this.advance(res);\n            let expr = new N_undefined(this.currentToken.pos);\n            if (this.currentToken.type !== tt.ENDSTATEMENT) {\n                let exprRes = res.register(this.expr());\n                if (!exprRes) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'Expected end of statement'));\n                }\n                expr = exprRes;\n            }\n            return res.success(new N_yield(pos, expr));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'break')) {\n            this.advance(res);\n            return res.success(new N_break(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'continue')) {\n            this.advance(res);\n            return res.success(new N_continue(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'try')) {\n            return this.tryCatch();\n        }\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    atom() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        const pos = this.currentToken.pos;\n        switch (tok.type) {\n            case tt.NUMBER:\n                this.advance(res);\n                return res.success(new N_number(pos, tok));\n            case tt.STRING:\n                this.advance(res);\n                return res.success(new N_string(pos, tok));\n            case tt.IDENTIFIER:\n                return this.atomIdentifier(res, pos, tok);\n            case tt.OPAREN:\n                this.advance(res);\n                const expr = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type == tt.CPAREN) {\n                    this.advance(res);\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ')'\"));\n            case tt.OSQUARE:\n                let arrayExpr = res.register(this.array());\n                if (res.error)\n                    return res;\n                return res.success(arrayExpr);\n            case tt.OBRACES:\n                let objectExpr = res.register(this.object());\n                if (res.error)\n                    return res;\n                return res.success(objectExpr);\n            case tt.KEYWORD:\n                if (tok.value === 'if') {\n                    const expr = res.register(this.ifExpr());\n                    if (res.error)\n                        return res;\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Invalid Identifier ${tok.value}`));\n            default:\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected number, identifier, '(', '+' or '-'`));\n        }\n    }\n    atomIdentifier(res, pos, tok) {\n        this.advance(res);\n        let node = new N_variable(tok);\n        let prevNode = new N_undefined(pos);\n        let functionCall = false;\n        while ([tt.OPAREN, tt.OSQUARE, tt.DOT].indexOf(this.currentToken.type) !== -1) {\n            switch (this.currentToken.type) {\n                case tt.OPAREN:\n                    functionCall = true;\n                    const tempNode = node;\n                    node = res.register(this.makeFunctionCall(node, prevNode));\n                    prevNode = tempNode;\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.OSQUARE:\n                    prevNode = node;\n                    node = res.register(this.makeIndex(node));\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.DOT:\n                    this.advance(res);\n                    if (this.currentToken.type !== tt.IDENTIFIER)\n                        return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected identifier after '.'`));\n                    prevNode = node;\n                    node = new N_indexed(this.currentToken.pos, node, new N_string(this.currentToken.pos, this.currentToken));\n                    this.advance(res);\n            }\n        }\n        if (this.currentToken.type === tt.ASSIGN) {\n            let assignType = this.currentToken.value;\n            if (functionCall) {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot assign to return value of function`));\n            }\n            this.advance(res);\n            const value = res.register(this.expr());\n            if (node instanceof N_variable) {\n                node = new N_varAssign(pos, node.a, value, assignType, false);\n            }\n            else if (node instanceof N_indexed) {\n                node.value = value;\n                node.assignType = assignType;\n            }\n            else {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot have node of type ${this.currentToken.constructor.name}.\n                            Expected either index or variable node.`));\n            }\n            if (res.error)\n                return res;\n        }\n        return res.success(node);\n    }\n    power() {\n        return this.binOp(() => this.atom(), [tokenType.POW], () => this.factor());\n    }\n    factor() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        switch (tok.type) {\n            case tt.SUB:\n            case tt.ADD:\n                this.advance(res);\n                const factor = res.register(this.factor());\n                if (res.error)\n                    return res;\n                return res.success(new N_unaryOp(tok.pos, factor, tok));\n            default:\n                return this.power();\n        }\n    }\n    term() {\n        return this.binOp(() => this.factor(), [tt.MUL, tt.DIV]);\n    }\n    arithmeticExpr() {\n        return this.binOp(() => this.term(), [tt.ADD, tt.SUB]);\n    }\n    comparisonExpr() {\n        const res = new ParseResults();\n        if (this.currentToken.type === tt.NOT) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            let node = res.register(this.expr());\n            if (res.error)\n                return res;\n            return res.success(new N_unaryOp(opTok.pos, node, opTok));\n        }\n        let node = res.register(this.binOp(() => this.arithmeticExpr(), [tt.EQUALS, tt.NOTEQUALS, tt.GT, tt.GTE, tt.LTE, tt.LT]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    expr() {\n        const res = new ParseResults();\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.KEYWORD &&\n            ['var', 'let', 'global', 'mutable', 'const', 'local'].indexOf(this.currentToken.value) !== -1) {\n            return this.initiateVar(res);\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'if')) {\n            return this.ifExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'while')) {\n            return this.whileExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'for')) {\n            return this.forExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'func')) {\n            return this.funcExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'class')) {\n            return this.classExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'namespace')) {\n            return this.namespace();\n        }\n        let node = res.register(this.binOp(() => this.comparisonExpr(), [tt.AND, tt.OR]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    binOp(func, ops, funcB = func) {\n        const res = new ParseResults();\n        let left = res.register(func());\n        if (res.error)\n            return res;\n        while (ops.indexOf(this.currentToken.type) !== -1\n            || ops.indexOf([this.currentToken.type, this.currentToken.value]) !== -1) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            const right = res.register(funcB());\n            if (res.error)\n                return res;\n            left = new N_binOp(left.pos, left, opTok, right);\n        }\n        return res.success(left);\n    }\n    typeExpr() {\n        const res = new ParseResults();\n        if (this.currentToken.type !== tt.IDENTIFIER)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos.clone, `Expected an identifier`));\n        let tok = this.currentToken;\n        this.advance(res);\n        return res.success(new N_variable(tok));\n    }\n    makeFunctionCall(to, this_ = new N_undefined()) {\n        const res = new ParseResults();\n        let args = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OPAREN)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '['\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n            return res.success(new N_functionCall(pos, to, []));\n        }\n        args.push(res.register(this.expr()));\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid argument\"));\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            args.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CPAREN)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n        this.advance(res);\n        return res.success(new N_functionCall(pos, to, args));\n    }\n    makeIndex(to) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const base = to;\n        if (this.currentToken.type !== tt.OSQUARE)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, `Cannot index without expression`));\n        }\n        let index = res.register(this.expr());\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid index\"));\n        if (this.currentToken.type !== tt.CSQUARE)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ']'\"));\n        this.advance(res);\n        return res.success(new N_indexed(pos, base, index));\n    }\n    initiateVar(res) {\n        let pos = this.currentToken.pos;\n        let isConst = false;\n        let isLocal = false;\n        let isGlobal = false;\n        let isDeclaration = false;\n        if (this.currentToken.type === tt.KEYWORD && ['var', 'let'].indexOf(this.currentToken.value) !== -1) {\n            isDeclaration = true;\n            isLocal = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD && ['global', 'local'].indexOf(this.currentToken.value) !== -1) {\n            isDeclaration = true;\n            if (this.currentToken.value === 'global')\n                isGlobal = true;\n            else\n                isLocal = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD && ['const', 'mutable'].indexOf(this.currentToken.value) !== -1) {\n            isDeclaration = true;\n            if (this.currentToken.value === 'const')\n                isConst = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected Identifier 'var', 'let', 'const', 'mutable', 'local', or 'global', not ${this.currentToken.value}`));\n        }\n        if (this.currentToken.type !== tokenType.IDENTIFIER) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected Identifier or Keyword`));\n        }\n        const varName = this.currentToken;\n        this.advance(res);\n        let type = types.any;\n        if (this.currentToken.type === tt.COLON) {\n            isDeclaration = true;\n            this.consume(res, tt.COLON);\n            type = res.register(this.typeExpr());\n        }\n        if (this.currentToken.type !== tt.ASSIGN) {\n            if (isConst)\n                return res.failure(new InvalidSyntaxError(pos, 'Cannot initialise constant to undefined'));\n            return res.success(new N_varAssign(pos, varName, new N_undefined(this.currentToken.pos), '=', isGlobal, isLocal, isConst, isDeclaration, type));\n        }\n        let assignType = this.currentToken.value;\n        this.advance(res);\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        if (expr instanceof N_class || expr instanceof N_functionDefinition) {\n            expr.name = varName.value;\n        }\n        if (expr instanceof N_namespace) {\n            expr.name = varName.value;\n            expr.mutable = !isConst;\n        }\n        return res.success(new N_varAssign(pos, varName, expr, assignType, isGlobal, isLocal, isConst, isDeclaration, type));\n    }\n    bracesExp() {\n        const res = new ParseResults();\n        this.consume(res, tt.OBRACES);\n        if (res.error) {\n            return res;\n        }\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new N_undefined(this.currentToken.pos));\n        }\n        const expr = res.register(this.statements());\n        if (res.error) {\n            return res;\n        }\n        this.consume(res, tt.CBRACES);\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    addEndStatement(res) {\n        this.tokens.splice(this.tokenIdx, 0, new Token(this.currentToken.pos, tt.ENDSTATEMENT));\n        this.reverse();\n        this.advance(res);\n    }\n    ifExpr() {\n        const res = new ParseResults();\n        let ifTrue;\n        let ifFalse;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'if'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'if'\"));\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        ifTrue = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.clearEndStatements(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'else')) {\n            this.advance(res);\n            if (this.currentToken.type == tt.OBRACES) {\n                ifFalse = res.register(this.bracesExp());\n                if (res.error)\n                    return res;\n            }\n            else {\n                ifFalse = res.register(this.statement());\n                if (res.error)\n                    return res;\n            }\n        }\n        this.addEndStatement(res);\n        return res.success(new N_if(pos, condition, ifTrue, ifFalse));\n    }\n    whileExpr() {\n        const res = new ParseResults();\n        let loop;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'while'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'while'\"));\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        loop = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        return res.success(new N_while(pos, condition, loop));\n    }\n    parameter(res) {\n        let name;\n        let type = new N_primitiveWrapper(types.any);\n        if (this.currentToken.type !== tt.IDENTIFIER)\n            return new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\");\n        name = this.currentToken.value;\n        this.advance(res);\n        if (this.currentToken.type === tt.COLON) {\n            this.consume(res, tt.COLON);\n            if (res.error)\n                return res.error;\n            type = res.register(this.typeExpr());\n            if (res.error)\n                return res.error;\n        }\n        return { name, type };\n    }\n    funcCore() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, args = [], returnType = new N_primitiveWrapper(types.any);\n        this.consume(res, tt.OPAREN);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n        }\n        else {\n            let param = this.parameter(res);\n            if (param instanceof ESError)\n                return res.failure(param);\n            args.push(param);\n            while (this.currentToken.type === tt.COMMA) {\n                this.advance(res);\n                let param = this.parameter(res);\n                if (param instanceof ESError)\n                    return res.failure(param);\n                args.push(param);\n            }\n            if (this.currentToken.type !== tt.CPAREN)\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n            this.advance(res);\n        }\n        if (this.currentToken.type === tt.COLON) {\n            this.advance(res);\n            returnType = res.register(this.typeExpr());\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.OBRACES) {\n            body = new N_return(this.currentToken.pos, res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        else {\n            this.consume(res, tt.OBRACES);\n            if (res.error)\n                return res;\n            if (this.currentToken.type !== tt.CBRACES)\n                body = res.register(this.statements());\n            else\n                body = new N_undefined(this.currentToken.pos);\n            this.consume(res, tt.CBRACES);\n            if (res.error)\n                return res;\n        }\n        return res.success(new N_functionDefinition(pos, body, args, returnType));\n    }\n    funcExpr() {\n        const res = new ParseResults();\n        if (!this.currentToken.matches(tt.KEYWORD, 'func'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'func'\"));\n        this.advance(res);\n        const func = res.register(this.funcCore());\n        if (res.error)\n            return res;\n        return res.success(func);\n    }\n    classExpr(name) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const methods = [];\n        let init;\n        let extends_;\n        if (!this.currentToken.matches(tt.KEYWORD, 'class'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'class'\"));\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'extends')) {\n            this.advance(res);\n            extends_ = res.register(this.expr());\n            if (res.error)\n                return res;\n        }\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new N_class(pos, [], undefined, undefined, name));\n        }\n        while (true) {\n            if (this.currentToken.type !== tt.IDENTIFIER) {\n                break;\n            }\n            let methodId = this.currentToken.value;\n            this.advance(res);\n            const func = res.register(this.funcCore());\n            if (res.error)\n                return res;\n            if (!(func instanceof N_functionDefinition)) {\n                return res.failure(new ESError(this.currentToken.pos, 'ParseError', `Tried to get function, but got ${func} instead`));\n            }\n            func.name = methodId;\n            if (methodId === 'init') {\n                init = func;\n            }\n            else {\n                methods.push(func);\n            }\n        }\n        this.consume(res, tt.CBRACES);\n        return res.success(new N_class(pos, methods, extends_, init, name));\n    }\n    forExpr() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, array, identifier, isGlobalIdentifier = false, isConstIdentifier = false;\n        if (!this.currentToken.matches(tt.KEYWORD, 'for'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'for'\"));\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'global')) {\n            isGlobalIdentifier = true;\n            this.advance(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'const')) {\n            isConstIdentifier = true;\n            this.advance(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'var') || this.currentToken.matches(tt.KEYWORD, 'let')) {\n            this.advance(res);\n        }\n        if (this.currentToken.type !== tt.IDENTIFIER)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\"));\n        identifier = this.currentToken;\n        this.advance(res);\n        if (!this.currentToken.matches(tt.KEYWORD, 'in'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected keyword 'in\"));\n        this.advance(res);\n        array = res.register(this.expr());\n        if (res.error)\n            return res;\n        body = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new N_for(pos, body, array, identifier, isGlobalIdentifier, isConstIdentifier));\n    }\n    array() {\n        const res = new ParseResults();\n        let elements = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OSQUARE)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            this.advance(res);\n            return res.success(new N_array(pos, []));\n        }\n        elements.push(res.register(this.expr()));\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ']', 'var', 'if', 'for', 'while', number, identifier, '+', '-', '(', '[' or '!' 2\"));\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            elements.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CSQUARE)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ']'\"));\n        this.advance(res);\n        return res.success(new N_array(pos, elements));\n    }\n    object() {\n        const res = new ParseResults();\n        let properties = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OBRACES)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '{\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new N_objectLiteral(pos, []));\n        }\n        while (true) {\n            let keyType, key, value;\n            if (this.currentToken.type === tt.IDENTIFIER) {\n                keyType = 'id';\n                key = new N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.STRING) {\n                keyType = 'string';\n                key = new N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.OSQUARE) {\n                keyType = 'value';\n                this.advance(res);\n                key = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.CSQUARE)\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ']', got '${tokenTypeString[this.currentToken.type]}'`));\n                this.advance(res);\n            }\n            else\n                break;\n            if (this.currentToken.type === tt.COLON) {\n                this.advance(res);\n                value = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                if (this.currentToken.type === tt.COMMA) {\n                    this.advance(res);\n                }\n            }\n            else {\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                if (keyType !== 'id') {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `You must specify a value when initialising an object literal with a key that is not an identifier.\n                        Try using \\`key: value\\` syntax.`));\n                }\n                this.reverse();\n                value = new N_variable(this.currentToken);\n                this.advance(res);\n                if (this.currentToken.type === tt.COMMA)\n                    this.advance(res);\n            }\n            properties.push([key, value]);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CBRACES) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier, ',' or '}'\"));\n        }\n        this.advance(res);\n        return res.success(new N_objectLiteral(pos, properties));\n    }\n    namespace() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new N_namespace(pos, new N_undefined()));\n        }\n        const statements = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        return res.success(new N_namespace(pos, statements));\n    }\n    tryCatch() {\n        const res = new ParseResults();\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'No empty try block'));\n        }\n        const body = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.value !== 'catch') {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'try block requires catch'));\n        }\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.success(new N_tryCatch(this.currentToken.pos, body, new N_undefined()));\n        }\n        const catchBlock = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new N_tryCatch(this.currentToken.pos, body, catchBlock));\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Lexer } from \"./parse/lexer\";\nimport { Parser } from \"./parse/parser\";\nimport { global, libs as allLibs, now, refreshPerformanceNow, runningInNode, setGlobalContext } from \"./constants\";\nimport { initialise } from \"./init\";\nimport { ESError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { Node } from \"./nodes/node\";\nimport { Context } from \"./runtime/context\";\nimport addNodeLibs from \"./built-in/nodeLibs\";\nimport colours from './util/colours';\nimport { ESArray } from \"./runtime/primitives/esarray\";\nimport { ESBoolean } from \"./runtime/primitives/esboolean\";\nimport { ESErrorPrimitive } from \"./runtime/primitives/eserrorprimitive\";\nimport { ESFunction } from \"./runtime/primitives/esfunction\";\nimport { ESNamespace } from \"./runtime/primitives/esnamespace\";\nimport { ESNumber } from \"./runtime/primitives/esnumber\";\nimport { ESPrimitive } from \"./runtime/primitives/esprimitive\";\nimport { ESString } from \"./runtime/primitives/esstring\";\nimport { ESObject } from \"./runtime/primitives/esobject\";\nimport { ESType } from \"./runtime/primitives/estype\";\nimport { ESUndefined } from \"./runtime/primitives/esundefined\";\nimport { types } from \"./runtime/primitives/primitive\";\nimport JS_STD_TXT from '!!raw-loader!./built-in/compiledSTD/std.txt.js';\nexport { Context, colours, ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNumber, ESPrimitive, ESString, ESObject, ESType, ESUndefined, ESNamespace, types };\nexport * from './constants';\nexport * from './errors';\nexport * from './nodes';\nexport * from './util/util';\nexport { wrap } from './runtime/wrap';\nexport { strip } from './runtime/strip';\nexport * from './runtime/symbol';\nexport function init(printFunc = console.log, inputFunc, node = true, libs = { print: console.log }, context = new Context(), path = '') {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const res = initialise(context, printFunc, inputFunc);\n        if (res instanceof ESError) {\n            return res;\n        }\n        setGlobalContext(context);\n        (_a = libs['context']) !== null && _a !== void 0 ? _a : (libs['context'] = context);\n        if (path) {\n            context.path = path;\n        }\n        if (libs.print) {\n            allLibs.print = libs.print;\n        }\n        if (node) {\n            runningInNode();\n            yield refreshPerformanceNow(true);\n            addNodeLibs(libs, context);\n        }\n    });\n}\nexport function run(msg, { env = global, measurePerformance = false, fileName = '(unknown)', currentDir = '' } = {}) {\n    if (currentDir) {\n        env.path = currentDir;\n    }\n    Node.maxTime = 0;\n    Node.totalTime = 0;\n    Node.interprets = 0;\n    const timeData = {\n        total: 0,\n        lexerTotal: 0,\n        parserTotal: 0,\n        interpretTotal: 0,\n        nodeMax: 0,\n        nodeAvg: 0,\n        nodeTotal: 0,\n        interprets: 0,\n    };\n    let start = now();\n    if (!env.root.initialisedAsGlobal) {\n        return {\n            val: new ESUndefined(),\n            error: new ESError(Position.unknown, 'Uninitialised', 'Global context has not been initialised with global values')\n        };\n    }\n    const lexer = new Lexer(msg, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        return {\n            val: new ESUndefined(),\n            error: lexerRes\n        };\n    }\n    timeData.lexerTotal = now() - start;\n    start = now();\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        return {\n            val: new ESUndefined(),\n            error: res.error\n        };\n    }\n    timeData.parserTotal = now() - start;\n    start = now();\n    if (!res.node) {\n        return {\n            val: new ESArray([])\n        };\n    }\n    const finalRes = res.node.interpret(env);\n    timeData.interpretTotal = now() - start;\n    timeData.total = now() - start;\n    timeData.nodeMax = Node.maxTime;\n    timeData.nodeTotal = Node.totalTime;\n    timeData.nodeAvg = Node.totalTime / Node.interprets;\n    timeData.interprets = Node.interprets;\n    if (measurePerformance) {\n        console.log(timeData);\n    }\n    return Object.assign(Object.assign({}, finalRes), { timeData });\n}\nexport function parse(code, { fileName = '(unknown)', currentDir = '' } = {}) {\n    const lexer = new Lexer(code, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        return {\n            error: lexerRes\n        };\n    }\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        return {\n            error: res.error\n        };\n    }\n    if (!res.node) {\n        return {\n            error: new ESError(Position.unknown, 'Error', 'no output')\n        };\n    }\n    return {\n        compileToJavaScript: (options) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            const compileResult = res.node.compileJS(options);\n            if (compileResult.val) {\n                const message = '// generated by EntropyScript to JavaScript compiler\\n';\n                const JS_STD_STR = message + JS_STD_TXT.toString().replace(/(\\r\\n|\\n|\\r)/gm, \"\") + '\\n';\n                compileResult.val = JS_STD_STR + compileResult.val;\n            }\n            return compileResult;\n        },\n        interpret: (env = global) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            if (currentDir) {\n                env.path = currentDir;\n            }\n            if (!env.root.initialisedAsGlobal) {\n                return {\n                    error: new ESError(Position.unknown, 'Uninitialised', 'Global context has not been initialised with global values'),\n                    val: new ESUndefined()\n                };\n            }\n            return res.node.interpret(env);\n        },\n    };\n}\n","import { Position } from \"../position\";\nimport { Context } from \"../runtime/context\";\nimport { ESError, ImportError, PermissionRequiredError } from '../errors';\nimport { str } from \"../util/util\";\nimport { permissions, run } from '../index';\nimport { addModuleFromObj, getModule, moduleExist } from './builtInModules';\nimport { global } from \"../constants\";\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport { types } from \"../runtime/primitives/primitive\";\nimport { ESFunction } from \"../runtime/primitives/esfunction\";\nimport { ESNamespace } from \"../runtime/primitives/esnamespace\";\nimport { ESString } from \"../runtime/primitives/esstring\";\nimport { ESObject } from \"../runtime/primitives/esobject\";\nfunction addNodeLibs(options, context) {\n    const { fs, path } = options;\n    for (let libName in options) {\n        if (options.hasOwnProperty(libName)) {\n            addModuleFromObj(libName, new ESJSBinding(options[libName], libName));\n        }\n    }\n    context.set('import', new ESFunction(({ context }, rawPath) => {\n        if (!permissions.imports) {\n            return new PermissionRequiredError('Imports not allowed');\n        }\n        if (!permissions.imports) {\n            return new PermissionRequiredError('Imports not allowed');\n        }\n        let scriptPath = str(rawPath);\n        if (permissions.useSTD && moduleExist(scriptPath)) {\n            return getModule(scriptPath);\n        }\n        scriptPath = path.join(context.path, scriptPath);\n        try {\n            if (!fs.existsSync(scriptPath)) {\n                if (fs.existsSync('./particles/' + scriptPath)) {\n                    if (fs.existsSync('particles/' + scriptPath + '/main.es')) {\n                        scriptPath = 'particles/' + scriptPath + '/main.es';\n                    }\n                    else {\n                        return new ESError(Position.unknown, 'ImportError', `Module '${scriptPath}' has no entry point. Requires 'main.es'.`);\n                    }\n                }\n                else {\n                    return new ESError(Position.unknown, 'ImportError', `Can't find file '${scriptPath}' to import.`);\n                }\n            }\n            const exDir = path.dirname(scriptPath);\n            const code = fs.readFileSync(scriptPath, 'utf-8');\n            const env = new Context();\n            env.parent = global;\n            env.path = exDir;\n            const n = new ESNamespace(new ESString(scriptPath), {});\n            const res = run(code, {\n                env,\n                measurePerformance: false,\n                fileName: scriptPath,\n                currentDir: exDir,\n            });\n            n.__value__ = env.getSymbolTableAsDict();\n            if (res.error) {\n                return res.error;\n            }\n            return n;\n        }\n        catch (E) {\n            return new ESError(Position.unknown, 'ImportError', E.toString());\n        }\n    }, [{ name: 'path', type: types.string }], 'import', undefined, types.object), {\n        forceThroughConst: true,\n        isConstant: true\n    });\n    context.setOwn('open', new ESFunction(({ context }, path_, encoding_) => {\n        if (!permissions.fileSystem) {\n            return new PermissionRequiredError('No access to file system');\n        }\n        const path = str(path_);\n        const encoding = str(encoding_) || 'utf-8';\n        if (!fs.existsSync(path)) {\n            return new ImportError(Position.unknown, path);\n        }\n        return new ESObject({\n            str: new ESFunction(({ context }) => {\n                return new ESString(fs.readFileSync(context.path + path, encoding));\n            }, [], 'str', undefined, types.string),\n            write: new ESFunction(({ context }, data) => {\n                fs.writeFileSync(context.path + path, str(data));\n            }, [{ name: 'path', type: types.string }]),\n            append: new ESFunction(({ context }, data) => {\n                fs.appendFileSync(context.path + path, str(data));\n            }, [{ name: 'path', type: types.string }]),\n        });\n    }));\n}\nexport default addNodeLibs;\n","export default \"Array.prototype.contains = function (element) {\\n\\treturn this.indexOf(element) !== -1;\\n};\\n\\nfunction parseNum (str) {\\n\\treturn parseFloat(str);\\n}\\n\\nconst print = console.log;\\n\\nNumber.prototype[Symbol.iterator] = function () {\\n\\treturn {\\n\\t\\tcurrent: 0,\\n\\t\\tlast: this,\\n\\n\\t\\tnext() {\\n\\t\\t\\tif (this.current <= this.last) {\\n\\t\\t\\t\\treturn { done: false, value: this.current++ };\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn { done: true };\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n};\\n\\nconst private = {\\n\\tbims: {\\n\\t\\tmath: Math,\\n\\t\\tdom: $,\\n\\t\\tjson: {\\n\\t\\t\\tparse: JSON.parse,\\n\\t\\t\\tstringify: JSON.stringify\\n\\t\\t},\\n\\t\\tascii: {\\n\\t\\t\\tasciiToChar: (number) => {\\n\\t\\t\\t\\treturn String.fromCharCode(number);\\n\\t\\t\\t},\\n\\n\\t\\t\\tcharToAscii: (char) => {\\n\\t\\t\\t\\treturn char.charCodeAt(0);\\n\\t\\t\\t},\\n\\t\\t}\\n\\t}\\n};\\n\\nfunction import_ (path) {\\n\\tif (private.bims.hasOwnProperty(path)) {\\n\\t\\treturn private.bims[path];\\n\\t}\\n}\";"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Position","constructor","idx","ln","col","file","advance","currentChar","clone","str","isUnknown","unknown","digits","identifierChars","singleLineComment","multiLineCommentStart","multiLineCommentEnd","global","setGlobalContext","c","stringSurrounds","IS_NODE_INSTANCE","window","runningInNode","permissions","networking","imports","accessDOM","useSTD","fileSystem","updatePermissions","newPermissions","assign","print","console","log","catchBlockErrorSymbolName","KEYWORDS","now","refreshPerformanceNow","thisArg","_arguments","generator","Date","performance","e","P","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","tokenType","tt","tokenTypeString","NUMBER","STRING","ENDSTATEMENT","IDENTIFIER","KEYWORD","COMMA","OBRACES","CBRACES","OPAREN","CPAREN","OSQUARE","CSQUARE","ASSIGN","ADD","SUB","MUL","DIV","POW","EQUALS","NOTEQUALS","NOT","GT","LT","GTE","LTE","AND","OR","COLON","DOT","EOF","BITWISE_AND","BITWISE_OR","BITWISE_NOT","singleCharTokens","doubleCharTokens","tripleCharTokens","primitiveMethods","types","ESErrorPrimitive","ESPrimitive","error","ESError","super","__getProperty__","props","ESString","valueOf","name","details","ESArray","traceback","map","s","position","line","self","wrap","IndexError","cast","__eq__","n","ESBoolean","__bool__","bool","ESSymbol","identifier","options","_a","_b","isConstant","isAccessible","codes","red","yellow","green","cyan","blue","grey","code","keys","ESNamespace","mutable","object","toClone","length","slice","symbol","TypeError","typeName","val","ESFunction","info","v","__setProperty__","__value__","builtInFunctions","context","minP","maxP","stepP","ESNumber","min","ESUndefined","Array","max","arr","i","push","args","type","description","returns","returnType","msgs","m","num","parseFloat","isNaN","things","out","thing","indent","helpLink","total","required","filter","a","arg","entries","contents","ESObject","id","has","set","path","global_","ESJSBinding","values","parent","setOwn","forceThroughConst","time","cb","sleep","res","__call__","asciiToChar","number","String","fromCharCode","charToAscii","char","charCodeAt","dealWithExtends","class_","instance","this_","callContext","superFunc","newContext","Context","__extends__","initFunc","__init__","__closure__","res_","undefined","setRes","createInstance","params","runInit","on","__isPrimitive__","_c","_d","_e","_f","_g","_h","_j","__name__","__type__","callPrimitive","method","__methods__","methodClone","indexOf","__instances__","ESType","isPrimitive","isa","InvalidOperationError","includesType","t","equals","any","is","strip","parse","json","JSON","stringify","modules","ascii","processedModules","processRawModule","moduleDict","moduleRaw","moduleExist","getModule","processed","initialise","globalContext","printFunc","inputFunc","string","array","isBuiltIn","rawUrl","callback","url","fetch","text","env","run","ImportError","getSymbolTableAsDict","E","toString","msg","cbRaw","builtIn","fn","globalConstants","constant","load","initModRes","Math","thens","resolved","catch_","catch","domRes","PermissionRequiredError","InvalidRuntimeError","w","$","document","ReferenceError","dom","initModules","initialisedAsGlobal","symbolTable","deleted","path_","parent_","hasOwn","getSymbol","getRawSymbolTableAsDict","symbols","remove","clear","resetAsGlobal","func","deepClone","arguments_","closure","generateESFunctionCallContext","Node","interpret","funcReturn","callNode","callNative","defaultValue","functionsTakeProps","k","hasProperty","Number","split","__add__","__multiply__","repeat","__gt__","__lt__","len","strToInsert","firstPart","substr","lastPart","__subtract__","__divide__","__pow__","pow","boolean","thisElement","nElement","add","splice","contains","element","newArr","newOb","keysToRemove","isArray","describe","detail","__and__","__or__","parameters","Boolean","config","pos","isTerminal","start","interpret_","shouldBreak","shouldContinue","interprets","totalTime","maxTime","hash","WeakMap","Function","create","getPrototypeOf","Map","from","Set","depth","item","substring","ms","setTimeout","replace","validURI","test","colouredStr","reverse","IllegalCharError","InvalidSyntaxError","ExpectedCharError","expectedType","actualType","ref","op","TestFailed","Token","matches","Lexer","program","fileName","generate","tokens","includes","makeNumber","multiLineComment","makeIdentifier","makeString","possibleAssignFirstChar","token","unknownChar","numStr","dotCount","strClose","idStr","posStart","tokType","triple","double","compileResult","N_number","compileJS","N_string","N_variable","N_undefined","N_break","N_continue","N_primitiveWrapper","N_statements","items","topLevel","interpreted","last","itemRes","minify","N_return","valRes","N_yield","N_while","comparison","loop","shouldLoop","potentialError","comparisonRes","bodyRes","N_objectLiteral","properties","keyNode","valueNode","N_array","shouldClone","N_if","ifTrue","ifFalse","compRes","statementRes","ifTrueRes","ifFalseRes","interpretArgument","typeRes","defaultValRes","N_functionDefinition","body","argNames","arguments","returnTypeRes","param","N_varAssign","varNameTok","assignType","isGlobal","isLocal","isDeclaration","currentVal","newVal","assignVal","declaration","N_binOp","left","opTok","right","l","r","lt","eq","gt","N_class","methods","extends_","init","instances","extendsRes","initRes","N_for","isGlobalIdentifier","isConstIdentifier","isGlobalId","isConstId","iteration","iteratorRes","N_functionCall","to","join","funcRes","argRes","N_namespace","statements","N_unaryOp","numVal","abs","N_indexed","base","index","baseRes","indexRes","objectRes","keyRes","N_tryCatch","catchBlock","catchRes","ParseResults","advanceCount","lastRegisteredAdvanceCount","reverseCount","registerAdvance","register","node","tryRegister","success","failure","Parser","tokenIdx","currentToken","amount","consume","errorMsg","clearEndStatements","firstStatement","statement","moreStatements","newLineCount","expr","exprRes","tryCatch","atom","tok","atomIdentifier","arrayExpr","objectExpr","ifExpr","prevNode","functionCall","tempNode","makeFunctionCall","makeIndex","power","binOp","factor","term","arithmeticExpr","comparisonExpr","initiateVar","whileExpr","forExpr","funcExpr","classExpr","namespace","ops","funcB","typeExpr","isConst","varName","bracesExp","addEndStatement","condition","parameter","funcCore","methodId","elements","keyType","libs","fs","libName","raw","addModule","rawPath","scriptPath","existsSync","exDir","dirname","readFileSync","measurePerformance","currentDir","encoding_","encoding","write","data","writeFileSync","append","appendFileSync","timeData","lexerTotal","parserTotal","interpretTotal","nodeMax","nodeAvg","nodeTotal","lexerRes","finalRes","compileToJavaScript","JS_STD_STR"],"sourceRoot":""}