{"version":3,"file":"2.15.0.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAY,GAAID,IAEhBD,EAAS,GAAIC,IARf,CASGK,MAAM,WACT,M,mBCTA,IAAIC,EAAsB,CCA1BA,EAAwB,CAACL,EAASM,KACjC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAER,EAASO,IAC5EE,OAAOC,eAAeV,EAASO,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EF,EAAwB,CAACQ,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFT,EAAyBL,IACH,oBAAXkB,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeV,EAASkB,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeV,EAAS,aAAc,CAAEoB,OAAO,M,o3CCLhD,MAAMC,EACTC,YAAYC,EAAKC,EAAIC,EAAKC,EAAO,aAC7BtB,KAAKmB,IAAMA,EACXnB,KAAKoB,GAAKA,EACVpB,KAAKqB,IAAMA,EACXrB,KAAKsB,KAAOA,EAEhBC,QAAQC,EAAc,IAOlB,OANAxB,KAAKmB,MACLnB,KAAKqB,MACe,OAAhBG,IACAxB,KAAKoB,KACLpB,KAAKqB,IAAM,GAERrB,KAEPyB,YACA,OAAO,IAAIR,EAASjB,KAAKmB,IAAKnB,KAAKoB,GAAIpB,KAAKqB,IAAKrB,KAAKsB,MAEtDI,UACA,MAAO,QAAQ1B,KAAKsB,SAAStB,KAAKoB,GAAK,KAAKpB,KAAKqB,IAAM,IAEvDM,gBACA,OAAqB,IAAd3B,KAAKmB,IAELS,kBACP,OAAO,IAAIX,GAAU,GAAI,GAAI,EAAG,cChBjC,MAAMY,EAAS,aACTC,EAAkB,yDAIxB,IAAIC,EACJ,MAAMC,EAAoBC,IAAYF,EAASE,GACzCC,EAAkB,CAAC,IAAM,IAAK,KACpC,IAAIC,EAAqC,oBAAXC,OAC9B,MAAMC,EAAgB,KAAYF,GAAmB,GAC/CG,EAAuB,CAAC,MAAO,MAAO,UACtCC,E,SACAC,EAAiB,gBACjBC,EAAuB,CAChC,OAAQ,OAAQ,UAAW,SAC3B,QAAS,SAAU,YAAa,OAEvB,EAAO,CAChBC,MAAOC,QAAQC,KAGNC,EAAW,CACpB,MACA,MACA,SACA,QACA,UACA,QACA,KACA,OACA,QACA,MACA,KACA,WACA,QACA,OACA,SACA,QACA,QACA,UACA,YACA,SACA,MACA,SAEG,IAAIC,EAAM,IAAM,EAChB,SAASC,EAAsBZ,GAClC,OAzDkDa,EAyDjChD,KAzD0CiD,OAyDpC,EAzDmDC,EAyDnC,YAE/BJ,EADAX,EACM,IAAMgB,KAAKL,MAGX,KACF,IACI,OAAuB,OAAhBM,kBAAwC,IAAhBA,iBAAyB,EAASA,YAAYN,MAEjF,MAAOO,GACH,OAAO,KAjEhB,KAFgEC,OAyDxC,KAvDbA,EAAIC,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKT,EAAUU,KAAK5C,IAAW,MAAOqC,GAAKI,EAAOJ,IACpF,SAASQ,EAAS7C,GAAS,IAAM2C,EAAKT,EAAiB,MAAElC,IAAW,MAAOqC,GAAKI,EAAOJ,IACvF,SAASM,EAAKG,GAJlB,IAAe9C,EAIa8C,EAAOC,KAAOP,EAAQM,EAAO9C,QAJ1CA,EAIyD8C,EAAO9C,MAJhDA,aAAiBsC,EAAItC,EAAQ,IAAIsC,GAAE,SAAUE,GAAWA,EAAQxC,OAITgD,KAAKN,EAAWG,GAClGF,GAAMT,EAAYA,EAAUe,MAAMjB,EAASC,GAAc,KAAKW,WAN1B,IAAUZ,EAASC,EAAYK,EAAGJ,EA0EvE,IAAIgB,EADXnB,EAAsBZ,GAEtB,SAAW+B,GACPA,EAAUA,EAAkB,OAAI,GAAK,SACrCA,EAAUA,EAAkB,OAAI,GAAK,SACrCA,EAAUA,EAAwB,aAAI,GAAK,eAC3CA,EAAUA,EAAsB,WAAI,GAAK,aACzCA,EAAUA,EAAmB,QAAI,GAAK,UACtCA,EAAUA,EAAiB,MAAI,GAAK,QACpCA,EAAUA,EAAkB,OAAI,GAAK,SACrCA,EAAUA,EAAe,IAAI,GAAK,MAClCA,EAAUA,EAAe,IAAI,GAAK,MAClCA,EAAUA,EAAe,IAAI,GAAK,MAClCA,EAAUA,EAAe,IAAI,IAAM,MACnCA,EAAUA,EAAe,IAAI,IAAM,MACnCA,EAAUA,EAAe,IAAI,IAAM,MACnCA,EAAUA,EAAkB,OAAI,IAAM,SACtCA,EAAUA,EAAkB,OAAI,IAAM,SACtCA,EAAUA,EAAmB,QAAI,IAAM,UACvCA,EAAUA,EAAmB,QAAI,IAAM,UACvCA,EAAUA,EAAmB,QAAI,IAAM,UACvCA,EAAUA,EAAmB,QAAI,IAAM,UACvCA,EAAUA,EAAkB,OAAI,IAAM,SACtCA,EAAUA,EAAqB,UAAI,IAAM,YACzCA,EAAUA,EAAe,IAAI,IAAM,MACnCA,EAAUA,EAAc,GAAI,IAAM,KAClCA,EAAUA,EAAc,GAAI,IAAM,KAClCA,EAAUA,EAAe,IAAI,IAAM,MACnCA,EAAUA,EAAe,IAAI,IAAM,MACnCA,EAAUA,EAAe,IAAI,IAAM,MACnCA,EAAUA,EAAc,GAAI,IAAM,KAClCA,EAAUA,EAAiB,MAAI,IAAM,QACrCA,EAAUA,EAAe,IAAI,IAAM,MACnCA,EAAUA,EAAe,IAAI,IAAM,MACnCA,EAAUA,EAAgB,KAAI,IAAM,OACpCA,EAAUA,EAAqB,UAAI,IAAM,YACzCA,EAAUA,EAAuB,YAAI,IAAM,cAlC/C,CAmCGA,IAAcA,EAAY,KACtB,IAAIC,EAAKD,EACT,MAAME,EAAkB,CAC3B,CAACD,EAAGE,QAAS,SACb,CAACF,EAAGG,QAAS,SACb,CAACH,EAAGI,cAAe,IACnB,CAACJ,EAAGK,YAAa,aACjB,CAACL,EAAGM,SAAU,UACd,CAACN,EAAGO,OAAQ,IACZ,CAACP,EAAGQ,SAAU,IACd,CAACR,EAAGS,SAAU,IACd,CAACT,EAAGU,QAAS,IACb,CAACV,EAAGW,QAAS,IACb,CAACX,EAAGY,SAAU,IACd,CAACZ,EAAGa,SAAU,IACd,CAACb,EAAGc,QAAS,IACb,CAACd,EAAGe,KAAM,IACV,CAACf,EAAGgB,KAAM,IACV,CAAChB,EAAGiB,KAAM,IACV,CAACjB,EAAGkB,KAAM,IACV,CAAClB,EAAGmB,KAAM,IACV,CAACnB,EAAGoB,KAAM,IACV,CAACpB,EAAGqB,QAAS,KACb,CAACrB,EAAGsB,WAAY,KAChB,CAACtB,EAAGuB,KAAM,IACV,CAACvB,EAAGwB,IAAK,IACT,CAACxB,EAAGyB,IAAK,IACT,CAACzB,EAAG0B,KAAM,KACV,CAAC1B,EAAG2B,KAAM,KACV,CAAC3B,EAAG4B,KAAM,KACV,CAAC5B,EAAG6B,IAAK,KACT,CAAC7B,EAAG8B,OAAQ,IACZ,CAAC9B,EAAG+B,KAAM,IACV,CAAC/B,EAAGgC,KAAM,cACV,CAAChC,EAAGiC,WAAY,IAChB,CAACjC,EAAGkC,MAAO,IACX,CAAClC,EAAGmC,aAAc,KAETC,EAAmB,CAC5B,IAAKpC,EAAGiB,IACR,IAAKjB,EAAGkB,IACR,IAAKlB,EAAGe,IACR,IAAKf,EAAGgB,IACR,IAAKhB,EAAGU,OACR,IAAKV,EAAGW,OACR,IAAKX,EAAGmB,IACR,IAAKnB,EAAGoB,IACR,IAAKpB,EAAGQ,QACR,IAAKR,EAAGS,QACR,IAAKT,EAAGO,MACR,IAAKP,EAAGY,QACR,IAAKZ,EAAGa,QACR,IAAKb,EAAGI,aACR,IAAKJ,EAAG8B,MACR,IAAK9B,EAAG+B,IACR,IAAK/B,EAAGc,OACR,IAAKd,EAAGwB,GACR,IAAKxB,EAAGyB,GACR,IAAKzB,EAAGuB,IACR,IAAKvB,EAAGkC,KACR,IAAKlC,EAAGiC,UACR,IAAKjC,EAAGmC,aAECE,EAAmB,CAC5B,KAAMrC,EAAGqB,OACT,KAAMrB,EAAGsB,UACT,KAAMtB,EAAG0B,IACT,KAAM1B,EAAG2B,IACT,KAAM3B,EAAGc,OACT,KAAMd,EAAGc,OACT,KAAMd,EAAGc,OACT,KAAMd,EAAGc,OACT,KAAMd,EAAG4B,IACT,KAAM5B,EAAG6B,IAEAS,EAAmB,GACnBC,EAAmB,CAC5B,UACA,eACA,eACA,aACA,UACA,SACA,SACA,SACA,UACA,SACA,WACA,gBACA,WACA,kBACA,kBACA,YAESC,EAAQ,GCtMd,MAAMC,EACT1F,YAAYF,EAAO6F,EAAOF,EAAMG,KAC5B9G,KAAK+G,KAAO/G,KACZA,KAAKgH,IAAM,CAACC,EAAOJ,IACRA,EAAKK,UAAUD,EAAOjH,MAEjCA,KAAKmH,GAAK,CAACF,EAAOxG,IACP,IAAI2G,EAAU3G,IAAQT,MAEjCA,KAAKqH,QAAU,IAAMrH,KAAKsH,UAC1BtH,KAAKuH,SAAW,IAAM7F,GAAI1B,KAAKwH,UAC/BxH,KAAKyH,YAAc,CAACR,EAAO9G,IAAQ,IAAIiH,EAAUpH,KAAKY,eAAec,GAAIvB,KACzEH,KAAK0H,SAAW,CAACT,EAAOU,KAChB3H,KAAK2H,KAAKC,YAGd5H,KAAK2H,KAAKE,YAAcnG,GAAIiG,KAEhC3H,KAAK8H,OAAS,CAACb,EAAOU,KAClB,GAAI3H,KAAK2H,KAAKC,UACV,OAEJ,MAAMG,EAAMC,EAAML,EAAMV,GACxB,GAAmB,iBAARc,EACP,OAAO,IAAIE,GAAUhH,EAAA,KAAe,SAAUjB,KAAKuH,WAAY7F,GAAI1B,OAEvEA,KAAK2H,KAAOtH,OAAO6H,OAAO7H,OAAO6H,OAAO,GAAIlI,KAAK2H,MAAOI,GACxD/H,KAAK2H,KAAKC,WAAY,GAE1B5H,KAAKwH,SAAWX,GAAQ7G,KACxBA,KAAKsH,UAAYtG,EACjBhB,KAAK2H,KAAO,GAEhBQ,QAAQlB,EAAOmB,GACX,OAAO,IAAIC,GAAsB,GAAIrI,MAEzCsI,aAAarB,EAAOmB,GAChB,OAAO,IAAIC,GAAsB,GAAIrI,MAEzCuI,aAAatB,EAAOmB,GAChB,OAAO,IAAIC,GAAsB,GAAIrI,MAEzCwI,WAAWvB,EAAOmB,GACd,OAAO,IAAIC,GAAsB,GAAIrI,MAEzCyI,QAAQxB,EAAOmB,GACX,OAAO,IAAIC,GAAsB,UAAWrI,MAEhD0I,QAAQzB,EAAOmB,GACX,OAAO,IAAIC,GAAsB,UAAWrI,MAEhD2I,OAAO1B,EAAOmB,GACV,OAAO,IAAIC,GAAsB,SAAUrI,MAE/C4I,OAAO3B,EAAOmB,GACV,OAAO,IAAIC,GAAsB,SAAUrI,MAE/C6I,OAAO5B,EAAOmB,GACV,OAAO,IAAIC,GAAsB,SAAUrI,MAE/C8I,QAAQ7B,EAAOmB,GACX,OAAO,IAAIC,GAAsB,UAAWrI,MAEhD+I,OAAO9B,EAAOmB,GACV,OAAO,IAAIC,GAAsB,SAAUrI,MAE/CgJ,SAAS/B,GACL,OAAO,IAAIoB,GAAsB,WAAYrI,MAEjDiJ,SAAShC,EAAOmB,GACZ,OAAO,IAAIC,GAAsB,WAAYrI,MAEjDkJ,cAAcjC,EAAOmB,GACjB,OAAO,IAAIC,GAAsB,gBAAiBrI,MAEtDmJ,gBAAgBlC,EAAO9G,EAAKa,GACxB,OAAO,IAAIqH,GAAsB,kBAAmBrI,KAAM,IAAI0B,GAAIvB,SAAWuB,GAAIV,MAErFoI,SAASnC,KAAUoC,GACf,OAAO,IAAIhB,GAAsB,WAAYrI,OC3E9C,MAAMsJ,UAAyB1C,EAClC1F,YAAYqI,EAAQ,IAAIC,GAAQvI,EAAA,KAAe,UAAW,wBACtDwI,MAAMF,EAAO5C,EAAM4C,OACnBvJ,KAAK0J,gBAAkB,CAACzC,EAAO9G,KAC3B,OAAQuB,GAAIvB,IACR,IAAK,OACD,OAAO,IAAIwJ,EAAS3J,KAAKqH,UAAUuC,MACvC,IAAK,UACD,OAAO,IAAID,EAAS3J,KAAKqH,UAAUwC,SACvC,IAAK,YACD,OAAO,IAAIC,EAAQ9J,KAAKqH,UAAU0C,UAC7BC,KAAIC,GAAK,IAAIN,EAAS,GAAGM,EAAEC,SAASxI,SAASuI,EAAEE,WACxD,QACI,OAAInK,KAAK+G,KAAKnG,eAAec,GAAIvB,IACtB,EAAKH,KAAK+G,KAAKrF,GAAIvB,KAAO,GAE9B,IAAIiK,GAAWnJ,EAAA,KAAed,EAAIkH,UAAWrH,QAGhEA,KAAKqK,KAAO,IAAM,IAAIb,GAAQvI,EAAA,KAAe,YAAa,4BAC1DjB,KAAK0B,IAAM,IAAM,IAAIiI,EAAS,WAAW3J,KAAKqH,UAAU3F,QACxD1B,KAAK2I,OAAS,CAAC1B,EAAOmB,IACX,IAAIhB,EAAUgB,aAAakB,GAC9BtJ,KAAKqH,UAAUnG,cAAgBkH,EAAEf,UAAUnG,aAEnDlB,KAAKgJ,SAAW,IAAM,IAAI5B,GAAU,GACpCpH,KAAKsK,KAAOtK,KAAKgJ,SACjBhJ,KAAKyB,MAAQ,IAAM,IAAI6H,EAAiBtJ,KAAKqH,WAC7CrH,KAAKkH,UAAYlH,KAAK2I,OAE1BM,SAAShC,EAAOmB,GACZ,OAAO,IAAImC,EAAYvK,KAAMoI,GAEjCc,cAAcjC,EAAOmB,GACjB,OAAO,IAAIoC,EAAmBxK,KAAMoI,IC9BrC,MAAMqC,UAAoB7D,EAC7B1F,cACIuI,WAAMiB,EAAW/D,EAAM+D,WACvB1K,KAAKqK,KAAO,EAAGM,QAAAA,GAAW9D,KACtB,OAAQA,GACJ,KAAKF,EAAMiE,OACP,OAAO,IAAIC,EACf,KAAKlE,EAAMmE,OACP,OAAO,IAAInB,EACf,KAAKhD,EAAMoE,MACP,OAAO,IAAIjB,EACf,KAAKnD,EAAM+D,UACP,OAAO,IAAID,EACf,KAAK9D,EAAME,KACP,OAAO,IAAImE,EACf,KAAKrE,EAAM4C,MACP,OAAO,IAAID,EACf,KAAK3C,EAAMsE,OACX,KAAKtE,EAAMG,IACP,OAAO,IAAIoE,EACf,KAAKvE,EAAA,SACD,OAAO,IAAIwE,GAAW,SAC1B,KAAKxE,EAAMyE,QACP,OAAO,IAAIhE,EACf,QACI,OAAMP,aAAgBmE,EAGfnE,EAAKuC,SAAS,CAAEuB,QAAAA,IAFZ,IAAInB,GAAQvI,EAAA,KAAe,YAAa,wBAAwBS,GAAImF,EAAKU,kBAKhGvH,KAAK0B,IAAM,IAAM,IAAIiI,EAAS,eAC9B3J,KAAK2I,OAAS,CAAC1B,EAAOmB,IACX,IAAIhB,EAAUgB,aAAaqC,QACjB,IAANrC,QACgB,IAAhBA,EAAEf,WAEjBrH,KAAKgJ,SAAW,IAAM,IAAI5B,EAC1BpH,KAAKsK,KAAOtK,KAAKgJ,SACjBhJ,KAAKyB,MAAQ,IAAM,IAAIgJ,EACvBzK,KAAK0J,gBAAkB,IAAKvJ,IACpBH,KAAK+G,KAAKnG,eAAec,GAAIvB,IACtB,EAAKH,KAAK+G,KAAKrF,GAAIvB,KAAO,GAE9B,IAAIiK,GAAWnJ,EAAA,KAAed,EAAIkH,UAAWrH,MAExDA,KAAKkH,UAAYlH,KAAK2I,OACtB3I,KAAK2H,KAAO,CACRiC,KAAM,YACN/B,YAAa,4BACbvG,KAAM,WACNsG,WAAW,GAGnBqB,SAAShC,EAAOmB,GACZ,OAAO,IAAImC,EAAYvK,KAAMoI,GAEjCc,cAAcjC,EAAOmB,GACjB,OAAO,IAAIoC,EAAmBxK,KAAMoI,IC5DrC,MAAM8C,UAAiBtE,EAC1B1F,YAAYmK,EAAM,IACd5B,MAAM4B,EAAK1E,EAAMsE,QACjBjL,KAAKqK,KAAO,IAAKxD,IACLA,IACCF,EAAMiE,OACA,IAAIC,EAAS7K,KAAKqH,UAAY,EAAI,GAElC,IAAImC,GAAQvI,EAAA,KAAe,YAAa,gCAAgCS,GAAImF,EAAKU,gBAGpGvH,KAAK0B,IAAM,KACP,IAAI2J,EAAM3J,GAAI1B,KAAKqH,WAInB,MAH4B,OAAxBgE,EAAIA,EAAIC,OAAS,KACjBD,EAAMA,EAAIE,OAAO,EAAGF,EAAIC,OAAS,IAE9B,IAAI3B,EAAS,aAAa0B,OAErCrL,KAAK2I,OAAS,EAAGgC,QAAAA,GAAWvC,KACxB,KAAMA,aAAa8C,GACf,OAAO,IAAI9D,EAEf,GAAIgB,EAAEoD,KAAKF,SAAWtL,KAAKwL,KAAKF,OAC5B,OAAO,IAAIlE,EAEf,IAAK,IAAIqE,KAAKzL,KAAKwL,KAAM,CACrB,MAAMrL,EAAMsL,EAAEpE,UACRqE,EAAc1L,KAAKqH,UAAUlH,GAC7BwL,EAAWvD,EAAEf,UAAUlH,GAC7B,IAAKuL,EAAa,CACd,GAAIC,EACA,OAAO,IAAIvE,EAEf,SAEJ,IAAKsE,EAAY/C,OACb,OAAO,IAAIvB,EAEf,MAAMW,EAAM2D,EAAY/C,OAAO,CAAEgC,QAAAA,GAAWgB,GAC5C,GAAI5D,aAAeyB,GACf,OAAOzB,EAEX,IAAKA,EAAIV,UACL,OAAO,IAAID,EAGnB,OAAO,IAAIA,GAAU,IAEzBpH,KAAKgJ,SAAW,IAAM,IAAI5B,GAAU,GACpCpH,KAAKsK,KAAOtK,KAAKgJ,SACjBhJ,KAAKmI,QAAU,EAAGwC,QAAAA,GAAWvC,KACzB,KAAMA,aAAa8C,GACf,OAAO,IAAIjD,GAAUhH,EAAA,KAAe,SAAUmH,EAAEb,WAAWF,UAAWe,GAE1E,IAAIwD,EAAQ,GACZ,IAAK,IAAIH,KAAKzL,KAAKwL,KAAM,CACrB,MAAMrL,EAAMsL,EAAEpE,UACRU,EAAM/H,KAAK0J,gBAAgB,CAAEiB,QAAAA,GAAWc,GAC9C,GAAI1D,aAAeyB,GACf,OAAOzB,EAEX6D,EAAMzL,GAAO4H,EAEjB,IAAK,IAAI0D,KAAKrD,EAAEoD,KAAM,CAClB,MAAMrL,EAAMsL,EAAEpE,UACd,GAAIuE,EAAMhL,eAAeT,GACrB,SAEJ,MAAM4H,EAAMK,EAAEsB,gBAAgB,CAAEiB,QAAAA,GAAWc,GAC3C,GAAI1D,aAAeyB,GACf,OAAOzB,EAEX6D,EAAMzL,GAAO4H,EAEjB,OAAO,IAAImD,EAASU,IAExB5L,KAAKsI,aAAe,CAACrB,EAAOmB,KACxB,IAAIyD,EAAe,GACnB,GAAIzD,aAAauB,EACbkC,EAAe,CAACnK,GAAI0G,QAEnB,MAAIA,aAAa0B,GAIlB,OAAO,IAAI7B,GAAUhH,EAAA,KAAe,iBAAkBmH,EAAEb,WAAWF,UAAWe,GAH9EyD,EAAe7D,EAAMI,EAAGnB,GAK5B,IAAK6E,MAAMC,QAAQF,GACf,OAAO,IAAI5D,GAAUhH,EAAA,KAAe,iBAAkBmH,EAAEb,WAAWF,UAAWe,GAElF,IAAIwD,EAAQ,GACZ,IAAK,IAAIH,KAAKzL,KAAKwL,KAAM,CACrB,MAAMrL,EAAMsL,EAAEpE,UACd,IAAmC,IAA/BwE,EAAaG,QAAQ7L,GAAa,CAClC,IAAI4H,EAAM/H,KAAK0J,gBAAgBzC,EAAOwE,GACtC,GAAI1D,aAAeyB,GACf,OAAOzB,EAEX6D,EAAMzL,GAAO4H,GAGrB,OAAO,IAAImD,EAASU,IAExB5L,KAAK0J,gBAAkB,CAACzC,EAAOwE,KAC3B,KAAMA,aAAa9B,GAAe8B,aAAaZ,GAC3C,OAAO,IAAI5C,GAAUhH,EAAA,KAAe,kBAAmBwK,EAAElE,WAAY7F,GAAI+J,IAE7E,MAAMtL,EAAMsL,EAAEpE,UACd,OAAIrH,KAAKqH,UAAUzG,eAAeT,GACvBH,KAAKqH,UAAUlH,GAEtBH,KAAK+G,KAAKnG,eAAeT,GAClB,EAAKH,KAAK+G,KAAKrF,GAAIvB,KAAO,GAE9B,IAAIsK,GAEfzK,KAAKmJ,gBAAkB,IAAKhJ,EAAKa,KAC7B,KAAMb,aAAewJ,GACjB,OAAO,IAAI1B,GAAUhH,EAAA,KAAe,SAAUd,EAAIoH,WAAY7F,GAAIvB,IAEtEH,KAAKsH,UAAUnH,EAAIkH,WAAarG,GAEpChB,KAAKyH,YAAc,CAACR,EAAOwE,KACvB,MAAMtL,EAAMuB,GAAI+J,GAChB,OAAIzL,KAAKqH,UAAUzG,eAAec,GAAIvB,IAC3B,IAAIiH,GAAU,GAElB,IAAIA,EAAUpH,KAAKY,eAAeT,KAE7CH,KAAKyB,MAAQ,KACT,MAAMsG,EAAM,IAAImD,EAChB,IAAIzK,EAAM,GACNwL,EAAUjM,KAAKqH,UACnB,IAAK,IAAIlH,KAAOE,OAAOmL,KAAKS,GACxBxL,EAAIN,GAAO8L,EAAQ9L,GAGvB,OADA4H,EAAIT,UAAY7G,EACTsH,GAEX/H,KAAKkH,UAAY,CAACD,EAAOmB,KACrB,KAAMA,aAAa8C,GACf,OAAO,IAAI9D,EAEf,GAAI/G,OAAOmL,KAAKxL,KAAKqH,WAAWiE,SAAWjL,OAAOmL,KAAKpD,EAAEf,WAAWiE,OAChE,OAAO,IAAIlE,EAEf,IAAK,IAAIjH,KAAOE,OAAOmL,KAAKxL,KAAKqH,WAAY,CACzC,IAAKe,EAAEf,UAAUzG,eAAeT,KAASH,KAAKqH,UAAUzG,eAAeT,GACnE,OAAO,IAAIiH,EAEf,MAAM8E,EAAWlM,KAAKqH,UAAUlH,GAC1BgM,EAAS/D,EAAEf,UAAUlH,GAC3B,IAAK+L,EAAShF,UAAUD,EAAOkF,GAAQ9E,UACnC,OAAO,IAAID,EAGnB,OAAO,IAAIA,GAAU,IAGzBoE,WACA,OAAOnL,OAAOmL,KAAKxL,KAAKqH,WAAW2C,KAAIC,GAAK,IAAIN,EAASM,KAEzDuB,SAAKH,IACTpC,SAAShC,EAAOmB,GACZ,OAAO,IAAImC,EAAYvK,KAAMoI,GAEjCc,cAAcjC,EAAOmB,GACjB,OAAO,IAAIoC,EAAmBxK,KAAMoI,ICvKrC,MAAM+C,UAAmBvE,EAC5B1F,YAAYkL,EAAO,SAAaC,EAAa,GAAIzC,EAAO,SAAU0C,EAAQ,IAAIpB,EAAYqB,EAAa5F,EAAMG,IAAK0F,GAC9G/C,MAAM2C,EAAMzF,EAAA,UACZ3G,KAAKqK,KAAO,CAACpD,EAAOJ,IACT,IAAI2C,GAAQvI,EAAA,KAAe,YAAa,+BAEnDjB,KAAKyB,MAAQ,IACF,IAAI0J,EAAWnL,KAAKsH,UAAWtH,KAAKqM,WAAYrM,KAAK4J,KAAM5J,KAAKsM,MAAOtM,KAAKuM,WAAYvM,KAAKyM,aAExGzM,KAAKqH,QAAU,IAAMrH,KACrBA,KAAK0B,IAAM,IAAM,IAAIiI,EAAS,UAAU3J,KAAK4J,SAC7C5J,KAAK2I,OAAS,CAAC1B,EAAOmB,IAGX,IAAIhB,EAFLgB,aAAa+C,GAEEnL,KAAKsH,YAAcc,EAAEd,WAE9CtH,KAAKgJ,SAAW,IAAM,IAAI5B,GAAU,GACpCpH,KAAKsK,KAAOtK,KAAKgJ,SACjBhJ,KAAKoJ,SAAW,EAAGuB,QAAAA,MAAc+B,KAC7B1M,KAAKyM,YAAYE,KAAOhC,EAAQgC,KCKrC,SAAchC,EAAS5D,EAAM2F,GAChC,IAAIE,EACJ,IAAIC,EAAclC,GAClBA,EAAU5D,EAAK0F,aACPE,KAAOE,EAAYF,KAC3B,MAAMG,EAAK/F,EAAKO,UACVyF,EC+HH,SAAuCL,EAAQ3F,EAAMiG,GACxD,MAAMD,EAAa,IAAIE,GACvBF,EAAWC,OAASA,EACpB,IAAIE,EAAMC,KAAKD,IAAIR,EAAOpB,OAAQvE,EAAKsF,WAAWf,QAClD,IAAK,IAAI8B,EAAI,EAAGA,EAAIF,EAAKE,IAAK,CAC1B,IAAIpM,EAAQ,IAAIyJ,EACZ5D,EAAOF,EAAMG,IACjB,IAAKC,EAAKsF,WAAWe,GACjB,SAEJ,MAAMC,EAAMtG,EAAKsF,WAAWe,GACxBV,EAAOU,aAAcxG,IACrBC,EAAO6F,EAAOU,GAAG5F,SACjBxG,EAAQ0L,EAAOU,IAEnB,MAAME,EAAeD,EAAIxG,KAAKK,UAAU,CAAEyD,QAASqC,GAAUN,EAAOU,IACpE,GAAIE,aAAwB9D,GACxB,OAAO8D,EACX,IAAKA,EAAajG,UACd,OAAO,IAAIY,GAAUhH,EAAA,KAAeS,GAAI2L,EAAIxG,MAAOnF,GAAImF,GAAOnF,GAAIV,IAEtE+L,EAAWQ,OAAOF,EAAIzD,KAAM5I,EAAO,CAC/BwM,mBAAmB,IAG3B,IAAIC,EAASV,EAAWQ,OAAO,OAAQ,IAAIzD,EAAQ4C,GAAS,CACxDc,mBAAmB,IAEvB,OAAIC,aAAkBjE,GACXiE,EAEJV,ED9JYW,CAA8BhB,EAAQ3F,EAAM4D,GAC/D,GAAIoC,aAAsBvD,GACtB,OAAOuD,EAEX,IAAIT,EAA8B,QAArBM,EAAK7F,EAAKuF,aAA0B,IAAPM,EAAgBA,EAAK,IAAI1B,EACnE,KAAMoB,aAAiBpB,GACnB,OAAO,IAAIjD,GAAUhH,EAAA,KAAe,gBAAiBqL,EAAOA,EAAO,4BAEvE,IAAImB,EAASV,EAAWQ,OAAO,OAAQjB,GACvC,OAAImB,aAAkBjE,GACXiE,EAEPX,aAAca,GAhDtB,SAAkB5G,EAAM4D,EAAS+B,EAAQI,GACrC,IAAIF,EAAIgB,EACR,MAAM7F,EAAM+E,EAAGe,UAAUlD,GACzB,OAAI5C,EAAIwB,MACGxB,EAAIwB,YACQmB,IAAnB3C,EAAI+F,aACJ/F,EAAIsD,IAAMtD,EAAI+F,WACd/F,EAAI+F,gBAAapD,IAE6C,IAA9D3D,EAAKwF,WAAWrF,UAAU,CAAEyD,QAAAA,GAAW5C,EAAIsD,KAAKhE,UACzC,IAAIY,GAAUhH,EAAA,KAAeS,GAAIqF,EAAKwF,aAAiC,QAAlBK,EAAK7E,EAAIsD,WAAwB,IAAPuB,OAAgB,EAASA,EAAGrF,WAAWF,YAAc,YAAgC,QAAlBuG,EAAK7F,EAAIsD,WAAwB,IAAPuC,OAAgB,EAASA,EAAGlM,MAAM2F,UAAW,0BAEhOU,EAAIsD,IACGtD,EAAIsD,IAGJ,IAAIZ,GAiCJsD,CAAShH,EAAMgG,EAAYL,EAAQI,GAEvB,mBAAPA,EAhCpB,SAAoB/F,EAAM4D,EAAS+B,EAAQI,GACvC,IAAK,IAAIM,EAAIV,EAAOpB,OAAQ8B,EAAIN,EAAGxB,OAAQ8B,IACvCV,EAAOsB,KAAK,IAAIvD,GACpB,MAAM1C,EAAM+E,EAAG,CACXnC,QAAAA,MACE+B,GACN,OAAI3E,aAAeyB,IAAWzB,aAAenB,EAClCmB,EAEJ,IAAI0C,EAwBAwD,CAAWlH,EAAMgG,EAAYL,EAAQI,GAGrC,IAAI7E,GAAUhH,EAAA,KAAe,kBAAmB6L,GD7B5CjM,CAAKb,KAAKyM,YAAazM,KAAM0M,IAExC1M,KAAK0J,gBAAkB,CAACzC,EAAO9G,IACvBH,KAAK+G,KAAKnG,eAAec,GAAIvB,IACtB,EAAKH,KAAK+G,KAAKrF,GAAIvB,KAAO,GAE9B,IAAIiK,GAAWnJ,EAAA,KAAed,EAAIkH,UAAWrH,MAExDA,KAAKkH,UAAY,CAACD,EAAOmB,KACrB,KAAMA,aAAa+C,GACf,OAAO,IAAI/D,EAEf,GAAIpH,KAAKqM,WAAWf,SAAWlD,EAAEiE,WAAWf,OACxC,OAAO,IAAIlE,EAEf,IAAK,IAAIgG,EAAI,EAAGA,EAAIpN,KAAKqM,WAAWf,OAAQ8B,IACxC,IAAKpN,KAAKqM,WAAWe,GAAGvG,KAAKK,UAAUD,EAAOmB,EAAEiE,WAAWe,GAAGvG,MAAMQ,UAChE,OAAO,IAAID,EAGnB,MAAM8G,EAAgBlO,KAAKoJ,SAASnC,GACpC,OAAIiH,aAAyB1E,GAClB0E,EAENA,EAAcvF,OAAO1B,EAAOmB,EAAEmE,YAAYlF,UAGxC,IAAID,GAAU,GAFV,IAAIA,GAInBpH,KAAKqM,WAAaA,EAClBrM,KAAK2H,KAAKiC,KAAOA,EACjB5J,KAAKsM,MAAQA,EACbtM,KAAKuM,WAAaA,EACdC,EACAxM,KAAKyM,YAAcD,GAGnBxM,KAAKyM,YAAc,IAAIQ,GACvBjN,KAAKyM,YAAYO,OAASjL,GAE9B/B,KAAK2H,KAAK4E,WAAa7K,GAAI6K,GAC3BvM,KAAK2H,KAAKwG,KAAO9B,EAAWrC,KAAIqD,IAAO,CACnCzD,KAAMyD,EAAIzD,KACVwE,aAAc1M,GAAI2L,EAAIe,cACtBvH,KAAMwG,EAAIxG,KAAKc,KAAKiC,KACpByE,UAAU,MAGdzE,WACA,IAAIgD,EACJ,OAAiC,QAAzBA,EAAK5M,KAAK2H,KAAKiC,YAAyB,IAAPgD,EAAgBA,EAAK,cAE9DhD,SAAK0E,GACLtO,KAAK2H,KAAKiC,KAAO0E,EAErBrF,SAAShC,EAAOmB,GACZ,OAAO,IAAImC,EAAYvK,KAAMoI,GAEjCc,cAAcjC,EAAOmB,GACjB,OAAO,IAAIoC,EAAmBxK,KAAMoI,IGlFrC,MAAMmG,UAAoB3H,EAC7B1F,YAAY0I,EAAM5I,EAAOwN,GAAU,GAC/B/E,MAAMzI,EAAO2F,EAAMsE,QACnBjL,KAAKqK,KAAO,MACD,IAAIb,GAAQvI,EAAA,KAAe,YAAa,gCAEnDjB,KAAKyB,MAAQ,KACT,IAAIhB,EAAM,GACNwL,EAAUjM,KAAKqH,UACnB,IAAK,IAAIlH,KAAOE,OAAOmL,KAAKS,GACxBxL,EAAIN,GAAO8L,EAAQ9L,GAEvB,OAAO,IAAIoO,EAAYvO,KAAK4J,KAAMnJ,IAEtCT,KAAK0B,IAAM,KACP,MAAM8J,EAAOnL,OAAOmL,KAAKxL,KAAKqH,WAC9B,OAAO,IAAIsC,EAAS,cAAcjI,GAAI1B,KAAK4J,QAAQ4B,EAAKF,OAAS,EAAI,KAAO,KAAKE,EAAKiD,MAAM,EAAG,KAAKjD,EAAKF,QAAU,EAAI,MAAQ,QAEnItL,KAAK2I,OAAS,CAAC1B,EAAOmB,IACX,IAAIhB,EAAUpH,OAASoI,GAElCpI,KAAKgJ,SAAW,IAAM,IAAI5B,GAAU,GACpCpH,KAAKsK,KAAOtK,KAAKgJ,SACjBhJ,KAAK0J,gBAAkB,CAACzC,EAAO9G,KAC3B,GAAIA,aAAewJ,GAAY3J,KAAKqH,UAAUzG,eAAeT,EAAIkH,WAAY,CACzE,MAAMqH,EAAS1O,KAAKqH,UAAUlH,EAAIkH,WAClC,GAAIqH,EAAOC,aACP,OAAOD,EAAO1N,MAGtB,OAAMb,aAAewJ,EAGjB3J,KAAK+G,KAAKnG,eAAec,GAAIvB,IACtB,EAAKH,KAAK+G,KAAKrF,GAAIvB,KAAO,GAE9B,IAAIiK,GAAWnJ,EAAA,KAAed,EAAIkH,UAAWrH,KAAK+G,MAL9C,IAAIkB,GAAUhH,EAAA,KAAe,SAAUd,EAAIoH,aAO1DvH,KAAKkH,UAAYlH,KAAK2I,OACtB3I,KAAK2H,KAAKiC,KAAOlI,GAAIkI,GACrB5J,KAAKwO,QAAUA,EAEf5E,WACA,OAAO,IAAID,EAAS3J,KAAK2H,KAAKiC,MAE9BA,SAAK0E,GACLtO,KAAK2H,KAAKiC,KAAO0E,EAAEjH,UAEvB8B,gBAAgBlC,EAAO9G,EAAKa,GACxB,KAAMb,aAAewJ,GACjB,OAAO,IAAI1B,GAAUhH,EAAA,KAAe,SAAUd,EAAIoH,WAAWF,UAAW3F,GAAIvB,IAEhF,IAAIgB,EAAMO,GAAIvB,GACd,IAAKH,KAAKwO,QACN,OAAO,IAAIvG,GAAUhH,EAAA,KAAe,UAAW,YAAa,GAAGS,GAAI1B,KAAK4J,SAEtE5I,aAAiB4F,IACnB5F,EAAQ,EAAKA,IAEjB,MAAM0N,EAAS1O,KAAKsH,UAAUnG,GAC9B,OAAKuN,EAGDA,EAAOE,WACA,IAAI3G,GAAUhH,EAAA,KAAe,UAAW,YAAa,GAAGS,GAAI1B,KAAK4J,SAASzI,MAEhFuN,EAAOC,kBAGZD,EAAO1N,MAAQA,GAFJ,IAAIiH,GAAUhH,EAAA,KAAe,aAAc,eAAgB,GAAGS,GAAI1B,KAAK4J,SAASzI,MANhF,IAAIqI,GAAQvI,EAAA,KAAe,cAAe,UAAUE,kCAAoCO,GAAI1B,KAAK4J,UAUhHX,SAAShC,EAAOmB,GACZ,OAAO,IAAImC,EAAYvK,KAAMoI,GAEjCc,cAAcjC,EAAOmB,GACjB,OAAO,IAAIoC,EAAmBxK,KAAMoI,IC1ErC,MAAMyG,UAAoBjI,EAC7B1F,YAAYF,EAAO4I,EAAO,eAAgBkF,GAAqB,GAC3DrF,MAAMzI,EAAO2F,EAAMsE,QACnBjL,KAAKqK,KAAQpD,GACF,IAAIuC,GAAQvI,EAAA,KAAe,YAAa,6BAEnDjB,KAAKyB,MAAQ,IAAM,IAAIoN,EAAY7O,KAAKsH,WACxCtH,KAAK0B,IAAM,KACP,IACI,OAAO,IAAIiI,EAAS,cAAcoF,KAAKC,UAAUhP,KAAKsH,eAE1D,MAAOjE,GACH,OAAO,IAAIsG,EAAS,cAAc3J,KAAKsH,gBAG/CtH,KAAK2I,OAAS,IAAKP,IACR,IAAIhB,EAAUpH,OAASoI,GAElCpI,KAAKgJ,SAAW,IAAM,IAAI5B,GAAU,GACpCpH,KAAKsK,KAAOtK,KAAKgJ,SACjBhJ,KAAK0J,gBAAkB,CAACzC,EAAOwE,KAC3B,MAAMtL,EAAMuB,GAAI+J,GACVJ,EAAMrL,KAAKsH,UACXS,EAAMsD,EAAIlL,GAChB,QAAYuK,IAAR3C,EACA,OAAI/H,KAAK+G,KAAKnG,eAAeT,GAClB,EAAKH,KAAK+G,KAAKrF,GAAIvB,KAAO,GAE9B,IAAIiK,GAAWnJ,EAAA,KAAed,EAAKH,MAE9C,GAAI+H,aAAenB,EACf,OAAOmB,EAEX,GAAmB,mBAARA,EAAoB,CAC3B,MAAMkH,EAAcjP,KAAK8O,mBACzB,OAAO,IAAI3D,GAAW,CAAClE,KAAUkH,IACxBc,EAMM,EAAK5D,EAAIlL,GAAK8G,KAAUkH,KAL/BA,EAAOA,EAAKnE,KAAI5J,GAAK4H,EAAM5H,EAAG6G,KAEvB,EADKoE,EAAIlL,MAAQgO,OAQpC,OAAO,EAAKpG,IAEhB/H,KAAKoJ,SAAW,CAACnC,KAAUkH,KACvB,GAA8B,mBAAnBnO,KAAKsH,UACZ,OAAO,IAAIW,GAAUhH,EAAA,KAAe,kBAAmBjB,KAAKsH,UAAW5F,GAAI1B,OAE/E,IAAI+H,EACJ,GAAI/H,KAAK8O,mBACL,IACI/G,EAAM,IAAI/H,KAAKsH,UAAUL,KAAUkH,GAEvC,MAAOvB,GACH7E,EAAM/H,KAAKsH,UAAUL,KAAUkH,QAInC,IACIpG,EAAM,IAAI/H,KAAKsH,aAAa6G,EAAKnE,KAAI5J,GAAK4H,EAAM5H,EAAG6G,MAEvD,MAAO2G,GACH7F,EAAM/H,KAAKsH,aAAa6G,EAAKnE,KAAI5J,GAAK4H,EAAM5H,EAAG6G,MAGvD,OAAIc,aAAenB,EACRmB,EAEJ,EAAKA,IAEhB/H,KAAKyH,YAAc,CAACR,EAAO9G,IAChB,IAAIiH,IAAYpH,KAAK0J,gBAAgBzC,EAAO9G,aAAgBqJ,KAEvExJ,KAAKkH,UAAYlH,KAAK2I,OACtB3I,KAAK2H,KAAKiC,KAAOlI,GAAIkI,GACrB5J,KAAK8O,mBAAqBA,EAE9B7F,SAAShC,EAAOmB,GACZ,OAAO,IAAImC,EAAYvK,KAAMoI,GAEjCc,cAAcjC,EAAOmB,GACjB,OAAO,IAAIoC,EAAmBxK,KAAMoI,ICjFrC,SAAS8G,IACZvI,EAAME,KAAO,IAAImE,GAAO,EAAM,QAC9BrE,EAAM+D,UAAY,IAAIM,GAAO,EAAM,aACnCrE,EAAMmE,OAAS,IAAIE,GAAO,EAAM,UAChCrE,EAAMoE,MAAQ,IAAIC,GAAO,EAAM,SAC/BrE,EAAMiE,OAAS,IAAII,GAAO,EAAM,UAChCrE,EAAMG,IAAM,IAAIkE,GAAO,EAAM,OAC7BrE,EAAA,SAAiB,IAAIqE,GAAO,EAAM,YAClCrE,EAAM2D,KAAO,IAAIU,GAAO,EAAM,WAC9BrE,EAAMsE,OAAS,IAAID,GAAO,EAAM,UAChCrE,EAAM4C,MAAQ,IAAIyB,GAAO,EAAM,SAC/BrE,EAAMG,IAAIa,KAAO,CACbiC,KAAM,MACN/B,YAAa,yBACbvG,KAAM,WACNsG,WAAW,GAEfjB,EAAMiE,OAAOjD,KAAO,CAChBiC,KAAM,MACN/B,YAAa,8GACbvG,KAAM,WACNsG,WAAW,GAEfjB,EAAMmE,OAAOnD,KAAO,CAChBiC,KAAM,SACN/B,YAAa,8HACbvG,KAAM,WACNsG,WAAW,GAEfjB,EAAM2D,KAAK3C,KAAO,CACdiC,KAAM,OACN/B,YAAa,iEACbvG,KAAM,WACNsG,WAAW,GAEfjB,EAAA,cAAsB,CAClBiD,KAAM,WACN/B,YAAa,kGACbvG,KAAM,WACNsG,WAAW,GAEfjB,EAAMoE,MAAMpD,KAAO,CACfiC,KAAM,QACN/B,YAAa,mGACbvG,KAAM,WACNsG,WAAW,GAEfjB,EAAMsE,OAAOtD,KAAO,CAChBiC,KAAM,SACN/B,YAAa,oEACbvG,KAAM,WACNsG,WAAW,GAEfjB,EAAM4C,MAAM5B,KAAO,CACfiC,KAAM,QACN/B,YAAa,6CACbvG,KAAM,WACNsG,WAAW,GAEfjB,EAAME,KAAKc,KAAO,CACdiC,KAAM,OACN/B,YAAa,iEACbvG,KAAM,WACNsG,WAAW,GCvEnB,SAASuH,EAAgBxE,EAASyE,EAAQC,EAAU/C,EAAOO,GACvD,KAAMuC,aAAkBpE,GACpB,OAAO,IAAI/C,GAAUhH,EAAA,KAAe,cAAemO,EAAQA,GAE/D,MAAME,EAAY,IAAInE,GAAW,EAAGR,QAAAA,MAAcwD,KAC9C,MAAMpB,EAAa,IAAIE,GAEvB,GADAF,EAAWC,OAASrC,EAChByE,EAAOG,YAAa,CACpB,IAAI3C,EAAKuC,EAAgBpC,EAAYqC,EAAOG,YAAaF,EAAU/C,EAAOO,GAC1E,GAAID,aAAcpD,GACd,OAAOoD,EAGf,MAAM4C,EAAWJ,MAAAA,OAAuC,EAASA,EAAOK,SACxE,IAAKD,EACD,OAEJA,EAASlD,MAAQA,EACjBkD,EAAS/C,YAAcM,EACvB,MAAM2C,EAAOF,EAASpG,SAAS,CAAEuB,QAASoC,MAAiBoB,GAC3D,OAAIuB,aAAgBlG,GACTkG,OADX,SAGDhF,EAAW,QAAS4B,GACvB,IAAImB,EAAS9C,EAAQ4C,OAAO,QAAS+B,GACrC,GAAI7B,aAAkBjE,GAClB,OAAOiE,EAEX,MAAM1F,EAAM4H,EAAeP,EAAQ,CAAEzE,QAAAA,GAAW,IAAI,EAAO0E,GAC3D,OAAItH,aAAeyB,GACRzB,OADX,EAIG,SAAS4H,EAAe9I,GAAM,QAAE8D,GAAW+B,EAAQkD,GAAU,EAAMC,EAAK,IAC3E,IAAIjC,EACJ,GAAI/G,EAAKiJ,UAAW,CAChB,GAAIpD,EAAOpB,OAAS,EAChB,OAAO,IAAIb,EAEf,OAAQ5D,EAAKkJ,UACT,IAAK,YACL,IAAK,OACD,OAAIrD,EAAOpB,OAAS,EACT,IAAIN,EAGJ,IAAIrB,EAAS+C,EAAO,GAAGnF,YAEtC,IAAK,SACD,OAAO,IAAIoC,EAAS+C,EAAO,GAAGhL,MAAM2F,WACxC,IAAK,QACD,OAAO,IAAIyC,EAAQ4C,GACvB,IAAK,SACD,OAAO,IAAI7B,EAAS6B,EAAO,GAAGrF,WAClC,IAAK,WACD,OAAO,IAAI8D,EAAWuB,EAAO,GAAGrF,WACpC,IAAK,UACD,OAAO,IAAID,EAAUsF,EAAO,GAAGpC,OAAOjD,WAC1C,QACI,OAAO,EAAKqF,EAAO,KAG/B,MAAMK,EAAa,IAAIE,GACvBF,EAAWC,OAAkC,QAAxBY,EAAK/G,EAAK4I,gBAA6B,IAAP7B,OAAgB,EAASA,EAAGnB,YACjF,MAAM4C,EAAW,IAAInE,EACrB,GAAIrE,EAAK0I,YAAa,CAClB,IAAIxH,EAAMoH,EAAgBpC,EAAYlG,EAAK0I,YAAaM,EAAIR,EAAU1E,GACtE,GAAI5C,aAAeyB,GACf,OAAOzB,EAGfsH,EAAS/H,UAAYuI,EACrB,IAAK,IAAIG,KAAUnJ,EAAKoJ,YAAa,CACjC,MAAMC,EAAcF,EAAOvO,QAC3ByO,EAAY5D,MAAQ+C,EACpBQ,EAAGG,EAAOpG,MAAQsG,GAC6B,IAA3CxJ,EAAiBsF,QAAQgE,EAAOpG,QAChCyF,EAASW,EAAOpG,MAAQsG,EAAY9G,UAG5C,GAAIwG,GAAW/I,EAAK4I,SAAU,CAC1B5I,EAAK4I,SAASnD,MAAQ+C,EACtBxI,EAAK4I,SAAShD,YAAcM,EAC5B,MAAMhF,EAAMlB,EAAK4I,SAASrG,SAAS,CAAEuB,QAASoC,MAAiBL,GAC/D,GAAI3E,aAAeyB,GACf,OAAOzB,EAKf,OAFAsH,EAAS7H,SAAWX,EACpBA,EAAKsJ,cAAcnC,KAAKqB,GACjBA,ECtFJ,MAAMrE,UAAepE,EACxB1F,YAAYkP,GAAc,EAAOxG,EAAO,SAAUqG,EAAc,GAAIV,EAAaE,GAC7EhG,WAAMiB,EAAW/D,MAAAA,OAAqC,EAASA,EAAME,MACrE7G,KAAKmQ,cAAgB,GACrBnQ,KAAKyB,MAAQ,IACF,IAAIuJ,EAAOhL,KAAK8P,UAAW9P,KAAK+P,SAAU/P,KAAKiQ,YAAajQ,KAAKuP,YAAavP,KAAKyP,UAE9FzP,KAAKgH,IAAM,CAACC,EAAOJ,IACR,IAAIO,EAAUP,IAASF,EAAME,MAExC7G,KAAKqK,KAAO,CAACpD,EAAOJ,IACT,IAAIwB,GAAsB,OAAQrI,MAE7CA,KAAKkH,UAAY,CAACD,EAAOmB,KACrB,IAAIwE,EACJ,IAAKxE,EACD,OAAO,IAAIhB,EACf,IAAIiJ,EAAIjI,EAAEZ,SACV,GAAIxH,OAAS2G,EAAMG,KACfuJ,IAAM1J,EAAMG,KACZ9G,OAASqQ,EACT,OAAO,IAAIjJ,GAAU,GAEzB,KAAOiJ,aAAarF,GAAQ,CACxB,IAAqG,KAAvE,QAAxB4B,EAAKyD,EAAEd,mBAAgC,IAAP3C,OAAgB,EAASA,EAAGjE,OAAO1B,EAAOjH,MAAMqH,WAClF,OAAO,IAAID,GAAU,GAEzB,IAAKiJ,EAAEd,YACH,MAEJc,EAAIA,EAAEd,YAEV,OAAO,IAAInI,GAEfpH,KAAK2I,OAAS,CAAC1B,EAAOoJ,IACX,IAAIjJ,EAAUiJ,IAAMrQ,MAE/BA,KAAKoJ,SAAW,CAACnC,KAAUyF,IAChBiD,EAAe3P,KAAMiH,EAAOyF,GAAU,IAEjD1M,KAAK0B,IAAM,IAAM,IAAIiI,EAAS3J,KAAK+P,UACnC/P,KAAKgJ,SAAW,IAAM,IAAI5B,GAAU,GACpCpH,KAAKsK,KAAOtK,KAAKgJ,SACjBhJ,KAAK0J,gBAAkB,CAACzC,EAAOwE,KAC3B,KAAMA,aAAa9B,GACf,OAAI3J,OAAS2G,EAAMoE,MACR,IAAIuF,EAAY7E,GAEpB,IAAIxD,GAAUhH,EAAA,KAAe,SAAUwK,EAAElE,WAAY7F,GAAI+J,IAEpE,MAAMtL,EAAMsL,EAAEpE,UACd,OAAIrH,KAAK+G,KAAKnG,eAAeT,GAClB,EAAKH,KAAK+G,KAAK5G,IAAM,GAEzB,IAAImQ,EAAY7E,IAE3BzL,KAAK8P,UAAYM,EACjBpQ,KAAK+P,SAAWnG,EAChB5J,KAAK2H,KAAKiC,KAAOA,EACjB5J,KAAKuP,YAAcA,EACnBvP,KAAKiQ,YAAcA,EACfR,IACAA,EAAS7F,KAAOA,EAChB5J,KAAKyP,SAAWA,GAEf9I,EAAME,OACP7G,KAAKwH,SAAWxH,MAGxBiJ,SAAShC,EAAOmB,GACZ,OAAO,IAAImC,EAAYvK,KAAMoI,GAEjCc,cAAcjC,EAAOmB,GACjB,OAAO,IAAIoC,EAAmBxK,KAAMoI,IAGrC,MAAMmC,UAAoBS,EAC7B9J,YAAYqP,EAAMC,GACd/G,OAAM,EAAO,IAAI/H,GAAI6O,UAAa7O,GAAI8O,OACtCxQ,KAAKoJ,SAAW,CAACnC,KAAUyF,IAChB,IAAIrE,GAAsB,WAAYrI,MAEjDA,KAAKkH,UAAY,CAACD,EAAOoJ,KACrB,MAAMI,EAAUzQ,KAAK0Q,SAASxJ,UAAUD,EAAOoJ,GACzCM,EAAW3Q,KAAK4Q,UAAU1J,UAAUD,EAAOoJ,GACjD,OAAII,aAAmBjH,GACZiH,EACPE,aAAoBnH,GACbmH,EACJ,IAAIvJ,EAAUqJ,EAAQpJ,WACzBsJ,EAAStJ,YAEjBrH,KAAKyB,MAAQ,IACF,IAAI8I,EAAYvK,KAAK0Q,SAAU1Q,KAAK4Q,WAE/C5Q,KAAK2I,OAAS,CAAC1B,EAAOoJ,IACX,IAAIjJ,EAAUiJ,aAAa9F,IACwB,IAAtDvK,KAAK0Q,SAAS/H,OAAO1B,EAAOoJ,EAAEK,UAAUrJ,YACgB,IAAxDrH,KAAK4Q,UAAUjI,OAAO1B,EAAOoJ,EAAEO,WAAWvJ,WAElDrH,KAAK0Q,SAAWH,EAChBvQ,KAAK4Q,UAAYJ,GAGlB,MAAMhG,UAA2BQ,EACpC9J,YAAYqP,EAAMC,GACd/G,OAAM,EAAO,IAAI/H,GAAI6O,UAAa7O,GAAI8O,OACtCxQ,KAAKoJ,SAAW,CAACnC,KAAUyF,IAChB,IAAIrE,GAAsB,WAAYrI,MAEjDA,KAAKkH,UAAY,CAACD,EAAOoJ,KACrB,MAAMI,EAAUzQ,KAAK0Q,SAASxJ,UAAUD,EAAOoJ,GACzCM,EAAW3Q,KAAK4Q,UAAU1J,UAAUD,EAAOoJ,GACjD,OAAII,aAAmBjH,GACZiH,EACPE,aAAoBnH,GACbmH,EACJ,IAAIvJ,EAAUqJ,EAAQpJ,WACzBsJ,EAAStJ,YAEjBrH,KAAKyB,MAAQ,IACF,IAAI+I,EAAmBxK,KAAK0Q,SAAU1Q,KAAK4Q,WAEtD5Q,KAAK2I,OAAS,CAAC1B,EAAOoJ,IACX,IAAIjJ,EAAUiJ,aAAa7F,IACwB,IAAtDxK,KAAK0Q,SAAS/H,OAAO1B,EAAOoJ,EAAEK,UAAUrJ,YACgB,IAAxDrH,KAAK4Q,UAAUjI,OAAO1B,EAAOoJ,EAAEO,WAAWvJ,WAElDrH,KAAK0Q,SAAWH,EAChBvQ,KAAK4Q,UAAYJ,GAGlB,MAAMK,UAAkB7F,EAC3B9J,YAAY2F,GACR4C,OAAM,EAAO,KAAK/H,GAAImF,OACtB7G,KAAKoJ,SAAW,CAACnC,KAAUyF,IAChB,IAAIrE,GAAsB,WAAYrI,MAEjDA,KAAKkH,UAAY,CAACD,EAAOoJ,KACrB,MAAMtI,EAAM/H,KAAK8Q,QAAQ5J,UAAUD,EAAOoJ,GAC1C,OAAItI,aAAeyB,GACRzB,EACJ,IAAIX,GAAWW,EAAIV,YAE9BrH,KAAKyB,MAAQ,IACF,IAAIoP,EAAU7Q,KAAK8Q,SAE9B9Q,KAAK2I,OAAS,CAAC1B,EAAOoJ,IACX,IAAIjJ,EAAUiJ,aAAaQ,IACsB,IAApD7Q,KAAK8Q,QAAQnI,OAAO1B,EAAOoJ,EAAES,SAASzJ,WAE9CrH,KAAK8Q,QAAUjK,GCvJhB,MAAMgE,UAAiBjE,EAC1B1F,YAAYF,EAAQ,GAChByI,MAAMzI,EAAO2F,EAAMiE,QACnB5K,KAAKqK,KAAO,CAACpD,EAAOJ,KAChB,OAAQA,GACJ,KAAKF,EAAMiE,OACP,OAAO5K,KACX,KAAK2G,EAAMmE,OACP,OAAO9K,KAAK0B,MAChB,KAAKiF,EAAMoE,MACP,OAAO,IAAIjB,EAAQ,IAAIgC,MAAM9L,KAAKqH,YACtC,QACI,OAAO,IAAImC,GAAQvI,EAAA,KAAe,YAAa,wBAAwBS,GAAImF,EAAKU,kBAG5FvH,KAAK0B,IAAM,IAAM,IAAIiI,EAAS3J,KAAKqH,UAAU0J,YAC7C/Q,KAAKmI,QAAU,CAAClB,EAAOmB,IACbA,aAAayC,EAEZ,IAAIA,EAAS7K,KAAKqH,UAAYe,EAAEf,WAD5B,IAAIY,GAAUhH,EAAA,KAAe,SAAUmH,EAAEb,WAAWF,UAAWe,EAAEf,WAGhFrH,KAAKsI,aAAe,CAACrB,EAAOmB,IAClBA,aAAayC,EAEZ,IAAIA,EAAS7K,KAAKqH,UAAYe,EAAEf,WAD5B,IAAIY,GAAUhH,EAAA,KAAe,SAAUmH,EAAEb,WAAWF,UAAWe,EAAEf,WAGhFrH,KAAKuI,aAAe,CAACtB,EAAOmB,IAClBA,aAAayC,EAEZ,IAAIA,EAAS7K,KAAKqH,UAAYe,EAAEf,WAD5B,IAAIY,GAAUhH,EAAA,KAAe,SAAUmH,EAAEb,WAAWF,UAAWe,EAAEf,WAGhFrH,KAAKwI,WAAa,CAACvB,EAAOmB,IAChBA,aAAayC,EAEZ,IAAIA,EAAS7K,KAAKqH,UAAYe,EAAEf,WAD5B,IAAIY,GAAUhH,EAAA,KAAe,SAAUmH,EAAEb,WAAWF,UAAWe,EAAEf,WAGhFrH,KAAKyI,QAAU,CAACxB,EAAOmB,IACbA,aAAayC,EAGZ,IAAIA,EAASsC,KAAK6D,IAAIhR,KAAKqH,UAAWe,EAAEf,YAFpC,IAAIY,GAAUhH,EAAA,KAAe,SAAUmH,EAAEb,WAAWF,UAAWe,EAAEf,WAIhFrH,KAAK0I,QAAU,CAACzB,EAAOmB,IACbA,aAAayC,EAGZ,IAAIA,EAAS7K,KAAKqH,UAAYe,EAAEf,WAF5B,IAAIY,GAAUhH,EAAA,KAAe,SAAUmH,EAAEb,WAAWF,UAAWe,EAAEf,WAIhFrH,KAAK2I,OAAS,CAAC1B,EAAOmB,IAGX,IAAIhB,EAFLgB,aAAayC,GAEE7K,KAAKqH,YAAce,EAAEf,WAE9CrH,KAAK4I,OAAS,CAAC3B,EAAOmB,IACZA,aAAayC,EAEZ,IAAIzD,EAAUpH,KAAKqH,UAAYe,EAAEf,WAD7B,IAAIY,GAAUhH,EAAA,KAAe,SAAUmH,EAAEb,WAAWF,UAAWe,EAAEf,WAGhFrH,KAAK6I,OAAS,CAAC5B,EAAOmB,IACZA,aAAayC,EAEZ,IAAIzD,EAAUpH,KAAKqH,UAAYe,EAAEf,WAD7B,IAAIY,GAAUhH,EAAA,KAAe,SAAUmH,EAAEb,WAAWF,UAAWe,EAAEf,WAGhFrH,KAAKgJ,SAAW,IACL,IAAI5B,EAAUpH,KAAKqH,UAAY,GAE1CrH,KAAKsK,KAAOtK,KAAKgJ,SACjBhJ,KAAKyB,MAAQ,IAAM,IAAIoJ,EAAS7K,KAAKqH,WACrCrH,KAAK0J,gBAAkB,IAAKvJ,IACpBH,KAAK+G,KAAKnG,eAAec,GAAIvB,IACtB,EAAKH,KAAK+G,KAAKrF,GAAIvB,KAAO,GAE9B,IAAIiK,GAAWnJ,EAAA,KAAed,EAAIkH,UAAWrH,MAExDA,KAAKkH,UAAYlH,KAAK2I,OAE1BM,SAAShC,EAAOmB,GACZ,OAAO,IAAImC,EAAYvK,KAAMoI,GAEjCc,cAAcjC,EAAOmB,GACjB,OAAO,IAAIoC,EAAmBxK,KAAMoI,ICjFrC,MAAMhB,UAAkBR,EAC3B1F,YAAYmK,GAAM,GACd5B,MAAMwH,QAAQ5F,GAAM1E,EAAM2D,MAC1BtK,KAAK0J,gBAAkB,CAACzC,EAAO9G,IACvBH,KAAK+G,KAAKnG,eAAec,GAAIvB,IACtB,EAAKH,KAAK+G,KAAKrF,GAAIvB,KAAO,GAE9B,IAAIiK,GAAWnJ,EAAA,KAAed,EAAIkH,UAAWrH,MAExDA,KAAKqK,KAAO,CAACpD,EAAOJ,IACRA,IACCF,EAAMiE,OACA,IAAIC,EAAS7K,KAAKqH,UAAY,EAAI,GAElC,IAAImC,GAAQvI,EAAA,KAAe,YAAa,gCAAgCS,GAAImF,EAAKU,gBAGpGvH,KAAK2I,OAAS,CAAC1B,EAAOmB,IACZA,aAAahB,EAGZ,IAAIA,EAAUpH,KAAKqH,YAAce,EAAEf,WAF/B,IAAIY,GAAUhH,EAAA,KAAe,UAAWmH,EAAEb,WAAWF,UAAWe,EAAEf,WAIjFrH,KAAKgJ,SAAW,IAAMhJ,KACtBA,KAAK8I,QAAU,CAAC7B,EAAOmB,IAAM,IAAIhB,EAAUpH,KAAKqH,WAAae,EAAEkC,OAAOjD,WACtErH,KAAK+I,OAAS,CAAC9B,EAAOmB,IACX,IAAIhB,EAAUpH,KAAKqH,WAAae,EAAEkC,OAAOjD,WAEpDrH,KAAK0B,IAAM,IAAM,IAAIiI,EAAS3J,KAAKqH,UAAY,OAAS,SACxDrH,KAAKyB,MAAQ,IAAM,IAAI2F,EAAUpH,KAAKqH,WACtCrH,KAAKsK,KAAO,IAAMtK,KAClBA,KAAKkH,UAAYlH,KAAK2I,OACtB3I,KAAK2H,KAAO,CACRiC,KAAMlI,GAAI2J,GACVxD,YAAa,8CAA8CnG,GAAI2J,uBAAyB3J,IAAK2J,KAC7F/J,KAAM,WACNsG,WAAW,EACXsJ,SAAU,oDAGlBjI,SAAShC,EAAOmB,GACZ,OAAO,IAAImC,EAAYvK,KAAMoI,GAEjCc,cAAcjC,EAAOmB,GACjB,OAAO,IAAIoC,EAAmBxK,KAAMoI,IC1CrC,MAAM0B,UAAgBlD,EACzB1F,YAAYiQ,EAAS,IACjB1H,MAAM0H,EAAQxK,EAAMoE,OACpB/K,KAAKqK,KAAO,IAAKxD,KACb,OAAQA,GACJ,KAAKF,EAAMiE,OACP,OAAO,IAAIC,EAAS7K,KAAKoR,KAC7B,KAAKzK,EAAMyE,QACP,OAAOpL,KAAKsK,OAChB,QACI,OAAO,IAAId,GAAQvI,EAAA,KAAe,YAAa,gCAAgCS,GAAImF,EAAKU,kBAGpGvH,KAAK0B,IAAM,IAAM,IAAIiI,EAASjI,GAAI1B,KAAKqH,YACvCrH,KAAK2I,OAAS,EAAGgC,QAAAA,GAAWvC,KACxB,KAAMA,aAAa0B,GACf,OAAO,IAAI1C,EAEf,GAAIgB,EAAEgJ,MAAQpR,KAAKoR,IACf,OAAO,IAAIhK,EAEf,IAAK,IAAIgG,EAAI,EAAGA,EAAIpN,KAAKoR,IAAKhE,IAAK,CAC/B,MAAM1B,EAAc1L,KAAKqH,UAAU+F,GAC7BzB,EAAWvD,EAAEf,UAAU+F,GAC7B,IAAK1B,EAAa,CACd,GAAIC,EACA,OAAO,IAAIvE,EAEf,SAEJ,IAAKsE,EAAY/C,OACb,OAAO,IAAIvB,EAEf,MAAMW,EAAM2D,EAAY/C,OAAO,CAAEgC,QAAAA,GAAWgB,GAC5C,GAAI5D,aAAeyB,GACf,OAAOzB,EAEX,IAAKA,EAAIV,UACL,OAAO,IAAID,EAGnB,OAAO,IAAIA,GAAU,IAEzBpH,KAAKmI,QAAU,EAAGwC,QAAAA,GAAWvC,IACnBA,aAAa0B,EAGZ,IAAIA,EAAQ,IAAI9J,KAAKqH,aAAce,EAAEf,YAFjC,IAAIY,GAAUhH,EAAA,KAAe,QAASmH,EAAEb,WAAWF,UAAWe,GAI7EpI,KAAKgJ,SAAW,IAAM,IAAI5B,EAAUpH,KAAKqH,UAAUiE,OAAS,GAC5DtL,KAAKsK,KAAOtK,KAAKgJ,SACjBhJ,KAAK0J,gBAAkB,CAACzC,EAAO9G,KAC3B,GAAIA,aAAewJ,GAAY3J,KAAK+G,KAAKnG,eAAec,GAAIvB,IACxD,OAAO,EAAKH,KAAK+G,KAAKrF,GAAIvB,KAAO,GAErC,KAAMA,aAAe0K,GACjB,OAAO,IAAIJ,EAEf,IAAItJ,EAAMhB,EAAIkH,UACd,KAAOlG,EAAM,GACTA,EAAMnB,KAAKqH,UAAUiE,OAASnK,EAElC,OAAIA,EAAMnB,KAAKqH,UAAUiE,OACdtL,KAAKqH,UAAUlG,GAEnB,IAAIsJ,GAEfzK,KAAKqR,SAAW,CAACpK,EAAOoE,KACpB,IAAK,IAAIiG,KAAWtR,KAAKsH,UACrB,GAAI+D,EAAI1C,OAAO1B,EAAOqK,GAClB,OAAO,EAGf,OAAO,GAEXtR,KAAKyB,MAAQ,KACT,MAAM8P,EAAS,GACf,IAAK,IAAID,KAAWtR,KAAKqH,UACrBkK,EAAOvD,KAAKsD,GAEhB,OAAO,IAAIxH,EAAQyH,IAEvBvR,KAAKkH,UAAY,CAACD,EAAOmB,KACrB,KAAMA,aAAa0B,IAAY9J,KAAKoR,MAAQhJ,EAAEgJ,IAC1C,OAAO,IAAIhK,EAEf,IAAK,IAAIgG,EAAI,EAAGA,EAAIpN,KAAKsH,UAAUgE,OAAQ8B,IAAK,CAC5C,MAAMrF,EAAM/H,KAAKsH,UAAU8F,GAAGlG,UAAUD,EAAOmB,EAAEd,UAAU8F,IAC3D,GAAIrF,aAAeyB,GACf,OAAOzB,EACX,IAAKA,EAAIV,UACL,OAAO,IAAID,EAGnB,OAAO,IAAIA,GAAU,IAEzBpH,KAAKoR,IAAMD,EAAO7F,OAEtBnC,gBAAgBlC,EAAO9G,EAAKa,GACxB,KAAMb,aAAe0K,GACjB,OAEE7J,aAAiB4F,IACnB5F,EAAQ,EAAKA,IAEjB,IAAIG,EAAMhB,EAAIkH,UACd,KAAOlG,EAAM,GACTA,EAAMnB,KAAKqH,UAAUiE,OAASnK,EAElCnB,KAAKsH,UAAUnG,GAAOH,EAE1BiI,SAAShC,EAAOmB,GACZ,OAAO,IAAImC,EAAYvK,KAAMoI,GAEjCc,cAAcjC,EAAOmB,GACjB,OAAO,IAAIoC,EAAmBxK,KAAMoI,IAGrC,MAAMkI,UAAoBtF,EAC7B9J,YAAY2F,GACR4C,OAAM,EAAO,SAAS/H,GAAImF,OAC1B7G,KAAKoJ,SAAW,CAACnC,KAAUyF,IAChB,IAAIrE,GAAsB,WAAYrI,MAEjDA,KAAKkH,UAAY,CAACD,EAAOoJ,KACrB,KAAMA,aAAavG,GACf,OAAO,IAAI1C,EAEf,IAAK,MAAMkK,KAAWjB,EAAEhJ,UACpB,IAAKrH,KAAK6G,KAAKK,UAAUD,EAAOqK,GAASjK,UACrC,OAAO,IAAID,EAGnB,OAAO,IAAIA,GAAU,IAEzBpH,KAAKyB,MAAQ,IACF,IAAI6O,EAAYtQ,KAAK6G,MAEhC7G,KAAK6G,KAAOA,GC3Ib,MAAM8C,UAAiB/C,EAC1B1F,YAAYF,EAAQ,IAChByI,MAAMzI,EAAO2F,EAAMmE,QACnB9K,KAAK0B,IAAM,IAAM1B,KACjBA,KAAKqK,KAAO,CAACpD,EAAOJ,KAChB,OAAQA,GACJ,KAAKF,EAAMiE,OACP,MAAM4G,EAAMC,WAAWzR,KAAKqH,WAC5B,OAAIqK,MAAMF,GACC,IAAIhI,GAAQvI,EAAA,KAAe,YAAa,qCAE5C,IAAI4J,EAAS2G,GACxB,KAAK7K,EAAMmE,OACP,OAAO9K,KACX,KAAK2G,EAAMoE,MACP,OAAO,IAAIjB,EAAQ9J,KAAKqH,UAAUsK,MAAM,IAAI3H,KAAIC,GAAK,IAAIN,EAASM,MACtE,QACI,OAAO,IAAIT,GAAQvI,EAAA,KAAe,YAAa,wBAAwBS,GAAImF,EAAKU,kBAG5FvH,KAAKmI,QAAU,CAAClB,EAAOmB,IACbA,aAAauB,EAGZ,IAAIA,EAAS3J,KAAKqH,UAAYe,EAAEf,WAF5B,IAAIY,GAAUhH,EAAA,KAAe,SAAUmH,EAAEb,WAAWF,UAAWe,EAAEf,WAIhFrH,KAAKuI,aAAe,CAACtB,EAAOmB,IAClBA,aAAayC,EAGZ,IAAIlB,EAAS3J,KAAKqH,UAAUuK,OAAOxJ,EAAEf,YAFjC,IAAIY,GAAUhH,EAAA,KAAe,SAAUmH,EAAEb,WAAWF,UAAWe,EAAEf,WAIhFrH,KAAK2I,OAAS,CAAC1B,EAAOmB,IAIX,IAAIhB,EAHLgB,aAAauB,GAGE3J,KAAKqH,YAAce,EAAEf,WAE9CrH,KAAK4I,OAAS,CAAC3B,EAAOmB,IACZA,aAAauB,EAGZ,IAAIvC,EAAUpH,KAAKqH,UAAUiE,OAASlD,EAAEf,UAAUiE,QAF9C,IAAIrD,GAAUhH,EAAA,KAAe,SAAUmH,EAAEb,WAAWF,UAAWe,EAAEf,WAIhFrH,KAAK6I,OAAS,CAAC5B,EAAOmB,IACZA,aAAauB,EAGZ,IAAIvC,EAAUpH,KAAKqH,UAAUiE,OAASlD,EAAEf,UAAUiE,QAF9C,IAAIrD,GAAUhH,EAAA,KAAe,SAAUmH,EAAEb,WAAWF,UAAWe,EAAEf,WAIhFrH,KAAKgJ,SAAW,IAAM,IAAI5B,EAAUpH,KAAKqH,UAAUiE,OAAS,GAC5DtL,KAAKsK,KAAOtK,KAAKgJ,SACjBhJ,KAAKoR,IAAM,IACA,IAAIvG,EAAS7K,KAAKqH,UAAUiE,QAEvCtL,KAAKyB,MAAQ,IAAM,IAAIkI,EAAS3J,KAAKqH,WACrCrH,KAAK0J,gBAAkB,CAACzC,EAAO9G,KAC3B,GAAIA,aAAewJ,GAAY3J,KAAK+G,KAAKnG,eAAec,GAAIvB,IACxD,OAAO,EAAKH,KAAK+G,KAAKrF,GAAIvB,KAAO,GAErC,KAAMA,aAAe0K,GACjB,OAAO,IAAIlB,EAEf,IAAIxI,EAAMhB,EAAIkH,UACd,KAAOlG,EAAM,GACTA,EAAMnB,KAAKqH,UAAUiE,OAASnK,EAElC,OAAIA,EAAMnB,KAAKqH,UAAUiE,OACd,IAAI3B,EAAS3J,KAAKqH,UAAUlG,IAEhC,IAAIwI,GAEf3J,KAAKkH,UAAYlH,KAAK2I,OAE1BQ,gBAAgBlC,EAAO9G,EAAKa,GACxB,KAAMb,aAAe0K,GACjB,OACE7J,aAAiB2I,IACnB3I,EAAQ,IAAI2I,EAASjI,GAAIV,KAC7B,IAAIG,EAAMhB,EAAIkH,UACd,KAAOlG,EAAM,GACTA,EAAMnB,KAAKqH,UAAUiE,OAASnK,EAClC,MAAM0Q,EAAc7Q,EAAMU,MAAM2F,UAChC,IAAIyK,EAAY9R,KAAKsH,UAAUiE,OAAO,EAAGpK,GACrC4Q,EAAW/R,KAAKsH,UAAUiE,OAAOpK,EAAM0Q,EAAYvG,QACvDtL,KAAKsH,UAAYwK,EAAYD,EAAcE,EAE/C9I,SAAShC,EAAOmB,GACZ,OAAO,IAAImC,EAAYvK,KAAMoI,GAEjCc,cAAcjC,EAAOmB,GACjB,OAAO,IAAIoC,EAAmBxK,KAAMoI,ICnGrC,MAAM4J,EACT9Q,YAAYF,EAAOiR,EAAYC,EAAU,IACrC,IAAItF,EAAIgB,EAAIuE,EACZnS,KAAKyB,MAAQ,IACF,IAAIuQ,EAAShS,KAAKgB,MAAMS,QAASzB,KAAKiS,WAAY,CACrDrD,WAAY5O,KAAK4O,WACjBD,aAAc3O,KAAK2O,eAG3B3O,KAAK0B,IAAM,IAAM,IAAIiI,EAAS,YAAY3J,KAAKiS,eAC/CjS,KAAKgB,MAAQA,EACbhB,KAAKiS,WAAaA,EAClBjS,KAAK4O,WAA2C,QAA7BhC,EAAKsF,EAAQtD,kBAA+B,IAAPhC,GAAgBA,EACxE5M,KAAK2O,aAA+C,QAA/Bf,EAAKsE,EAAQvD,oBAAiC,IAAPf,GAAgBA,EAC5E5N,KAAK6G,KAA+B,QAAvBsL,EAAKD,EAAQrL,YAAyB,IAAPsL,EAAgBA,EAAKxL,EAAMG,KCHxE,SAAS,EAAKsL,EAAOtD,GAAqB,GAC7C,OAAIsD,aAAiBxL,EACVwL,EAEFA,MAAAA,EACE,IAAI3H,EAEN2H,aAAiB5I,GACf,IAAIF,EAAiB8I,GAEvBA,aAAiBJ,EACfI,EAAMpR,MAES,iBAAVoR,EACL,IAAIvH,EAASuH,GAEE,iBAAVA,EACL,IAAIzI,EAASyI,GAEE,kBAAVA,EACL,IAAIhL,EAAUgL,GAEC,iBAAVA,EACL,IAAIvH,EAASwH,OAAOD,IAEL,iBAAVA,EACL,IAAIzI,EAAS2I,OAAOF,IAExB,IAAIvD,EAAYuD,OAAO1H,EAAWoE,GAEtC,SAAS9G,EAAMoK,EAAOnL,GACzB,GAAayD,MAAT0H,EAAJ,CAGK,KAAMA,aAAiBxL,GACxB,OAAOwL,EAEN,GAAIA,aAAiBtI,EACtB,OAAOsI,EAAM/K,UAAU2C,KAAIuI,GAAKvK,EAAMuK,EAAGtL,IAAQA,GAEhD,GAAImL,aAAiBlH,EAAU,CAChC,IAAIG,EAAM,GACV,IAAK,IAAIlL,KAAOiS,EAAM/K,UAClBgE,EAAIlL,GAAO6H,EAAMoK,EAAM/K,UAAUlH,GAAM8G,GAE3C,OAAOoE,EAEN,KAAI+G,aAAiB3H,GAGrB,OAAI2H,aAAiBjH,EACf,IAAIgD,KACP,MAAMpG,EAAMqK,EAAMhJ,SAASnC,KAAUkH,EAAKnE,KAAIwI,GAAK,EAAKA,MACxD,OAAIzK,aAAeyB,GACRzB,EAEJC,EAAMD,EAAKd,IAGjBmL,aAAiBpH,EACfoH,EAEJA,EAAM/K,WC1EjB,MAAMoL,EAAQ,CACVC,IAAK,GACLC,OAAQ,GACRC,MAAO,GACPC,KAAM,GACNC,KAAM,GACNC,KAAM,GAEJ9Q,EAAI,GACV,IAAK,IAAI+Q,KAAQ3S,OAAOmL,KAAKiH,GACzBxQ,EAAE+Q,GAAS/I,IACPA,IAAMA,EAAI,IACN9H,EACO,KAAQsQ,EAAMO,MAAW/I,EAAI,OAEjC,uBAAuB+I,MAAS/I,YAG/C,UCZagJ,EAAmB,CAC5B,MAAS,CAAC,EAAGtI,QAAAA,GAAWuI,EAAMC,EAAMC,KAC5B,KAAMF,aAAgBrI,GAClB,OAAO,IAAIf,EAEf,MAAMuJ,EAAMH,EAAK7L,UACjB,GAAI8L,aAAgB1I,EAChB,IACI,OAAO,IAAIX,EAAQ,IAAIgC,MAAMuH,GAAK7H,QAAQxB,KAAI5B,GAAK,IAAIyC,EAASzC,MAEpE,MAAO/E,GACH,OAAO,IAAImG,GAAQvI,EAAA,KAAe,aAAc,gCAAgCS,GAAI2R,OAG5F,IAAI1P,EAAO,EACX,KAAMwP,aAAgBtI,GAClB,OAAO,IAAI5C,GAAUhH,EAAA,KAAe,SAAUkS,EAAK5L,WAAY7F,GAAIyR,IAEvE,IAAIjG,EAAMiG,EAAK9L,UACf,KAAM+L,aAAiB3I,GAAc,CACjC,KAAM2I,aAAiBvI,GACnB,OAAO,IAAI5C,GAAUhH,EAAA,KAAe,SAAUmS,EAAM7L,WAAY7F,GAAI0R,IAExEzP,EAAOyP,EAAM/L,UAEjB,IAAIiM,EAAM,GACNlG,EAAIiG,EACR,KAAOjG,EAAIF,GACPoG,EAAItF,KAAK,IAAInD,EAASuC,IACtBA,GAAKzJ,EAET,OAAO,IAAImG,EAAQwJ,IACpB,CACCnF,KAAM,CAAC,CACCvE,KAAM,IACN/C,KAAM,WAEdgB,YAAa,qIACb0L,QAAS,iCACThH,WAAY,0BAEpB,IAAO,CAAC,EAAG5B,QAAAA,MAAc6I,KACjB7Q,QAAQC,OAAO4Q,EAAKxJ,KAAIuI,GAAK7Q,GAAI6Q,OAClC,CACCpE,KAAM,CAAC,CACCvE,KAAM,YACN/C,KAAM,UAEdgB,YAAa,qCACb0E,WAAY,SAEpB,UAAa,CAAC,EAAG5B,QAAAA,GAAW6G,KACpB,IACI,MAAMnG,EAAMoG,WAAW/P,GAAI8P,IAC3B,OAAIE,MAAMrG,GACC,IAAI7B,GAAQvI,EAAA,KAAe,YAAa,mBAAmBS,GAAI8P,oBAEnE,IAAI3G,EAASQ,GAExB,MAAOhI,GACH,OAAO,IAAImG,GAAQvI,EAAA,KAAe,YAAa,mBAAmBS,GAAI8P,sBAE3E,CACCrD,KAAM,CAAC,CACCvE,KAAM,MACN/C,KAAM,QAEdgB,YAAa,qNACb0E,WAAY,uBAEpB,KAAQ,CAAC,EAAG5B,QAAAA,MAAc8I,KAClB,IAAKA,EAAOnI,OACR,OAAO,IAAI3B,EAAS,0IAGxB,IAAI+J,EAAM,GACV,IAAK,MAAMtB,KAASqB,EAAQ,CACxB,KAAMrB,aAAiBxL,GAEnB,YADAjE,QAAQC,IAAI,8BAAgClB,GAAI0Q,IAGpD,MAAMzK,EAAOyK,EAAMzK,KAWnB,GAVA+L,GAAO,GAAG,SAAa,YAAY/L,EAAKiC,MAAQ,iCAE1D,SAAa,aAAa+J,GAAOA,GAAOjS,GAAI0Q,aAC5C,SAAa,aAAa1Q,GAAI0Q,EAAM7K,qBACpC,SAAa,gBAAgBI,EAAKrG,MAAQ,SAAa,+BAEnD,QAAYqG,EAAKE,cAAgB,oCAErCF,EAAKuJ,SAAW,OAAWvJ,EAAKuJ,SAAW,QAAU,OAEvCvJ,EAAKwG,MAAQiE,aAAiBjH,EAAY,CAC1C,MAAMyI,EAAQjM,EAAKwG,KAAK7C,OAClB+C,EAAW1G,EAAKwG,KAAK0F,QAAOrB,GAAKA,EAAEnE,WAAU/C,OAE/CoI,GADAE,GAASvF,EACF,SAAa,kBAAkBuF,UAE/B,SAAa,kBAAkBvF,KAAYuF,UACtD,IAAK,MAAOzS,EAAKkM,KAAQ1F,EAAKwG,KAAK2F,UAE3BJ,GADe,iBAARrG,EACA,WAAWlM,EAAM,sBAEjB,WAAWA,EAAM,MAAMkM,EAAIzD,QAAwB,IAAjByD,EAAIgB,SAAqB,SAAa,gBAAkB,OAAOhB,EAAIxG,SAASwG,EAAIxF,aAAe,OAEhJ6L,GAAO,OACH/L,EAAK4L,UACLG,GAAO,gBAAgB/L,EAAK4L,eAC5B5L,EAAK4E,aACLmH,GAAO,oBAAoB/L,EAAK4E,kBAExC,GAAI5E,EAAKoM,WAAa3B,aAAiBlH,GAAYkH,aAAiB7D,GAAc,CAC9EmF,GAAO,2BACP,IAAK,IAAIK,KAAYpM,EAAKoM,SACtBL,GAAOK,EAASnK,KAAO,YAInC,OADAjH,QAAQC,IAAI8Q,GACRD,EAAOnI,OAAS,EACT,IAAIxB,EAAQ2J,GAEnBA,EACOA,EAAO,QADlB,GAGD,CACCtF,KAAM,CAAC,CACCvE,KAAM,QACN/C,KAAM,QAEdgB,YAAa,qBACb0L,QAAS,oBAEjB,OAAU,CAAC,EAAG5I,QAAAA,GAAWf,KACjB,MAAMoK,EAAKtS,GAAIkI,GACf,IAAKe,EAAQsJ,IAAID,GACb,OAAO,IAAIxK,GAAQvI,EAAA,KAAe,cAAe,eAAe+S,uCAEpErJ,EAAQuJ,IAAIF,EAAI,IAAIvJ,IACrB,CACCb,KAAM,SACNuE,KAAM,CAAC,CAAEvE,KAAM,aAAc/C,KAAM,WACnCgB,YAAa,gDAErB,SAAY,CAAC,EAAG8C,QAAAA,KACD,IAAIhB,EAASgB,EAAQgC,MAC7B,CACC/C,KAAM,WACNuE,KAAM,GACNtG,YAAa,6BAErB,YAAe,CAAC,EAAG8C,QAAAA,KACJ,EAAKA,EAAQa,MACrB,CACC5B,KAAM,eACNuE,KAAM,GACNtG,YAAa,wEAErB,MAAS,CAAC,EAAG8C,QAAAA,GAAW9K,EAAQsU,KACxB,KAAMtU,aAAkB0O,GAAkB1O,aAAkBgP,GACxD,OAAO,IAAI5G,GAAUhH,EAAA,KAAe,YAAaS,GAAI7B,EAAO0H,aAEhE,IAAIxF,GAAS,EACToS,IACKA,EAAQ7J,OAAOjD,YAChBtF,GAAS,IAGjB,MAAMoP,EAAStR,EAAOwH,UAClBtF,EACA4I,EAAUA,EAAQjL,KAEbiL,EAAQqC,SACbrC,EAAUA,EAAQqC,QAEtB,IAAK,MAAM7M,KAAOE,OAAOmL,KAAK2F,GAC1BxG,EAAQ4C,OAAOpN,EAAKgR,EAAOhR,GAAKa,MAAO,CACnC4N,WAAYuC,EAAOhR,GAAKyO,WACxBD,aAAcwC,EAAOhR,GAAKwO,aAC1BnB,mBAAmB,KAG5B,CACC5D,KAAM,QACNuE,KAAM,CACF,CAAEvE,KAAM,SAAU/C,KAAM,aACxB,CAAE+C,KAAM,SAAU/C,KAAM,SAE5BgB,YAAa,uDAErB,MAAS,CAAC,EAAG8C,QAAAA,GAAWyJ,EAAMC,KACtB,KAAMD,aAAgBvJ,GAClB,OAAO,IAAI5C,GAAUhH,EAAA,KAAe,SAAUS,GAAI0S,EAAK7M,YAAa7F,GAAI0S,IAE5EE,GAAMF,EAAK/M,WACNrD,MAAK,KACN,MAAM+D,EAAMsM,EAAGjL,SAAS,CAAEuB,QAAAA,IACtB5C,aAAeyB,IACf7G,QAAQC,IAAImF,EAAIrG,SAGzB,CACCkI,KAAM,QACNuE,KAAM,CAAC,CAAEvE,KAAM,IAAK/C,KAAM,UAAY,CAAE+C,KAAM,WAAY/C,KAAM,aAChEgB,YAAa,wDAErB,MAAS,CAAC,EAAG8C,QAAAA,GAAWf,EAAMC,IACf,IAAIL,GAAQvI,EAAA,KAAeS,GAAIkI,GAAOlI,GAAImI,IAClD,CACCD,KAAM,QACNuE,KAAM,CAAC,CAAEvE,KAAM,OAAQ/C,KAAM,UAAY,CAAE+C,KAAM,UAAW/C,KAAM,cCnNxE,EAAS,CACX0N,MAAO,CAACtN,EAAOuN,IACJ,IAAItJ,EAAS6D,KAAKwF,MAAM7S,GAAI8S,KAEvCxF,UAAW,CAAC/H,EAAOuN,IACTA,aAAgBtJ,EAGf,IAAIvB,EAASoF,KAAKC,UAAUhH,EAAMwM,EAAMvN,KAFpC,IAAIgB,GAAUhH,EAAA,KAAe,SAAUS,GAAI8S,EAAKjN,YAAa7F,GAAI8S,KCVvEC,EAAS,CAClBC,YAAa,CACTC,YAAY,EACZC,SAAS,EACTC,WAAW,EACXC,QAAQ,EACRC,YAAY,IAGpB,SAASC,GAAarI,GAClB,IAAI5E,EAAM,IACV,IAAK,IAAIkN,KAAKtI,EACV5E,GAAOkN,EAAI,KAEf,OAAOlN,EAAImN,UAAU,EAAGnN,EAAIuD,OAAS,GAEzC,SAAS6J,GAAkBV,EAAQW,EAAYzI,EAAO,IAClD,MAAM0I,EAAahV,OAAOmL,KAAKiJ,GACzBa,EAAejV,OAAOmL,KAAK4J,GAAYvB,QAAO0B,IAAMF,EAAWG,SAASD,KAC9E,IAAK,MAAM9J,KAAK6J,EACZ3S,QAAQ4G,MAAM,MAAU,uBAAwB,6BAA6B,SAAayL,GAAa,IAAIrI,EAAMlB,QAErH,IAAK,IAAItL,KAAOkV,EACZ,GAAKD,EAAWxU,eAAeT,GAA/B,CAGA,UAAWsU,EAAOtU,WAAgBiV,EAAWjV,GAEzC,YADAwC,QAAQ4G,MAAM,MAAU,uBAAwB,YAAY,SAAayL,GAAa,IAAIrI,EAAMxM,2BAA6B,gBAAoBsU,EAAOtU,QAGjI,iBAAhBsU,EAAOtU,GAIlBsU,EAAOtU,GAAOiV,EAAWjV,GAHrBgV,GAAkBV,EAAOtU,GAAMiV,EAAWjV,GAAM,IAAIwM,EAAMxM,KAM/D,SAASsV,GAAYL,GACxBD,GAAkBV,EAAQW,GClC9B,MCKMM,GAAU,CACZC,MCPW,CACXC,YAAa,CAAC3O,EAAO2D,IACXA,aAAkBC,EAGjB,IAAIlB,EAAS2I,OAAOuD,aAAajL,EAAOvD,YAFpC,IAAIY,GAAUhH,EAAA,KAAe,SAAUS,GAAIkJ,EAAOrD,YAAa7F,GAAIkJ,IAIlFkL,YAAa,CAAC7O,EAAO8O,IACXA,aAAgBpM,EAGf,IAAIkB,EAASnJ,GAAIqU,GAAMC,WAAW,IAF9B,IAAI/N,GAAUhH,EAAA,KAAe,SAAUS,GAAIqU,EAAKxO,YAAa7F,GAAIqU,KDF3E,KHKT,GGHME,GAAmB,GAuBlB,SAASC,GAAYtM,GACxB,OAAOA,KAAQ8L,IAAW9L,KAAQqM,GAS/B,SAASE,GAAUvM,GACtB,GAAIA,KAAQqM,GACR,OAAOA,GAAiBrM,GAE5B,GAAIA,KAAQ8L,GAAS,CACjB,MACMU,EAxBP,SAA0BvW,EAAQ+J,GACrC,MAAMyM,EAAa,GACbC,EAAYzW,EAAOwH,UACzB,IAAK,MAAMlH,KAAOE,OAAOmL,KAAK8K,GAC1BD,EAAWlW,GAAO,IAAI6R,EAASsE,EAAUnW,GAAMA,GAEnD,OAAO,IAAI0O,EAAYwH,EAAYzM,GAkBb2M,CADN,IAAI1H,EAAY6G,GAAQ9L,IACIA,GAExC,OADAqM,GAAiBrM,GAAQwM,EAClBA,GEnCR,SAASI,GAAWC,EAAeC,EAAWC,GACjD1D,EAAA,OAA6B,CAAC,EAAGtI,QAAAA,GAAWiM,EAAQC,KAC5C,GAAI1U,EACA,OAAO,IAAIqH,GAAQvI,EAAA,KAAe,cAAe,yEAErD,MAAM6V,EAAMF,EAAOlV,MACnB,GAAIwU,GAAYxU,GAAIoV,IAChB,OAAOX,GAAUzU,GAAIoV,IAEzB,IACIC,MAAMrV,GAAIoV,IACL9S,MAAK/B,GAAKA,EAAE+U,SACZhT,MAAMgP,IAAS,OA/BkBhQ,EA+BRhD,KA/BiBiD,OA+BX,EA/B0BC,EA+BV,YAChD,MAAM+T,EAAM,IAAIhK,GAChBgK,EAAIjK,OAASyJ,EACb,MAAM1O,QAAYmP,GAAIlE,GAClBjL,EAAIwB,MACJmN,EAAU,IAAIS,GAAYlW,EAAA,KAAeS,GAAIoV,GAAM/O,EAAIwB,MAAM7H,KAAKA,KAGhEmV,aAAoB1L,GAE1B0L,EAASzN,SAAS,CAAEuB,QAAAA,GAAW,IAAI4D,EAAYuI,EAAKG,EAAIG,0BAvCjE,KAFgE9T,OA+Bf,KA7BtCA,EAAIC,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKT,EAAUU,KAAK5C,IAAW,MAAOqC,GAAKI,EAAOJ,IACpF,SAASQ,EAAS7C,GAAS,IAAM2C,EAAKT,EAAiB,MAAElC,IAAW,MAAOqC,GAAKI,EAAOJ,IACvF,SAASM,EAAKG,GAJlB,IAAe9C,EAIa8C,EAAOC,KAAOP,EAAQM,EAAO9C,QAJ1CA,EAIyD8C,EAAO9C,MAJhDA,aAAiBsC,EAAItC,EAAQ,IAAIsC,GAAE,SAAUE,GAAWA,EAAQxC,OAITgD,KAAKN,EAAWG,GAClGF,GAAMT,EAAYA,EAAUe,MAAMjB,EAASC,GAAc,KAAKW,WAN1B,IAAUZ,EAASC,EAAYK,EAAGJ,KA4ClE,MAAOmU,GACH,OAAO,IAAI7N,GAAQvI,EAAA,KAAe,cAAeoW,EAAEtG,cAExD,IACPkC,EAAA,MAA4B,CAAC,EAAGtI,QAAAA,MAAcwD,KACtC,IAAIuF,EAAM,GACV,IAAK,IAAIrG,KAAOc,EACZuF,GAAOhS,GAAI2L,GACfqJ,EAAUhD,IACX,IACPT,EAAA,MAA4B,CAAC,EAAGtI,QAAAA,GAAW2M,EAAKC,KACxCZ,EAAUW,EAAIjQ,WAAYiQ,IACtB,IAAIjD,EAAKkD,MAAAA,OAAqC,EAASA,EAAMlQ,UAC7D,GAAIgN,aAAclJ,EAAY,CAC1B,IAAIpD,EAAMsM,EAAGjL,SAAS,CAAEuB,QAAAA,GAAW,IAAIhB,EAAS2N,IAC5CvP,aAAeyB,IACf7G,QAAQC,IAAImF,EAAIrG,SAGD,mBAAP2S,GACZA,EAAGiD,GACP,OAAO,IAAI3N,EAAS,qIAEzB,IACP,IAAK,IAAI6N,KAAWvE,EAAkB,CAClC,MAAMnG,EAAK,IAAI3B,EAAW8H,EAAiBuE,GAAS,GAAI,GAAIA,OAAS9M,OAAWA,EAAW+L,GAC3F3J,EAAGnF,KAAOsL,EAAiBuE,GAAS,GACpC1K,EAAGnF,KAAKiC,KAAO4N,EACf1K,EAAGnF,KAAKC,WAAY,EACpBkF,EAAGnF,KAAKrG,KAAO,WACfmV,EAAcvC,IAAIsD,EAAS1K,EAAI,CAC3B/K,QAAQ,EACR6M,YAAY,KC1ET,SAAcjE,GACzB,MAAM8M,EAAkB,CACpB,MAAS,IAAIrQ,GAAU,GACvB,KAAQ,IAAIA,GAAU,GACtB,IAAO,IAAIqD,EACX,IAAO9D,EAAMG,IACb,OAAUH,EAAMiE,OAChB,OAAUjE,EAAMmE,OAChB,KAAQnE,EAAM2D,KACd,KAAQ3D,EAAA,SACR,MAASA,EAAMoE,MACf,OAAUpE,EAAMsE,OAChB,KAAQtE,EAAME,KACd,MAASF,EAAM4C,MACf,UAAa5C,EAAM+D,WAEvB,IAAK,IAAIgN,KAAYD,EAAiB,CAClC,MAAMzW,EAAQyW,EAAgBC,GAC9B/M,EAAQuJ,IAAIwD,EAAU1W,EAAO,CACzBe,QAAQ,EACR6M,YAAY,KDyDpB+I,CAAoBlB,GACpB,MAAMmB,EFlEH,WAIH,GAHA3B,GAAuB,KAAI,IAAIpH,EAAY1B,MAC3C8I,GAA0B,QAAI,IAAIpH,EIhBtC,MACI3N,YAAYmT,GACRrU,KAAK6X,MAAQ,GACb7X,KAAK8X,UAAW,EAChBzD,GAAIrT,IACA,IAAIhB,KAAK8X,SAAT,CAGA9X,KAAK8X,UAAW,EAChB,IAAK,IAAI9T,KAAQhE,KAAK6X,MAClB7T,EAAKhD,OAETuI,IACIvJ,KAAK8X,WAGT9X,KAAK8X,UAAW,EACZ9X,KAAK+X,QACL/X,KAAK+X,OAAOxO,OAIxBvF,KAAKqQ,GACD,IAAIrU,KAAK8X,SAIT,OADA9X,KAAK6X,MAAM7J,KAAKqG,GACTrU,KAEXgY,MAAM3D,GACF,IAAIrU,KAAK8X,SAIT,OADA9X,KAAK+X,OAAS1D,EACPrU,QJjBXiW,GAAuB,KAAI,IAAIpH,EKbR,CACvB/L,IAAK,IAAIqI,GAAW,IAAM,IAAIN,EAAS/H,OACvCmV,KAAM,IAAIpJ,EAAY1L,SLYjBhB,EAAkB,CACnB,MAAM+V,EDdC,MACX,IAAKzD,EAAOC,YAAYG,UACpB,OAAO,IAAIsD,GAAwB,oBAEvC,GAAIhW,EACA,OAAO,IAAIiW,GAEf,MAAMC,EAAIjW,OACV,YAAiB,IAANiW,GAAuB,MAAOA,EAIlC,CACHC,EAFM,IAAIzJ,EAAYwJ,EAAK,EAAG,UAG9BjW,OAAQ,IAAIyM,EAAYwJ,EAAG,UAC3BE,SAAU,IAAI1J,EAAYwJ,EAAY,SAAG,aANlC,IAAIG,GAAevX,EAAA,KAAe,oDCK1BwX,GACf,GAAMP,aAAkB1O,GAIpB,OAAO0O,EAHPxC,GAAa,IAAIwC,GE2DNQ,GACnB,GAAId,EACA,OAAOA,EAEXnB,EAAckC,qBAAsB,EnB3EjC,MAAM1L,GACT/L,cACIlB,KAAK4Y,YAAc,GACnB5Y,KAAK2Y,qBAAsB,EAC3B3Y,KAAK6Y,SAAU,EACf7Y,KAAK8Y,MAAQ,GAEbnM,WACA,OAAI3M,KAAK8Y,QAAU9Y,KAAKgN,OACbhN,KAAK8Y,MAET9Y,KAAKgN,OAAOL,KAEnBA,SAAKtB,GACLrL,KAAK8Y,MAAQzN,EAEb2B,aACA,OAAOhN,KAAK+Y,QAEZ/L,WAAO3B,GACHA,GAAOrL,KAIXA,KAAK+Y,QAAU1N,EAHX1I,QAAQ4G,MAAM,MAAU,mCAKhC0K,IAAIhC,GACA,QAAKA,QAE2BvH,IAAzB1K,KAAKQ,IAAIyR,GAEpB+G,OAAO/G,GACH,OAAOjS,KAAK4Y,YAAY3G,aAAuBD,EAEnDxR,IAAIyR,GACA,IAAIvD,EAAS1O,KAAKiZ,UAAUhH,GAC5B,OAAIvD,aAAkBlF,IAAqBkB,MAAVgE,EACtBA,EAEJA,EAAO1N,MAElBkY,0BACI,MAAMC,EAAU,GAChB,IAAK,IAAIhZ,KAAOH,KAAK4Y,YACjBO,EAAQhZ,GAAOH,KAAK4Y,YAAYzY,GAAKa,MACzC,OAAOmY,EAEX/B,uBACI,MAAM+B,EAAU,GAChB,IAAK,IAAIhZ,KAAOH,KAAK4Y,YACjBO,EAAQhZ,GAAOH,KAAK4Y,YAAYzY,GACpC,OAAOgZ,EAEXF,UAAUhH,GACN,IAAIvD,EAAS1O,KAAK4Y,YAAY3G,GAC9B,QAAevH,IAAXgE,IAAyBA,EAAOC,aAChC,OAAO,IAAI1G,GAAUhH,EAAA,KAAe,aAAc,eAAgByN,EAAOuD,YAC7E,QAAevH,IAAXgE,GAAwB1O,KAAKgN,OAAQ,CACrC,IAAIjF,EAAM/H,KAAKgN,OAAOiM,UAAUhH,GAChC,GAAIlK,aAAeyB,GACf,OAAOzB,EACX,IAAKA,EACD,OAAO,IAAIyQ,GAAevX,EAAA,KAAegR,GAC7CvD,EAAS3G,EAEb,OAAO2G,EAEXwF,IAAIjC,EAAYjR,EAAOkR,EAAU,IAC7B,IAAIvH,EAAU3K,KACd,GAAIkS,EAAQnQ,OACR4I,EAAU3K,KAAKN,SAEd,CACD,MAAQiL,EAAQqO,OAAO/G,SAAkCvH,IAAnBC,EAAQqC,QAC1CrC,EAAUA,EAAQqC,OAEjBrC,EAAQqO,OAAO/G,KAChBtH,EAAU3K,MAGlB,OAAO2K,EAAQ4C,OAAO0E,EAAYjR,EAAOkR,GAE7C3E,OAAO0E,EAAYjR,EAAOkR,EAAU,IAOhC,GANMlR,aAAiB4F,IACnB5F,EAAQ,EAAKA,IAEbkR,EAAQnQ,SAAW/B,KAAK2Y,sBACxBzG,EAAQnQ,QAAS,IAEhBmQ,EAAQ1E,kBAAmB,CAC5B,IAAIkB,EAAS1O,KAAK4Y,YAAY3G,GAC9B,GAAIvD,MAAAA,OAAuC,EAASA,EAAOE,WACvD,OAAO,IAAI3G,GAAUhH,EAAA,KAAe,UAAW,WAAYgR,GAEnEjS,KAAK4Y,YAAY3G,GAAc,IAAID,EAAShR,EAAOiR,EAAYC,GAEnEkH,OAAOnH,UACIjS,KAAK4Y,YAAY3G,GAE5BoH,QACI,IAAK,IAAI3K,KAAU1O,KAAK4Y,YACpB5Y,KAAKoZ,OAAO1K,GAEhB1O,KAAKgN,YAAStC,EACd1K,KAAK6Y,SAAU,EAEfnZ,WACA,IAAIsN,EAAShN,KACb,KAAOgN,EAAOA,QACVA,EAASA,EAAOA,OAEpB,OAAOA,EAEPxB,WACA,OAAOnL,OAAOmL,KAAKxL,KAAK4Y,aAE5BU,gBACI,IAAI1M,EAAIgB,EACR,IAAK5N,KAAK2Y,oBACN,OACJ,MAAMjC,EAAY1W,KAAKN,KAAKc,IAAI,SAC1BmW,EAAY3W,KAAKN,KAAKc,IAAI,SAC1BkW,aAAqB9P,GAAkB+P,aAAqB/P,GAIlE5G,KAAK4Y,YAAc,GACnB5Y,KAAK2Y,qBAAsB,EAC3BnC,GAAWxW,MAAsC,QAA9B4M,EAAK8J,EAAUrP,iBAA8B,IAAPuF,OAAgB,EAASA,EAAGR,OAASzJ,QAAQC,KAAqC,QAA9BgL,EAAK+I,EAAUtP,iBAA8B,IAAPuG,OAAgB,EAASA,EAAGxB,OAAS,WALpLzJ,QAAQ4G,MAAM,yCAOtB9H,QACI,MAAMsL,EAAa,IAAIE,GAKvB,OAJAF,EAAWC,OAAShN,KAAKgN,OACzBD,EAAW8L,QAAU7Y,KAAK6Y,QAC1B9L,EAAW4L,oBAAsB3Y,KAAK2Y,oBACtC5L,EAAW6L,YAAcvY,OAAO6H,OAAO7H,OAAO6H,OAAO,GAAI6E,EAAW6L,aAAc5Y,KAAK4Y,aAChF7L,EAEXwM,YACI,IAAI3M,EACJ,IAAInL,EAAQzB,KAAKyB,QAEjB,OADAA,EAAMuL,OAAiC,QAAvBJ,EAAKnL,EAAMuL,cAA2B,IAAPJ,OAAgB,EAASA,EAAG2M,YACpE9X,EAEXmB,MACID,QAAQC,IAAI,qBACZ,IAAK,IAAIzC,KAAOH,KAAK4Y,YAAa,CAC9B,MAAMlK,EAAS1O,KAAK4Y,YAAYzY,GAChC,IAAIuT,EAAMvT,EACNuO,EAAOE,aACP8E,GAAO,YACNhF,EAAOC,eACR+E,GAAO,mBACXA,GAAO,KACPA,GAAOhS,GAAI1B,KAAK4Y,YAAYzY,GAAKa,OACjC2B,QAAQC,IAAI8Q,GAEhB/Q,QAAQC,IAAI,sBuBrKb,SAAS4W,GAAkBnM,EAAK1C,GACnC,IAAIiC,EACJ,MAAM6M,EAAUpM,EAAIxG,KAAKgH,UAAUlD,GACnC,GAAI8O,EAAQlQ,MACR,OAAOkQ,EAAQlQ,MAEnB,IAAI6E,EACJ,GAAIf,EAAIe,aAAc,CAClB,IAAIsL,EAA4C,QAA3B9M,EAAKS,EAAIe,oBAAiC,IAAPxB,OAAgB,EAASA,EAAGiB,UAAUlD,GAC9F,GAAI+O,EAAcnQ,MACd,OAAOmQ,EAAcnQ,MAErBmQ,EAAcrO,eAAezE,IAC7BwH,EAAesL,EAAcrO,KAGrC,MAAO,CACHzB,KAAMyD,EAAIzD,KACV/C,KAAM4S,EAAQpO,IACd+C,aAAAA,GCXD,MAAMuL,GACTzY,YAAYmK,GACRrL,KAAKqL,IAAM,IAAIZ,EACfzK,KAAK4Z,aAAc,EACnB5Z,KAAK6Z,gBAAiB,EAClBxO,aAAe7B,GACfxJ,KAAKuJ,MAAQ8B,EAERA,IACLrL,KAAKqL,IAAMA,IAIhB,MAAMyO,GACT5Y,YAAYmK,GACRrL,KAAKqL,IAAM,GACXrL,KAAK+Z,QAAU,GACI,iBAAR1O,EACPrL,KAAKqL,IAAMA,EAENA,IACLrL,KAAKuJ,MAAQ8B,GAGrB2O,SAASC,EAAMxF,GACX,MAAM1M,EAAMkS,EAAKC,UAAUzF,GAE3B,OADAzU,KAAK+Z,SAAWhS,EAAIgS,QAChBhS,EAAIwB,OACJvJ,KAAKuJ,MAAQxB,EAAIwB,MACV,IAEJxB,EAAIsD,KAGZ,MAAMsC,GACTzM,YAAYiZ,EAAKC,GAAa,GAC1Bpa,KAAKma,IAAMA,EACXna,KAAKoa,WAAaA,EAEtBvM,UAAUlD,GACN,IAAIiC,EACJ,MAAMyN,EAAQvX,IACRiF,EAAM,IAAI4R,GACVtO,EAAMrL,KAAKsa,WAAW3P,GACxBU,aAAe7B,GACfzB,EAAIwB,MAAQ8B,EAEPA,aAAesO,IACpB5R,EAAIsD,IAAMA,EAAIA,IACdtD,EAAIwB,MAAQ8B,EAAI9B,MAChBxB,EAAI+F,WAAazC,EAAIyC,WACrB/F,EAAI6R,YAAcvO,EAAIuO,YACtB7R,EAAI8R,eAAiBxO,EAAIwO,gBAGzB9R,EAAIsD,IAAMA,EAEVtD,EAAIwB,OAASxB,EAAIwB,MAAM4Q,IAAIxY,YAC3BoG,EAAIwB,MAAM4Q,IAAMna,KAAKma,KAEnBpS,EAAIsD,eAAezE,IACrBmB,EAAIwB,MAAQ,IAAItB,GAAUhH,EAAA,KAAe,YAAa,kBAAmBS,GAAIqG,EAAIsD,MACjFtD,EAAIsD,IAAM,IAAIZ,IAEjBmC,EAAK7E,EAAIsD,IAAI1D,MAAMrG,OAASsL,EAAGtL,KAAOtB,KAAKma,IAAI7Y,MAChDqM,GAAK4M,aACL,IAAInG,EAAOtR,IAAQuX,EAInB,OAHA1M,GAAK6M,WAAapG,EACdA,EAAOzG,GAAK8M,UACZ9M,GAAK8M,QAAUrG,GACZrM,GAGf4F,GAAK4M,WAAa,EAClB5M,GAAK6M,UAAY,EACjB7M,GAAK8M,QAAU,EACR,MAAMC,WAAgB/M,GACzBzM,YAAYiZ,EAAK5J,EAAMoK,EAAOnK,GAC1B/G,MAAM0Q,GACNna,KAAKuQ,KAAOA,EACZvQ,KAAK2a,MAAQA,EACb3a,KAAKwQ,MAAQA,EAEjB8J,WAAW3P,GACP,MAAM4F,EAAOvQ,KAAKuQ,KAAK1C,UAAUlD,GACjC,GAAI4F,EAAKhH,MACL,OAAOgH,EAAKhH,MAChB,MAAMiH,EAAQxQ,KAAKwQ,MAAM3C,UAAUlD,GACnC,GAAI6F,EAAMjH,MACN,OAAOiH,EAAMjH,MACjB,MAAMqR,EAAIrK,EAAKlF,IACTwP,EAAIrK,EAAMnF,IAChB,QAAiB,IAANuP,EACP,OAAO,IAAI3S,GAAUjI,KAAK2a,MAAMR,IAAK,aAAc,YAAaS,EAAG,sBAEvE,QAAiB,IAANC,EACP,OAAO,IAAI5S,GAAUjI,KAAK2a,MAAMR,IAAK,aAAc,YAAaU,EAAG,sBAEvE,OAAQ7a,KAAK2a,MAAM9T,MACf,KAAK1C,EAAG2B,IAAK,CACT,MAAMgV,EAAKF,EAAE/R,OAAO,CAAE8B,QAAAA,GAAWkQ,GAC3BE,EAAKH,EAAEjS,OAAO,CAAEgC,QAAAA,GAAWkQ,GACjC,OAAIC,aAActR,GACPsR,EACPC,aAAcvR,GACPuR,EACJ,IAAIpB,GAAgBmB,EAAG/R,OAAO,CAAE4B,QAAAA,GAAWoQ,IAEtD,KAAK5W,EAAG0B,IAAK,CACT,MAAMmV,EAAKJ,EAAEhS,OAAO,CAAE+B,QAAAA,GAAWkQ,GAC3BE,EAAKH,EAAEjS,OAAO,CAAEgC,QAAAA,GAAWkQ,GACjC,OAAIG,aAAcxR,GACPwR,EACPD,aAAcvR,GACPuR,EACJ,IAAIpB,GAAgBqB,EAAGjS,OAAO,CAAE4B,QAAAA,GAAWoQ,IAEtD,KAAK5W,EAAGsB,UAAW,CACf,MAAMsC,EAAM6S,EAAEjS,OAAO,CAAEgC,QAAAA,GAAWkQ,GAClC,OAAI9S,aAAeyB,GACRzB,EACJ,IAAI4R,GAAgB,IAAIvS,GAAWW,EAAIuC,OAAOjD,YAEzD,KAAKlD,EAAGe,IACJ,OAAO,IAAIyU,GAAgBiB,EAAEzS,QAAQ,CAAEwC,QAAAA,GAAWkQ,IACtD,KAAK1W,EAAGgB,IACJ,OAAO,IAAIwU,GAAgBiB,EAAEtS,aAAa,CAAEqC,QAAAA,GAAWkQ,IAC3D,KAAK1W,EAAGiB,IACJ,OAAO,IAAIuU,GAAgBiB,EAAErS,aAAa,CAAEoC,QAAAA,GAAWkQ,IAC3D,KAAK1W,EAAGkB,IACJ,OAAO,IAAIsU,GAAgBiB,EAAEpS,WAAW,CAAEmC,QAAAA,GAAWkQ,IACzD,KAAK1W,EAAGmB,IACJ,OAAO,IAAIqU,GAAgBiB,EAAEnS,QAAQ,CAAEkC,QAAAA,GAAWkQ,IACtD,KAAK1W,EAAGoB,IACJ,OAAO,IAAIoU,GAAgBiB,EAAElS,QAAQ,CAAEiC,QAAAA,GAAWkQ,IACtD,KAAK1W,EAAGqB,OACJ,OAAO,IAAImU,GAAgBiB,EAAEjS,OAAO,CAAEgC,QAAAA,GAAWkQ,IACrD,KAAK1W,EAAGyB,GACJ,OAAO,IAAI+T,GAAgBiB,EAAE/R,OAAO,CAAE8B,QAAAA,GAAWkQ,IACrD,KAAK1W,EAAGwB,GACJ,OAAO,IAAIgU,GAAgBiB,EAAEhS,OAAO,CAAE+B,QAAAA,GAAWkQ,IACrD,KAAK1W,EAAG4B,IACJ,OAAO,IAAI4T,GAAgBiB,EAAE9R,QAAQ,CAAE6B,QAAAA,GAAWkQ,IACtD,KAAK1W,EAAG6B,GACJ,OAAO,IAAI2T,GAAgBiB,EAAE7R,OAAO,CAAE4B,QAAAA,GAAWkQ,IACrD,KAAK1W,EAAGiC,UACJ,OAAO,IAAIuT,GAAgBiB,EAAE1R,cAAc,CAAEyB,QAAAA,GAAWkQ,IAC5D,KAAK1W,EAAGkC,KACJ,OAAO,IAAIsT,GAAgBiB,EAAE3R,SAAS,CAAE0B,QAAAA,GAAWkQ,IACvD,QACI,OAAO,IAAII,GAAmBjb,KAAK2a,MAAMR,IAAK,4BAA4B/V,EAAgBpE,KAAK2a,MAAM9T,UAGjHqU,UAAUzG,GACN,MAAMlE,EAAOvQ,KAAKuQ,KAAK2K,UAAUzG,GACjC,GAAIlE,EAAKhH,MACL,OAAOgH,EACX,MAAMC,EAAQxQ,KAAKwQ,MAAM0K,UAAUzG,GACnC,OAAIjE,EAAMjH,MACCiH,EACPiE,EAAO0G,OACA,IAAIrB,GAAc,GAAGvJ,EAAKlF,MAAMjH,EAAgBpE,KAAK2a,MAAM9T,QAAQ2J,EAAMnF,OAE7E,IAAIyO,GAAc,GAAGvJ,EAAKlF,OAAOjH,EAAgBpE,KAAK2a,MAAM9T,SAAS2J,EAAMnF,OAEtF6O,UAAUzF,GACN,MAAMlE,EAAOvQ,KAAKuQ,KAAK2J,UAAUzF,GACjC,GAAIlE,EAAKhH,MACL,OAAOgH,EACX,MAAMC,EAAQxQ,KAAKwQ,MAAM0J,UAAUzF,GACnC,GAAIjE,EAAMjH,MACN,OAAOiH,EACX,MAAM4K,EAAY,CACd,KAAM,MACN,KAAM,KACN,IAAK,MAET,IAAIC,EAAKjX,EAAgBpE,KAAK2a,MAAM9T,MAIpC,OAHIwU,KAAMD,IACNC,EAAKD,EAAUC,IAEZ,IAAIvB,GAAc,GAAGvJ,EAAKlF,OAAOgQ,KAAM7K,EAAMnF,QAGrD,MAAMiQ,WAAkB3N,GAC3BzM,YAAYiZ,EAAK3H,EAAGmI,GAChBlR,MAAM0Q,GACNna,KAAKwS,EAAIA,EACTxS,KAAK2a,MAAQA,EAEjBL,WAAW3P,GACP,IAAIiC,EAAIgB,EAAIuE,EACZ,MAAMpK,EAAM/H,KAAKwS,EAAE3E,UAAUlD,GAC7B,GAAI5C,EAAIwB,MACJ,OAAOxB,EAAIwB,MACf,OAAQvJ,KAAK2a,MAAM9T,MACf,KAAK1C,EAAGgB,IACR,KAAKhB,EAAGe,IACJ,KAAM6C,EAAIsD,eAAeR,GACrB,OAAO,IAAI5C,GAAUjI,KAAKma,IAAK,UAA8B,QAAlBvN,EAAK7E,EAAIsD,WAAwB,IAAPuB,OAAgB,EAASA,EAAGrF,WAAWwJ,aAAe,aAAiC,QAAlBnD,EAAK7F,EAAIsD,WAAwB,IAAPuC,OAAgB,EAASA,EAAGvG,WAEpM,MAAMkU,EAASxT,EAAIsD,IAAIhE,UACvB,OAAO,IAAIsS,GAAgB,IAAI9O,EAAS7K,KAAK2a,MAAM9T,OAAS1C,EAAGgB,KAAOoW,EAASpO,KAAKqO,IAAID,KAC5F,KAAKpX,EAAGuB,IACJ,OAAO,IAAIiU,GAAgB,IAAIvS,IAAyE,QAA5D+K,EAAKpK,MAAAA,OAAiC,EAASA,EAAIsD,WAAwB,IAAP8G,OAAgB,EAASA,EAAG7H,OAAOjD,aACvJ,KAAKlD,EAAGmC,YACJ,OAAO,IAAIqT,GAAgB,IAAI9I,EAAU9I,EAAIsD,MACjD,QACI,OAAO,IAAI4P,GAAmBjb,KAAK2a,MAAMR,IAAK,2BAA2B/V,EAAgBpE,KAAK2a,MAAM9T,UAGhHqU,UAAUzG,GACN,MAAMpJ,EAAMrL,KAAKwS,EAAE0I,UAAUzG,GAC7B,OAAIpJ,EAAI9B,MACG8B,EACJ,IAAIyO,GAAc,GAAG1V,EAAgBpE,KAAK2a,MAAM9T,QAAQwE,EAAIA,OAEvE6O,UAAUzF,GACN,MAAMpJ,EAAMrL,KAAKwS,EAAE0H,UAAUzF,GAC7B,OAAIpJ,EAAI9B,MACG8B,EACJ,IAAIyO,GAAc,GAAG1V,EAAgBpE,KAAK2a,MAAM9T,QAAQwE,EAAIA,QAGpE,MAAMoQ,WAAoB9N,GAC7BzM,YAAYiZ,EAAKuB,EAAY1a,EAAO2a,EAAa,IAAKC,GAAW,EAAOhN,GAAa,EAAOiN,GAAgB,EAAOhV,EAAOF,EAAMG,KAC5H2C,MAAM0Q,GACNna,KAAKgB,MAAQA,EACbhB,KAAK0b,WAAaA,EAClB1b,KAAK4b,SAAWA,EAChB5b,KAAK2b,WAAaA,EAClB3b,KAAK4O,WAAaA,EAClB5O,KAAK6b,cAAgBA,EAEjB7b,KAAK6G,KADLA,aAAgBD,EACJ,IAAIkV,GAAmBjV,GAGvBA,EAGpByT,WAAW3P,GACP,IAAIiC,EAAIgB,EACR,GAAI5N,KAAK6b,eAAiBlR,EAAQqO,OAAOhZ,KAAK0b,WAAW1a,OACrD,OAAO,IAAIia,GAAmBjb,KAAKma,IAAK,WAAWna,KAAK0b,WAAW1a,mDAEvE,MAAM+G,EAAM/H,KAAKgB,MAAM6M,UAAUlD,GAC3B8O,EAAUzZ,KAAK6G,KAAKgH,UAAUlD,GACpC,GAAI5C,EAAIwB,MACJ,OAAOxB,EAAIwB,MACf,GAAIkQ,EAAQlQ,MACR,OAAOkQ,EAAQlQ,MACnB,IAAKkQ,EAAQpO,IACT,OAAO,IAAIpD,GAAUjI,KAAK0b,WAAWvB,IAAK,OAAQ,aAEtD,IAAKpS,EAAIsD,IACL,OAAO,IAAIpD,GAAUjI,KAAK0b,WAAWvB,IAAK,aAAc,YAAa,0BAEzE,MAAM4B,EAAetC,EAAQpO,IAAInE,UAAU,CAAEyD,QAAAA,GAAW5C,EAAIsD,KAC5D,GAAI0Q,aAAwBvS,GACxB,OAAOuS,EACX,IAAKA,EAAazR,OAAOjD,UACrB,OAAO,IAAIY,GAAUjI,KAAK0b,WAAWvB,IAAKzY,GAAI+X,EAAQpO,KAAM3J,GAAuB,QAAlBkL,EAAK7E,EAAIsD,WAAwB,IAAPuB,OAAgB,EAASA,EAAGrF,YAAa7F,GAAIqG,EAAIsD,MAEhJ,GAAIrL,KAAK6b,cACL,MAAwB,MAApB7b,KAAK2b,WACE,IAAIV,GAAmBjb,KAAKma,IAAK,0CAA0Cna,KAAK2b,eAEvFhR,EAAQqO,OAAOhZ,KAAK0b,WAAW1a,OACxB,IAAIia,GAAmBjb,KAAKma,IAAK,gEAE5CxP,EAAQ4C,OAAOvN,KAAK0b,WAAW1a,MAAO+G,EAAIsD,IAAK,CAC3CtJ,QAAQ,EACR6M,WAAY5O,KAAK4O,WACjB/H,KAAM4S,EAAQpO,MAEX,IAAIsO,GAAgB5R,EAAIsD,MAEnC,GAAIV,EAAQsJ,IAAIjU,KAAK0b,WAAW1a,OAAQ,CACpC,MAAM0N,EAAS/D,EAAQsO,UAAUjZ,KAAK0b,WAAW1a,OACjD,GAAI0N,aAAkBlF,GAClB,OAAOkF,EACX,GAAIA,IACKA,EAAO7H,KAAKK,UAAU,CAAEyD,QAAAA,GAAW5C,EAAIsD,KAAKhE,UAC7C,OAAO,IAAIY,GAAUjI,KAAK0b,WAAWvB,IAAKzY,GAAIgN,EAAO7H,MAA0B,QAAlB+G,EAAK7F,EAAIsD,WAAwB,IAAPuC,OAAgB,EAASA,EAAGrG,WAAY7F,GAAIqG,EAAIsD,MAInJ,GAAwB,MAApBrL,KAAK2b,WAAoB,CACzB,IAAI3a,EAAQ+G,EAAIsD,SACFX,IAAV1J,IACAA,EAAQ,IAAIyJ,GAEhB,MAAM5D,EAAO8D,EAAQsO,UAAUjZ,KAAK0b,WAAW1a,OAC/C,GAAI6F,aAAgB2C,GAChB,OAAO3C,EAEX,IAAKA,EACD,OAAO,IAAIoU,GAAmBjb,KAAKma,IAAK,2CAE5C,MAAM4B,EAAelV,EAAKA,KAAKK,UAAU,CAAEyD,QAAAA,GAAW5C,EAAIsD,KAC1D,GAAI0Q,aAAwBvS,GACxB,OAAOuS,EACX,IAAKA,EAAazR,OAAOjD,UACrB,OAAO,IAAIY,GAAUhH,EAAA,KAAeS,GAAImF,EAAKA,MAAOnF,GAAIqG,EAAIsD,IAAI7D,UAAW9F,GAAIqG,EAAIsD,MAEvF,MAAMoC,EAAS9C,EAAQuJ,IAAIlU,KAAK0b,WAAW1a,MAAOA,EAAO,CACrDe,OAAQ/B,KAAK4b,SACbhN,WAAY5O,KAAK4O,WACjB/H,KAAMkB,EAAIsD,IAAI7D,WAElB,GAAIiG,aAAkBjE,GAClB,OAAOiE,MAEV,CACD,MAAMuO,EAAarR,EAAQnK,IAAIR,KAAK0b,WAAW1a,OAC/C,GAAIgb,aAAsBxS,GACtB,OAAOwS,EACX,GAAkBtR,MAAdsR,EACA,OAAO,IAAIf,GAAmBjb,KAAKma,IAAK,0CAA0Cna,KAAK2b,eAC3F,IAAIM,EACAC,EAAYnU,EAAIsD,IACpB,OAAQrL,KAAK2b,WAAW,IACpB,IAAK,IACDM,EAASD,EAAWzT,aAAa,CAAEoC,QAAAA,GAAWuR,GAC9C,MACJ,IAAK,IACDD,EAASD,EAAWxT,WAAW,CAAEmC,QAAAA,GAAWuR,GAC5C,MACJ,IAAK,IACDD,EAASD,EAAW7T,QAAQ,CAAEwC,QAAAA,GAAWuR,GACzC,MACJ,IAAK,IACDD,EAASD,EAAW1T,aAAa,CAAEqC,QAAAA,GAAWuR,GAC9C,MACJ,QACI,OAAO,IAAI1S,GAAQxJ,KAAKma,IAAK,cAAe,6BAA6Bna,KAAK2b,WAAW,MAEjG,GAAIM,aAAkBzS,GAClB,OAAOyS,EAEX,IAAIxO,EAAS9C,EAAQuJ,IAAIlU,KAAK0b,WAAW1a,MAAOib,EAAQ,CACpDla,OAAQ/B,KAAK4b,SACbhN,WAAY5O,KAAK4O,WACjB/H,KAAMoV,EAAOzU,WAEjB,GAAIiG,aAAkBjE,GAClB,OAAOiE,EACX1F,EAAIsD,IAAM4Q,EAKd,MAH0B,gBAAtBlU,EAAIsD,IAAI1D,KAAKiC,MAA2B7B,EAAIsD,IAAI1D,KAAKiC,OACrD7B,EAAIsD,IAAI1D,KAAKiC,KAAO5J,KAAK0b,WAAW1a,OAEjC+G,EAEXmT,UAAUzG,GACN,MAAMpJ,EAAMrL,KAAKgB,MAAMka,UAAUzG,GACjC,GAAIpJ,EAAI9B,MACJ,OAAO8B,EACX,IAAI8Q,EAAc,GACdnc,KAAK6b,gBAEDM,EADAnc,KAAK4b,SACS,MAET5b,KAAK4O,WACI,QAGA,OAGtB,IAAI1G,EAASlI,KAAK2b,WAIlB,MAHe,MAAXzT,IACAA,GAAU,KAEVuM,EAAO0G,OACA,IAAIrB,GAAc,GAAGqC,KAAenc,KAAK0b,WAAW1a,QAAQkH,IAASmD,EAAIA,OAE7E,IAAIyO,GAAc,GAAGqC,KAAenc,KAAK0b,WAAW1a,SAASkH,KAAUmD,EAAIA,OAEtF6O,UAAUzF,GACN,MAAM1M,EAAM,IAAI+R,GACVzO,EAAMrL,KAAKgB,MAAMkZ,UAAUzF,GACjC,GAAIpJ,EAAI9B,MACJ,OAAO8B,EACXtD,EAAIgS,SAAW1O,EAAI0O,QACnB,IAAI7R,EAASlI,KAAK2b,WAalB,MAZe,MAAXzT,IACAA,GAAU,KAEVlI,KAAK4b,WACL7T,EAAIgS,SAAW,GAAG/Z,KAAK0b,WAAW1a,cAElCyT,EAAO0G,OACPpT,EAAIsD,IAAM,GAAGrL,KAAK0b,WAAW1a,QAAQkH,IAASmD,EAAIA,MAGlDtD,EAAIsD,IAAM,GAAGrL,KAAK0b,WAAW1a,SAASkH,KAAUmD,EAAIA,MAEjDtD,GAGR,MAAMqU,WAAazO,GACtBzM,YAAYiZ,EAAKkC,EAAYC,EAAQC,GACjC9S,MAAM0Q,GACNna,KAAKqc,WAAaA,EAClBrc,KAAKuc,QAAUA,EACfvc,KAAKsc,OAASA,EAElBhC,WAAW3P,GACP,IAAIiC,EACJ,IAAIG,EAAa,IAAIE,GACrBF,EAAWC,OAASrC,EACpB,IAAI5C,EAAM,IAAI4R,GACV6C,EAAUxc,KAAKqc,WAAWxO,UAAUlD,GACxC,OAAI6R,EAAQjT,MACDiT,GACgB,QAAtB5P,EAAK4P,EAAQnR,WAAwB,IAAPuB,OAAgB,EAASA,EAAGtC,OAAOjD,WAC3DrH,KAAKsc,OAAOzO,UAAUd,GAExB/M,KAAKuc,QACHvc,KAAKuc,QAAQ1O,UAAUd,GAE3BhF,EAEXmT,UAAUzG,GACN,MAAMd,EAAS,IAAI/B,OAAO6C,EAAOd,QAC3B8I,EAAa,IAAI7K,OAAO6C,EAAOd,OAAS,GAC9Cc,EAAOd,QAAU,EACjB,MAAM+I,EAAe1c,KAAKqc,WAAWnB,UAAUzG,GAC/C,GAAIiI,EAAanT,MACb,OAAOmT,EACX,MAAMC,EAAY3c,KAAKsc,OAAOpB,UAAUzG,GACxC,GAAIkI,EAAUpT,MACV,OAAOoT,EACX,IAAK3c,KAAKuc,QACN,OAAI9H,EAAO0G,OACA,IAAIrB,GAAc,MAAM4C,EAAarR,QAAQsR,EAAUtR,UAE3D,IAAIyO,GAAc,OAAO4C,EAAarR,WAAWsR,EAAUtR,UAEtEoJ,EAAOd,OAAS8I,EAAWnR,OAC3B,IAAIsR,EAAa5c,KAAKuc,QAAQrB,UAAUzG,GACxC,OAAImI,EAAWrT,MACJqT,GACL5c,KAAKuc,mBAAmBM,KAC1BD,EAAWvR,IAAMoR,EAAaG,EAAWvR,KAEzCoJ,EAAO0G,OACA,IAAIrB,GAAc,MAAM4C,EAAarR,QAAQsR,EAAUtR,YAAYuR,EAAWvR,QAElF,IAAIyO,GAAc,OAAO4C,EAAarR,WAAWsR,EAAUtR,QAAQsI,cAAmBiJ,EAAWvR,QAAQsI,OAEpHuG,UAAUzF,GACN,MAAM1M,EAAM,IAAI+R,GACVnG,EAAS,IAAI/B,OAAO6C,EAAOd,QAC3B8I,EAAa,IAAI7K,OAAO6C,EAAOd,OAAS,GAC9Cc,EAAOd,QAAU,EACjB,MAAM+I,EAAe1c,KAAKqc,WAAWnC,UAAUzF,GAC/C,GAAIiI,EAAanT,MACb,OAAOmT,EACX3U,EAAIgS,SAAW2C,EAAa3C,QAC5B,MAAM4C,EAAY3c,KAAKsc,OAAOpC,UAAUzF,GACxC,GAAIkI,EAAUpT,MACV,OAAOoT,EAEX,GADA5U,EAAIgS,SAAW4C,EAAU5C,SACpB/Z,KAAKuc,QACN,OAAO,IAAIzC,GAAc,MAAM4C,EAAarR,SAASoR,IAAaE,EAAUtR,OAEhF,MAAMuR,EAAa5c,KAAKuc,QAAQrC,UAAUzF,GAC1C,OAAImI,EAAWrT,MACJqT,GACX7U,EAAIgS,SAAW6C,EAAW7C,QACpB/Z,KAAKuc,mBAAmBM,KAC1BD,EAAWvR,IAAMoR,EAAaG,EAAWvR,KAEtC,IAAIyO,GAAc,MAAM4C,EAAarR,SAASsR,EAAUtR,QAAQsI,WAAgBiJ,EAAWvR,QAAQsI,OAG3G,MAAMmJ,WAAgBnP,GACzBzM,YAAYiZ,EAAKkC,EAAYU,GACzBtT,MAAM0Q,GACNna,KAAKqc,WAAaA,EAClBrc,KAAK+c,KAAOA,EAEhBzC,WAAW3P,GACP,IAAIiC,EAAIgB,EACR,IAAIb,EAAa,IAAIE,GAErB,IADAF,EAAWC,OAASrC,IACP,CACT,IAAIqS,EAAahd,KAAKqc,WAAWxO,UAAUlD,GAC3C,GAAIqS,EAAWzT,MACX,OAAOyT,EACX,KAAsF,QAA/EpP,EAA+B,QAAzBhB,EAAKoQ,EAAW3R,WAAwB,IAAPuB,OAAgB,EAASA,EAAGtC,cAA2B,IAAPsD,OAAgB,EAASA,EAAGvG,WACtH,MACJ,IAAI4V,EAAiBjd,KAAK+c,KAAKlP,UAAUd,GACzC,GAAIkQ,EAAe1T,MACf,OAAO0T,EACX,GAAIA,EAAerD,YACf,MAER,OAAO,IAAID,GAAgB,IAAIlP,GAEnCyQ,UAAUzG,GACNA,EAAOd,QAAU,EACjB,MAAMuJ,EAAgBld,KAAKqc,WAAWnB,UAAUzG,GAChD,GAAIyI,EAAc3T,MACd,OAAO2T,EACX,MAAMC,EAAUnd,KAAK+c,KAAK7B,UAAUzG,GACpC,OAAI0I,EAAQ5T,MACD4T,EACP1I,EAAO0G,OACA,IAAIrB,GAAc,SAASoD,EAAc7R,QAAQ8R,EAAQ9R,QAE7D,IAAIyO,GAAc,UAAUoD,EAAc7R,WAAW8R,EAAQ9R,QAExE6O,UAAUzF,GACN,MAAM1M,EAAM,IAAI+R,GACV2C,EAAa,IAAI7K,OAAO6C,EAAOd,QAAU,GACzCuJ,EAAgBld,KAAKqc,WAAWnC,UAAUzF,GAChD,GAAIyI,EAAc3T,MACd,OAAO2T,EACXnV,EAAIgS,SAAWmD,EAAcnD,QAC7B,MAAMoD,EAAUnd,KAAK+c,KAAK7C,UAAUzF,GACpC,OAAI0I,EAAQ5T,MACD4T,GACXpV,EAAIgS,SAAWoD,EAAQpD,QAChB,IAAID,GAAc,SAASoD,EAAc7R,SAASoR,IAAaU,EAAQ9R,SAG/E,MAAM+R,WAAczP,GACvBzM,YAAYiZ,EAAKkD,EAAMtS,EAAOkH,EAAYqL,EAAoBC,GAC1D9T,MAAM0Q,GACNna,KAAKqd,KAAOA,EACZrd,KAAK+K,MAAQA,EACb/K,KAAKiS,WAAaA,EAClBjS,KAAKwd,WAAaF,EAClBtd,KAAKyd,UAAYF,EAErBjD,WAAW3P,GACP,IAAIiC,EAAIgB,EAAIuE,EAAIuL,EAAIC,EAAIC,EAAIC,EAAIC,EAChC,MAAM/S,EAAQ/K,KAAK+K,MAAM8C,UAAUlD,GACnC,GAAII,EAAMxB,MACN,OAAOwB,EACX,IAA6I,IAAzI,CAAC,QAAS,SAAU,SAAU,SAAU,OAAOiB,SAA8B,QAApBY,EAAK7B,EAAMM,WAAwB,IAAPuB,OAAgB,EAASA,EAAGrF,aAAe,IAChI,OAAO,IAAIU,GAAUjI,KAAKiS,WAAWkI,IAAK,0CAA2CpP,EAAMM,IAAM,OAA8B,QAApBuC,EAAK7C,EAAMM,WAAwB,IAAPuC,OAAgB,EAASA,EAAGrG,aAEvK,GAAIoD,EAAQsJ,IAAIjU,KAAKiS,WAAWjR,QAAUhB,KAAKwd,WAC3C,OAAO,IAAIvC,GAAmBjb,KAAKiS,WAAWkI,IAAK,oEAEvD,SAAS4D,EAAUV,EAAMrJ,EAAI1C,EAASsK,EAAUhN,GAC5C,IAAI7B,EAAa,IAAIE,GACrBF,EAAWC,OAASrC,EACpBoC,EAAWmH,IAAIF,EAAI1C,EAAS,CACxBvP,OAAQ6Z,EACRhN,WAAAA,EACA/H,KAAMyK,EAAQ9J,WAElB,MAAMO,EAAMsV,EAAKxP,UAAUd,GAC3B,OAAIhF,EAAIwB,YAA6BmB,IAAnB3C,EAAI+F,WACX/F,EACPA,EAAI6R,aACJ7R,EAAI6R,aAAc,EACX,cAEP7R,EAAI8R,iBACJ9R,EAAI8R,gBAAiB,IAG7B,GAAI9O,EAAMM,eAAeR,GAA2F,iBAAlD,QAApBsH,EAAKpH,EAAMM,WAAwB,IAAP8G,OAAgB,EAASA,EAAG9K,WAClG,IAAK,IAAI+F,EAAI,EAAGA,EAAIrC,EAAMM,IAAIhE,UAAW+F,IAAK,CAC1C,MAAMrF,EAAMgW,EAAU/d,KAAKqd,KAAMrd,KAAKiS,WAAWjR,MAAO,IAAI6J,EAASuC,GAAIpN,KAAKwd,WAAYxd,KAAKyd,WAC/F,GAAY,UAAR1V,EACA,MACJ,GAAIA,IAAQA,EAAIwB,YAA6BmB,IAAnB3C,EAAI+F,YAC1B,OAAO/F,OAGd,GAAIgD,EAAMM,eAAeH,GACsD,iBAAlD,QAApBwS,EAAK3S,EAAMM,WAAwB,IAAPqS,OAAgB,EAASA,EAAGrW,aAA2ByE,MAAMC,QAA6B,QAApB4R,EAAK5S,EAAMM,WAAwB,IAAPsS,OAAgB,EAASA,EAAGtW,WACpK,IAAK,IAAIiK,KAAgC,QAApBsM,EAAK7S,EAAMM,WAAwB,IAAPuS,OAAgB,EAASA,EAAGvW,UAAW,CACpF,MAAMU,EAAMgW,EAAU/d,KAAKqd,KAAMrd,KAAKiS,WAAWjR,MAAO,IAAI2I,EAAS2H,GAAUtR,KAAKwd,WAAYxd,KAAKyd,WACrG,GAAY,UAAR1V,EACA,MACJ,GAAIA,IAAQA,EAAIwB,YAA6BmB,IAAnB3C,EAAI+F,YAC1B,OAAO/F,MAGd,MAAIgD,EAAMM,eAAevB,GAAWgC,MAAMC,QAA6B,QAApB8R,EAAK9S,EAAMM,WAAwB,IAAPwS,OAAgB,EAASA,EAAGxW,YAU5G,OAAO,IAAIY,GAAUjI,KAAKiS,WAAWkI,IAAK,0CAA2CpP,EAAMM,KAT3F,IAAK,IAAIiG,KAAgC,QAApBwM,EAAK/S,EAAMM,WAAwB,IAAPyS,OAAgB,EAASA,EAAGzW,UAAW,CACpF,MAAMU,EAAMgW,EAAU/d,KAAKqd,KAAMrd,KAAKiS,WAAWjR,MAAOsQ,EAAStR,KAAKwd,WAAYxd,KAAKyd,WACvF,GAAY,UAAR1V,EACA,MACJ,GAAIA,IAAQA,EAAIwB,YAA6BmB,IAAnB3C,EAAI+F,YAC1B,OAAO/F,GAKnB,OAAO,IAAI4R,GAAgB,IAAIlP,GAEnCyQ,UAAUzG,GACN,MAAMd,EAAS,IAAI/B,OAAO6C,EAAOd,QACjCc,EAAOd,QAAU,EACjB,MAAMqK,EAAche,KAAK+K,MAAMmQ,UAAUzG,GACzC,GAAIuJ,EAAYzU,MACZ,OAAOyU,EACX,MAAMb,EAAUnd,KAAKqd,KAAKnC,UAAUzG,GACpC,GAAI0I,EAAQ5T,MACR,OAAO4T,EACX,IAAIhB,EAAc,MAOlB,OANInc,KAAKwd,WACLrB,EAAc,MAETnc,KAAKyd,YACVtB,EAAc,SAEd1H,EAAO0G,OACA,IAAIrB,GAAc,OAAOqC,KAAenc,KAAKiS,WAAWjR,YAAYgd,EAAY3S,QAAQ8R,EAAQ9R,QAAQsI,MAE5G,IAAImG,GAAc,QAAQqC,KAAenc,KAAKiS,WAAWjR,YAAYgd,EAAY3S,WAAW8R,EAAQ9R,QAAQsI,MAEvHuG,UAAUzF,GACN,MAAM1M,EAAM,IAAI+R,GAChBrF,EAAOd,QAAU,EACjB,MAAMqK,EAAcjW,EAAIiS,SAASha,KAAK+K,MAAO0J,GAC7C,GAAI1M,EAAIwB,MACJ,OAAOxB,EACX,MAAMoV,EAAUpV,EAAIiS,SAASha,KAAKqd,KAAM5I,GACxC,OAAI1M,EAAIwB,QAEJvJ,KAAKwd,aACLzV,EAAIgS,SAAW,GAAG/Z,KAAKiS,WAAWjR,cAEtC+G,EAAIsD,IAAM,OAAOrL,KAAKiS,WAAWjR,YAAYgd,OAAiBb,KAJnDpV,GAQZ,MAAMkW,WAAgBtQ,GACzBzM,YAAYiZ,EAAK+D,EAAOC,GAAc,GAClC1U,MAAM0Q,GACNna,KAAKke,MAAQA,EACble,KAAKme,YAAcA,EAEvB7D,WAAW3P,GACP,IAAI7G,EAAS,IAAI6V,GACbyE,EAAc,GAClB,IAAK,IAAIC,KAAQre,KAAKke,MAAO,CACzB,MAAMnW,EAAMsW,EAAKxQ,UAAUlD,GAC3B,GAAI5C,EAAIwB,YAA6BmB,IAAnB3C,EAAI+F,WAClB,OAAO/F,EACX,IAAKA,EAAIsD,IACL,SACJ,IAAIA,EAAMtD,EAAIsD,IACVrL,KAAKme,cACL9S,EAAMA,EAAI5J,SAEd2c,EAAYpQ,KAAK3C,GAGrB,OADAvH,EAAOuH,IAAM,IAAIvB,EAAQsU,GAClBta,EAEXoX,UAAUzG,GACN,MAAM1M,EAAM,IAAI+R,GAAc,KAC9B,IAAK,IAAIuE,KAAQre,KAAKke,MAAO,CACzB,MAAMI,EAAUD,EAAKnD,UAAUzG,GAC/B,GAAI6J,EAAQ/U,MACR,OAAO+U,EACXvW,EAAIsD,KAAOiT,EAAQjT,IAAM,IAG7B,OADAtD,EAAIsD,KAAO,IACJtD,EAEXmS,UAAUzF,GACN,MAAM1M,EAAM,IAAI+R,GAAc,KAC9B,IAAK,IAAIuE,KAAQre,KAAKke,MAAO,CACzB,MAAMI,EAAUvW,EAAIiS,SAASqE,EAAM5J,GACnC,GAAI1M,EAAIwB,MACJ,OAAOxB,EACXA,EAAIsD,KAAOiT,EAAU,IAGzB,OADAvW,EAAIsD,KAAO,IACJtD,GAGR,MAAMwW,WAAwB5Q,GACjCzM,YAAYiZ,EAAKqE,GACb/U,MAAM0Q,GACNna,KAAKwe,WAAaA,EAEtBlE,WAAW3P,GACP,IAAIyT,EAAc,GAClB,IAAK,MAAOK,EAASC,KAAc1e,KAAKwe,WAAY,CAChD,MAAMxd,EAAQ0d,EAAU7Q,UAAUlD,GAClC,GAAI3J,EAAMuI,MACN,OAAOvI,EAAMuI,MACjB,MAAMpJ,EAAMse,EAAQ5Q,UAAUlD,GAC9B,GAAIxK,EAAIoJ,MACJ,OAAOpJ,EAAIoJ,MACXpJ,EAAIkL,KAAOrK,EAAMqK,MACjB+S,EAAYje,EAAIkL,IAAIhE,WAAarG,EAAMqK,KAG/C,OAAO,IAAIsO,GAAgB,IAAIzO,EAASkT,IAE5ClD,UAAUzG,GACN,MAAM1M,EAAM,IAAI+R,GAAc,KAC9B,IAAK,MAAO2E,EAASC,KAAc1e,KAAKwe,WAAY,CAChD,MAAMxd,EAAQ0d,EAAUxD,UAAUzG,GAClC,GAAIzT,EAAMuI,MACN,OAAOvI,EACX,MAAMb,EAAMse,EAAQvD,UAAUzG,GAC9B,GAAItU,EAAIoJ,MACJ,OAAOpJ,EACPA,EAAIkL,KAAOrK,EAAMqK,MACjBtD,EAAIsD,KAAO,IAAIlL,EAAIkL,SAASrK,EAAMqK,QAI1C,OADAtD,EAAIsD,KAAO,IACJtD,EAEXmS,UAAUzF,GACN,MAAM1M,EAAM,IAAI+R,GAAc,KAC9B,IAAK,MAAO2E,EAASC,KAAc1e,KAAKwe,WAAY,CAChD,MAAMxd,EAAQ+G,EAAIiS,SAAS0E,EAAWjK,GACtC,GAAI1M,EAAIwB,MACJ,OAAOxB,EACX,MAAM5H,EAAM4H,EAAIiS,SAASyE,EAAShK,GAClC,GAAI1M,EAAIwB,MACJ,OAAOxB,EACP5H,GAAOa,IACP+G,EAAIsD,KAAO,GAAGlL,MAAQa,MAI9B,OADA+G,EAAIsD,KAAO,IACJtD,GAGR,MAAM8U,WAAqBlP,GAC9BzM,YAAYiZ,EAAK+D,EAAOS,GAAW,GAC/BlV,MAAM0Q,GACNna,KAAKke,MAAQA,EACble,KAAK2e,SAAWA,EAEpBrE,WAAW3P,GACP,GAAK3K,KAAK2e,SAUL,CACD,IAAI7a,EAAS,IAAI6V,GACbyE,EAAc,GAClB,IAAK,IAAIC,KAAQre,KAAKke,MAAO,CACzB,MAAMnW,EAAMsW,EAAKxQ,UAAUlD,GAC3B,GAAI5C,EAAIwB,YAA6BmB,IAAnB3C,EAAI+F,WAClB,OAAO/F,EACX,IAAKA,EAAIsD,IACL,SACJ,IAAIA,EAAMtD,EAAIsD,IAAI5J,QAClB2c,EAAYpQ,KAAK3C,GAGrB,OADAvH,EAAOuH,IAAM,IAAIvB,EAAQsU,GAClBta,EAvBS,CAChB,IAAI8a,EACJ,IAAK,IAAIP,KAAQre,KAAKke,MAAO,CACzB,MAAMnW,EAAMsW,EAAKxQ,UAAUlD,GAC3B,GAAI5C,EAAIwB,YAAoC,IAAnBxB,EAAI+F,YAA+B/F,EAAI6R,aAAe7R,EAAI8R,eAC/E,OAAO9R,EACX6W,EAAO7W,EAAIsD,IAEf,OAAO,IAAIsO,GAAgBiF,GAAQ,IAAInU,IAkB/CyQ,UAAUzG,GACN,MAAM1M,EAAM,IAAI+R,GACVnG,EAAS,IAAI/B,OAAO6C,EAAOd,QACjC5L,EAAIsD,KAAOsI,EACX,IAAK,IAAI0K,KAAQre,KAAKke,MAAO,CACzB,MAAMI,EAAUD,EAAKnD,UAAUzG,GAC/B,GAAI6J,EAAQ/U,MACR,OAAO+U,EACXvW,EAAIsD,KAAOiT,EAAQjT,IAAM,IACpBoJ,EAAO0G,SACRpT,EAAIsD,KAAO,KAAOsI,GAG1B,OAAO5L,EAEXmS,UAAUzF,GACN,MAAM1M,EAAM,IAAI+R,GACVnG,EAAS,IAAI/B,OAAO6C,EAAOd,QACjC5L,EAAIsD,KAAOsI,EACX,IAAK,IAAI0K,KAAQre,KAAKke,MAAO,CACzB,MAAMI,EAAUvW,EAAIiS,SAASqE,EAAM5J,GACnC,GAAI1M,EAAIwB,MACJ,OAAOxB,EACXA,EAAIsD,KAAOiT,EACXvW,EAAIsD,KAAO,KAAOsI,EAEtB,OAAO5L,GAGR,MAAM8W,WAAuBlR,GAChCzM,YAAYiZ,EAAK2E,EAAI3Q,GACjB1E,MAAM0Q,GACNna,KAAK+e,UAAY5Q,EACjBnO,KAAK8e,GAAKA,EAEdxE,WAAW3P,GACP,IAAI,IAAEU,EAAG,MAAE9B,GAAUvJ,KAAK8e,GAAGjR,UAAUlD,GACvC,GAAIpB,EACA,OAAOA,EAEX,IAAK8B,EACD,OAAO,IAAIpD,GAAUjI,KAAKma,IAAK,MAAO,iBAAazP,EAAW,oBAElE,IAAIgC,EAAS,GACb,IAAK,IAAIW,KAAOrN,KAAK+e,UAAW,CAC5B,MAAMhX,EAAMsF,EAAIQ,UAAUlD,GAC1B,GAAI5C,EAAIwB,MACJ,OAAOxB,EAAIwB,MAEXxB,EAAIsD,KACJqB,EAAOsB,KAAKjG,EAAIsD,KAGxB,MAAMtD,EAAMsD,EAAIjC,SAAS,CAAEuB,QAAAA,MAAc+B,GAOzC,OANI3E,aAAeyB,IACfzB,EAAIgC,UAAUiE,KAAK,CACf9D,SAAUlK,KAAKma,IACfhQ,KAAM,GAAGkB,EAAI1D,KAAKiC,MAAQ,oBAAoB8C,EAAO1C,IAAItI,IAAKsd,KAAK,WAGpE,IAAIrF,GAAgB5R,GAE/BmT,UAAUzG,GACN,MAAM1M,EAAM,IAAI+R,GACVmF,EAAUjf,KAAK8e,GAAG5D,UAAUzG,GAClC,GAAIwK,EAAQ1V,MACR,OAAO0V,EACXlX,EAAIsD,IAAM4T,EAAQ5T,IAAM,IACxB,IAAK,IAAIgC,KAAOrN,KAAK+e,UAAW,CAC5B,MAAMG,EAAS7R,EAAI6N,UAAUzG,GAC7B,GAAIyK,EAAO3V,MACP,OAAO2V,EACXnX,EAAIsD,KAAO6T,EAAO7T,IACdgC,IAAQrN,KAAK+e,UAAU/e,KAAK+e,UAAUzT,OAAS,KAC/CvD,EAAIsD,KAAO,IACNoJ,EAAO0G,SACRpT,EAAIsD,KAAO,MAKvB,OADAtD,EAAIsD,KAAO,IACJtD,EAEXmS,UAAUzF,GACN,MAAM1M,EAAM,IAAI+R,GACVmF,EAAUlX,EAAIiS,SAASha,KAAK8e,GAAIrK,GACtC,GAAI1M,EAAIwB,MACJ,OAAOxB,EACXA,EAAIsD,IAAM4T,EAAU,IACpB,IAAK,IAAI5R,KAAOrN,KAAK+e,UAAW,CAC5B,MAAMG,EAASnX,EAAIiS,SAAS3M,EAAKoH,GACjC,GAAI1M,EAAIwB,MACJ,OAAOxB,EACXA,EAAIsD,KAAO6T,EACP7R,IAAQrN,KAAK+e,UAAU/e,KAAK+e,UAAUzT,OAAS,KAC/CvD,EAAIsD,KAAO,IACNoJ,EAAO0G,SACRpT,EAAIsD,KAAO,MAKvB,OADAtD,EAAIsD,KAAO,IACJtD,GAGR,MAAMoX,WAA6BxR,GACtCzM,YAAYiZ,EAAKkD,EAAM+B,EAAU7S,EAAY3C,EAAO,SAAU0C,EAAQ,IAAIpB,EAAYrD,EAAc,IAChG4B,MAAM0Q,GACNna,KAAK+e,UAAYK,EACjBpf,KAAKqd,KAAOA,EACZrd,KAAK4J,KAAOA,EACZ5J,KAAKsM,MAAQA,EACbtM,KAAKuM,WAAaA,EAClBvM,KAAK6H,YAAcA,EAEvByS,WAAW3P,GACP,IAAIwD,EAAO,GACX,IAAK,IAAId,KAAOrN,KAAK+e,UAAW,CAC5B,MAAMhX,EAAMyR,GAAkBnM,EAAK1C,GACnC,GAAI5C,aAAeyB,GACf,OAAOzB,EACXoG,EAAKH,KAAKjG,GAEd,MAAMsX,EAAgBrf,KAAKuM,WAAWsB,UAAUlD,GAChD,OAAI0U,EAAc9V,MACP8V,EAAc9V,MAClB,IAAIoQ,GAAgB,IAAIxO,EAAWnL,KAAKqd,KAAMlP,EAAMnO,KAAK4J,KAAM5J,KAAKsM,MAAO+S,EAAchU,IAAKV,IAEzGuQ,UAAUzG,GACN,MAAM1M,EAAM,IAAI+R,GAAc,aAC9B,IAAK,IAAIwF,KAAStf,KAAK+e,UACnBhX,EAAIsD,KAAOiU,EAAM1V,KAAO,IACnB6K,EAAO0G,SACRpT,EAAIsD,KAAO,KAGfoJ,EAAO0G,OACPpT,EAAIsD,KAAO,KAGXtD,EAAIsD,KAAO,QAEf,MAAMsI,EAAS,IAAI/B,OAAO6C,EAAOd,QACjCc,EAAOd,QAAU,EACjB,MAAMwJ,EAAUnd,KAAKqd,KAAKnC,UAAUzG,GACpC,OAAI0I,EAAQ5T,MACD4T,GACXpV,EAAIsD,KAAO,GAAG8R,EAAQ9R,QAAQsI,KACvB5L,GAEXmS,UAAUzF,GACN,MAAM1M,EAAM,IAAI+R,GACVyF,EAAcC,GAAqB/K,EAAO0E,SAChDpR,EAAIgS,QAAU,OAAOwF,KACrB,IAAK,IAAID,KAAStf,KAAK+e,UACnBhX,EAAIgS,SAAWuF,EAAM1V,KAAO,IACvB6K,EAAO0G,SACRpT,EAAIgS,SAAW,KAGvB,MAAMpG,EAAS,IAAI/B,OAAO6C,EAAOd,QACjCc,EAAOd,QAAU,EACjB,MAAM0J,EAAOrd,KAAKqd,KAAKnD,UAAUzF,GACjC,OAAI4I,EAAK9T,MACE8T,GACXtV,EAAIgS,SAAW,OAAOpG,IAAS0J,EAAKhS,MACpCtD,EAAIgS,QAAUsD,EAAKtD,QAAUhS,EAAIgS,QACjChS,EAAIsD,IAAMkU,EACHxX,IAGR,MAAM0X,WAAiB9R,GAC1BzM,YAAYiZ,EAAKnZ,GACbyI,MAAM0Q,GACNna,KAAKgB,MAAQA,EAEjBsZ,WAAW3P,GACP,MAAM5C,EAAM,IAAI4R,GAChB,QAAmBjP,IAAf1K,KAAKgB,MAEL,OADA+G,EAAI+F,WAAa,IAAIrD,EACd1C,EAEX,IAAIsD,EAAMrL,KAAKgB,MAAM6M,UAAUlD,GAC/B,OAAIU,EAAI9B,MACG8B,EAAI9B,OACfxB,EAAI+F,WAAazC,EAAIA,IACdtD,GAEXmT,UAAUzG,GACN,IAAI7H,EACJ,MAAM8S,EAA+B,QAArB9S,EAAK5M,KAAKgB,aAA0B,IAAP4L,OAAgB,EAASA,EAAGsO,UAAUzG,GACnF,OAAIiL,MAAAA,OAAuC,EAASA,EAAOnW,OAChDmW,EACJ,IAAI5F,GAAc,UAAU4F,MAAAA,OAAuC,EAASA,EAAOrU,QAE9F6O,UAAUzF,GACN,MAAM1M,EAAM,IAAI+R,GAChB,IAAK9Z,KAAKgB,MACN,OAAO,IAAI8Y,GAAc,UAE7B,MAAM4F,EAAS3X,EAAIiS,SAASha,KAAKgB,MAAOyT,GACxC,OAAI1M,EAAIwB,MACGxB,EACJ,IAAI+R,GAAc,UAAU4F,MAGpC,MAAMC,WAAgBhS,GACzBzM,YAAYiZ,EAAKnZ,GACbyI,MAAM0Q,GACNna,KAAKgB,MAAQA,EAEjBsZ,WAAW3P,GACP,IAAIiC,EACJ,MAAM7E,EAAM,IAAI4R,GAChB,QAAmBjP,IAAf1K,KAAKgB,MAEL,OADA+G,EAAI+F,WAAa,IAAIrD,EACd1C,EAEX,IAAIsD,EAAMrL,KAAKgB,MAAM6M,UAAUlD,GAC/B,OAAIU,EAAI9B,MACG8B,EAAI9B,QACQ,QAAlBqD,EAAKvB,EAAIA,WAAwB,IAAPuB,OAAgB,EAASA,EAAGtC,OAAOjD,aAC9DU,EAAI+F,WAAazC,EAAIA,KAElBtD,GAEXmT,UAAUzG,GACN,IAAI7H,EACJ,MAAM8S,EAA+B,QAArB9S,EAAK5M,KAAKgB,aAA0B,IAAP4L,OAAgB,EAASA,EAAGsO,UAAUzG,GACnF,OAAKiL,GAAWA,EAAOrU,IAGhB,IAAIyO,GAAc,QAAQ4F,EAAOrU,mBAF7B,IAAIyO,GAAc,IAIjCI,UAAUzF,GACN,IAAKzU,KAAKgB,MACN,OAAO,IAAI8Y,GAAc,IAE7B,MACM4F,GADM,IAAI5F,IACGE,SAASha,KAAKgB,MAAOyT,GACxC,OAGO,IAAIqF,GAHN4F,EAGoB,WAAWA,cAFP,KAK9B,MAAME,WAAkBjS,GAC3BzM,YAAYiZ,EAAK0F,EAAMC,GACnBrW,MAAM0Q,GACNna,KAAK6f,KAAOA,EACZ7f,KAAK8f,MAAQA,EAEjBxF,WAAW3P,GACP,IAAIiC,EACJ,IAAImT,EAAU/f,KAAK6f,KAAKhS,UAAUlD,GAClC,GAAIoV,EAAQxW,MACR,OAAOwW,EACX,IAAIC,EAAWhgB,KAAK8f,MAAMjS,UAAUlD,GACpC,GAAIqV,EAASzW,MACT,OAAOyW,EACX,MAAMF,EAAQE,EAAS3U,IACjBwU,EAAOE,EAAQ1U,IACrB,IAAKwU,IAASC,EACV,OAAO,IAAInG,GAAgB,IAAIlP,GAEnC,QAAmBC,IAAf1K,KAAKgB,MAAqB,CAC1B,IAAI0e,EAAS1f,KAAKgB,MAAM6M,UAAUlD,GAClC,GAAI+U,EAAOnW,MACP,OAAOmW,EACX,MAAM1D,EAAa,EAAK6D,EAAKnW,gBAAgB,CAAEiB,QAAAA,GAAWmV,IAC1D,IAAI7D,EACAC,EAAYwD,EAAOrU,IAEvB,GAD2B,QAA1BuB,EAAK5M,KAAK2b,kBAA+B,IAAP/O,IAAsB5M,KAAK2b,WAAa,MACtEO,EACD,OAAO,IAAIjU,GAAUjI,KAAKma,IAAK,aAAc,YAAa,YAAa,wBAE3E,OAAQna,KAAK2b,WAAW,IACpB,IAAK,IACDM,EAASD,EAAWzT,aAAa,CAAEoC,QAAAA,GAAWuR,GAC9C,MACJ,IAAK,IACDD,EAASD,EAAWxT,WAAW,CAAEmC,QAAAA,GAAWuR,GAC5C,MACJ,IAAK,IACDD,EAASD,EAAW7T,QAAQ,CAAEwC,QAAAA,GAAWuR,GACzC,MACJ,IAAK,IACDD,EAASD,EAAW1T,aAAa,CAAEqC,QAAAA,GAAWuR,GAC9C,MACJ,IAAK,IACDD,EAASC,EACT,MACJ,QACI,OAAO,IAAI1S,GAAQxJ,KAAKma,IAAK,cAAe,6BAA6Bna,KAAK2b,WAAW,MAEjG,GAAIM,aAAkBzS,GAClB,OAAOyS,EACX,IAAK4D,EAAK1W,gBACN,OAAO,IAAIlB,GAAUjI,KAAKma,IAAK,UAAW,YAAa0F,EAAKxY,WAChE,MAAMU,EAAM8X,EAAK1W,gBAAgB,CAAEwB,QAAAA,GAAWmV,EAAO7D,MAAAA,EAAuCA,EAAS,IAAIxR,GACzG,GAAI1C,aAAeyB,GACf,OAAOzB,EAEf,OAAO,IAAI4R,GAAgBkG,EAAKnW,gBAAgB,CAAEiB,QAAAA,GAAWmV,IAEjE5E,UAAUzG,GACN,MAAMwL,EAAYjgB,KAAK6f,KAAK3E,UAAUzG,GACtC,GAAIwL,EAAU1W,MACV,OAAO0W,EACX,MAAMC,EAASlgB,KAAK8f,MAAM5E,UAAUzG,GACpC,GAAIyL,EAAO3W,MACP,OAAO2W,EACX,IAAKlgB,KAAKgB,MACN,OAAO,IAAI8Y,GAAc,GAAGmG,EAAU5U,OAAO6U,EAAO7U,QAExD,MAAMqU,EAAS1f,KAAKgB,MAAMka,UAAUzG,GACpC,OAAIiL,EAAOnW,MACAmW,EACJ,IAAI5F,GAAc,GAAGmG,EAAU5U,OAAO6U,EAAO7U,OAAOrL,KAAK2b,YAAc,MAAM+D,EAAOrU,OAE/F6O,UAAUzF,GACN,MAAM1M,EAAM,IAAI+R,GACVmG,EAAYlY,EAAIiS,SAASha,KAAK6f,KAAMpL,GAC1C,GAAI1M,EAAIwB,MACJ,OAAOxB,EACX,MAAMmY,EAASnY,EAAIiS,SAASha,KAAK8f,MAAOrL,GACxC,GAAI1M,EAAIwB,MACJ,OAAOxB,EACX,IAAK/H,KAAKgB,MAEN,OADA+G,EAAIsD,IAAM,GAAG4U,KAAaC,KACnBnY,EAEX,MAAM2X,EAAS3X,EAAIiS,SAASha,KAAKgB,MAAOyT,GACxC,OAAI1M,EAAIwB,QAERxB,EAAIsD,IAAM,GAAG4U,KAAaC,MAAWlgB,KAAK2b,YAAc,OAAO+D,KADpD3X,GAKZ,MAAMoY,WAAgBxS,GACzBzM,YAAYiZ,EAAKiG,EAASC,EAAUC,EAAM1W,EAAO,gBAC7CH,MAAM0Q,GACNna,KAAKsgB,KAAOA,EACZtgB,KAAKogB,QAAUA,EACfpgB,KAAK4J,KAAOA,EACZ5J,KAAKqgB,SAAWA,EAEpB/F,WAAW3P,GACP,IAAIiC,EAAIgB,EAAIuE,EACZ,MAAMiO,EAAU,GAChB,IAAK,IAAIpQ,KAAUhQ,KAAKogB,QAAS,CAC7B,MAAMrY,EAAMiI,EAAOnC,UAAUlD,GAC7B,GAAI5C,EAAIwB,MACJ,OAAOxB,EAAIwB,MAEf,KAAMxB,EAAIsD,eAAeF,GACrB,OAAO,IAAIlD,GAAUjI,KAAKma,IAAK,YAAgC,QAAlBvN,EAAK7E,EAAIsD,WAAwB,IAAPuB,OAAgB,EAASA,EAAGrF,WAAWF,YAAc,YAAa,aAAerH,KAAK4J,MAEjKwW,EAAQpS,KAAKjG,EAAIsD,KAErB,IAWIiV,EAXAD,EAAW1Z,EAAMsE,OACrB,GAAIjL,KAAKqgB,SAAU,CACf,MAAME,EAAavgB,KAAKqgB,SAASxS,UAAUlD,GAC3C,GAAI4V,EAAWhX,MACX,OAAOgX,EAAWhX,MAEtB,KAAMgX,EAAWlV,eAAeL,GAC5B,OAAO,IAAI/C,GAAUjI,KAAKma,IAAK,QAAmC,QAAzBvM,EAAK2S,EAAWlV,WAAwB,IAAPuC,OAAgB,EAASA,EAAGrG,WAAWF,YAAc,YAAa,aAAerH,KAAK4J,MAEpKyW,EAAWE,EAAWlV,IAG1B,GAAIrL,KAAKsgB,KAAM,CACX,MAAME,EAAUxgB,KAAKsgB,KAAKzS,UAAUlD,GACpC,GAAI6V,EAAQjX,MACR,OAAOiX,EAAQjX,MAEnB,KAAMiX,EAAQnV,eAAeF,GACzB,OAAO,IAAIlD,GAAUjI,KAAKma,IAAK,YAAoC,QAAtBhI,EAAKqO,EAAQnV,WAAwB,IAAP8G,OAAgB,EAASA,EAAG5K,WAAWF,YAAc,YAAa,aAAerH,KAAK4J,MAErK0W,EAAOE,EAAQnV,IAEnB,OAAO,IAAIsO,GAAgB,IAAI3O,GAAO,EAAOhL,KAAK4J,KAAMwW,EAASC,EAAUC,IAE/EpF,UAAUzG,GACN,OAAO,IAAIqF,GAAc,yBAE7BI,UAAUzF,GACN,OAAO,IAAIqF,GAAc,SAAS9Z,KAAK4J,UAAU,IAAIgI,OAAO6C,EAAOd,gBAGpE,MAAM8M,WAAoB9S,GAC7BzM,YAAYiZ,EAAKuG,EAAY9W,EAAO,SAAU4E,GAAU,GACpD/E,MAAM0Q,GACNna,KAAK4J,KAAOA,EACZ5J,KAAK0gB,WAAaA,EAClB1gB,KAAKwO,QAAUA,EAEnB8L,WAAW3P,GACP,MAAMoC,EAAa,IAAIE,GACvBF,EAAWC,OAASrC,EACpB,MAAM5C,EAAM/H,KAAK0gB,WAAW7S,UAAUd,GACtC,OAAIhF,EAAIwB,MACGxB,EACJ,IAAI4R,GAAgB,IAAIpL,EAAY,IAAI5E,EAAS3J,KAAK4J,MAAOmD,EAAWqK,uBAAwBpX,KAAKwO,UAEhH0M,UAAUzG,GACN,MAAM0I,EAAUnd,KAAK0gB,WAAWxF,UAAUzG,GAC1C,OAAI0I,EAAQ5T,MACD4T,EACJ,IAAIrD,GAAc,WAAWqD,EAAQ9R,WAEhD6O,UAAUzF,GACN,MAAM1M,EAAM,IAAI+R,GAEhB,OADgB/R,EAAIiS,SAASha,KAAK0gB,WAAYjM,GAC1C1M,EAAIwB,QAERxB,EAAIsD,IAAM,eADCtD,GAKZ,MAAM4Y,WAAmBhT,GAC5BzM,YAAYiZ,EAAKkD,EAAMuD,GACnBnX,MAAM0Q,GAAK,GACXna,KAAKqd,KAAOA,EACZrd,KAAK4gB,WAAaA,EAEtBtG,WAAW3P,GACP,MAAM5C,EAAM/H,KAAKqd,KAAKxP,UAAUlD,GAChC,GAAI5C,EAAIwB,MAAO,CACX,MAAMwD,EAAa,IAAIE,GACvBF,EAAWC,OAASrC,EACpBoC,EAAWQ,O/B7pCkB,M+B6pCgB,IAAIjE,EAAiBvB,EAAIwB,OAAQ,CAC1EqF,YAAY,IAEhB,MAAMiS,EAAW7gB,KAAK4gB,WAAW/S,UAAUd,GAC3C,GAAI8T,EAAStX,MACT,OAAOsX,EAAStX,MAExB,OAAO,IAAIoQ,GAEfuB,UAAUzG,GACN,MAAM0I,EAAUnd,KAAKqd,KAAKnC,UAAUzG,GACpC,GAAI0I,EAAQ5T,MACR,OAAO4T,EACX,MAAM0D,EAAW7gB,KAAK4gB,WAAW1F,UAAUzG,GAC3C,OAAIoM,EAAStX,MACFsX,EACJ,IAAI/G,GAAc,OAAOqD,EAAQ9R,kBAA2CwV,EAASxV,QAEhG6O,UAAUzF,GACN,MAAM1M,EAAM,IAAI+R,GACVqD,EAAUpV,EAAIiS,SAASha,KAAKqd,KAAM5I,GACxC,GAAI1M,EAAIwB,MACJ,OAAOxB,EACX,MAAM8Y,EAAW9Y,EAAIiS,SAASha,KAAK4gB,WAAYnM,GAC/C,GAAI1M,EAAIwB,MACJ,OAAOxB,EACX,MAAM4L,EAAS,IAAI/B,OAAO6C,EAAOd,QAC3B8I,EAAa,IAAI7K,OAAO6C,EAAOd,OAAS,GAE9C,OADA5L,EAAIsD,IAAM,SAASoR,IAAaU,MAAYxJ,aAAkB8I,IAAaoE,IACpE9Y,GAGR,MAAM+Y,WAAiBnT,GAC1BzM,YAAYiZ,EAAK3H,GACb/I,MAAM0Q,GAAK,GACXna,KAAKwS,EAAIA,EAEb8H,WAAW3P,GACP,IAAIU,EAAMrL,KAAKwS,EAAExR,MACjB,MAAM+G,EAAM,IAAI4R,GAEhB,OADA5R,EAAIsD,IAAM,IAAIR,EAASQ,GAChBtD,EAEXmT,UAAUzG,GACN,OAAO,IAAIqF,GAAc9Z,KAAKwS,EAAExR,MAAM+P,YAE1CmJ,UAAUzF,GACN,OAAO,IAAIqF,GAAc9Z,KAAKwS,EAAExR,MAAM+P,aAGvC,MAAMgQ,WAAiBpT,GAC1BzM,YAAYiZ,EAAK3H,GACb/I,MAAM0Q,GAAK,GACXna,KAAKwS,EAAIA,EAEb8H,WAAW3P,GACP,IAAIU,EAAMrL,KAAKwS,EAAExR,MACjB,MAAM+G,EAAM,IAAI4R,GAEhB,OADA5R,EAAIsD,IAAM,IAAI1B,EAAS0B,GAChBtD,EAEXmT,UAAUzG,GACN,OAAO,IAAIqF,GAAc,IAAI9Z,KAAKwS,EAAExR,UAExCkZ,UAAUzF,GACN,OAAO,IAAIqF,GAAc,IAAI9Z,KAAKwS,EAAExR,WAGrC,MAAMggB,WAAmBrT,GAC5BzM,YAAYsR,GACR/I,MAAM+I,EAAE2H,KAAK,GACbna,KAAKwS,EAAIA,EAEb8H,WAAW3P,GACP,IAAKA,EAAQsJ,IAAIjU,KAAKwS,EAAExR,OACpB,OAAO,IAAIwX,GAAexY,KAAKwS,EAAE2H,IAAKna,KAAKwS,EAAExR,OAEjD,IAAI+G,EAAM,IAAI4R,GACVjL,EAAS/D,EAAQsO,UAAUjZ,KAAKwS,EAAExR,OACtC,OAAK0N,EAGDA,aAAkBlF,GACXkF,GAEX3G,EAAIsD,IAAMqD,EAAO1N,MACV+G,GANI,IAAIyQ,GAAexY,KAAKma,IAAK,oCAAoCna,KAAKwS,EAAExR,SAQvFka,UAAUzG,GACN,IAAIpJ,EAAMrL,KAAKwS,EAAExR,MAAM+P,WAIvB,MAHY,WAAR1F,IACAA,EAAM,WAEH,IAAIyO,GAAczO,GAE7B6O,UAAUzF,GACN,IAAIpJ,EAAMrL,KAAKwS,EAAExR,MAAM+P,WAIvB,MAHY,WAAR1F,IACAA,EAAM,WAEH,IAAIyO,GAAczO,IAG1B,MAAM4V,WAAoBtT,GAC7BzM,YAAYiZ,EAAMlZ,EAAA,MACdwI,MAAM0Q,GAAK,GAEfG,WAAW3P,GACP,MAAM5C,EAAM,IAAI4R,GAEhB,OADA5R,EAAIsD,IAAM,IAAIZ,EACP1C,EAEXmT,UAAUzG,GACN,OAAO,IAAIqF,GAAc,aAE7BI,UAAUzF,GACN,OAAO,IAAIqF,GAAc,SAG1B,MAAMoH,WAAgBvT,GACzBzM,YAAYiZ,GACR1Q,MAAM0Q,GAAK,GAEfG,WAAW3P,GACP,MAAM5C,EAAM,IAAI4R,GAEhB,OADA5R,EAAI6R,aAAc,EACX7R,EAEXmT,UAAUzG,GACN,OAAO,IAAIqF,GAAc,SAE7BI,UAAUzF,GACN,OAAO,IAAIqF,GAAc,UAG1B,MAAMqH,WAAmBxT,GAC5BzM,YAAYiZ,GACR1Q,MAAM0Q,GAAK,GAEfG,WAAW3P,GACP,MAAM5C,EAAM,IAAI4R,GAEhB,OADA5R,EAAI8R,gBAAiB,EACd9R,EAEXmT,UAAUzG,GACN,OAAO,IAAIqF,GAAc,YAE7BI,UAAUzF,GACN,OAAO,IAAIqF,GAAc,aAG1B,MAAMgC,WAA2BnO,GACpCzM,YAAYmK,EAAK8O,EAAMlZ,EAAA,MACnBwI,MAAM0Q,GAAK,GACXna,KAAKgB,MAAQqK,EAEjBiP,WAAW3P,GACP,OAAO,IAAIgP,GAAgB3Z,KAAKgB,OAEpCka,UAAUzG,GACN,OAAO,IAAIqF,GAAc/K,KAAKC,UAAUhP,KAAKgB,MAAMqG,YAEvD6S,UAAUzF,GACN,OAAO,IAAIqF,GAAc/K,KAAKC,UAAUhP,KAAKgB,MAAMqG,aC51CpD,SAASkS,GAAU9Y,EAAK2gB,EAAO,IAAIC,SACtC,IAAIvd,EACJ,GAAIzD,OAAOI,KAASA,GAAOA,aAAe6gB,SACtC,OAAO7gB,EAEX,GAAI2gB,EAAKnN,IAAIxT,GACT,OAAO2gB,EAAK5gB,IAAIC,GAEpB,IACIqD,EAAS,IAAIrD,EAAIS,YAErB,MAAOmC,GACHS,EAASzD,OAAOkhB,OAAOlhB,OAAOmhB,eAAe/gB,IASjD,OAPIA,aAAeghB,IACf3V,MAAM4V,KAAKjhB,GAAK,EAAEN,EAAKkL,KAASvH,EAAOoQ,IAAIqF,GAAUpZ,EAAKihB,GAAO7H,GAAUlO,EAAK+V,MAE3E3gB,aAAekhB,KACpB7V,MAAM4V,KAAKjhB,GAAMN,GAAQ2D,EAAO8d,IAAIrI,GAAUpZ,EAAKihB,MAEvDA,EAAKlN,IAAIzT,EAAKqD,GACPzD,OAAO6H,OAAOpE,KAAWzD,OAAOmL,KAAK/K,GAAKuJ,KAAI7J,IAAO,CAAG,CAACA,GAAMoZ,GAAU9Y,EAAIN,GAAMihB,QAEvF,SAAS1f,GAAI2J,EAAKwW,EAAQ,GAC7B,GAAmB,iBAARxW,EACP,OAAIwW,EAAQ,EACD,IAAIxW,KAERA,EAEX,GAAIwW,EAAQ,GACR,MAAO,MAEX,IAAI/d,EAAS,GACb,QAAmB,IAARuH,EACP,MAAO,YAEX,GAAIA,aAAezE,EACf,OAAOyE,EAAI3J,MAAM2F,UAErB,GAAIgE,aAAesC,GACf,MAAO,iBAAiBtC,EAAInK,YAAY0I,QAE5C,cAAeyB,GACX,IAAK,SACD,GAAIS,MAAMC,QAAQV,GAAM,CACpBvH,GAAU,IACV,IAAK,IAAIua,KAAQhT,EACb,IACIvH,GAAUpC,GAAI2c,EAAMwD,EAAQ,GAAK,KAErC,MAAOxe,GACHS,GAAU,qBAGduH,EAAIC,SACJxH,EAASA,EAAOoR,UAAU,EAAGpR,EAAOwH,OAAS,IAEjDxH,GAAU,QAET,CACD,IACIA,GAAUuH,EAAInK,YAAY0I,KAE9B,MAAOvG,GACHS,GAAU,sBAEdA,GAAU,QACV,IAAIsJ,EAAI,EACR,IAAK,IAAIiR,KAAQhT,EACb+B,IACK/B,EAAIzK,gBAAmByK,EAAIzK,eAAeyd,KAG/Cva,GAAU,KAAKua,MAAS3c,GAAI2J,EAAIgT,GAAOwD,EAAQ,IAAM,UAErDzU,EAAI,IACJtJ,EAASA,EAAOoR,UAAU,EAAGpR,EAAOwH,OAAS,IAEjDxH,GAAU,QAEd,MACJ,IAAK,SACDA,EAAS,IAAIuH,KACb,MACJ,IAAK,SACL,IAAK,SACL,IAAK,UACDvH,EAAS,GAAGuH,IACZ,MACJ,IAAK,YACDvH,EAAS,oBACT,MACJ,IAAK,WACDA,EAAS,mBAAmBuH,EAAIzB,QAGxC,IAAK,IAAIwD,EAAI,EAAGA,EAAIyU,EAAOzU,IACvBtJ,EAAS6P,GAAO7P,GACpB,OAAOA,EAEJ,MAAMwQ,GAASwN,GAAO,IAAIve,SAAQC,GAAWue,YAAW,IAAMve,KAAWse,KACzE,SAASnO,GAAOjS,GACnB,OAAOA,EAAIsgB,QAAQ,MAAO,UAEvB,SAASxC,GAAqBrG,EAAS7N,EAAS,IACnD,MAAM2W,EAAa,wDACbC,EAAM,KACR,IAAIpe,EAAS,GACb,IAAK,IAAIsJ,EAAI,EAAGA,EAAI9B,EAAQ8B,IACxBtJ,GAAUme,EAAWE,OAAOhV,KAAKiV,MAAMjV,KAAKkV,SAAWJ,EAAW3W,SAEtE,OAAOxH,GAEX,IAAI4K,EAASwT,IACb,MAAoC,IAA7B/I,EAAQnN,QAAQ0C,IACnBA,EAASwT,IAEb,OAAOxT,ECpHJ,MAAMlF,GACTtI,YAAYiZ,EAAKvQ,EAAMC,GACnB7J,KAAK+J,UAAY,GACjB/J,KAAKma,IAAMA,EACXna,KAAK4J,KAAOA,EACZ5J,KAAK6J,QAAUA,EAEfyY,kBACA,IAAI5O,EAAM,GACV,GAAI1T,KAAK+J,UAAUuB,OAAQ,CACvBoI,EAAM,SAAa,8CACnB,IAAK,IAAIyG,IAAO,IAAIna,KAAK+J,WAAWwY,UAChC7O,GAAO,OAAO,OAAWyG,EAAIjQ,SAASxI,kBAAkByY,EAAIhQ,SAGpE,OADAuJ,GAAO,GAAG,MAAU1T,KAAK4J,UAAU5J,KAAK6J,iBAAiB,OAAW7J,KAAKma,IAAIzY,OACtEgS,EAEPhS,UACA,MAAO,GAAG1B,KAAK4J,SAAS5J,KAAK6J,iBAAiB7J,KAAKma,IAAIzY,OAGxD,MAAM8gB,WAAyBhZ,GAClCtI,YAAYiZ,EAAKpE,GACbtM,MAAM0Q,EAAK,mBAAoB,IAAIpE,OAGpC,MAAMkF,WAA2BzR,GACpCtI,YAAYiZ,EAAKtQ,GACbJ,MAAM0Q,EAAK,qBAAsBtQ,IAGlC,MAAM4Y,WAA0BjZ,GACnCtI,YAAYiZ,EAAKpE,GACbtM,MAAM0Q,EAAK,oBAAqB,IAAIpE,OAGrC,MAAM9N,WAAkBuB,GAC3BtI,YAAYiZ,EAAKuI,EAAcC,EAAY3hB,EAAQ,GAAI8G,EAAS,IAC5D2B,MAAM0Q,EAAK,YAAa,kBAAkBuI,iBAA4BC,WAAgC,IAAV3hB,EAAwB,GAAK,cAAcU,GAAIV,SAAc8G,GAAS,OAGnK,MAAMqP,WAAoB3N,GAC7BtI,YAAYiZ,EAAKrD,EAAKhP,EAAS,IAC3B2B,MAAM0Q,EAAK,cAAe,oBAAoBrD,MAAQhP,MAGvD,MAAM0Q,WAAuBhP,GAChCtI,YAAYiZ,EAAKyI,GACbnZ,MAAM0Q,EAAK,iBAAkB,GAAGyI,qBAGjC,MAAMxY,WAAmBZ,GAC5BtI,YAAYiZ,EAAKyI,EAAK3X,GAClB,IAAI2B,EACJnD,MAAM0Q,EAAK,aAAc,IAAIyI,6BAAsG,QAAtEhW,EAAK3B,MAAAA,OAAuC,EAASA,EAAOtD,YAAyB,IAAPiF,OAAgB,EAASA,EAAGhD,OAASlI,GAAIuJ,QAGrL,MAAM5C,WAA8BmB,GACvCtI,YAAYma,EAAIra,EAAO8G,EAAS,GAAIqS,EAAMlZ,EAAA,MACtC,IAAI2L,EACJnD,MAAM0Q,EAAK,YAAa,mBAAmBkB,gBAAqF,QAAnEzO,EAAK5L,MAAAA,OAAqC,EAASA,EAAM2G,YAAyB,IAAPiF,OAAgB,EAASA,EAAGhD,OAASlI,GAAIV,OAAW8G,MAG7L,MAAMsQ,WAA4B5O,GACrCtI,cACIuI,MAAMxI,EAAA,KAAe,sBAAuB,wBAAuBkB,EAAmB,UAAY,UAGnG,MAAM0gB,WAAmBrZ,GAC5BtI,YAAY4G,GACR2B,MAAMxI,EAAA,KAAe,aAAc6G,IAGpC,MAAMqQ,WAAgC3O,GACzCtI,YAAY4G,GACR2B,MAAMxI,EAAA,KAAe,0BAA2B6G,IC/EjD,MAAMgb,GACT5hB,YAAYiZ,EAAKtT,EAAM7F,GACnBhB,KAAK6G,KAAOA,EACZ7G,KAAKgB,MAAQA,EACbhB,KAAKma,IAAMA,EAEf4I,QAAQlc,EAAMwE,GACV,OAAOrL,KAAK6G,OAASA,GAAQ7G,KAAKgB,QAAUqK,GCH7C,MAAM2X,GACT9hB,YAAY+hB,EAASC,GACjBljB,KAAKgX,KAAOiM,EACZjjB,KAAKkK,SAAW,IAAIjJ,GAAU,EAAG,GAAI,EAAGiiB,GACxCljB,KAAKuB,UAETA,UACIvB,KAAKkK,SAAS3I,QAAQvB,KAAKwB,aAC3BxB,KAAKwB,YAAcxB,KAAKgX,KAAKhX,KAAKkK,SAAS/I,KAE/CgiB,WACI,IAAKnjB,KAAKgX,KACN,MAAO,CAAC,IAAI8L,GAAM9iB,KAAKkK,SAAU/F,EAAGgC,SAAKuE,IAE7C,MAAM0Y,EAAS,GACf,UAA4B1Y,IAArB1K,KAAKwB,aACR,GAAI,QAAQgU,SAASxV,KAAKwB,aACtBxB,KAAKuB,eAEJ,GAAIM,EAAO2T,SAASxV,KAAKwB,aAC1B4hB,EAAOpV,KAAKhO,KAAKqjB,mBAEhB,GAAIrjB,KAAKwB,cnCdO,KmCc2B,IAC5CxB,KAAKgX,KAAKhX,KAAKkK,SAAS/I,IAAM,KnCfb,KmCesC,GACvDnB,KAAKsjB,yBAEJ,GAAItjB,KAAKwB,cnCjBW,KmCiB2B,IAChDxB,KAAKgX,KAAKhX,KAAKkK,SAAS/I,IAAM,KnClBT,KmCkBsC,GAC3DnB,KAAKujB,wBAEJ,GAAIzhB,EAAgB0T,SAASxV,KAAKwB,aACnC4hB,EAAOpV,KAAKhO,KAAKwjB,uBAEhB,IAAmD,IAA/CthB,EAAgB8J,QAAQhM,KAAKwB,aAClC4hB,EAAOpV,KAAKhO,KAAKyjB,kBAEhB,CACD,MAAMC,EAA0B1jB,KAAKwB,YACrC,IAAImiB,EAAQ3jB,KAAK4jB,cACjB,IAAID,EAMC,CACD,IAAIxJ,EAAMna,KAAKkK,SAASzI,MACpBsU,EAAO/V,KAAKwB,YAEhB,OADAxB,KAAKuB,UACE,IAAIihB,GAAiBrI,EAAKpE,GAT7B4N,EAAM9c,OAAS1C,EAAGc,SAClB0e,EAAM3iB,MAAQ0iB,GAElBN,EAAOpV,KAAK2V,GAWxB,OADAP,EAAOpV,KAAK,IAAI8U,GAAM9iB,KAAKkK,SAAU/F,EAAGgC,SAAKuE,IACtC0Y,EAEXC,aACI,MAAMlJ,EAAMna,KAAKkK,SAASzI,MAC1B,IAAIoiB,EAAS,GACTC,EAAW,EACf,UAA4BpZ,IAArB1K,KAAKwB,cAA8BK,EAAS,MAAM2T,SAASxV,KAAKwB,cAAc,CACjF,GAAyB,MAArBxB,KAAKwB,YAAqB,CAC1B,GAAiB,IAAbsiB,EACA,MAEJA,IACAD,GAAU,QAEgB,MAArB7jB,KAAKwB,cACVqiB,GAAU7jB,KAAKwB,aAEnBxB,KAAKuB,UAET,OAAO,IAAIuhB,GAAM3I,EAAKhW,EAAGE,OAAQoN,WAAWoS,IAEhDJ,aACI,MAAMtJ,EAAMna,KAAKkK,SAASzI,MAC1B,IAAIC,EAAM,GACNqiB,EAAW/jB,KAAKwB,YAEpB,IADAxB,KAAKuB,UACEvB,KAAKwB,cAAgBuiB,QAAiCrZ,IAArB1K,KAAKwB,aAChB,OAArBxB,KAAKwB,cACLxB,KAAKuB,UACoB,MAArBvB,KAAKwB,cAMbE,GAAO1B,KAAKwB,YACZxB,KAAKuB,YANGG,GAAO,KACP1B,KAAKuB,WAQjB,OADAvB,KAAKuB,UACE,IAAIuhB,GAAM3I,EAAKhW,EAAGG,OAAQ5C,GAErC8hB,iBACI,IAAIQ,EAAQ,GACZ,MAAMC,EAAWjkB,KAAKkK,SAASzI,MAC/B,UAA4BiJ,IAArB1K,KAAKwB,cAA8BM,EAAkBD,GAAQ2T,SAASxV,KAAKwB,cAC9EwiB,GAAShkB,KAAKwB,YACdxB,KAAKuB,UAET,IAAI2iB,EAAU/f,EAAGK,WAIjB,OAHiC,IAA7B3B,EAASmJ,QAAQgY,KACjBE,EAAU/f,EAAGM,SAEV,IAAIqe,GAAMmB,EAAUC,EAASF,GAExCJ,cACI,QAAyBlZ,IAArB1K,KAAKwB,YAAT,CAGA,IAAK,IAAI2iB,KAAU1d,EACf,GAAI0d,EAAO,KAAOnkB,KAAKwB,aACf2iB,EAAO,KAAOnkB,KAAKgX,KAAKhX,KAAKkK,SAAS/I,IAAM,IACxCgjB,EAAO,KAAOnkB,KAAKgX,KAAKhX,KAAKkK,SAAS/I,IAAM,GAAI,CAChD,MAAMgZ,EAAMna,KAAKkK,SAASzI,MAI1B,OAHAzB,KAAKuB,UACLvB,KAAKuB,UACLvB,KAAKuB,UACE,IAAIuhB,GAAM3I,EAAK1T,EAAiB0d,QAASzZ,GAGhE,IAAK,IAAI0Z,KAAU5d,EACf,GAAI4d,EAAO,KAAOpkB,KAAKwB,aACf4iB,EAAO,KAAOpkB,KAAKgX,KAAKhX,KAAKkK,SAAS/I,IAAM,GAAI,CAChD,MAAMgZ,EAAMna,KAAKkK,SAASzI,MAG1B,OAFAzB,KAAKuB,UACLvB,KAAKuB,UACE,IAAIuhB,GAAM3I,EAAK3T,EAAiB4d,QAAS1Z,GAG5D,GAAInE,EAAiB3F,eAAeZ,KAAKwB,aAAc,CACnD,IAAI2Y,EAAMna,KAAKkK,SAASzI,MACpB4J,EAAM9E,EAAiBvG,KAAKwB,aAEhC,OADAxB,KAAKuB,UACE,IAAIuhB,GAAM3I,EAAK9O,OAAKX,KAInC4Y,oBAEI,IADAtjB,KAAKuB,UACuB,OAArBvB,KAAKwB,kBAA6CkJ,IAArB1K,KAAKwB,aACrCxB,KAAKuB,UAETvB,KAAKuB,UAETgiB,mBAEI,IADAvjB,KAAKuB,UACIvB,KAAKwB,cnC3Ia,KmC2IuB,IAC9CxB,KAAKgX,KAAKhX,KAAKkK,SAAS/I,IAAM,KnC5IP,KmC4IkC,IACzDnB,KAAKuB,UAETvB,KAAKuB,UACLvB,KAAKuB,WCzJN,MAAM8iB,GACTnjB,cACIlB,KAAKskB,aAAe,EACpBtkB,KAAKukB,2BAA6B,EAClCvkB,KAAKwkB,aAAe,EAExBC,kBACIzkB,KAAKskB,aAAe,EACpBtkB,KAAKukB,6BAETvK,SAASjS,GAML,OALA/H,KAAKukB,2BAA6Bxc,EAAIuc,aACtCtkB,KAAKskB,cAAgBvc,EAAIuc,aACrBvc,EAAIwB,QACJvJ,KAAKuJ,MAAQxB,EAAIwB,OAEhBxB,EAAIkS,KAGFlS,EAAIkS,KAFA,IAAIgH,GAInByD,YAAY3c,GACR,IAAIA,EAAIwB,MAIR,OAAOvJ,KAAKga,SAASjS,GAHjB/H,KAAKwkB,cAAgBzc,EAAIuc,aAKjCK,QAAQ1K,GAEJ,OADAja,KAAKia,KAAOA,EACLja,KAEX4kB,QAAQrb,GAEJ,OADAvJ,KAAKuJ,MAAQA,EACNvJ,MAGR,MAAM6kB,GACT3jB,YAAYkiB,GACRpjB,KAAKojB,OAASA,EACdpjB,KAAK8kB,UAAY,EACjB9kB,KAAK+kB,aAAe3B,EAAO,GAC3BpjB,KAAKuB,UAETgT,QACI,IAAI3H,EACJ,IAAK5M,KAAK+kB,eAAiB/kB,KAAKojB,QAAkC,IAAvBpjB,KAAKojB,OAAO9X,QAAgBtL,KAAKojB,OAAO,GAAGvc,OAAS1C,EAAGgC,IAC9F,OAAO,IAAIke,GAEf,MAAMtc,EAAM/H,KAAK0gB,YAAW,GAC5B,OAAK3Y,EAAIwB,OAASvJ,KAAK+kB,aAAale,OAAS3C,EAAUiC,IAGhD4B,EAFIA,EAAI6c,QAAQ,IAAI3J,GAAgD,QAA5BrO,EAAK5M,KAAK+kB,oBAAiC,IAAPnY,OAAgB,EAASA,EAAGuN,IAAK,8CAA8C/V,EAAgBpE,KAAK+kB,aAAale,WAIxMtF,QAAQwG,GAKJ,OAJIA,GACAA,EAAI0c,kBACRzkB,KAAK8kB,WACL9kB,KAAK+kB,aAAe/kB,KAAKojB,OAAOpjB,KAAK8kB,UAC9B9kB,KAAK+kB,aAEhBxC,QAAQyC,EAAS,GAGb,OAFAhlB,KAAK8kB,UAAYE,EACjBhlB,KAAK+kB,aAAe/kB,KAAKojB,OAAOpjB,KAAK8kB,UAC9B9kB,KAAK+kB,aAEhBE,QAAQld,EAAKlB,EAAMqe,GACf,GAAIllB,KAAK+kB,aAAale,OAASA,EAC3B,OAAOkB,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK+K,MAAAA,EAA2CA,EAAW,aAAa9gB,EAAgByC,gBAAmBzC,EAAgBpE,KAAK+kB,aAAale,WAC7M7G,KAAKuB,QAAQwG,GAEjBod,mBAAmBpd,GACf,KAAO/H,KAAK+kB,aAAale,OAAS1C,EAAGI,cACjCvE,KAAKuB,QAAQwG,GAGrB2Y,WAAW/B,GAAW,GAClB,MAAM5W,EAAM,IAAIsc,GACVlK,EAAMna,KAAK+kB,aAAa5K,IAC9B,IAAIuG,EAAa,GACjB1gB,KAAKmlB,mBAAmBpd,GACxB,MAAMqd,EAAiBrd,EAAIiS,SAASha,KAAKqlB,aACzC,IAAKD,EACD,OAAOrd,EAGX,GADA2Y,EAAW1S,KAAKoX,GACZrd,EAAIwB,MACJ,OAAOxB,EAEX,IAAIud,GAAiB,EACrB,OAAa,CACT,IAAIC,EAAe,EACnB,KAAOvlB,KAAK+kB,aAAale,OAAS1C,EAAGI,cACjCvE,KAAKuB,QAAQwG,GACbwd,IAKJ,GAHqB,IAAjBA,IACAD,GAAiB,IAEhBA,EACD,MAEJ,MAAMD,EAAYtd,EAAI2c,YAAY1kB,KAAKqlB,aAClCA,EAIL3E,EAAW1S,KAAKqX,GAHZrlB,KAAKuiB,QAAQxa,EAAIyc,cAKzBxkB,KAAKmlB,mBAAmBpd,GACxB,IAAIkS,EAAO,IAAI,GAAeE,EAAKuG,EAAY/B,GAC/C,OAAO5W,EAAI4c,QAAQ1K,GAEvBoL,YACI,MAAMtd,EAAM,IAAIsc,GACVlK,EAAMna,KAAK+kB,aAAa5K,IAC9B,GAAIna,KAAK+kB,aAAahC,QAAQ5e,EAAGM,QAAS,UACtC,OAAOzE,KAAKwlB,gBAAgBzd,GAE3B,GAAI/H,KAAK+kB,aAAahC,QAAQ5e,EAAGM,QAAS,SAC3C,OAAOzE,KAAKwlB,gBAAgBzd,GAAK,GAEhC,GAAI/H,KAAK+kB,aAAahC,QAAQ5e,EAAGM,QAAS,SAE3C,OADAzE,KAAKuB,QAAQwG,GACNA,EAAI4c,QAAQ,IAAI,GAAUxK,IAEhC,GAAIna,KAAK+kB,aAAahC,QAAQ5e,EAAGM,QAAS,YAE3C,OADAzE,KAAKuB,QAAQwG,GACNA,EAAI4c,QAAQ,IAAI,GAAaxK,IAEnC,GAAIna,KAAK+kB,aAAahC,QAAQ5e,EAAGM,QAAS,OAC3C,OAAOzE,KAAKylB,WAEhB,MAAMC,EAAO3d,EAAIiS,SAASha,KAAK0lB,QAC/B,OAAI3d,EAAIwB,MACGxB,EAEJA,EAAI4c,QAAQe,GAEvBF,gBAAgBzd,EAAK4d,GAAU,GAC3B,MAAMxL,EAAMna,KAAK+kB,aAAa5K,IAC9Bna,KAAKuB,QAAQwG,GACb,IAAI2d,EAAO,IAAIzE,GAAYjhB,KAAK+kB,aAAa5K,KAC7C,GAAIna,KAAK+kB,aAAale,OAAS1C,EAAGI,aAAc,CAC5C,IAAIqhB,EAAU7d,EAAIiS,SAASha,KAAK0lB,QAChC,IAAKE,EACD,OAAO7d,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,8BAErEuL,EAAOE,EAEX,OAAID,EACO5d,EAAI4c,QAAQ,IAAI,GAAUxK,EAAKuL,IAEnC3d,EAAI4c,QAAQ,IAAI,GAAWxK,EAAKuL,IAE3CG,OACI,MAAM9d,EAAM,IAAIsc,GACVyB,EAAM9lB,KAAK+kB,aACX5K,EAAMna,KAAK+kB,aAAa5K,IAC9B,OAAQ2L,EAAIjf,MACR,KAAK1C,EAAGE,OAEJ,OADArE,KAAKuB,QAAQwG,GACNA,EAAI4c,QAAQ,IAAI,GAAWxK,EAAK2L,IAC3C,KAAK3hB,EAAGG,OAEJ,OADAtE,KAAKuB,QAAQwG,GACNA,EAAI4c,QAAQ,IAAI,GAAWxK,EAAK2L,IAC3C,KAAK3hB,EAAGK,WACJ,OAAOxE,KAAK+lB,eAAehe,EAAKoS,EAAK2L,GACzC,KAAK3hB,EAAGU,OACJ7E,KAAKuB,QAAQwG,GACb,MAAM2d,EAAO3d,EAAIiS,SAASha,KAAK0lB,QAC/B,OAAI3d,EAAIwB,MACGxB,EACP/H,KAAK+kB,aAAale,OAAS1C,EAAGW,QAC9B9E,KAAKuB,QAAQwG,GACNA,EAAI4c,QAAQe,IAEhB3d,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,iBACrE,KAAKhW,EAAGY,QACJ,IAAIihB,EAAYje,EAAIiS,SAASha,KAAK+K,SAClC,OAAIhD,EAAIwB,MACGxB,EACJA,EAAI4c,QAAQqB,GACvB,KAAK7hB,EAAGQ,QACJ,IAAIshB,EAAale,EAAIiS,SAASha,KAAKiL,UACnC,OAAIlD,EAAIwB,MACGxB,EACJA,EAAI4c,QAAQsB,GACvB,KAAK9hB,EAAGM,QACJ,GAAkB,OAAdqhB,EAAI9kB,MAAgB,CACpB,MAAM0kB,EAAO3d,EAAIiS,SAASha,KAAKkmB,UAC/B,OAAIne,EAAIwB,MACGxB,EACJA,EAAI4c,QAAQe,GAEvB,OAAO3d,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,sBAAsB2L,EAAI9kB,UAC/F,QACI,OAAO+G,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,kDAG7E4L,eAAehe,EAAKoS,EAAK2L,GACrB9lB,KAAKuB,QAAQwG,GACb,IAAIkS,EAAO,IAAI,GAAa6L,GACxBK,EAAW,IAAI,GAAchM,GAC7BiM,GAAe,EACnB,MAA4E,IAArE,CAACjiB,EAAGU,OAAQV,EAAGY,QAASZ,EAAG+B,KAAK8F,QAAQhM,KAAK+kB,aAAale,OAC7D,OAAQ7G,KAAK+kB,aAAale,MACtB,KAAK1C,EAAGU,OACJuhB,GAAe,EACf,MAAMC,EAAWpM,EAGjB,GAFAA,EAAOlS,EAAIiS,SAASha,KAAKsmB,iBAAiBrM,IAC1CkM,EAAWE,EACPte,EAAIwB,MACJ,OAAOxB,EACX,MACJ,KAAK5D,EAAGY,QAGJ,GAFAohB,EAAWlM,EACXA,EAAOlS,EAAIiS,SAASha,KAAKumB,UAAUtM,IAC/BlS,EAAIwB,MACJ,OAAOxB,EACX,MACJ,KAAK5D,EAAG+B,IAEJ,GADAlG,KAAKuB,QAAQwG,GACT/H,KAAK+kB,aAAale,OAAS1C,EAAGK,WAC9B,OAAOuD,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,kCAErEgM,EAAWlM,EACXA,EAAO,IAAI,GAAYja,KAAK+kB,aAAa5K,IAAKF,EAAM,IAAI,GAAWja,KAAK+kB,aAAa5K,IAAKna,KAAK+kB,eAC/F/kB,KAAKuB,QAAQwG,GAGzB,GAAI/H,KAAK+kB,aAAale,OAAS1C,EAAGc,OAAQ,CACtC,IAAI0W,EAAa3b,KAAK+kB,aAAa/jB,MACnC,GAAIolB,EACA,OAAOre,EAAI6c,QAAQ,IAAI3J,GAAmBd,EAAK,8CAEnDna,KAAKuB,QAAQwG,GACb,MAAM/G,EAAQ+G,EAAIiS,SAASha,KAAK0lB,QAChC,GAAIzL,aAAgB,GAChBA,EAAO,IAAI,GAAcE,EAAKF,EAAKzH,EAAGxR,EAAO2a,GAAY,OAExD,MAAI1B,aAAgB,IAKrB,OAAOlS,EAAI6c,QAAQ,IAAI3J,GAAmBd,EAAK,4BAA4Bna,KAAK+kB,aAAa7jB,YAAY0I,+EAJzGqQ,EAAKjZ,MAAQA,EACbiZ,EAAK0B,WAAaA,EAMtB,GAAI5T,EAAIwB,MACJ,OAAOxB,EAEf,OAAOA,EAAI4c,QAAQ1K,GAEvBuM,QACI,OAAOxmB,KAAKymB,OAAM,IAAMzmB,KAAK6lB,QAAQ,CAAC1hB,EAAGmB,IAAKnB,EAAGoB,IAAKpB,EAAGiC,UAAWjC,EAAGkC,OAAO,IAAMrG,KAAK0mB,WAE7FA,SACI,MAAM3e,EAAM,IAAIsc,GACVyB,EAAM9lB,KAAK+kB,aACjB,GAAIe,EAAIjf,OAAS1C,EAAGe,KAAO4gB,EAAIjf,OAAS1C,EAAGgB,KAAO2gB,EAAIjf,OAAS1C,EAAGmC,YAAa,CAC3EtG,KAAKuB,QAAQwG,GACb,MAAM2e,EAAS3e,EAAIiS,SAASha,KAAK0mB,UACjC,OAAI3e,EAAIwB,MACGxB,EACJA,EAAI4c,QAAQ,IAAI,GAAYmB,EAAI3L,IAAKuM,EAAQZ,IAExD,OAAO9lB,KAAKwmB,QAEhBG,OACI,OAAO3mB,KAAKymB,OAAM,IAAMzmB,KAAK0mB,UAAU,CAACviB,EAAGiB,IAAKjB,EAAGkB,MAEvDuhB,iBACI,OAAO5mB,KAAKymB,OAAM,IAAMzmB,KAAK2mB,QAAQ,CAACxiB,EAAGe,IAAKf,EAAGgB,MAErD0hB,iBACI,MAAM9e,EAAM,IAAIsc,GAChB,GAAIrkB,KAAK+kB,aAAale,OAAS1C,EAAGuB,IAAK,CACnC,MAAMiV,EAAQ3a,KAAK+kB,aACnB/kB,KAAKuB,QAAQwG,GACb,IAAIkS,EAAOlS,EAAIiS,SAASha,KAAK0lB,QAC7B,OAAI3d,EAAIwB,MACGxB,EACJA,EAAI4c,QAAQ,IAAI,GAAYhK,EAAMR,IAAKF,EAAMU,IAExD,GAAI3a,KAAK+kB,aAAale,OAAS1C,EAAGmC,YAAa,CAC3C,MAAMqU,EAAQ3a,KAAK+kB,aACnB/kB,KAAKuB,QAAQwG,GACb,IAAIkS,EAAOlS,EAAIiS,SAASha,KAAK0lB,QAC7B,OAAI3d,EAAIwB,MACGxB,EACJA,EAAI4c,QAAQ,IAAI,GAAYhK,EAAMR,IAAKF,EAAMU,IAExD,IAAIV,EAAOlS,EAAIiS,SAASha,KAAKymB,OAAM,IAAMzmB,KAAK4mB,kBAAkB,CAACziB,EAAGqB,OAAQrB,EAAGsB,UAAWtB,EAAGwB,GAAIxB,EAAG0B,IAAK1B,EAAG2B,IAAK3B,EAAGyB,MACpH,OAAImC,EAAIwB,MACGxB,EACJA,EAAI4c,QAAQ1K,GAEvByL,OACI,MAAM3d,EAAM,IAAIsc,GAEhB,GADArkB,KAAKmlB,mBAAmBpd,GACpB/H,KAAK+kB,aAAale,OAAS1C,EAAGM,UAAsE,IAA3DnC,EAAqB0J,QAAQhM,KAAK+kB,aAAa/jB,OACxF,OAAOhB,KAAK8mB,YAAY/e,GAEvB,GAAI/H,KAAK+kB,aAAahC,QAAQ7e,EAAUO,QAAS,MAClD,OAAOzE,KAAKkmB,SAEX,GAAIlmB,KAAK+kB,aAAahC,QAAQ7e,EAAUO,QAAS,SAClD,OAAOzE,KAAK+mB,YAEX,GAAI/mB,KAAK+kB,aAAahC,QAAQ7e,EAAUO,QAAS,OAClD,OAAOzE,KAAKgnB,UAEX,GAAIhnB,KAAK+kB,aAAahC,QAAQ7e,EAAUO,QAAS,QAClD,OAAOzE,KAAKinB,WAEX,GAAIjnB,KAAK+kB,aAAahC,QAAQ7e,EAAUO,QAAS,SAClD,OAAOzE,KAAKknB,YAEX,GAAIlnB,KAAK+kB,aAAahC,QAAQ7e,EAAUO,QAAS,aAClD,OAAOzE,KAAKmnB,YAEhB,IAAIlN,EAAOlS,EAAIiS,SAASha,KAAKymB,OAAM,IAAMzmB,KAAK6mB,kBAAkB,CAAC1iB,EAAG4B,IAAK5B,EAAG6B,MAC5E,OAAI+B,EAAIwB,MACGxB,EACJA,EAAI4c,QAAQ1K,GAEvBwM,MAAMra,EAAMgb,EAAKC,EAAQjb,GACrB,MAAMrE,EAAM,IAAIsc,GAChB,IAAI9T,EAAOxI,EAAIiS,SAAS5N,KACxB,GAAIrE,EAAIwB,MACJ,OAAOxB,EACX,MAAgD,IAAzCqf,EAAIpb,QAAQhM,KAAK+kB,aAAale,QACsC,IAApEugB,EAAIpb,QAAQ,CAAChM,KAAK+kB,aAAale,KAAM7G,KAAK+kB,aAAa/jB,SAAgB,CAC1E,MAAM2Z,EAAQ3a,KAAK+kB,aACnB/kB,KAAKuB,QAAQwG,GACb,MAAMyI,EAAQzI,EAAIiS,SAASqN,KAC3B,GAAItf,EAAIwB,MACJ,OAAOxB,EACXwI,EAAO,IAAI,GAAUA,EAAK4J,IAAK5J,EAAMoK,EAAOnK,GAEhD,OAAOzI,EAAI4c,QAAQpU,GAEvB+V,iBAAiBxH,GACb,MAAM/W,EAAM,IAAIsc,GAChB,IAAIlW,EAAO,GACX,MAAMgM,EAAMna,KAAK+kB,aAAa5K,IAC9B,GAAIna,KAAK+kB,aAAale,OAAS1C,EAAGU,OAC9B,OAAOkD,EAAI6c,QAAQ,IAAI3J,GAAmBd,EAAK,iBAGnD,GADAna,KAAKuB,QAAQwG,GACT/H,KAAK+kB,aAAale,OAAS1C,EAAGW,OAE9B,OADA9E,KAAKuB,QAAQwG,GACNA,EAAI4c,QAAQ,IAAI,GAAiBxK,EAAK2E,EAAI,KAGrD,GADA3Q,EAAKH,KAAKjG,EAAIiS,SAASha,KAAK0lB,SACxB3d,EAAIwB,MACJ,OAAOxB,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,qBACrE,KAAOna,KAAK+kB,aAAale,OAAS1C,EAAGO,OAGjC,GAFA1E,KAAKuB,QAAQwG,GACboG,EAAKH,KAAKjG,EAAIiS,SAASha,KAAK0lB,SACxB3d,EAAIwB,MACJ,OAAOxB,EAEf,OAAI/H,KAAK+kB,aAAale,OAAS1C,EAAGW,OACvBiD,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,yBACrEna,KAAKuB,QAAQwG,GACNA,EAAI4c,QAAQ,IAAI,GAAiBxK,EAAK2E,EAAI3Q,KAErDoY,UAAUzH,GACN,MAAM/W,EAAM,IAAIsc,GACVlK,EAAMna,KAAK+kB,aAAa5K,IACxB0F,EAAOf,EACb,GAAI9e,KAAK+kB,aAAale,OAAS1C,EAAGY,QAC9B,OAAOgD,EAAI6c,QAAQ,IAAI3J,GAAmBd,EAAK,gBAEnD,GADAna,KAAKuB,QAAQwG,GACT/H,KAAK+kB,aAAale,OAAS1C,EAAGa,QAC9B,OAAO+C,EAAI6c,QAAQ,IAAI3J,GAAmBd,EAAK,oCAEnD,IAAI2F,EAAQ/X,EAAIiS,SAASha,KAAK0lB,QAC9B,OAAI3d,EAAIwB,MACGxB,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,kBACjEna,KAAK+kB,aAAale,OAAS1C,EAAGa,QACvB+C,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,kBACrEna,KAAKuB,QAAQwG,GACNA,EAAI4c,QAAQ,IAAI,GAAYxK,EAAK0F,EAAMC,KAElDwH,SAASvf,GACL,GAAI/H,KAAK+kB,aAAale,OAAS1C,EAAGK,WAAY,CAC1C,MAAMshB,EAAM9lB,KAAK+kB,aAEjB,OADA/kB,KAAKuB,QAAQwG,GACNA,EAAI4c,QAAQ,IAAI3D,GAAW8E,IAEtC,OAAO9lB,KAAK0lB,OAEhBoB,YAAY/e,GACR,IAAIoS,EAAMna,KAAK+kB,aAAa5K,IACxBoN,GAAU,EACV3L,GAAW,EACXC,GAAgB,EACpB,GAAI7b,KAAK+kB,aAAale,OAAS1C,EAAGM,SACF,WAA5BzE,KAAK+kB,aAAa/jB,QAClB6a,GAAgB,EAChBD,GAAW,EACX5b,KAAKuB,QAAQwG,GACTA,EAAIwB,OACJ,OAAOxB,EAEf,GAAI/H,KAAK+kB,aAAale,OAAS1C,EAAGM,SACF,QAA5BzE,KAAK+kB,aAAa/jB,OAGlB,GAFA6a,GAAgB,EAChB7b,KAAKuB,QAAQwG,GACTA,EAAIwB,MACJ,OAAOxB,OAEV,GAAI/H,KAAK+kB,aAAale,OAAS1C,EAAGM,SACP,QAA5BzE,KAAK+kB,aAAa/jB,QAClB6a,GAAgB,EAChB0L,GAAU,EACVvnB,KAAKuB,QAAQwG,GACTA,EAAIwB,OACJ,OAAOxB,EAEf,GAAI/H,KAAK+kB,aAAale,OAAS1C,EAAGM,QAC9B,OAAOsD,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,8CAA8Cna,KAAK+kB,aAAa/jB,UAErI,GAAIhB,KAAK+kB,aAAale,OAAS3C,EAAUM,WACrC,OAAOuD,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,mCAErE,MAAMqN,EAAUxnB,KAAK+kB,aACrB/kB,KAAKuB,QAAQwG,GACb,IAAIlB,EAAOF,EAAMG,IAMjB,GALI9G,KAAK+kB,aAAale,OAAS1C,EAAG8B,QAC9B4V,GAAgB,EAChB7b,KAAKilB,QAAQld,EAAK5D,EAAG8B,OACrBY,EAAOkB,EAAIiS,SAASha,KAAKsnB,SAASvf,KAElC/H,KAAK+kB,aAAale,OAAS1C,EAAGc,OAC9B,OAAIsiB,EACOxf,EAAI6c,QAAQ,IAAI3J,GAAmBd,EAAK,4CAC5CpS,EAAI4c,QAAQ,IAAI,GAAcxK,EAAKqN,EAAS,IAAI,GAAcxnB,KAAK+kB,aAAa5K,KAAM,IAAKyB,EAAU2L,EAAS1L,EAAehV,IAExI,IAAI8U,EAAa3b,KAAK+kB,aAAa/jB,MACnChB,KAAKuB,QAAQwG,GACb,MAAM2d,EAAO3d,EAAIiS,SAASha,KAAK0lB,QAC/B,OAAI3d,EAAIwB,MACGxB,IAEP2d,aAAgB,IAAaA,aAAgB,MAC7CA,EAAK9b,KAAO4d,EAAQxmB,OAEpB0kB,aAAgBjF,KAChBiF,EAAK9b,KAAO4d,EAAQxmB,MACpB0kB,EAAKlX,SAAW+Y,GAEbxf,EAAI4c,QAAQ,IAAI,GAAcxK,EAAKqN,EAAS9B,EAAM/J,EAAYC,EAAU2L,EAAS1L,EAAehV,KAE3G4gB,YACI,MAAM1f,EAAM,IAAIsc,GAEhB,GADArkB,KAAKilB,QAAQld,EAAK5D,EAAGQ,SACjBoD,EAAIwB,MACJ,OAAOxB,EAGX,GADA/H,KAAKmlB,mBAAmBpd,GACpB/H,KAAK+kB,aAAale,OAAS1C,EAAGS,QAE9B,OADA5E,KAAKuB,QAAQwG,GACNA,EAAI4c,QAAQ,IAAI,GAAc3kB,KAAK+kB,aAAa5K,MAE3D,MAAMuL,EAAO3d,EAAIiS,SAASha,KAAK0gB,cAC/B,OAAI3Y,EAAIwB,MACGxB,GAEX/H,KAAKilB,QAAQld,EAAK5D,EAAGS,SACjBmD,EAAIwB,MACGxB,EAEJA,EAAI4c,QAAQe,IAEvBgC,gBAAgB3f,GACZ/H,KAAKojB,OAAOuE,OAAO3nB,KAAK8kB,SAAU,EAAG,IAAIhC,GAAM9iB,KAAK+kB,aAAa5K,IAAKhW,EAAGI,kBAAcmG,IACvF1K,KAAKuiB,UACLviB,KAAKuB,QAAQwG,GAEjBme,SACI,MAAMne,EAAM,IAAIsc,GAChB,IAAI/H,EACAC,EACAqL,EACJ,MAAMzN,EAAMna,KAAK+kB,aAAa5K,IAC9B,IAAKna,KAAK+kB,aAAahC,QAAQ5e,EAAGM,QAAS,MACvC,OAAOsD,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,kBAGrE,GAFAna,KAAKuB,QAAQwG,GACb6f,EAAY7f,EAAIiS,SAASha,KAAK0lB,QAC1B3d,EAAIwB,MACJ,OAAOxB,EAEX,GADAuU,EAASvU,EAAIiS,SAASha,KAAKynB,aACvB1f,EAAIwB,MACJ,OAAOxB,EAEX,GADA/H,KAAKmlB,mBAAmBpd,GACpB/H,KAAK+kB,aAAahC,QAAQ5e,EAAGM,QAAS,QAEtC,GADAzE,KAAKuB,QAAQwG,GACT/H,KAAK+kB,aAAale,MAAQ1C,EAAGQ,SAE7B,GADA4X,EAAUxU,EAAIiS,SAASha,KAAKynB,aACxB1f,EAAIwB,MACJ,OAAOxB,OAIX,GADAwU,EAAUxU,EAAIiS,SAASha,KAAKqlB,aACxBtd,EAAIwB,MACJ,OAAOxB,EAInB,OADA/H,KAAK0nB,gBAAgB3f,GACdA,EAAI4c,QAAQ,IAAI,GAAOxK,EAAKyN,EAAWtL,EAAQC,IAE1DwK,YACI,MAAMhf,EAAM,IAAIsc,GAChB,IAAItH,EACA6K,EACJ,MAAMzN,EAAMna,KAAK+kB,aAAa5K,IAC9B,OAAKna,KAAK+kB,aAAahC,QAAQ5e,EAAGM,QAAS,UAG3CzE,KAAKuB,QAAQwG,GACb6f,EAAY7f,EAAIiS,SAASha,KAAK0lB,QAC1B3d,EAAIwB,MACGxB,GACXgV,EAAOhV,EAAIiS,SAASha,KAAKynB,aACrB1f,EAAIwB,MACGxB,GACX/H,KAAK0nB,gBAAgB3f,GACdA,EAAI4c,QAAQ,IAAI,GAAUxK,EAAKyN,EAAW7K,OAVtChV,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,qBAYzE0N,UAAU9f,GACN,IAAI6B,EACA/C,EAAO,IAAI,GAAqBF,EAAMG,KAC1C,GAAI9G,KAAK+kB,aAAale,OAAS1C,EAAGK,WAC9B,OAAO,IAAIyW,GAAmBjb,KAAK+kB,aAAa5K,IAAK,uBAIzD,GAFAvQ,EAAO5J,KAAK+kB,aAAa/jB,MACzBhB,KAAKuB,QAAQwG,GACT/H,KAAK+kB,aAAale,OAAS1C,EAAG8B,MAAO,CAErC,GADAjG,KAAKilB,QAAQld,EAAK5D,EAAG8B,OACjB8B,EAAIwB,MACJ,OAAOxB,EAAIwB,MAEf,GADA1C,EAAOkB,EAAIiS,SAASha,KAAKsnB,SAASvf,IAC9BA,EAAIwB,MACJ,OAAOxB,EAAIwB,MAEnB,MAAO,CAAEK,KAAAA,EAAM/C,KAAAA,GAEnBihB,WACI,MAAM/f,EAAM,IAAIsc,GACVlK,EAAMna,KAAK+kB,aAAa5K,IAC9B,IAAIkD,EAAMlP,EAAO,GAAI5B,EAAa,IAAI,GAAqB5F,EAAMG,KAEjE,GADA9G,KAAKilB,QAAQld,EAAK5D,EAAGU,QACjB7E,KAAK+kB,aAAale,OAAS1C,EAAGW,OAC9B9E,KAAKuB,QAAQwG,OAEZ,CACD,IAAIuX,EAAQtf,KAAK6nB,UAAU9f,GAC3B,GAAIuX,aAAiB9V,GACjB,OAAOzB,EAAI6c,QAAQtF,GAGvB,IADAnR,EAAKH,KAAKsR,GACHtf,KAAK+kB,aAAale,OAAS1C,EAAGO,OAAO,CACxC1E,KAAKuB,QAAQwG,GACb,IAAIuX,EAAQtf,KAAK6nB,UAAU9f,GAC3B,GAAIuX,aAAiB9V,GACjB,OAAOzB,EAAI6c,QAAQtF,GACvBnR,EAAKH,KAAKsR,GAEd,GAAItf,KAAK+kB,aAAale,OAAS1C,EAAGW,OAC9B,OAAOiD,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,wBACrEna,KAAKuB,QAAQwG,GAEjB,GAAI/H,KAAK+kB,aAAale,OAAS1C,EAAG8B,QAC9BjG,KAAKuB,QAAQwG,GACbwE,EAAaxE,EAAIiS,SAASha,KAAKsnB,SAASvf,IACpCA,EAAIwB,OACJ,OAAOxB,EAEf,GAAI/H,KAAK+kB,aAAale,OAAS1C,EAAGQ,SAE9B,GADA0Y,EAAO,IAAI,GAAWrd,KAAK+kB,aAAa5K,IAAKpS,EAAIiS,SAASha,KAAK0lB,SAC3D3d,EAAIwB,MACJ,OAAOxB,MAEV,CAED,GADA/H,KAAKilB,QAAQld,EAAK5D,EAAGQ,SACjBoD,EAAIwB,MACJ,OAAOxB,EAMX,GAJIsV,EADArd,KAAK+kB,aAAale,OAAS1C,EAAGS,QACvBmD,EAAIiS,SAASha,KAAK0gB,cAElB,IAAI,GAAc1gB,KAAK+kB,aAAa5K,KAC/Cna,KAAKilB,QAAQld,EAAK5D,EAAGS,SACjBmD,EAAIwB,MACJ,OAAOxB,EAEf,OAAOA,EAAI4c,QAAQ,IAAI,GAAuBxK,EAAKkD,EAAMlP,EAAM5B,IAEnE0a,WACI,MAAMlf,EAAM,IAAIsc,GAChB,IAAKrkB,KAAK+kB,aAAahC,QAAQ5e,EAAGM,QAAS,QACvC,OAAOsD,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,oBACrEna,KAAKuB,QAAQwG,GACb,MAAMqE,EAAOrE,EAAIiS,SAASha,KAAK8nB,YAC/B,OAAI/f,EAAIwB,MACGxB,EACJA,EAAI4c,QAAQvY,GAEvB8a,UAAUtd,GACN,MAAM7B,EAAM,IAAIsc,GACVlK,EAAMna,KAAK+kB,aAAa5K,IACxBiG,EAAU,GAChB,IAAIE,EACAD,EAAW,IAAIvE,GAAmBnV,EAAMsE,QAC5C,IAAKjL,KAAK+kB,aAAahC,QAAQ5e,EAAGM,QAAS,SACvC,OAAOsD,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,qBAGrE,GADAna,KAAKuB,QAAQwG,GACT/H,KAAK+kB,aAAahC,QAAQ5e,EAAGM,QAAS,aACtCzE,KAAKuB,QAAQwG,GACbsY,EAAWtY,EAAIiS,SAASha,KAAK0lB,QACzB3d,EAAIwB,OACJ,OAAOxB,EAGf,GADA/H,KAAKilB,QAAQld,EAAK5D,EAAGQ,SACjBoD,EAAIwB,MACJ,OAAOxB,EACX,GAAI/H,KAAK+kB,aAAale,OAAS1C,EAAGS,QAE9B,OADA5E,KAAKuB,QAAQwG,GACNA,EAAI4c,QAAQ,IAAI,GAAUxK,EAAK,GAAIkG,OAAU3V,EAAWd,IAEnE,KACQ5J,KAAK+kB,aAAale,OAAS1C,EAAGK,YADzB,CAIT,IAAIujB,EAAW/nB,KAAK+kB,aAAa/jB,MACjChB,KAAKuB,QAAQwG,GACb,MAAMqE,EAAOrE,EAAIiS,SAASha,KAAK8nB,YAC/B,GAAI/f,EAAIwB,MACJ,OAAOxB,EACX,KAAMqE,aAAgB+S,IAClB,OAAOpX,EAAI6c,QAAQ,IAAIpb,GAAQxJ,KAAK+kB,aAAa5K,IAAK,aAAc,kCAAkC/N,cAE1GA,EAAKxC,KAAOme,EACK,SAAbA,EACAzH,EAAOlU,EAGPgU,EAAQpS,KAAK5B,GAIrB,OADApM,KAAKilB,QAAQld,EAAK5D,EAAGS,SACdmD,EAAI4c,QAAQ,IAAI,GAAUxK,EAAKiG,EAASC,EAAUC,EAAM1W,IAEnEod,UACI,MAAMjf,EAAM,IAAIsc,GACVlK,EAAMna,KAAK+kB,aAAa5K,IAC9B,IAAIkD,EAAMtS,EAAOkH,EAAYsV,GAAU,EACvC,OAAKvnB,KAAK+kB,aAAahC,QAAQ5e,EAAGM,QAAS,QAG3CzE,KAAKuB,QAAQwG,GACT/H,KAAK+kB,aAAahC,QAAQ5e,EAAGM,QAAS,QACtC8iB,GAAU,EACVvnB,KAAKuB,QAAQwG,IAER/H,KAAK+kB,aAAahC,QAAQ5e,EAAGM,QAAS,QAC3CzE,KAAKuB,QAAQwG,GAEbA,EAAIwB,MACGxB,EACP/H,KAAK+kB,aAAale,OAAS1C,EAAGK,WACvBuD,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,yBAErElI,EAAajS,KAAK+kB,aAClB/kB,KAAKuB,QAAQwG,GACR/H,KAAK+kB,aAAahC,QAAQ5e,EAAGM,QAAS,OAG3CzE,KAAKuB,QAAQwG,GACbgD,EAAQhD,EAAIiS,SAASha,KAAK0lB,QACtB3d,EAAIwB,MACGxB,GACXsV,EAAOtV,EAAIiS,SAASha,KAAKynB,aACrB1f,EAAIwB,MACGxB,GACX/H,KAAK0nB,gBAAgB3f,GACjBA,EAAIwB,MACGxB,EACJA,EAAI4c,QAAQ,IAAI,GAAQxK,EAAKkD,EAAMtS,EAAOkH,GAAY,EAAOsV,OAZzDxf,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,2BAlB1DpS,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,mBAgCzEpP,QACI,MAAMhD,EAAM,IAAIsc,GAChB,IAAI2D,EAAW,GACf,MAAM7N,EAAMna,KAAK+kB,aAAa5K,IAC9B,GAAIna,KAAK+kB,aAAale,OAAS1C,EAAGY,QAC9B,OAAOgD,EAAI6c,QAAQ,IAAI3J,GAAmBd,EAAK,gBAGnD,GADAna,KAAKuB,QAAQwG,GACT/H,KAAK+kB,aAAale,OAAS1C,EAAGa,QAE9B,OADAhF,KAAKuB,QAAQwG,GACNA,EAAI4c,QAAQ,IAAI,GAAUxK,EAAK,KAG1C,GADA6N,EAASha,KAAKjG,EAAIiS,SAASha,KAAK0lB,SAC5B3d,EAAIwB,MACJ,OAAOxB,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,qBAErE,KAAOna,KAAK+kB,aAAale,OAAS1C,EAAGO,OAGjC,GAFA1E,KAAKuB,QAAQwG,GACbigB,EAASha,KAAKjG,EAAIiS,SAASha,KAAK0lB,SAC5B3d,EAAIwB,MACJ,OAAOxB,EAEf,OAAI/H,KAAK+kB,aAAale,OAAS1C,EAAGa,QACvB+C,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,yBAErEna,KAAKuB,QAAQwG,GACNA,EAAI4c,QAAQ,IAAI,GAAUxK,EAAK6N,KAE1C/c,SACI,MAAMlD,EAAM,IAAIsc,GAChB,IAAI7F,EAAa,GACjB,MAAMrE,EAAMna,KAAK+kB,aAAa5K,IAC9B,GAAIna,KAAK+kB,aAAale,OAAS1C,EAAGQ,QAC9B,OAAOoD,EAAI6c,QAAQ,IAAI3J,GAAmBd,EAAK,gBAGnD,GADAna,KAAKuB,QAAQwG,GACT/H,KAAK+kB,aAAale,OAAS1C,EAAGS,QAE9B,OADA5E,KAAKuB,QAAQwG,GACNA,EAAI4c,QAAQ,IAAI,GAAkBxK,EAAK,KAElD,OAAa,CACT,IAAI8N,EAAS9nB,EAAKa,EAClB,GAAIhB,KAAK+kB,aAAale,OAAS1C,EAAGK,WAC9ByjB,EAAU,KACV9nB,EAAM,IAAI,GAAWH,KAAK+kB,aAAa5K,IAAKna,KAAK+kB,cACjD/kB,KAAKuB,QAAQwG,QAEZ,GAAI/H,KAAK+kB,aAAale,OAAS1C,EAAGG,OACnC2jB,EAAU,SACV9nB,EAAM,IAAI,GAAWH,KAAK+kB,aAAa5K,IAAKna,KAAK+kB,cACjD/kB,KAAKuB,QAAQwG,OAEZ,IAAI/H,KAAK+kB,aAAale,OAAS1C,EAAGY,QAYnC,MARA,GAHAkjB,EAAU,QACVjoB,KAAKuB,QAAQwG,GACb5H,EAAM4H,EAAIiS,SAASha,KAAK0lB,QACpB3d,EAAIwB,MACJ,OAAOxB,EACX,GAAI/H,KAAK+kB,aAAale,OAAS1C,EAAGa,QAC9B,OAAO+C,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,sBAAsB/V,EAAgBpE,KAAK+kB,aAAale,WAE7H7G,KAAKuB,QAAQwG,GAKjB,GAAI/H,KAAK+kB,aAAale,OAAS1C,EAAG8B,MAAO,CAGrC,GAFAjG,KAAKuB,QAAQwG,GACb/G,EAAQ+G,EAAIiS,SAASha,KAAK0lB,QACtB3d,EAAIwB,MACJ,OAAOxB,EACX,GAAI/H,KAAK+kB,aAAale,OAAS1C,EAAGO,OAAS1E,KAAK+kB,aAAale,OAAS1C,EAAGS,QACrE,OAAOmD,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,6BAA6B/V,EAAgBpE,KAAK+kB,aAAale,WAEhI7G,KAAK+kB,aAAale,OAAS1C,EAAGO,OAC9B1E,KAAKuB,QAAQwG,OAGhB,CACD,GAAI/H,KAAK+kB,aAAale,OAAS1C,EAAGO,OAAS1E,KAAK+kB,aAAale,OAAS1C,EAAGS,QACrE,OAAOmD,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,6BAA6B/V,EAAgBpE,KAAK+kB,aAAale,WAEpI,GAAgB,OAAZohB,EACA,OAAOlgB,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,+JAGrEna,KAAKuiB,UACLvhB,EAAQ,IAAI,GAAahB,KAAK+kB,cAC9B/kB,KAAKuB,QAAQwG,GACT/H,KAAK+kB,aAAale,OAAS1C,EAAGO,OAC9B1E,KAAKuB,QAAQwG,GAIrB,GADAyW,EAAWxQ,KAAK,CAAC7N,EAAKa,IAClB+G,EAAIwB,MACJ,OAAOxB,EAEf,OAAI/H,KAAK+kB,aAAale,OAAS1C,EAAGS,QACvBmD,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,qCACrEna,KAAKuB,QAAQwG,GACNA,EAAI4c,QAAQ,IAAI,GAAkBxK,EAAKqE,KAElD2I,YACI,MAAMpf,EAAM,IAAIsc,GACVlK,EAAMna,KAAK+kB,aAAa5K,IAE9B,GADAna,KAAKilB,QAAQld,EAAK5D,EAAGM,SACjBsD,EAAIwB,MACJ,OAAOxB,EAEX,GADA/H,KAAKilB,QAAQld,EAAK5D,EAAGQ,SACjBoD,EAAIwB,MACJ,OAAOxB,EACX,GAAI/H,KAAK+kB,aAAale,OAAS1C,EAAGS,QAE9B,OADA5E,KAAKuB,QAAQwG,GACNA,EAAI4c,QAAQ,IAAI,GAAcxK,EAAK,IAAI,KAElD,MAAMuG,EAAa3Y,EAAIiS,SAASha,KAAK0gB,cACrC,OAAI3Y,EAAIwB,MACGxB,GACX/H,KAAKilB,QAAQld,EAAK5D,EAAGS,SACjBmD,EAAIwB,MACGxB,EACJA,EAAI4c,QAAQ,IAAI,GAAcxK,EAAKuG,KAE9C+E,WACI,MAAM1d,EAAM,IAAIsc,GAEhB,GADArkB,KAAKilB,QAAQld,EAAK5D,EAAGM,SACjBsD,EAAIwB,MACJ,OAAOxB,EAEX,GADA/H,KAAKilB,QAAQld,EAAK5D,EAAGQ,SACjBoD,EAAIwB,MACJ,OAAOxB,EACX,GAAI/H,KAAK+kB,aAAale,OAAS1C,EAAGS,QAC9B,OAAOmD,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,uBAErE,MAAMkD,EAAOtV,EAAIiS,SAASha,KAAK0gB,cAC/B,GAAI3Y,EAAIwB,MACJ,OAAOxB,EAEX,GADA/H,KAAKilB,QAAQld,EAAK5D,EAAGS,SACjBmD,EAAIwB,MACJ,OAAOxB,EACX,GAAgC,UAA5B/H,KAAK+kB,aAAa/jB,MAClB,OAAO+G,EAAI6c,QAAQ,IAAI3J,GAAmBjb,KAAK+kB,aAAa5K,IAAK,6BAGrE,GADAna,KAAKilB,QAAQld,EAAK5D,EAAGM,SACjBsD,EAAIwB,MACJ,OAAOxB,EAEX,GADA/H,KAAKilB,QAAQld,EAAK5D,EAAGQ,SACjBoD,EAAIwB,MACJ,OAAOxB,EACX,GAAI/H,KAAK+kB,aAAale,OAAS1C,EAAGS,QAC9B,OAAOmD,EAAI4c,QAAQ,IAAIhE,GAAW3gB,KAAK+kB,aAAa5K,IAAKkD,EAAM,IAAI4D,KAEvE,MAAML,EAAa7Y,EAAIiS,SAASha,KAAK0gB,cACrC,OAAI3Y,EAAIwB,MACGxB,GACX/H,KAAKilB,QAAQld,EAAK5D,EAAGS,SACjBmD,EAAIwB,MACGxB,GACX/H,KAAK0nB,gBAAgB3f,GACjBA,EAAIwB,MACGxB,EACJA,EAAI4c,QAAQ,IAAIhE,GAAW3gB,KAAK+kB,aAAa5K,IAAKkD,EAAMuD,OC9zBhE,SAASN,GAAK5J,EAAY/T,QAAQC,IAAK+T,EAAWsD,GAAO,EAAMiO,EAAO,CAAExlB,MAAOC,QAAQC,KAAO+H,EAAU,IAAIsC,GAAWN,EAAO,IACjI,IAAIC,EAhC8C5J,EAASC,EAAYK,EAAGJ,EAiC1E,OAjCkDF,EAiCjChD,KAjC0CiD,OAiCpC,EAjCmDC,EAiCnC,YACnCgM,IACA,MAAMnH,EAAMyO,GAAW7L,EAAS+L,EAAWC,GAC3C,GAAI5O,aAAeyB,GACf,OAAOzB,EAEX/F,EAAiB2I,GACU,QAA1BiC,EAAKsb,EAAc,eAAsB,IAAPtb,IAAsBsb,EAAc,QAAIvd,GACvEgC,IACAhC,EAAQgC,KAAOA,GAEfub,EAAKxlB,QACL,QAAgBwlB,EAAKxlB,OAErBuX,IACA5X,UACMU,GAAsB,GCxCxC,SAAqBmlB,EAAMvd,GACvB,MAAM,GAAEwd,EAAE,KAAExb,GAASub,EACrB,IAAK,IAAIE,KAAW/nB,OAAOmL,KAAK0c,Gd4BVte,Ec3BRwe,Ed2Bc/K,Ec3BL,IAAIxO,EAAYqZ,EAAKE,GAAUA,Gd4BtD1S,GAAQ9L,GAAQ,GAChBqM,GAAiBrM,GAAQyT,EAFtB,IAAmBzT,EAAMyT,EczB5B1S,EAAQuJ,IAAI,SAAU,IAAI/I,GAAW,EAAGR,QAAAA,GAAW0d,KAC/C,IAAK5T,EAAOC,YAAYE,QACpB,OAAO,IAAIuD,GAAwB,uBAEvC,IAAImQ,EAAa5mB,GAAI2mB,GACrB,GAAI5T,EAAOC,YAAYI,QAAUoB,GAAYoS,GACzC,OAAOnS,GAAUmS,GAErBA,EAAa3b,EAAKqS,KAAKrU,EAAQgC,KAAM2b,GACrC,IACI,IAAKH,EAAGI,WAAWD,GAAa,CAC5B,IAAIH,EAAGI,WAAW,eAAiBD,GAS/B,OAAO,IAAI9e,GAAQvI,EAAA,KAAe,cAAe,oBAAoBqnB,iBARrE,IAAIH,EAAGI,WAAW,aAAeD,EAAa,YAI1C,OAAO,IAAI9e,GAAQvI,EAAA,KAAe,cAAe,WAAWqnB,8CAH5DA,EAAa,aAAeA,EAAa,WAUrD,MAAME,EAAQ7b,EAAK8b,QAAQH,GACrBtV,EAAOmV,EAAGO,aAAaJ,EAAY,SACnCrR,EAAM,IAAIhK,GAChBgK,EAAIjK,OAASjL,EACbkV,EAAItK,KAAO6b,EACX,MAAMpgB,EAAI,IAAImG,EAAY,IAAI5E,EAAS2e,GAAa,IAC9CvgB,EAAMmP,GAAIlE,EAAM,CAClBiE,IAAAA,EACA0R,oBAAoB,EACpBzF,SAAUoF,EACVM,WAAYJ,IAGhB,OADApgB,EAAEd,UAAY2P,EAAIG,uBACdrP,EAAIwB,MACGxB,EAAIwB,MAERnB,EAEX,MAAOiP,GACH,OAAO,IAAI7N,GAAQvI,EAAA,KAAe,cAAeoW,EAAEtG,eAExD,CAAC,CAAEnH,KAAM,OAAQ/C,KAAMF,EAAMmE,SAAW,cAAUJ,EAAW/D,EAAMsE,QAAS,CAC3EuC,mBAAmB,EACnBoB,YAAY,IAEhBjE,EAAQ4C,OAAO,OAAQ,IAAIpC,GAAW,EAAGR,QAAAA,GAAWmO,EAAO+P,KACvD,IAAKpU,EAAOC,YAAYK,WACpB,OAAO,IAAIoD,GAAwB,4BAEvC,MAAM2Q,EAAWpnB,GAAIoX,GACrB,IAAIiQ,EAAWrnB,GAAImnB,GAInB,OAHgD,IAA5CpmB,EAAqBuJ,QAAQ+c,KAC7BA,EAAW,SAEVZ,EAAGI,WAAWO,GAGZ,IAAI5d,EAAS,CAChBxJ,IAAK,IAAIyJ,GAAW,EAAGR,QAAAA,KACZ,IAAIhB,EAASwe,EAAGO,aAAa/b,EAAKqS,KAAKrU,EAAQgC,KAAMmc,GAAWC,GAAUhY,aAClF,GAAI,WAAOrG,EAAW/D,EAAMmE,QAC/Bke,MAAO,IAAI7d,GAAW,EAAGR,QAAAA,GAAWse,KAChCd,EAAGe,cAAcve,EAAQgC,KAAOmc,EAAUpnB,GAAIunB,MAC/C,CAAC,CAAErf,KAAM,OAAQ/C,KAAMF,EAAMmE,UAChCqe,OAAQ,IAAIhe,GAAW,EAAGR,QAAAA,GAAWse,KACjCd,EAAGiB,eAAeze,EAAQgC,KAAOmc,EAAUpnB,GAAIunB,MAChD,CAAC,CAAErf,KAAM,OAAQ/C,KAAMF,EAAMmE,YAXzB,IAAIqM,GAAYlW,EAAA,KAAe6nB,ODtBtC,CAAYZ,EAAMvd,KAhDnB,KAFgErH,OAiCxC,KA/BbA,EAAIC,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKT,EAAUU,KAAK5C,IAAW,MAAOqC,GAAKI,EAAOJ,IACpF,SAASQ,EAAS7C,GAAS,IAAM2C,EAAKT,EAAiB,MAAElC,IAAW,MAAOqC,GAAKI,EAAOJ,IACvF,SAASM,EAAKG,GAJlB,IAAe9C,EAIa8C,EAAOC,KAAOP,EAAQM,EAAO9C,QAJ1CA,EAIyD8C,EAAO9C,MAJhDA,aAAiBsC,EAAItC,EAAQ,IAAIsC,GAAE,SAAUE,GAAWA,EAAQxC,OAITgD,KAAKN,EAAWG,GAClGF,GAAMT,EAAYA,EAAUe,MAAMjB,EAASC,GAAc,KAAKW,WAgD/D,SAASsT,GAAII,GAAK,IAAEL,EAAMlV,EAAM,mBAAE4mB,GAAqB,EAAK,SAAEzF,EAAW,YAAW,WAAE0F,EAAa,IAAO,IACzGA,IACA3R,EAAItK,KAAOic,GAEfjb,GAAK8M,QAAU,EACf9M,GAAK6M,UAAY,EACjB7M,GAAK4M,WAAa,EAClB,MAAM8O,EAAW,CACbzV,MAAO,EACP0V,WAAY,EACZC,YAAa,EACbC,eAAgB,EAChBC,QAAS,EACTC,QAAS,EACTC,UAAW,EACXpP,WAAY,GAEhB,IAAIF,EAAQvX,IACZ,IAAKmU,EAAIvX,KAAKiZ,oBAAqB,CAC/B,MAAM5Q,EAAM,IAAI4R,GAEhB,OADA5R,EAAIwB,MAAQ,IAAIC,GAAQvI,EAAA,KAAe,gBAAiB,8DACjD8G,EAEX,MACM6hB,EADQ,IAAI5G,GAAM1L,EAAK4L,GACNC,WACvB,GAAIyG,aAAoBpgB,GAAS,CAC7B,MAAMkG,EAAO,IAAIiK,GAEjB,OADAjK,EAAKnG,MAAQqgB,EACNla,EAEX2Z,EAASC,WAAaxmB,IAAQuX,EAC9BA,EAAQvX,IACR,MACMiF,EADS,IAAI8c,GAAO+E,GACPrV,QACnB,GAAIxM,EAAIwB,MAAO,CACX,MAAMmG,EAAO,IAAIiK,GAEjB,OADAjK,EAAKnG,MAAQxB,EAAIwB,MACVmG,EAIX,GAFA2Z,EAASE,YAAczmB,IAAQuX,EAC/BA,EAAQvX,KACHiF,EAAIkS,KAAM,CACX,MAAMlS,EAAM,IAAI4R,GAEhB,OADA5R,EAAIsD,IAAM,IAAIvB,EAAQ,IACf/B,EAEX,MAAM8hB,EAAW9hB,EAAIkS,KAAKpM,UAAUoJ,GAUpC,OATAoS,EAASG,eAAiB1mB,IAAQuX,EAClCgP,EAASzV,MAAQ9Q,IAAQuX,EACzBgP,EAASI,QAAU9b,GAAK8M,QACxB4O,EAASM,UAAYhc,GAAK6M,UAC1B6O,EAASK,QAAU/b,GAAK6M,UAAY7M,GAAK4M,WACzC8O,EAAS9O,WAAa5M,GAAK4M,WACvBoO,GACAhmB,QAAQC,IAAIymB,GAEThpB,OAAO6H,OAAO7H,OAAO6H,OAAO,GAAI2hB,GAAW,CAAER,SAAAA,IAEjD,SAAS9U,GAAMvB,GAAM,SAAEkQ,EAAW,YAAW,WAAE0F,EAAa,IAAO,IACtE,MACMgB,EADQ,IAAI5G,GAAMhQ,EAAMkQ,GACPC,WACvB,GAAIyG,aAAoBpgB,GACpB,MAAO,CACHD,MAAOqgB,GAGf,MACM7hB,EADS,IAAI8c,GAAO+E,GACPrV,QACnB,OAAIxM,EAAIwB,MACG,CACHA,MAAOxB,EAAIwB,OAGdxB,EAAIkS,KAKF,CACH6P,oBAAsBrV,IAClB,IAAK1M,EAAIkS,KACL,KAAM,2BACV,MAAM8P,EAAU,uDAAuDxnB,MACjEynB,EEzIlB,8hDFyI2B,WAA0BhI,QAAQ,uBAAwB,KAAO,KAC1EtO,EAAM3L,EAAIkS,KAAKiB,UAAUzG,GAC/B,OAAIf,EAAInK,MACGmK,GACPe,EAAO0G,SACPzH,EAAIrI,IAAMqI,EAAIrI,IAAI2W,QAAQ,uBAAwB,MAE/C,IAAIlI,GAAciQ,EAAUC,EAAStW,EAAIrI,OAEpD4e,gBAAkBxV,IACd,IAAK1M,EAAIkS,KACL,KAAM,2BACV,MAAM8P,EAAU,kDAAkDxnB,QAC5DynB,EGtJlB,qqBHsJ2B,WAA4B,KACrCtW,EAAM3L,EAAIkS,KAAKC,UAAUzF,GAC/B,OAAIf,EAAInK,MACGmK,EACJ,IAAIoG,GAAciQ,EAAUC,EAAStW,EAAIqG,QAAU,KAAOrG,EAAIrI,MAEzEwC,UAAW,CAACoJ,EAAMlV,KACd,IAAKgG,EAAIkS,KACL,KAAM,2BAIV,GAHI2O,IACA3R,EAAItK,KAAOic,IAEV3R,EAAIvX,KAAKiZ,oBAAqB,CAC/B,MAAM5Q,EAAM,IAAI4R,GAEhB,OADA5R,EAAIwB,MAAQ,IAAIC,GAAQvI,EAAA,KAAe,gBAAiB,8DACjD8G,EAEX,OAAOA,EAAIkS,KAAKpM,UAAUoJ,KAvCvB,CACH1N,MAAO,IAAIC,GAAQvI,EAAA,KAAe,QAAS,c","sources":["webpack://es/webpack/universalModuleDefinition","webpack://es/webpack/bootstrap","webpack://es/webpack/runtime/define property getters","webpack://es/webpack/runtime/hasOwnProperty shorthand","webpack://es/webpack/runtime/make namespace object","webpack://es/./src/position.ts","webpack://es/./src/constants.ts","webpack://es/./src/runtime/primitives/esprimitive.ts","webpack://es/./src/runtime/primitives/eserrorprimitive.ts","webpack://es/./src/runtime/primitives/esundefined.ts","webpack://es/./src/runtime/primitives/esobject.ts","webpack://es/./src/runtime/primitives/esfunction.ts","webpack://es/./src/runtime/functionCaller.ts","webpack://es/./src/runtime/context.ts","webpack://es/./src/runtime/primitives/esnamespace.ts","webpack://es/./src/runtime/primitives/esjsbinding.ts","webpack://es/./src/runtime/primitiveTypes.ts","webpack://es/./src/runtime/instantiator.ts","webpack://es/./src/runtime/primitives/estype.ts","webpack://es/./src/runtime/primitives/esnumber.ts","webpack://es/./src/runtime/primitives/esboolean.ts","webpack://es/./src/runtime/primitives/esarray.ts","webpack://es/./src/runtime/primitives/esstring.ts","webpack://es/./src/runtime/symbol.ts","webpack://es/./src/runtime/primitives/wrapStrip.ts","webpack://es/./src/util/colours.ts","webpack://es/./src/built-in/builtInFunctions.ts","webpack://es/./src/built-in/built-in-modules/json.ts","webpack://es/./src/config.ts","webpack://es/./src/built-in/built-in-modules/dom.ts","webpack://es/./src/built-in/builtInModules.ts","webpack://es/./src/built-in/built-in-modules/ascii.ts","webpack://es/./src/init.ts","webpack://es/./src/built-in/globalConstants.ts","webpack://es/./src/built-in/built-in-modules/promise.ts","webpack://es/./src/built-in/built-in-modules/time.ts","webpack://es/./src/runtime/argument.ts","webpack://es/./src/runtime/nodes.ts","webpack://es/./src/util/util.ts","webpack://es/./src/errors.ts","webpack://es/./src/parse/tokens.ts","webpack://es/./src/parse/lexer.ts","webpack://es/./src/parse/parser.ts","webpack://es/./src/index.ts","webpack://es/./src/built-in/nodeLibs.ts","webpack://es/./src/built-in/compiledSTD/std.txt.js","webpack://es/./src/built-in/compiledSTD/std.txt.py"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"es\"] = factory();\n\telse\n\t\troot[\"es\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Position {\n    constructor(idx, ln, col, file = '(unknown)') {\n        this.idx = idx;\n        this.ln = ln;\n        this.col = col;\n        this.file = file;\n    }\n    advance(currentChar = '') {\n        this.idx++;\n        this.col++;\n        if (currentChar === '\\n') {\n            this.ln++;\n            this.col = 0;\n        }\n        return this;\n    }\n    get clone() {\n        return new Position(this.idx, this.ln, this.col, this.file);\n    }\n    get str() {\n        return `File ${this.file}, ${this.ln + 1}:${this.col + 1}`;\n    }\n    get isUnknown() {\n        return this.idx === -2;\n    }\n    static get void() {\n        return new Position(-2, -2, -2, '(unknown)');\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport PACKAGE_JSON from '../package.json';\nexport const digits = '0123456789';\nexport const identifierChars = '_$abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nexport const singleLineComment = '//';\nexport const multiLineCommentStart = '/*';\nexport const multiLineCommentEnd = '*/';\nexport let global;\nexport const setGlobalContext = (c) => void (global = c);\nexport const stringSurrounds = ['\\'', '`', '\"'];\nexport let IS_NODE_INSTANCE = typeof window === 'undefined';\nexport const runningInNode = () => void (IS_NODE_INSTANCE = true);\nexport const VAR_DECLARE_KEYWORDS = ['var', 'let', 'global'];\nexport const VERSION = PACKAGE_JSON['version'];\nexport const configFileName = 'esconfig.json';\nexport const VALID_FILE_ENCODINGS = [\n    'utf8', 'ucs2', 'utf16le', 'latin1',\n    'ascii', 'base64', 'base64url', 'hex'\n];\nexport const libs = {\n    print: console.log\n};\nexport const catchBlockErrorSymbolName = 'err';\nexport const KEYWORDS = [\n    'var',\n    'let',\n    'global',\n    'local',\n    'mutable',\n    'const',\n    'if',\n    'else',\n    'while',\n    'for',\n    'in',\n    'continue',\n    'break',\n    'func',\n    'return',\n    'yield',\n    'class',\n    'extends',\n    'namespace',\n    'export',\n    'try',\n    'catch'\n];\nexport let now = () => 0;\nexport function refreshPerformanceNow(IS_NODE_INSTANCE) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (IS_NODE_INSTANCE) {\n            now = () => Date.now();\n        }\n        else {\n            now = () => {\n                try {\n                    return performance === null || performance === void 0 ? void 0 : performance.now();\n                }\n                catch (e) {\n                    return 0;\n                }\n            };\n        }\n    });\n}\nrefreshPerformanceNow(IS_NODE_INSTANCE);\nexport var tokenType;\n(function (tokenType) {\n    tokenType[tokenType[\"NUMBER\"] = 0] = \"NUMBER\";\n    tokenType[tokenType[\"STRING\"] = 1] = \"STRING\";\n    tokenType[tokenType[\"ENDSTATEMENT\"] = 2] = \"ENDSTATEMENT\";\n    tokenType[tokenType[\"IDENTIFIER\"] = 3] = \"IDENTIFIER\";\n    tokenType[tokenType[\"KEYWORD\"] = 4] = \"KEYWORD\";\n    tokenType[tokenType[\"COMMA\"] = 5] = \"COMMA\";\n    tokenType[tokenType[\"ASSIGN\"] = 6] = \"ASSIGN\";\n    tokenType[tokenType[\"ADD\"] = 7] = \"ADD\";\n    tokenType[tokenType[\"SUB\"] = 8] = \"SUB\";\n    tokenType[tokenType[\"MUL\"] = 9] = \"MUL\";\n    tokenType[tokenType[\"DIV\"] = 10] = \"DIV\";\n    tokenType[tokenType[\"POW\"] = 11] = \"POW\";\n    tokenType[tokenType[\"MOD\"] = 12] = \"MOD\";\n    tokenType[tokenType[\"OPAREN\"] = 13] = \"OPAREN\";\n    tokenType[tokenType[\"CPAREN\"] = 14] = \"CPAREN\";\n    tokenType[tokenType[\"OBRACES\"] = 15] = \"OBRACES\";\n    tokenType[tokenType[\"CBRACES\"] = 16] = \"CBRACES\";\n    tokenType[tokenType[\"OSQUARE\"] = 17] = \"OSQUARE\";\n    tokenType[tokenType[\"CSQUARE\"] = 18] = \"CSQUARE\";\n    tokenType[tokenType[\"EQUALS\"] = 19] = \"EQUALS\";\n    tokenType[tokenType[\"NOTEQUALS\"] = 20] = \"NOTEQUALS\";\n    tokenType[tokenType[\"NOT\"] = 21] = \"NOT\";\n    tokenType[tokenType[\"GT\"] = 22] = \"GT\";\n    tokenType[tokenType[\"LT\"] = 23] = \"LT\";\n    tokenType[tokenType[\"GTE\"] = 24] = \"GTE\";\n    tokenType[tokenType[\"LTE\"] = 25] = \"LTE\";\n    tokenType[tokenType[\"AND\"] = 26] = \"AND\";\n    tokenType[tokenType[\"OR\"] = 27] = \"OR\";\n    tokenType[tokenType[\"COLON\"] = 28] = \"COLON\";\n    tokenType[tokenType[\"DOT\"] = 29] = \"DOT\";\n    tokenType[tokenType[\"EOF\"] = 30] = \"EOF\";\n    tokenType[tokenType[\"PIPE\"] = 31] = \"PIPE\";\n    tokenType[tokenType[\"APMERSAND\"] = 32] = \"APMERSAND\";\n    tokenType[tokenType[\"BITWISE_NOT\"] = 33] = \"BITWISE_NOT\";\n})(tokenType || (tokenType = {}));\nexport let tt = tokenType;\nexport const tokenTypeString = {\n    [tt.NUMBER]: 'Number',\n    [tt.STRING]: 'String',\n    [tt.ENDSTATEMENT]: ';',\n    [tt.IDENTIFIER]: 'Identifier',\n    [tt.KEYWORD]: 'Keyword',\n    [tt.COMMA]: ',',\n    [tt.OBRACES]: '{',\n    [tt.CBRACES]: '}',\n    [tt.OPAREN]: '(',\n    [tt.CPAREN]: ')',\n    [tt.OSQUARE]: '[',\n    [tt.CSQUARE]: ']',\n    [tt.ASSIGN]: '=',\n    [tt.ADD]: '+',\n    [tt.SUB]: '-',\n    [tt.MUL]: '*',\n    [tt.DIV]: '/',\n    [tt.POW]: '^',\n    [tt.MOD]: '%',\n    [tt.EQUALS]: '==',\n    [tt.NOTEQUALS]: '!=',\n    [tt.NOT]: '!',\n    [tt.GT]: '>',\n    [tt.LT]: '<',\n    [tt.GTE]: '>=',\n    [tt.LTE]: '<=',\n    [tt.AND]: '&&',\n    [tt.OR]: '||',\n    [tt.COLON]: ':',\n    [tt.DOT]: '.',\n    [tt.EOF]: 'End of File',\n    [tt.APMERSAND]: '&',\n    [tt.PIPE]: '|',\n    [tt.BITWISE_NOT]: '~',\n};\nexport const singleCharTokens = {\n    '*': tt.MUL,\n    '/': tt.DIV,\n    '+': tt.ADD,\n    '-': tt.SUB,\n    '(': tt.OPAREN,\n    ')': tt.CPAREN,\n    '^': tt.POW,\n    '%': tt.MOD,\n    '{': tt.OBRACES,\n    '}': tt.CBRACES,\n    ',': tt.COMMA,\n    '[': tt.OSQUARE,\n    ']': tt.CSQUARE,\n    ';': tt.ENDSTATEMENT,\n    ':': tt.COLON,\n    '.': tt.DOT,\n    '=': tt.ASSIGN,\n    '>': tt.GT,\n    '<': tt.LT,\n    '!': tt.NOT,\n    '|': tt.PIPE,\n    '&': tt.APMERSAND,\n    '~': tt.BITWISE_NOT\n};\nexport const doubleCharTokens = {\n    '==': tt.EQUALS,\n    '!=': tt.NOTEQUALS,\n    '>=': tt.GTE,\n    '<=': tt.LTE,\n    '+=': tt.ASSIGN,\n    '-=': tt.ASSIGN,\n    '*=': tt.ASSIGN,\n    '/=': tt.ASSIGN,\n    '&&': tt.AND,\n    '||': tt.OR\n};\nexport const tripleCharTokens = {};\nexport const primitiveMethods = [\n    '__add__',\n    '__subtract__',\n    '__multiply__',\n    '__divide__',\n    '__pow__',\n    '__eq__',\n    '__gt__',\n    '__lt__',\n    '__and__',\n    '__or__',\n    '__pipe__',\n    '__ampersand__',\n    '__bool__',\n    '__setProperty__',\n    '__getProperty__',\n    '__call__',\n];\nexport const types = {};\n","import { InvalidOperationError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { str } from '../../util/util';\nimport { strip } from './wrapStrip';\nimport { types } from \"../../constants\";\nexport class ESPrimitive {\n    constructor(value, type = types.any) {\n        this.self = this;\n        this.isa = (props, type) => {\n            return type.typeCheck(props, this);\n        };\n        this.is = (props, obj) => {\n            return new ESBoolean(obj === this);\n        };\n        this.valueOf = () => this.__value__;\n        this.typeName = () => str(this.__type__);\n        this.hasProperty = (props, key) => new ESBoolean(this.hasOwnProperty(str(key)));\n        this.describe = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            this.info.description = str(info);\n        };\n        this.detail = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            const res = strip(info, props);\n            if (typeof res !== 'object') {\n                return new TypeError(Position.void, 'object', this.typeName(), str(this));\n            }\n            this.info = Object.assign(Object.assign({}, this.info), res);\n            this.info.isBuiltIn = false;\n        };\n        this.__type__ = type || this;\n        this.__value__ = value;\n        this.info = {};\n    }\n    __add__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __subtract__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __multiply__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __divide__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __pow__(props, n) {\n        return new InvalidOperationError('__pow__', this);\n    }\n    __mod__(props, n) {\n        return new InvalidOperationError('__mod__', this);\n    }\n    __eq__(props, n) {\n        return new InvalidOperationError('__eq__', this);\n    }\n    __gt__(props, n) {\n        return new InvalidOperationError('__gt__', this);\n    }\n    __lt__(props, n) {\n        return new InvalidOperationError('__lt__', this);\n    }\n    __and__(props, n) {\n        return new InvalidOperationError('__and__', this);\n    }\n    __or__(props, n) {\n        return new InvalidOperationError('__or__', this);\n    }\n    __bool__(props) {\n        return new InvalidOperationError('__bool__', this);\n    }\n    __pipe__(props, n) {\n        return new InvalidOperationError('__pipe__', this);\n    }\n    __ampersand__(props, n) {\n        return new InvalidOperationError('__ampersand__', this);\n    }\n    __setProperty__(props, key, value) {\n        return new InvalidOperationError('__setProperty__', this, `[${str(key)}] = ${str(value)}`);\n    }\n    __call__(props, ...parameters) {\n        return new InvalidOperationError('__call__', this);\n    }\n}\n","import { ESPrimitive } from './esprimitive';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nimport { str } from \"../../util/util\";\nimport { ESArray } from \"./esarray\";\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESErrorPrimitive extends ESPrimitive {\n    constructor(error = new ESError(Position.void, 'Unknown', 'Error not specified')) {\n        super(error, types.error);\n        this.__getProperty__ = (props, key) => {\n            switch (str(key)) {\n                case 'name':\n                    return new ESString(this.valueOf().name);\n                case 'details':\n                    return new ESString(this.valueOf().details);\n                case 'traceback':\n                    return new ESArray(this.valueOf().traceback\n                        .map(s => new ESString(`${s.position.str} : ${s.line}`)));\n                default:\n                    if (this.self.hasOwnProperty(str(key))) {\n                        return wrap(this.self[str(key)], true);\n                    }\n                    return new IndexError(Position.void, key.valueOf(), this);\n            }\n        };\n        this.cast = () => new ESError(Position.void, 'TypeError', `Cannot cast type 'error'`);\n        this.str = () => new ESString(`<Error: ${this.valueOf().str}>`);\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(n instanceof ESErrorPrimitive &&\n                this.valueOf().constructor === n.valueOf().constructor);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.clone = () => new ESErrorPrimitive(this.valueOf());\n        this.typeCheck = this.__eq__;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { ESType, ESTypeIntersection, ESTypeUnion } from './estype';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { wrap } from \"./wrapStrip\";\nimport { types } from \"../../constants\";\nexport class ESUndefined extends ESPrimitive {\n    constructor() {\n        super(undefined, types.undefined);\n        this.cast = ({ context }, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber();\n                case types.string:\n                    return new ESString();\n                case types.array:\n                    return new ESArray();\n                case types.undefined:\n                    return new ESUndefined();\n                case types.type:\n                    return new ESType();\n                case types.error:\n                    return new ESErrorPrimitive();\n                case types.object:\n                case types.any:\n                    return new ESObject();\n                case types.function:\n                    return new ESFunction(() => { });\n                case types.boolean:\n                    return new ESBoolean();\n                default:\n                    if (!(type instanceof ESType)) {\n                        return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n                    }\n                    return type.__call__({ context });\n            }\n        };\n        this.str = () => new ESString('<Undefined>');\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(n instanceof ESUndefined ||\n                typeof n === 'undefined' ||\n                typeof n.valueOf() === 'undefined');\n        };\n        this.__bool__ = () => new ESBoolean();\n        this.bool = this.__bool__;\n        this.clone = () => new ESUndefined();\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.typeCheck = this.__eq__;\n        this.info = {\n            name: 'undefined',\n            description: 'Not defined, not a value.',\n            file: 'built-in',\n            isBuiltIn: true\n        };\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { strip, wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESObject extends ESPrimitive {\n    constructor(val = {}) {\n        super(val, types.object);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => {\n            let val = str(this.valueOf());\n            if (val[val.length - 1] === '\\n') {\n                val = val.substr(0, val.length - 1);\n            }\n            return new ESString(`<ESObject ${val}>`);\n        };\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new ESBoolean();\n            }\n            if (n.keys.length !== this.keys.length) {\n                return new ESBoolean();\n            }\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const thisElement = this.valueOf()[key];\n                const nElement = n.valueOf()[key];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new TypeError(Position.void, 'object', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const res = this.__getProperty__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            for (let k of n.keys) {\n                const key = k.valueOf();\n                if (newOb.hasOwnProperty(key)) {\n                    continue;\n                }\n                const res = n.__getProperty__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            return new ESObject(newOb);\n        };\n        this.__subtract__ = (props, n) => {\n            let keysToRemove = [];\n            if (n instanceof ESString) {\n                keysToRemove = [str(n)];\n            }\n            else if (n instanceof ESArray) {\n                keysToRemove = strip(n, props);\n            }\n            else {\n                return new TypeError(Position.void, 'array | string', n.typeName().valueOf(), n);\n            }\n            if (!Array.isArray(keysToRemove)) {\n                return new TypeError(Position.void, 'array | string', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                if (keysToRemove.indexOf(key) === -1) {\n                    let res = this.__getProperty__(props, k);\n                    if (res instanceof ESError) {\n                        return res;\n                    }\n                    newOb[key] = res;\n                }\n            }\n            return new ESObject(newOb);\n        };\n        this.__getProperty__ = (props, k) => {\n            if (!(k instanceof ESString) && !(k instanceof ESNumber)) {\n                return new TypeError(Position.void, 'string | number', k.typeName(), str(k));\n            }\n            const key = k.valueOf();\n            if (this.valueOf().hasOwnProperty(key)) {\n                return this.valueOf()[key];\n            }\n            if (this.self.hasOwnProperty(key)) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new ESUndefined();\n        };\n        this.__setProperty__ = ({}, key, value) => {\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.void, 'string', key.typeName(), str(key));\n            }\n            this.__value__[key.valueOf()] = value;\n        };\n        this.hasProperty = (props, k) => {\n            const key = str(k);\n            if (this.valueOf().hasOwnProperty(str(key))) {\n                return new ESBoolean(true);\n            }\n            return new ESBoolean(this.hasOwnProperty(key));\n        };\n        this.clone = () => {\n            const res = new ESObject();\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            res.__value__ = obj;\n            return res;\n        };\n        this.typeCheck = (props, n) => {\n            if (!(n instanceof ESObject)) {\n                return new ESBoolean();\n            }\n            if (Object.keys(this.valueOf()).length !== Object.keys(n.valueOf()).length) {\n                return new ESBoolean();\n            }\n            for (let key of Object.keys(this.valueOf())) {\n                if (!n.valueOf().hasOwnProperty(key) || !this.valueOf().hasOwnProperty(key)) {\n                    return new ESBoolean();\n                }\n                const thisType = this.valueOf()[key];\n                const nValue = n.valueOf()[key];\n                if (!thisType.typeCheck(props, nValue).valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n    }\n    get keys() {\n        return Object.keys(this.valueOf()).map(s => new ESString(s));\n    }\n    set keys(val) { }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESPrimitive } from './esprimitive';\nimport { global, types } from '../../constants';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { Context } from '../context';\nimport { call } from '../functionCaller';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESFunction extends ESPrimitive {\n    constructor(func = (() => { }), arguments_ = [], name = '(anon)', this_ = new ESObject(), returnType = types.any, closure) {\n        super(func, types.function);\n        this.cast = (props, type) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast type 'function'`);\n        };\n        this.clone = () => {\n            return new ESFunction(this.__value__, this.arguments_, this.name, this.this_, this.returnType, this.__closure__);\n        };\n        this.valueOf = () => this;\n        this.str = () => new ESString(`<Func: ${this.name}>`);\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESFunction))\n                return new ESBoolean(false);\n            return new ESBoolean(this.__value__ === n.__value__);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__call__ = ({ context }, ...params) => {\n            this.__closure__.path = context.path;\n            return call(this.__closure__, this, params);\n        };\n        this.__getProperty__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.typeCheck = (props, n) => {\n            if (!(n instanceof ESFunction)) {\n                return new ESBoolean();\n            }\n            if (this.arguments_.length !== n.arguments_.length) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.arguments_.length; i++) {\n                if (!this.arguments_[i].type.typeCheck(props, n.arguments_[i].type).valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            const thisReturnVal = this.__call__(props);\n            if (thisReturnVal instanceof ESError) {\n                return thisReturnVal;\n            }\n            if (!thisReturnVal.__eq__(props, n.returnType).valueOf()) {\n                return new ESBoolean();\n            }\n            return new ESBoolean(true);\n        };\n        this.arguments_ = arguments_;\n        this.info.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        if (closure) {\n            this.__closure__ = closure;\n        }\n        else {\n            this.__closure__ = new Context();\n            this.__closure__.parent = global;\n        }\n        this.info.returnType = str(returnType);\n        this.info.args = arguments_.map(arg => ({\n            name: arg.name,\n            defaultValue: str(arg.defaultValue),\n            type: arg.type.info.name,\n            required: true\n        }));\n    }\n    get name() {\n        var _a;\n        return (_a = this.info.name) !== null && _a !== void 0 ? _a : '(anonymous)';\n    }\n    set name(v) {\n        this.info.name = v;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { str } from '../util/util';\nimport { Node } from \"./nodes\";\nimport { generateESFunctionCallContext } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { ESObject, ESPrimitive, ESUndefined } from \"./primitiveTypes\";\nfunction callNode(self, context, params, fn) {\n    var _a, _b;\n    const res = fn.interpret(context);\n    if (res.error)\n        return res.error;\n    if (res.funcReturn !== undefined) {\n        res.val = res.funcReturn;\n        res.funcReturn = undefined;\n    }\n    if (self.returnType.typeCheck({ context }, res.val).valueOf() === false) {\n        return new TypeError(Position.void, str(self.returnType), ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || 'undefined', (_b = res.val) === null || _b === void 0 ? void 0 : _b.str().valueOf(), '(from function return)');\n    }\n    if (res.val) {\n        return res.val;\n    }\n    else {\n        return new ESUndefined();\n    }\n}\nfunction callNative(self, context, params, fn) {\n    for (let i = params.length; i < fn.length; i++)\n        params.push(new ESUndefined());\n    const res = fn({\n        context\n    }, ...params);\n    if (res instanceof ESError || res instanceof ESPrimitive) {\n        return res;\n    }\n    return new ESUndefined();\n}\nexport function call(context, self, params) {\n    var _a;\n    let callContext = context;\n    context = self.__closure__;\n    context.path = callContext.path;\n    const fn = self.__value__;\n    const newContext = generateESFunctionCallContext(params, self, context);\n    if (newContext instanceof ESError) {\n        return newContext;\n    }\n    let this_ = (_a = self.this_) !== null && _a !== void 0 ? _a : new ESObject();\n    if (!(this_ instanceof ESObject)) {\n        return new TypeError(Position.void, 'object', typeof this_, this_, '\\'this\\' must be an object');\n    }\n    let setRes = newContext.setOwn('this', this_);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    if (fn instanceof Node) {\n        return callNode(self, newContext, params, fn);\n    }\n    else if (typeof fn === 'function') {\n        return callNative(self, newContext, params, fn);\n    }\n    else {\n        return new TypeError(Position.void, 'function', typeof fn);\n    }\n}\n","import { initialise } from \"../init\";\nimport { ESError, TypeError, ReferenceError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESPrimitive, ESUndefined } from \"./primitiveTypes\";\nimport { str } from \"../util/util\";\nimport { ESSymbol } from './symbol';\nimport chalk from \"../util/colours\";\nimport { types } from \"../constants\";\nexport class Context {\n    constructor() {\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        this.deleted = false;\n        this.path_ = '';\n    }\n    get path() {\n        if (this.path_ || !this.parent) {\n            return this.path_;\n        }\n        return this.parent.path;\n    }\n    set path(val) {\n        this.path_ = val;\n    }\n    get parent() {\n        return this.parent_;\n    }\n    set parent(val) {\n        if (val == this) {\n            console.error(chalk.red(`Setting context parent to self`));\n            return;\n        }\n        this.parent_ = val;\n    }\n    has(identifier) {\n        if (!identifier)\n            return false;\n        return this.get(identifier) !== undefined;\n    }\n    hasOwn(identifier) {\n        return this.symbolTable[identifier] instanceof ESSymbol;\n    }\n    get(identifier) {\n        let symbol = this.getSymbol(identifier);\n        if (symbol instanceof ESError || symbol == undefined) {\n            return symbol;\n        }\n        return symbol.value;\n    }\n    getRawSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key].value;\n        return symbols;\n    }\n    getSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key];\n        return symbols;\n    }\n    getSymbol(identifier) {\n        let symbol = this.symbolTable[identifier];\n        if (symbol !== undefined && !symbol.isAccessible)\n            return new TypeError(Position.void, 'assessable', 'inaccessible', symbol.identifier);\n        if (symbol === undefined && this.parent) {\n            let res = this.parent.getSymbol(identifier);\n            if (res instanceof ESError)\n                return res;\n            if (!res)\n                return new ReferenceError(Position.void, identifier);\n            symbol = res;\n        }\n        return symbol;\n    }\n    set(identifier, value, options = {}) {\n        let context = this;\n        if (options.global) {\n            context = this.root;\n        }\n        else {\n            while (!context.hasOwn(identifier) && context.parent !== undefined) {\n                context = context.parent;\n            }\n            if (!context.hasOwn(identifier)) {\n                context = this;\n            }\n        }\n        return context.setOwn(identifier, value, options);\n    }\n    setOwn(identifier, value, options = {}) {\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        if (options.global && !this.initialisedAsGlobal) {\n            options.global = false;\n        }\n        if (!options.forceThroughConst) {\n            let symbol = this.symbolTable[identifier];\n            if (symbol === null || symbol === void 0 ? void 0 : symbol.isConstant)\n                return new TypeError(Position.void, 'dynamic', 'constant', identifier);\n        }\n        this.symbolTable[identifier] = new ESSymbol(value, identifier, options);\n    }\n    remove(identifier) {\n        delete this.symbolTable[identifier];\n    }\n    clear() {\n        for (let symbol in this.symbolTable) {\n            this.remove(symbol);\n        }\n        this.parent = undefined;\n        this.deleted = true;\n    }\n    get root() {\n        let parent = this;\n        while (parent.parent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    get keys() {\n        return Object.keys(this.symbolTable);\n    }\n    resetAsGlobal() {\n        var _a, _b;\n        if (!this.initialisedAsGlobal)\n            return;\n        const printFunc = this.root.get('print');\n        const inputFunc = this.root.get('input');\n        if (!(printFunc instanceof ESPrimitive) || !(inputFunc instanceof ESPrimitive)) {\n            console.error('Error with print and input functions.');\n            return;\n        }\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        initialise(this, ((_a = printFunc.valueOf()) === null || _a === void 0 ? void 0 : _a.func) || console.log, ((_b = inputFunc.valueOf()) === null || _b === void 0 ? void 0 : _b.func) || (() => { }));\n    }\n    clone() {\n        const newContext = new Context();\n        newContext.parent = this.parent;\n        newContext.deleted = this.deleted;\n        newContext.initialisedAsGlobal = this.initialisedAsGlobal;\n        newContext.symbolTable = Object.assign(Object.assign({}, newContext.symbolTable), this.symbolTable);\n        return newContext;\n    }\n    deepClone() {\n        var _a;\n        let clone = this.clone();\n        clone.parent = (_a = clone.parent) === null || _a === void 0 ? void 0 : _a.deepClone();\n        return clone;\n    }\n    log() {\n        console.log('---- CONTEXT ----');\n        for (let key in this.symbolTable) {\n            const symbol = this.symbolTable[key];\n            let out = key;\n            if (symbol.isConstant)\n                out += ' (CONST)';\n            if (!symbol.isAccessible)\n                out += ' (INACCESSIBLE)';\n            out += ': ';\n            out += str(this.symbolTable[key].value);\n            console.log(out);\n        }\n        console.log('-----------------');\n    }\n}\nexport function generateESFunctionCallContext(params, self, parent) {\n    const newContext = new Context();\n    newContext.parent = parent;\n    let max = Math.max(params.length, self.arguments_.length);\n    for (let i = 0; i < max; i++) {\n        let value = new ESUndefined();\n        let type = types.any;\n        if (!self.arguments_[i]) {\n            continue;\n        }\n        const arg = self.arguments_[i];\n        if (params[i] instanceof ESPrimitive) {\n            type = params[i].__type__;\n            value = params[i];\n        }\n        const typeIncludes = arg.type.typeCheck({ context: parent }, params[i]);\n        if (typeIncludes instanceof ESError)\n            return typeIncludes;\n        if (!typeIncludes.valueOf()) {\n            return new TypeError(Position.void, str(arg.type), str(type), str(value));\n        }\n        newContext.setOwn(arg.name, value, {\n            forceThroughConst: true\n        });\n    }\n    let setRes = newContext.setOwn('args', new ESArray(params), {\n        forceThroughConst: true\n    });\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    return newContext;\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESNamespace extends ESPrimitive {\n    constructor(name, value, mutable = false) {\n        super(value, types.object);\n        this.cast = ({}) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast type 'namespace'`);\n        };\n        this.clone = () => {\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            return new ESNamespace(this.name, obj);\n        };\n        this.str = () => {\n            const keys = Object.keys(this.valueOf());\n            return new ESString(`<Namespace ${str(this.name)}${keys.length > 0 ? ': ' : ''}${keys.slice(0, 5)}${keys.length >= 5 ? '...' : ''}>`);\n        };\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.valueOf().hasOwnProperty(key.valueOf())) {\n                const symbol = this.valueOf()[key.valueOf()];\n                if (symbol.isAccessible) {\n                    return symbol.value;\n                }\n            }\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.void, 'string', key.typeName());\n            }\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this.self);\n        };\n        this.typeCheck = this.__eq__;\n        this.info.name = str(name);\n        this.mutable = mutable;\n    }\n    get name() {\n        return new ESString(this.info.name);\n    }\n    set name(v) {\n        this.info.name = v.valueOf();\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESString)) {\n            return new TypeError(Position.void, 'string', key.typeName().valueOf(), str(key));\n        }\n        let idx = str(key);\n        if (!this.mutable) {\n            return new TypeError(Position.void, 'mutable', 'immutable', `${str(this.name)}`);\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        const symbol = this.__value__[idx];\n        if (!symbol) {\n            return new ESError(Position.void, 'SymbolError', `Symbol ${idx} is not declared in namespace ${str(this.name)}.`);\n        }\n        if (symbol.isConstant) {\n            return new TypeError(Position.void, 'mutable', 'immutable', `${str(this.name)}[${idx}]`);\n        }\n        if (!symbol.isAccessible) {\n            return new TypeError(Position.void, 'accessible', 'inaccessible', `${str(this.name)}[${idx}]`);\n        }\n        symbol.value = value;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { strip, wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESJSBinding extends ESPrimitive {\n    constructor(value, name = '<AnonNative>', functionsTakeProps = false) {\n        super(value, types.object);\n        this.cast = (props) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast native object`);\n        };\n        this.clone = () => new ESJSBinding(this.__value__);\n        this.str = () => {\n            try {\n                return new ESString(`<NativeObj ${JSON.stringify(this.__value__)}>`);\n            }\n            catch (e) {\n                return new ESString(`<NativeObj ${this.__value__}>`);\n            }\n        };\n        this.__eq__ = ({}, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, k) => {\n            const key = str(k);\n            const val = this.__value__;\n            const res = val[key];\n            if (res === undefined) {\n                if (this.self.hasOwnProperty(key)) {\n                    return wrap(this.self[str(key)], true);\n                }\n                return new IndexError(Position.void, key, this);\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            if (typeof res === 'function') {\n                const fTakesProps = this.functionsTakeProps;\n                return new ESFunction((props, ...args) => {\n                    if (!fTakesProps) {\n                        args = args.map(o => strip(o, props));\n                        const res = val[key](...args);\n                        return wrap(res);\n                    }\n                    else {\n                        return wrap(val[key](props, ...args));\n                    }\n                });\n            }\n            return wrap(res);\n        };\n        this.__call__ = (props, ...args) => {\n            if (typeof this.__value__ !== 'function') {\n                return new TypeError(Position.void, 'function', typeof this.__value__, str(this));\n            }\n            let res;\n            if (this.functionsTakeProps) {\n                try {\n                    res = new this.__value__(props, ...args);\n                }\n                catch (_a) {\n                    res = this.__value__(props, ...args);\n                }\n            }\n            else {\n                try {\n                    res = new this.__value__(...args.map(o => strip(o, props)));\n                }\n                catch (_b) {\n                    res = this.__value__(...args.map(o => strip(o, props)));\n                }\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            return wrap(res);\n        };\n        this.hasProperty = (props, key) => {\n            return new ESBoolean(!(this.__getProperty__(props, key) instanceof ESError));\n        };\n        this.typeCheck = this.__eq__;\n        this.info.name = str(name);\n        this.functionsTakeProps = functionsTakeProps;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESPrimitive } from './primitives/esprimitive';\nimport { ESArray } from './primitives/esarray';\nimport { ESBoolean } from './primitives/esboolean';\nimport { ESErrorPrimitive } from './primitives/eserrorprimitive';\nimport { ESFunction } from './primitives/esfunction';\nimport { ESNumber } from './primitives/esnumber';\nimport { ESObject } from './primitives/esobject';\nimport { ESString } from './primitives/esstring';\nimport { ESType } from './primitives/estype';\nimport { ESUndefined } from './primitives/esundefined';\nimport { ESNamespace } from './primitives/esnamespace';\nimport { ESJSBinding } from \"./primitives/esjsbinding\";\nimport { types } from \"../constants\";\nexport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNumber, ESPrimitive, ESString, ESObject, ESType, ESUndefined, ESNamespace, ESJSBinding };\nexport function initPrimitiveTypes() {\n    types.type = new ESType(true, 'Type');\n    types.undefined = new ESType(true, 'Undefined');\n    types.string = new ESType(true, 'String');\n    types.array = new ESType(true, 'Array');\n    types.number = new ESType(true, 'Number');\n    types.any = new ESType(true, 'Any');\n    types.function = new ESType(true, 'Function');\n    types.bool = new ESType(true, 'Boolean');\n    types.object = new ESType(true, 'Object');\n    types.error = new ESType(true, 'Error');\n    types.any.info = {\n        name: 'any',\n        description: 'Matches any other type',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.number.info = {\n        name: 'any',\n        description: 'The ES Number type. Is a a double-precision 64-bit binary format IEEE 754 value, like double in Java and C#',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.string.info = {\n        name: 'string',\n        description: 'The ES String type. Holds an array of characters, and can be defined with any of \\', \" and `. Can be indexed like an array.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.bool.info = {\n        name: 'bool',\n        description: 'The ES Bool type. Exactly two instances exist, true and false.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.function.info = {\n        name: 'function',\n        description: 'The ES Function type. Is a block of code which executes when called and takes in 0+ parameters.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.array.info = {\n        name: 'array',\n        description: 'The ES Array type. Defines a set of items of any type which can be accessed by an index with [].',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.object.info = {\n        name: 'object',\n        description: 'The ES Object type. Similar to JS objects or python dictionaries.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.error.info = {\n        name: 'error',\n        description: 'The ES Error type. Call to throw an error.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.type.info = {\n        name: 'type',\n        description: 'The ES Type type. Call to get the type of a value at a string.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n}\n","import { primitiveMethods } from '../constants';\nimport { Context } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESFunction, ESNumber, ESObject, ESString, ESType, ESUndefined } from \"./primitiveTypes\";\nfunction dealWithExtends(context, class_, instance, this_, callContext) {\n    if (!(class_ instanceof ESType)) {\n        return new TypeError(Position.void, 'Type', typeof class_, class_);\n    }\n    const superFunc = new ESFunction(({ context }, ...args) => {\n        const newContext = new Context();\n        newContext.parent = context;\n        if (class_.__extends__) {\n            let _a = dealWithExtends(newContext, class_.__extends__, instance, this_, callContext);\n            if (_a instanceof ESError) {\n                return _a;\n            }\n        }\n        const initFunc = class_ === null || class_ === void 0 ? void 0 : class_.__init__;\n        if (!initFunc) {\n            return;\n        }\n        initFunc.this_ = this_;\n        initFunc.__closure__ = newContext;\n        const res_ = initFunc.__call__({ context: newContext }, ...args);\n        if (res_ instanceof ESError) {\n            return res_;\n        }\n    }, undefined, 'super', this_);\n    let setRes = context.setOwn('super', superFunc);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    const res = createInstance(class_, { context }, [], false, instance);\n    if (res instanceof ESError) {\n        return res;\n    }\n}\nexport function createInstance(type, { context }, params, runInit = true, on = {}) {\n    var _b;\n    if (type.primitive) {\n        if (params.length < 1) {\n            return new ESUndefined();\n        }\n        switch (type.__name__) {\n            case 'Undefined':\n            case 'Type':\n                if (params.length < 1) {\n                    return new ESType();\n                }\n                else {\n                    return new ESString(params[0].typeName());\n                }\n            case 'String':\n                return new ESString(params[0].str().valueOf());\n            case 'Array':\n                return new ESArray(params);\n            case 'Number':\n                return new ESNumber(params[0].valueOf());\n            case 'Function':\n                return new ESFunction(params[0].valueOf());\n            case 'Boolean':\n                return new ESBoolean(params[0].bool().valueOf());\n            default:\n                return wrap(params[0]);\n        }\n    }\n    const newContext = new Context();\n    newContext.parent = (_b = type.__init__) === null || _b === void 0 ? void 0 : _b.__closure__;\n    const instance = new ESObject();\n    if (type.__extends__) {\n        let res = dealWithExtends(newContext, type.__extends__, on, instance, context);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__value__ = on;\n    for (let method of type.__methods__) {\n        const methodClone = method.clone();\n        methodClone.this_ = instance;\n        on[method.name] = methodClone;\n        if (primitiveMethods.indexOf(method.name) !== -1) {\n            instance[method.name] = methodClone.__call__;\n        }\n    }\n    if (runInit && type.__init__) {\n        type.__init__.this_ = instance;\n        type.__init__.__closure__ = newContext;\n        const res = type.__init__.__call__({ context: newContext }, ...params);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__type__ = type;\n    type.__instances__.push(instance);\n    return instance;\n}\n","import { ESPrimitive } from './esprimitive';\nimport { ESError, InvalidOperationError, TypeError } from '../../errors';\nimport { createInstance } from '../instantiator';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nimport { Position } from \"../../position\";\nimport { str } from \"../../util/util\";\nimport { types } from \"../../constants\";\nimport { ESTypeArray } from \"./esarray\";\nexport class ESType extends ESPrimitive {\n    constructor(isPrimitive = false, name = '(anon)', __methods__ = [], __extends__, __init__) {\n        super(undefined, types === null || types === void 0 ? void 0 : types.type);\n        this.__instances__ = [];\n        this.clone = () => {\n            return new ESType(this.primitive, this.__name__, this.__methods__, this.__extends__, this.__init__);\n        };\n        this.isa = (props, type) => {\n            return new ESBoolean(type === types.type);\n        };\n        this.cast = (props, type) => {\n            return new InvalidOperationError('cast', this);\n        };\n        this.typeCheck = (props, n) => {\n            var _a;\n            if (!n)\n                return new ESBoolean();\n            let t = n.__type__;\n            if (this === types.any ||\n                t === types.any ||\n                this === t) {\n                return new ESBoolean(true);\n            }\n            while (t instanceof ESType) {\n                if (((_a = t.__extends__) === null || _a === void 0 ? void 0 : _a.__eq__(props, this).valueOf()) === true) {\n                    return new ESBoolean(true);\n                }\n                if (!t.__extends__) {\n                    break;\n                }\n                t = t.__extends__;\n            }\n            return new ESBoolean();\n        };\n        this.__eq__ = (props, t) => {\n            return new ESBoolean(t === this);\n        };\n        this.__call__ = (props, ...params) => {\n            return createInstance(this, props, params || []);\n        };\n        this.str = () => new ESString(this.__name__);\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, k) => {\n            if (!(k instanceof ESString)) {\n                if (this === types.array) {\n                    return new ESTypeArray(k);\n                }\n                return new TypeError(Position.void, 'string', k.typeName(), str(k));\n            }\n            const key = k.valueOf();\n            if (this.self.hasOwnProperty(key)) {\n                return wrap(this.self[key], true);\n            }\n            return new ESTypeArray(k);\n        };\n        this.primitive = isPrimitive;\n        this.__name__ = name;\n        this.info.name = name;\n        this.__extends__ = __extends__;\n        this.__methods__ = __methods__;\n        if (__init__) {\n            __init__.name = name;\n            this.__init__ = __init__;\n        }\n        if (!types.type) {\n            this.__type__ = this;\n        }\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\nexport class ESTypeUnion extends ESType {\n    constructor(left, right) {\n        super(false, `(${str(left)}) | (${str(right)})`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.typeCheck = (props, t) => {\n            const leftRes = this.__left__.typeCheck(props, t);\n            const rightRes = this.__right__.typeCheck(props, t);\n            if (leftRes instanceof ESError)\n                return leftRes;\n            if (rightRes instanceof ESError)\n                return rightRes;\n            return new ESBoolean(leftRes.valueOf() ||\n                rightRes.valueOf());\n        };\n        this.clone = () => {\n            return new ESTypeUnion(this.__left__, this.__right__);\n        };\n        this.__eq__ = (props, t) => {\n            return new ESBoolean(t instanceof ESTypeUnion &&\n                this.__left__.__eq__(props, t.__left__).valueOf() === true &&\n                this.__right__.__eq__(props, t.__right__).valueOf() === true);\n        };\n        this.__left__ = left;\n        this.__right__ = right;\n    }\n}\nexport class ESTypeIntersection extends ESType {\n    constructor(left, right) {\n        super(false, `(${str(left)}) & (${str(right)})`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.typeCheck = (props, t) => {\n            const leftRes = this.__left__.typeCheck(props, t);\n            const rightRes = this.__right__.typeCheck(props, t);\n            if (leftRes instanceof ESError)\n                return leftRes;\n            if (rightRes instanceof ESError)\n                return rightRes;\n            return new ESBoolean(leftRes.valueOf() &&\n                rightRes.valueOf());\n        };\n        this.clone = () => {\n            return new ESTypeIntersection(this.__left__, this.__right__);\n        };\n        this.__eq__ = (props, t) => {\n            return new ESBoolean(t instanceof ESTypeIntersection &&\n                this.__left__.__eq__(props, t.__left__).valueOf() === true &&\n                this.__right__.__eq__(props, t.__right__).valueOf() === true);\n        };\n        this.__left__ = left;\n        this.__right__ = right;\n    }\n}\nexport class ESTypeNot extends ESType {\n    constructor(type) {\n        super(false, `~(${str(type)})`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.typeCheck = (props, t) => {\n            const res = this.__val__.typeCheck(props, t);\n            if (res instanceof ESError)\n                return res;\n            return new ESBoolean(!res.valueOf());\n        };\n        this.clone = () => {\n            return new ESTypeNot(this.__val__);\n        };\n        this.__eq__ = (props, t) => {\n            return new ESBoolean(t instanceof ESTypeNot &&\n                this.__val__.__eq__(props, t.__val__).valueOf() === true);\n        };\n        this.__val__ = type;\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { wrap } from \"./wrapStrip\";\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESNumber extends ESPrimitive {\n    constructor(value = 0) {\n        super(value, types.number);\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return this;\n                case types.string:\n                    return this.str();\n                case types.array:\n                    return new ESArray(new Array(this.valueOf()));\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(this.valueOf().toString());\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() + n.valueOf());\n        };\n        this.__subtract__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() - n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() * n.valueOf());\n        };\n        this.__divide__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() / n.valueOf());\n        };\n        this.__pow__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESNumber(Math.pow(this.valueOf(), n.valueOf()));\n        };\n        this.__mod__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESNumber(this.valueOf() % n.valueOf());\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new ESBoolean(false);\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() > n.valueOf());\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() < n.valueOf());\n        };\n        this.__bool__ = () => {\n            return new ESBoolean(this.valueOf() > 0);\n        };\n        this.bool = this.__bool__;\n        this.clone = () => new ESNumber(this.valueOf());\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.typeCheck = this.__eq__;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESBoolean extends ESPrimitive {\n    constructor(val = false) {\n        super(Boolean(val), types.bool);\n        this.__getProperty__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESBoolean)) {\n                return new TypeError(Position.void, 'Boolean', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__bool__ = () => this;\n        this.__and__ = (props, n) => new ESBoolean(this.valueOf() && n.bool().valueOf());\n        this.__or__ = (props, n) => {\n            return new ESBoolean(this.valueOf() || n.bool().valueOf());\n        };\n        this.str = () => new ESString(this.valueOf() ? 'true' : 'false');\n        this.clone = () => new ESBoolean(this.valueOf());\n        this.bool = () => this;\n        this.typeCheck = this.__eq__;\n        this.info = {\n            name: str(val),\n            description: `Boolean global constant which evaluates to ${str(val)}, the opposite of ${str(!val)}`,\n            file: 'built-in',\n            isBuiltIn: true,\n            helpLink: 'https://en.wikipedia.org/wiki/Boolean_expression'\n        };\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, InvalidOperationError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nimport { ESType, ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESArray extends ESPrimitive {\n    constructor(values = []) {\n        super(values, types.array);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.len);\n                case types.boolean:\n                    return this.bool();\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(str(this.valueOf()));\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESArray)) {\n                return new ESBoolean();\n            }\n            if (n.len !== this.len) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.len; i++) {\n                const thisElement = this.valueOf()[i];\n                const nElement = n.valueOf()[i];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESArray)) {\n                return new TypeError(Position.void, 'array', n.typeName().valueOf(), n);\n            }\n            return new ESArray([...this.valueOf(), ...n.valueOf()]);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESUndefined();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return this.valueOf()[idx];\n            }\n            return new ESUndefined();\n        };\n        this.contains = (props, val) => {\n            for (let element of this.__value__) {\n                if (val.__eq__(props, element)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        this.clone = () => {\n            const newArr = [];\n            for (let element of this.valueOf()) {\n                newArr.push(element);\n            }\n            return new ESArray(newArr);\n        };\n        this.typeCheck = (props, n) => {\n            if (!(n instanceof ESArray) || this.len !== n.len) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.__value__.length; i++) {\n                const res = this.__value__[i].typeCheck(props, n.__value__[i]);\n                if (res instanceof ESError)\n                    return res;\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.len = values.length;\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESNumber)) {\n            return;\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        let idx = key.valueOf();\n        while (idx < 0) {\n            idx = this.valueOf().length + idx;\n        }\n        this.__value__[idx] = value;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\nexport class ESTypeArray extends ESType {\n    constructor(type) {\n        super(false, `array[${str(type)}]`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.typeCheck = (props, t) => {\n            if (!(t instanceof ESArray)) {\n                return new ESBoolean();\n            }\n            for (const element of t.valueOf()) {\n                if (!this.type.typeCheck(props, element).valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.clone = () => {\n            return new ESTypeArray(this.type);\n        };\n        this.type = type;\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESPrimitive } from './esprimitive';\nimport { wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESString extends ESPrimitive {\n    constructor(value = '') {\n        super(value, types.string);\n        this.str = () => this;\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    const num = parseFloat(this.valueOf());\n                    if (isNaN(num)) {\n                        return new ESError(Position.void, 'TypeError', `This string is not a valid number`);\n                    }\n                    return new ESNumber(num);\n                case types.string:\n                    return this;\n                case types.array:\n                    return new ESArray(this.valueOf().split('').map(s => new ESString(s)));\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESString(this.valueOf() + n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESString(this.valueOf().repeat(n.valueOf()));\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new ESBoolean(false);\n            }\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf().length > n.valueOf().length);\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf().length < n.valueOf().length);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.len = () => {\n            return new ESNumber(this.valueOf().length);\n        };\n        this.clone = () => new ESString(this.valueOf());\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESString();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return new ESString(this.valueOf()[idx]);\n            }\n            return new ESString();\n        };\n        this.typeCheck = this.__eq__;\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESNumber))\n            return;\n        if (!(value instanceof ESString))\n            value = new ESString(str(value));\n        let idx = key.valueOf();\n        while (idx < 0)\n            idx = this.valueOf().length + idx;\n        const strToInsert = value.str().valueOf();\n        let firstPart = this.__value__.substr(0, idx);\n        let lastPart = this.__value__.substr(idx + strToInsert.length);\n        this.__value__ = firstPart + strToInsert + lastPart;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESString } from './primitives/esstring';\nimport { types } from \"../constants\";\nexport class ESSymbol {\n    constructor(value, identifier, options = {}) {\n        var _a, _b, _c;\n        this.clone = () => {\n            return new ESSymbol(this.value.clone(), this.identifier, {\n                isConstant: this.isConstant,\n                isAccessible: this.isAccessible\n            });\n        };\n        this.str = () => new ESString(`<Symbol: ${this.identifier}>`);\n        this.value = value;\n        this.identifier = identifier;\n        this.isConstant = (_a = options.isConstant) !== null && _a !== void 0 ? _a : false;\n        this.isAccessible = (_b = options.isAccessible) !== null && _b !== void 0 ? _b : true;\n        this.type = (_c = options.type) !== null && _c !== void 0 ? _c : types.any;\n    }\n}\n","import { ESError } from '../../errors';\nimport { ESSymbol } from '../symbol';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESPrimitive } from './esprimitive';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESUndefined } from './esundefined';\nimport { ESJSBinding } from \"./esjsbinding\";\nexport function wrap(thing, functionsTakeProps = false) {\n    if (thing instanceof ESPrimitive) {\n        return thing;\n    }\n    else if (thing === undefined || thing === null) {\n        return new ESUndefined();\n    }\n    else if (thing instanceof ESError) {\n        return new ESErrorPrimitive(thing);\n    }\n    else if (thing instanceof ESSymbol) {\n        return thing.value;\n    }\n    else if (typeof thing === 'number') {\n        return new ESNumber(thing);\n    }\n    else if (typeof thing === 'string') {\n        return new ESString(thing);\n    }\n    else if (typeof thing === 'boolean') {\n        return new ESBoolean(thing);\n    }\n    else if (typeof thing === 'bigint') {\n        return new ESNumber(Number(thing));\n    }\n    else if (typeof thing === 'symbol') {\n        return new ESString(String(thing));\n    }\n    return new ESJSBinding(thing, undefined, functionsTakeProps);\n}\nexport function strip(thing, props) {\n    if (thing == undefined) {\n        return undefined;\n    }\n    else if (!(thing instanceof ESPrimitive)) {\n        return thing;\n    }\n    else if (thing instanceof ESArray) {\n        return thing.valueOf().map(m => strip(m, props), props);\n    }\n    else if (thing instanceof ESObject) {\n        let val = {};\n        for (let key in thing.valueOf()) {\n            val[key] = strip(thing.valueOf()[key], props);\n        }\n        return val;\n    }\n    else if (thing instanceof ESUndefined) {\n        return undefined;\n    }\n    else if (thing instanceof ESFunction) {\n        return (...args) => {\n            const res = thing.__call__(props, ...args.map(a => wrap(a)));\n            if (res instanceof ESError) {\n                return res;\n            }\n            return strip(res, props);\n        };\n    }\n    else if (thing instanceof ESType) {\n        return thing;\n    }\n    return thing.valueOf();\n}\n","import { IS_NODE_INSTANCE } from \"../constants\";\nconst codes = {\n    red: 31,\n    yellow: 33,\n    green: 32,\n    cyan: 36,\n    blue: 34,\n    grey: 2\n};\nconst c = {};\nfor (let code of Object.keys(codes)) {\n    c[code] = (s) => {\n        s || (s = '');\n        if (IS_NODE_INSTANCE) {\n            return `\\x1b[${codes[code]}m` + s + '\\x1b[0m';\n        }\n        return `<span style=\"color: ${code}\">${s}</span>`;\n    };\n}\nexport default c;\n","import { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from '../runtime/primitives/wrapStrip';\nimport { ESArray, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESUndefined } from '../runtime/primitiveTypes';\nimport { indent, sleep, str } from '../util/util';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport chalk from \"../util/colours\";\nexport const builtInFunctions = {\n    'range': [({ context }, minP, maxP, stepP) => {\n            if (!(minP instanceof ESNumber)) {\n                return new ESArray();\n            }\n            const min = minP.valueOf();\n            if (maxP instanceof ESUndefined) {\n                try {\n                    return new ESArray([...Array(min).keys()].map(n => new ESNumber(n)));\n                }\n                catch (e) {\n                    return new ESError(Position.void, 'RangeError', `Cannot make range of length '${str(min)}'`);\n                }\n            }\n            let step = 1;\n            if (!(maxP instanceof ESNumber)) {\n                return new TypeError(Position.void, 'number', maxP.typeName(), str(maxP));\n            }\n            let max = maxP.valueOf();\n            if (!(stepP instanceof ESUndefined)) {\n                if (!(stepP instanceof ESNumber)) {\n                    return new TypeError(Position.void, 'number', stepP.typeName(), str(stepP));\n                }\n                step = stepP.valueOf();\n            }\n            let arr = [];\n            let i = min;\n            while (i < max) {\n                arr.push(new ESNumber(i));\n                i += step;\n            }\n            return new ESArray(arr);\n        }, {\n            args: [{\n                    name: 'N',\n                    type: 'Number',\n                }],\n            description: 'Generates an array of integers given N. Starts at 0 and goes to N-1. Can be used like for i in range(10) ..., similarly to python.',\n            returns: 'array of numbers from 0 to N-1',\n            returnType: 'number[] | RangeError'\n        }],\n    'log': [({ context }, ...msgs) => {\n            console.log(...msgs.map(m => str(m)));\n        }, {\n            args: [{\n                    name: '...values',\n                    type: 'any[]'\n                }],\n            description: 'Uses console.log to log all values',\n            returnType: 'void'\n        }],\n    'parse_num': [({ context }, num) => {\n            try {\n                const val = parseFloat(str(num));\n                if (isNaN(val)) {\n                    return new ESError(Position.void, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n                }\n                return new ESNumber(val);\n            }\n            catch (e) {\n                return new ESError(Position.void, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n            }\n        }, {\n            args: [{\n                    name: 'num',\n                    type: 'any'\n                }],\n            description: `Converts a string of digits into a number. Works with decimals and integers. Calls .str() on value before using native JS 'parseFloat' function. Returns TypeError if the string can't be converted into a number.`,\n            returnType: 'number | TypeError'\n        }],\n    'help': [({ context }, ...things) => {\n            if (!things.length) {\n                return new ESString('Visit https://entropygames.io/entropy-script for help with Entropy Script!\\n' +\n                    'Try \\'help(<anything>)\\' for help about a particular object.');\n            }\n            let out = '';\n            for (const thing of things) {\n                if (!(thing instanceof ESPrimitive)) {\n                    console.log('Invalid arg not primitive: ' + str(thing));\n                    return;\n                }\n                const info = thing.info;\n                out += `${chalk.yellow(`Help on '${info.name || '(anonymous)'}'`)}:\n    \n    ${chalk.yellow('Value')}: ${indent(indent(str(thing)))}\n    ${chalk.yellow('Type')}: '${str(thing.typeName())}'\n    ${chalk.yellow('Location')}: ${info.file || chalk.yellow('(unknown)')}\n    \n        ${chalk.green(info.description) || `No description.`}\n        \n    ${info.helpLink ? chalk.cyan(info.helpLink + '\\n\\n') : ''}\n`;\n                if (info.args && thing instanceof ESFunction) {\n                    const total = info.args.length;\n                    const required = info.args.filter(a => a.required).length;\n                    if (total == required)\n                        out += chalk.yellow(`    Arguments (${total}): \\n`);\n                    else\n                        out += chalk.yellow(`    Arguments (${required}-${total}): \\n`);\n                    for (const [idx, arg] of info.args.entries()) {\n                        if (typeof arg !== 'object')\n                            out += `        ${idx + 1}. INVALID ARG INFO`;\n                        else\n                            out += `        ${idx + 1}. ${arg.name}${arg.required === false ? chalk.yellow(' (optional) ') : ' '}{${arg.type}} ${arg.description || ''}\\n`;\n                    }\n                    out += `\\n\\n`;\n                    if (info.returns)\n                        out += `    Returns: ${info.returns}\\n\\n`;\n                    if (info.returnType)\n                        out += `    Return Type: ${info.returnType}\\n\\n`;\n                }\n                if (info.contents && (thing instanceof ESObject || thing instanceof ESNamespace)) {\n                    out += '    Properties: \\n      ';\n                    for (let contents of info.contents)\n                        out += contents.name + '\\n      ';\n                }\n            }\n            console.log(out);\n            if (things.length > 1) {\n                return new ESArray(things);\n            }\n            if (things) {\n                return things[0];\n            }\n        }, {\n            args: [{\n                    name: 'value',\n                    type: 'any'\n                }],\n            description: 'logs info on value',\n            returns: 'value passed in'\n        }],\n    'delete': [({ context }, name) => {\n            const id = str(name);\n            if (!context.has(id)) {\n                return new ESError(Position.void, 'DeleteError', `Identifier '${id}' not found in the current context`);\n            }\n            context.set(id, new ESUndefined());\n        }, {\n            name: 'delete',\n            args: [{ name: 'identifier', type: 'string' }],\n            description: 'Deletes a variable from the current context'\n        }],\n    '__path__': [({ context }) => {\n            return new ESString(context.path);\n        }, {\n            name: '__path__',\n            args: [],\n            description: 'Returns the current path'\n        }],\n    '__symbols__': [({ context }) => {\n            return wrap(context.keys);\n        }, {\n            name: '__allSymbols',\n            args: [],\n            description: 'Returns an array of the names of all symbols in the current context'\n        }],\n    'using': [({ context }, module, global_) => {\n            if (!(module instanceof ESNamespace) && !(module instanceof ESJSBinding)) {\n                return new TypeError(Position.void, 'Namespace', str(module.typeName()));\n            }\n            let global = true;\n            if (global_) {\n                if (!global_.bool().valueOf()) {\n                    global = false;\n                }\n            }\n            const values = module.valueOf();\n            if (global) {\n                context = context.root;\n            }\n            else if (context.parent) {\n                context = context.parent;\n            }\n            for (const key of Object.keys(values)) {\n                context.setOwn(key, values[key].value, {\n                    isConstant: values[key].isConstant,\n                    isAccessible: values[key].isAccessible,\n                    forceThroughConst: true\n                });\n            }\n        }, {\n            name: 'using',\n            args: [\n                { name: 'module', type: 'namespace' },\n                { name: 'global', type: 'bool' }\n            ],\n            description: 'Adds contents of a namespace to the global context'\n        }],\n    'sleep': [({ context }, time, cb) => {\n            if (!(time instanceof ESNumber)) {\n                return new TypeError(Position.void, 'number', str(time.typeName()), str(time));\n            }\n            sleep(time.valueOf())\n                .then(() => {\n                const res = cb.__call__({ context });\n                if (res instanceof ESError) {\n                    console.log(res.str);\n                }\n            });\n        }, {\n            name: 'sleep',\n            args: [{ name: 'n', type: 'number' }, { name: 'callback', type: 'function' }],\n            description: 'Waits n milliseconds and then executes the callback'\n        }],\n    'throw': [({ context }, name, details) => {\n            return new ESError(Position.void, str(name), str(details));\n        }, {\n            name: 'throw',\n            args: [{ name: 'name', type: 'string' }, { name: 'details', type: 'string' }]\n        }],\n};\n","import { Position } from '../../position';\nimport { strip } from '../../runtime/primitives/wrapStrip';\nimport { ESObject, ESString } from '../../runtime/primitiveTypes';\nimport { str } from '../../util/util';\nimport { TypeError } from '../../errors';\nconst module = {\n    parse: (props, json) => {\n        return new ESObject(JSON.parse(str(json)));\n    },\n    stringify: (props, json) => {\n        if (!(json instanceof ESObject)) {\n            return new TypeError(Position.void, 'object', str(json.typeName()), str(json));\n        }\n        return new ESString(JSON.stringify(strip(json, props)));\n    }\n};\nexport default module;\n","import chalk from './util/colours';\nexport const config = {\n    permissions: {\n        networking: false,\n        imports: true,\n        accessDOM: false,\n        useSTD: true,\n        fileSystem: false,\n    }\n};\nfunction pathAsString(path) {\n    let res = '[';\n    for (let p of path) {\n        res += p + '][';\n    }\n    return res.substring(0, res.length - 1);\n}\nfunction parsePartOfConfig(config, configJSON, path = []) {\n    const configKeys = Object.keys(config);\n    const unknownProps = Object.keys(configJSON).filter(x => !configKeys.includes(x));\n    for (const k of unknownProps) {\n        console.error(chalk.red(`Cannot parse config`), ` - unknown property config${chalk.yellow(pathAsString([...path, k]))}`);\n    }\n    for (let key of configKeys) {\n        if (!configJSON.hasOwnProperty(key)) {\n            continue;\n        }\n        if (typeof config[key] !== typeof configJSON[key]) {\n            console.error(chalk.red(`Cannot parse config`), ` - config${chalk.yellow(pathAsString([...path, key]))} should be of type '${chalk.yellow(typeof config[key])}'`);\n            return;\n        }\n        if (typeof config[key] === 'object') {\n            parsePartOfConfig(config[key], configJSON[key], [...path, key]);\n            continue;\n        }\n        config[key] = configJSON[key];\n    }\n}\nexport function parseConfig(configJSON) {\n    parsePartOfConfig(config, configJSON);\n}\n","import { IS_NODE_INSTANCE } from '../../constants';\nimport { ReferenceError, InvalidRuntimeError, PermissionRequiredError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESJSBinding } from \"../../runtime/primitives/esjsbinding\";\nimport { config } from \"../../config\";\nconst module = () => {\n    if (!config.permissions.accessDOM) {\n        return new PermissionRequiredError('No access to DOM');\n    }\n    if (IS_NODE_INSTANCE) {\n        return new InvalidRuntimeError();\n    }\n    const w = window;\n    if (typeof w === 'undefined' || !('$' in w)) {\n        return new ReferenceError(Position.void, '$ must be property of window to use dom library');\n    }\n    const $ = new ESJSBinding(w['$'], 'jquery');\n    return {\n        $,\n        window: new ESJSBinding(w, 'window'),\n        document: new ESJSBinding(w['document'], 'document'),\n    };\n};\nexport default module;\n","import { IS_NODE_INSTANCE, libs } from '../constants';\nimport { ESError } from '../errors';\nimport { wrap } from '../runtime/primitives/wrapStrip';\nimport { ESSymbol } from '../runtime/symbol';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport ascii from './built-in-modules/ascii';\nimport json from './built-in-modules/json';\nimport dom from './built-in-modules/dom';\nimport Promise from './built-in-modules/promise';\nimport time from './built-in-modules/time';\nconst modules = {\n    ascii, json\n};\nconst processedModules = {};\nexport function initModules() {\n    processedModules['math'] = new ESJSBinding(Math);\n    processedModules['promise'] = new ESJSBinding(Promise);\n    processedModules['time'] = new ESJSBinding(time(libs));\n    if (!IS_NODE_INSTANCE) {\n        const domRes = dom(libs);\n        if (!(domRes instanceof ESError)) {\n            modules['dom'] = domRes;\n        }\n        else {\n            return domRes;\n        }\n    }\n}\nexport function processRawModule(module, name) {\n    const moduleDict = {};\n    const moduleRaw = module.valueOf();\n    for (const key of Object.keys(moduleRaw)) {\n        moduleDict[key] = new ESSymbol(moduleRaw[key], key);\n    }\n    return new ESJSBinding(moduleDict, name);\n}\nexport function moduleExist(name) {\n    return name in modules || name in processedModules;\n}\nexport function addModule(name, body) {\n    modules[name] = {};\n    processedModules[name] = body;\n}\nexport function addModuleFromObj(name, raw) {\n    addModule(name, processRawModule(wrap(raw), name));\n}\nexport function getModule(name) {\n    if (name in processedModules) {\n        return processedModules[name];\n    }\n    if (name in modules) {\n        const res = new ESJSBinding(modules[name]);\n        const processed = processRawModule(res, name);\n        processedModules[name] = processed;\n        return processed;\n    }\n}\n","import { TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESNumber, ESString } from '../../runtime/primitiveTypes';\nimport { str } from '../../util/util';\nconst module = {\n    asciiToChar: (props, number) => {\n        if (!(number instanceof ESNumber)) {\n            return new TypeError(Position.void, 'number', str(number.typeName()), str(number));\n        }\n        return new ESString(String.fromCharCode(number.valueOf()));\n    },\n    charToAscii: (props, char) => {\n        if (!(char instanceof ESString)) {\n            return new TypeError(Position.void, 'string', str(char.typeName()), str(char));\n        }\n        return new ESNumber(str(char).charCodeAt(0));\n    },\n};\nexport default module;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { builtInFunctions } from \"./built-in/builtInFunctions\";\nimport { getModule, initModules, moduleExist } from './built-in/builtInModules';\nimport { Context } from \"./runtime/context\";\nimport { ESError, ImportError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { run } from \"./index\";\nimport { IS_NODE_INSTANCE } from \"./constants\";\nimport { str } from \"./util/util\";\nimport { ESFunction, ESNamespace, ESString } from './runtime/primitiveTypes';\nimport loadGlobalConstants from \"./built-in/globalConstants\";\nexport function initialise(globalContext, printFunc, inputFunc) {\n    builtInFunctions['import'] = [({ context }, rawUrl, callback) => {\n            if (IS_NODE_INSTANCE) {\n                return new ESError(Position.void, 'ImportError', 'Is running in node instance but trying to run browser import function');\n            }\n            const url = rawUrl.str();\n            if (moduleExist(str(url))) {\n                return getModule(str(url));\n            }\n            try {\n                fetch(str(url))\n                    .then(c => c.text())\n                    .then((code) => __awaiter(this, void 0, void 0, function* () {\n                    const env = new Context();\n                    env.parent = globalContext;\n                    const res = yield run(code);\n                    if (res.error) {\n                        printFunc(new ImportError(Position.void, str(url), res.error.str).str);\n                        return;\n                    }\n                    if (!(callback instanceof ESFunction))\n                        return;\n                    callback.__call__({ context }, new ESNamespace(url, env.getSymbolTableAsDict()));\n                }));\n            }\n            catch (E) {\n                return new ESError(Position.void, 'ImportError', E.toString());\n            }\n        }, {}];\n    builtInFunctions['print'] = [({ context }, ...args) => {\n            let out = ``;\n            for (let arg of args)\n                out += str(arg);\n            printFunc(out);\n        }, {}];\n    builtInFunctions['input'] = [({ context }, msg, cbRaw) => {\n            inputFunc(msg.valueOf(), (msg) => {\n                let cb = cbRaw === null || cbRaw === void 0 ? void 0 : cbRaw.valueOf();\n                if (cb instanceof ESFunction) {\n                    let res = cb.__call__({ context }, new ESString(msg));\n                    if (res instanceof ESError) {\n                        console.log(res.str);\n                    }\n                }\n                else if (typeof cb === 'function')\n                    cb(msg);\n                return new ESString('\\'input()\\' does not return anything. Pass in a function as the second argument, which will take the user input as an argument.');\n            });\n        }, {}];\n    for (let builtIn in builtInFunctions) {\n        const fn = new ESFunction(builtInFunctions[builtIn][0], [], builtIn, undefined, undefined, globalContext);\n        fn.info = builtInFunctions[builtIn][1];\n        fn.info.name = builtIn;\n        fn.info.isBuiltIn = true;\n        fn.info.file = 'built-in';\n        globalContext.set(builtIn, fn, {\n            global: true,\n            isConstant: true\n        });\n    }\n    loadGlobalConstants(globalContext);\n    const initModRes = initModules();\n    if (initModRes) {\n        return initModRes;\n    }\n    globalContext.initialisedAsGlobal = true;\n}\n","import { ESBoolean, ESUndefined } from '../runtime/primitiveTypes';\nimport { types } from \"../constants\";\nexport default function load(context) {\n    const globalConstants = {\n        'false': new ESBoolean(false),\n        'true': new ESBoolean(true),\n        'nil': new ESUndefined(),\n        'Any': types.any,\n        'Number': types.number,\n        'String': types.string,\n        'Bool': types.bool,\n        'Func': types.function,\n        'Array': types.array,\n        'Object': types.object,\n        'Type': types.type,\n        'Error': types.error,\n        'Undefined': types.undefined\n    };\n    for (let constant in globalConstants) {\n        const value = globalConstants[constant];\n        context.set(constant, value, {\n            global: true,\n            isConstant: true\n        });\n    }\n}\n","export default class {\n    constructor(cb) {\n        this.thens = [];\n        this.resolved = false;\n        cb((value) => {\n            if (this.resolved) {\n                return;\n            }\n            this.resolved = true;\n            for (let then of this.thens) {\n                then(value);\n            }\n        }, (error) => {\n            if (this.resolved) {\n                return;\n            }\n            this.resolved = true;\n            if (this.catch_) {\n                this.catch_(error);\n            }\n        });\n    }\n    then(cb) {\n        if (this.resolved) {\n            return;\n        }\n        this.thens.push(cb);\n        return this;\n    }\n    catch(cb) {\n        if (this.resolved) {\n            return;\n        }\n        this.catch_ = cb;\n        return this;\n    }\n}\n;\n","import { now } from '../../constants';\nimport { ESFunction } from '../../runtime/primitives/esfunction';\nimport { ESJSBinding } from '../../runtime/primitives/esjsbinding';\nimport { ESNumber } from '../../runtime/primitives/esnumber';\nconst module = (config) => ({\n    now: new ESFunction(() => new ESNumber(now())),\n    date: new ESJSBinding(Date)\n});\nexport default module;\n","import { ESPrimitive } from \"./primitiveTypes\";\nexport function interpretArgument(arg, context) {\n    var _a;\n    const typeRes = arg.type.interpret(context);\n    if (typeRes.error) {\n        return typeRes.error;\n    }\n    let defaultValue;\n    if (arg.defaultValue) {\n        let defaultValRes = (_a = arg.defaultValue) === null || _a === void 0 ? void 0 : _a.interpret(context);\n        if (defaultValRes.error) {\n            return defaultValRes.error;\n        }\n        if (defaultValRes.val instanceof ESPrimitive) {\n            defaultValue = defaultValRes.val;\n        }\n    }\n    return {\n        name: arg.name,\n        type: typeRes.val,\n        defaultValue\n    };\n}\n","import { ESError, InvalidSyntaxError, ReferenceError, TypeError } from \"../errors\";\nimport { Context } from './context';\nimport { Position } from \"../position\";\nimport { catchBlockErrorSymbolName, now, tokenTypeString, tt, types } from \"../constants\";\nimport { interpretArgument } from \"./argument\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESType, ESUndefined } from \"./primitiveTypes\";\nimport { generateRandomSymbol, str } from '../util/util';\nimport { ESTypeNot } from \"./primitives/estype\";\nexport class interpretResult {\n    constructor(val) {\n        this.val = new ESUndefined();\n        this.shouldBreak = false;\n        this.shouldContinue = false;\n        if (val instanceof ESError) {\n            this.error = val;\n        }\n        else if (val) {\n            this.val = val;\n        }\n    }\n}\nexport class compileResult {\n    constructor(val) {\n        this.val = '';\n        this.hoisted = '';\n        if (typeof val === 'string') {\n            this.val = val;\n        }\n        else if (val) {\n            this.error = val;\n        }\n    }\n    register(node, config) {\n        const res = node.compilePy(config);\n        this.hoisted += res.hoisted;\n        if (res.error) {\n            this.error = res.error;\n            return '';\n        }\n        return res.val;\n    }\n}\nexport class Node {\n    constructor(pos, isTerminal = false) {\n        this.pos = pos;\n        this.isTerminal = isTerminal;\n    }\n    interpret(context) {\n        var _a;\n        const start = now();\n        const res = new interpretResult;\n        const val = this.interpret_(context);\n        if (val instanceof ESError) {\n            res.error = val;\n        }\n        else if (val instanceof interpretResult) {\n            res.val = val.val;\n            res.error = val.error;\n            res.funcReturn = val.funcReturn;\n            res.shouldBreak = val.shouldBreak;\n            res.shouldContinue = val.shouldContinue;\n        }\n        else {\n            res.val = val;\n        }\n        if (res.error && res.error.pos.isUnknown) {\n            res.error.pos = this.pos;\n        }\n        if (!(res.val instanceof ESPrimitive)) {\n            res.error = new TypeError(Position.void, 'Primitive', 'Native JS value', str(res.val));\n            res.val = new ESUndefined();\n        }\n        (_a = res.val.info).file || (_a.file = this.pos.file);\n        Node.interprets++;\n        let time = now() - start;\n        Node.totalTime += time;\n        if (time > Node.maxTime)\n            Node.maxTime = time;\n        return res;\n    }\n}\nNode.interprets = 0;\nNode.totalTime = 0;\nNode.maxTime = 0;\nexport class N_binOp extends Node {\n    constructor(pos, left, opTok, right) {\n        super(pos);\n        this.left = left;\n        this.opTok = opTok;\n        this.right = right;\n    }\n    interpret_(context) {\n        const left = this.left.interpret(context);\n        if (left.error)\n            return left.error;\n        const right = this.right.interpret(context);\n        if (right.error)\n            return right.error;\n        const l = left.val;\n        const r = right.val;\n        if (typeof l === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', l, 'N_binOp.interpret_');\n        }\n        if (typeof r === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', r, 'N_binOp.interpret_');\n        }\n        switch (this.opTok.type) {\n            case tt.LTE: {\n                const lt = l.__lt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (lt instanceof ESError)\n                    return lt;\n                if (eq instanceof ESError)\n                    return eq;\n                return new interpretResult(lt.__or__({ context }, eq));\n            }\n            case tt.GTE: {\n                const gt = l.__gt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (gt instanceof ESError)\n                    return gt;\n                if (eq instanceof ESError)\n                    return eq;\n                return new interpretResult(gt.__or__({ context }, eq));\n            }\n            case tt.NOTEQUALS: {\n                const res = l.__eq__({ context }, r);\n                if (res instanceof ESError)\n                    return res;\n                return new interpretResult(new ESBoolean(!res.bool().valueOf()));\n            }\n            case tt.ADD:\n                return new interpretResult(l.__add__({ context }, r));\n            case tt.SUB:\n                return new interpretResult(l.__subtract__({ context }, r));\n            case tt.MUL:\n                return new interpretResult(l.__multiply__({ context }, r));\n            case tt.DIV:\n                return new interpretResult(l.__divide__({ context }, r));\n            case tt.POW:\n                return new interpretResult(l.__pow__({ context }, r));\n            case tt.MOD:\n                return new interpretResult(l.__mod__({ context }, r));\n            case tt.EQUALS:\n                return new interpretResult(l.__eq__({ context }, r));\n            case tt.LT:\n                return new interpretResult(l.__lt__({ context }, r));\n            case tt.GT:\n                return new interpretResult(l.__gt__({ context }, r));\n            case tt.AND:\n                return new interpretResult(l.__and__({ context }, r));\n            case tt.OR:\n                return new interpretResult(l.__or__({ context }, r));\n            case tt.APMERSAND:\n                return new interpretResult(l.__ampersand__({ context }, r));\n            case tt.PIPE:\n                return new interpretResult(l.__pipe__({ context }, r));\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid binary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(config) {\n        const left = this.left.compileJS(config);\n        if (left.error)\n            return left;\n        const right = this.right.compileJS(config);\n        if (right.error)\n            return right;\n        if (config.minify) {\n            return new compileResult(`${left.val}${tokenTypeString[this.opTok.type]}${right.val}`);\n        }\n        return new compileResult(`${left.val} ${tokenTypeString[this.opTok.type]} ${right.val}`);\n    }\n    compilePy(config) {\n        const left = this.left.compilePy(config);\n        if (left.error)\n            return left;\n        const right = this.right.compilePy(config);\n        if (right.error)\n            return right;\n        const switchers = {\n            '&&': 'and',\n            '||': 'or',\n            '^': '**',\n        };\n        let op = tokenTypeString[this.opTok.type];\n        if (op in switchers) {\n            op = switchers[op];\n        }\n        return new compileResult(`${left.val} ${op} ${right.val}`);\n    }\n}\nexport class N_unaryOp extends Node {\n    constructor(pos, a, opTok) {\n        super(pos);\n        this.a = a;\n        this.opTok = opTok;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const res = this.a.interpret(context);\n        if (res.error)\n            return res.error;\n        switch (this.opTok.type) {\n            case tt.SUB:\n            case tt.ADD:\n                if (!(res.val instanceof ESNumber)) {\n                    return new TypeError(this.pos, 'Number', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().toString()) || 'undefined_', (_b = res.val) === null || _b === void 0 ? void 0 : _b.valueOf());\n                }\n                const numVal = res.val.valueOf();\n                return new interpretResult(new ESNumber(this.opTok.type === tt.SUB ? -numVal : Math.abs(numVal)));\n            case tt.NOT:\n                return new interpretResult(new ESBoolean(!((_c = res === null || res === void 0 ? void 0 : res.val) === null || _c === void 0 ? void 0 : _c.bool().valueOf())));\n            case tt.BITWISE_NOT:\n                return new interpretResult(new ESTypeNot(res.val));\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid unary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(config) {\n        const val = this.a.compileJS(config);\n        if (val.error)\n            return val;\n        return new compileResult(`${tokenTypeString[this.opTok.type]}${val.val}`);\n    }\n    compilePy(config) {\n        const val = this.a.compilePy(config);\n        if (val.error)\n            return val;\n        return new compileResult(`${tokenTypeString[this.opTok.type]}${val.val}`);\n    }\n}\nexport class N_varAssign extends Node {\n    constructor(pos, varNameTok, value, assignType = '=', isGlobal = false, isConstant = false, isDeclaration = false, type = types.any) {\n        super(pos);\n        this.value = value;\n        this.varNameTok = varNameTok;\n        this.isGlobal = isGlobal;\n        this.assignType = assignType;\n        this.isConstant = isConstant;\n        this.isDeclaration = isDeclaration;\n        if (type instanceof ESPrimitive) {\n            this.type = new N_primitiveWrapper(type);\n        }\n        else {\n            this.type = type;\n        }\n    }\n    interpret_(context) {\n        var _a, _b;\n        if (this.isDeclaration && context.hasOwn(this.varNameTok.value)) {\n            return new InvalidSyntaxError(this.pos, `Symbol '${this.varNameTok.value}' already exists, and cannot be redeclared`);\n        }\n        const res = this.value.interpret(context);\n        const typeRes = this.type.interpret(context);\n        if (res.error)\n            return res.error;\n        if (typeRes.error)\n            return typeRes.error;\n        if (!typeRes.val) {\n            return new TypeError(this.varNameTok.pos, 'Type', 'undefined');\n        }\n        if (!res.val) {\n            return new TypeError(this.varNameTok.pos, '~undefined', 'undefined', 'N_varAssign.interpret_');\n        }\n        const typeCheckRes = typeRes.val.typeCheck({ context }, res.val);\n        if (typeCheckRes instanceof ESError)\n            return typeCheckRes;\n        if (!typeCheckRes.bool().valueOf()) {\n            return new TypeError(this.varNameTok.pos, str(typeRes.val), str((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName()), str(res.val));\n        }\n        if (this.isDeclaration) {\n            if (this.assignType !== '=') {\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            }\n            if (context.hasOwn(this.varNameTok.value)) {\n                return new InvalidSyntaxError(this.pos, `Cannot redeclare variable which exists in the current scope`);\n            }\n            context.setOwn(this.varNameTok.value, res.val, {\n                global: false,\n                isConstant: this.isConstant,\n                type: typeRes.val\n            });\n            return new interpretResult(res.val);\n        }\n        if (context.has(this.varNameTok.value)) {\n            const symbol = context.getSymbol(this.varNameTok.value);\n            if (symbol instanceof ESError)\n                return symbol;\n            if (symbol) {\n                if (!symbol.type.typeCheck({ context }, res.val).valueOf()) {\n                    return new TypeError(this.varNameTok.pos, str(symbol.type), (_b = res.val) === null || _b === void 0 ? void 0 : _b.typeName(), str(res.val));\n                }\n            }\n        }\n        if (this.assignType === '=') {\n            let value = res.val;\n            if (value === undefined) {\n                value = new ESUndefined();\n            }\n            const type = context.getSymbol(this.varNameTok.value);\n            if (type instanceof ESError) {\n                return type;\n            }\n            if (!type) {\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable without keyword`);\n            }\n            const typeCheckRes = type.type.typeCheck({ context }, res.val);\n            if (typeCheckRes instanceof ESError)\n                return typeCheckRes;\n            if (!typeCheckRes.bool().valueOf()) {\n                return new TypeError(Position.void, str(type.type), str(res.val.__type__), str(res.val));\n            }\n            const setRes = context.set(this.varNameTok.value, value, {\n                global: this.isGlobal,\n                isConstant: this.isConstant,\n                type: res.val.__type__\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n        }\n        else {\n            const currentVal = context.get(this.varNameTok.value);\n            if (currentVal instanceof ESError)\n                return currentVal;\n            if (currentVal == undefined)\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            let newVal;\n            let assignVal = res.val;\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError) {\n                return newVal;\n            }\n            let setRes = context.set(this.varNameTok.value, newVal, {\n                global: this.isGlobal,\n                isConstant: this.isConstant,\n                type: newVal.__type__\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n            res.val = newVal;\n        }\n        if (res.val.info.name === '(anonymous)' || !res.val.info.name) {\n            res.val.info.name = this.varNameTok.value;\n        }\n        return res;\n    }\n    compileJS(config) {\n        const val = this.value.compileJS(config);\n        if (val.error)\n            return val;\n        let declaration = '';\n        if (this.isDeclaration) {\n            if (this.isGlobal) {\n                declaration = 'var';\n            }\n            else if (this.isConstant) {\n                declaration = 'const';\n            }\n            else {\n                declaration = 'let';\n            }\n        }\n        let assign = this.assignType;\n        if (assign !== '=') {\n            assign += '=';\n        }\n        if (config.minify) {\n            return new compileResult(`${declaration} ${this.varNameTok.value}${assign}${val.val}`);\n        }\n        return new compileResult(`${declaration} ${this.varNameTok.value} ${assign} ${val.val}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const val = this.value.compilePy(config);\n        if (val.error)\n            return val;\n        res.hoisted += val.hoisted;\n        let assign = this.assignType;\n        if (assign !== '=') {\n            assign += '=';\n        }\n        if (this.isGlobal) {\n            res.hoisted += `${this.varNameTok.value}=None`;\n        }\n        if (config.minify) {\n            res.val = `${this.varNameTok.value}${assign}${val.val}`;\n        }\n        else {\n            res.val = `${this.varNameTok.value} ${assign} ${val.val}`;\n        }\n        return res;\n    }\n}\nexport class N_if extends Node {\n    constructor(pos, comparison, ifTrue, ifFalse) {\n        super(pos);\n        this.comparison = comparison;\n        this.ifFalse = ifFalse;\n        this.ifTrue = ifTrue;\n    }\n    interpret_(context) {\n        var _a;\n        let newContext = new Context();\n        newContext.parent = context;\n        let res = new interpretResult();\n        let compRes = this.comparison.interpret(context);\n        if (compRes.error)\n            return compRes;\n        if ((_a = compRes.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            return this.ifTrue.interpret(newContext);\n        }\n        else if (this.ifFalse) {\n            return this.ifFalse.interpret(newContext);\n        }\n        return res;\n    }\n    compileJS(config) {\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 4);\n        config.indent += 4;\n        const statementRes = this.comparison.compileJS(config);\n        if (statementRes.error)\n            return statementRes;\n        const ifTrueRes = this.ifTrue.compileJS(config);\n        if (ifTrueRes.error)\n            return ifTrueRes;\n        if (!this.ifFalse) {\n            if (config.minify) {\n                return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}\\n}`);\n            }\n            return new compileResult(`if (${statementRes.val}) {\\n${ifTrueRes.val}\\n}`);\n        }\n        config.indent = highIndent.length;\n        let ifFalseRes = this.ifFalse.compileJS(config);\n        if (ifFalseRes.error)\n            return ifFalseRes;\n        if (!(this.ifFalse instanceof N_statements)) {\n            ifFalseRes.val = highIndent + ifFalseRes.val;\n        }\n        if (config.minify) {\n            return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}}else{${ifFalseRes.val}}`);\n        }\n        return new compileResult(`if (${statementRes.val}) {\\n${ifTrueRes.val}\\n${indent}} else {\\n${ifFalseRes.val}\\n${indent}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 4);\n        config.indent += 4;\n        const statementRes = this.comparison.compilePy(config);\n        if (statementRes.error)\n            return statementRes;\n        res.hoisted += statementRes.hoisted;\n        const ifTrueRes = this.ifTrue.compilePy(config);\n        if (ifTrueRes.error)\n            return ifTrueRes;\n        res.hoisted += ifTrueRes.hoisted;\n        if (!this.ifFalse) {\n            return new compileResult(`if ${statementRes.val}:\\n${highIndent}${ifTrueRes.val}`);\n        }\n        const ifFalseRes = this.ifFalse.compilePy(config);\n        if (ifFalseRes.error)\n            return ifFalseRes;\n        res.hoisted += ifFalseRes.hoisted;\n        if (!(this.ifFalse instanceof N_statements)) {\n            ifFalseRes.val = highIndent + ifFalseRes.val;\n        }\n        return new compileResult(`if ${statementRes.val}:\\n${ifTrueRes.val}\\n${indent}else:\\n${ifFalseRes.val}\\n${indent}`);\n    }\n}\nexport class N_while extends Node {\n    constructor(pos, comparison, loop) {\n        super(pos);\n        this.comparison = comparison;\n        this.loop = loop;\n    }\n    interpret_(context) {\n        var _a, _b;\n        let newContext = new Context();\n        newContext.parent = context;\n        while (true) {\n            let shouldLoop = this.comparison.interpret(context);\n            if (shouldLoop.error)\n                return shouldLoop;\n            if (!((_b = (_a = shouldLoop.val) === null || _a === void 0 ? void 0 : _a.bool()) === null || _b === void 0 ? void 0 : _b.valueOf()))\n                break;\n            let potentialError = this.loop.interpret(newContext);\n            if (potentialError.error)\n                return potentialError;\n            if (potentialError.shouldBreak)\n                break;\n        }\n        return new interpretResult(new ESUndefined());\n    }\n    compileJS(config) {\n        config.indent += 4;\n        const comparisonRes = this.comparison.compileJS(config);\n        if (comparisonRes.error)\n            return comparisonRes;\n        const bodyRes = this.loop.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        if (config.minify) {\n            return new compileResult(`while(${comparisonRes.val}){${bodyRes.val}}`);\n        }\n        return new compileResult(`while (${comparisonRes.val}) {\\n${bodyRes.val}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const highIndent = ' '.repeat(config.indent || 0);\n        const comparisonRes = this.comparison.compilePy(config);\n        if (comparisonRes.error)\n            return comparisonRes;\n        res.hoisted += comparisonRes.hoisted;\n        const bodyRes = this.loop.compilePy(config);\n        if (bodyRes.error)\n            return bodyRes;\n        res.hoisted += bodyRes.hoisted;\n        return new compileResult(`while ${comparisonRes.val}:\\n${highIndent}${bodyRes.val}`);\n    }\n}\nexport class N_for extends Node {\n    constructor(pos, body, array, identifier, isGlobalIdentifier, isConstIdentifier) {\n        super(pos);\n        this.body = body;\n        this.array = array;\n        this.identifier = identifier;\n        this.isGlobalId = isGlobalIdentifier;\n        this.isConstId = isConstIdentifier;\n    }\n    interpret_(context) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        const array = this.array.interpret(context);\n        if (array.error)\n            return array;\n        if (['Array', 'Number', 'Object', 'String', 'Any'].indexOf(((_a = array.val) === null || _a === void 0 ? void 0 : _a.typeName()) || '') === -1) {\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val + ' | ' + ((_b = array.val) === null || _b === void 0 ? void 0 : _b.typeName()));\n        }\n        if (context.has(this.identifier.value) && this.isGlobalId) {\n            return new InvalidSyntaxError(this.identifier.pos, 'Cannot declare global variable which exists in the current scope');\n        }\n        function iteration(body, id, element, isGlobal, isConstant) {\n            let newContext = new Context();\n            newContext.parent = context;\n            newContext.set(id, element, {\n                global: isGlobal,\n                isConstant,\n                type: element.__type__\n            });\n            const res = body.interpret(newContext);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (res.shouldBreak) {\n                res.shouldBreak = false;\n                return 'break';\n            }\n            if (res.shouldContinue) {\n                res.shouldContinue = false;\n            }\n        }\n        if (array.val instanceof ESNumber || typeof ((_c = array.val) === null || _c === void 0 ? void 0 : _c.valueOf()) == 'number') {\n            for (let i = 0; i < array.val.valueOf(); i++) {\n                const res = iteration(this.body, this.identifier.value, new ESNumber(i), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESObject ||\n            (typeof ((_d = array.val) === null || _d === void 0 ? void 0 : _d.valueOf()) == 'number' && !Array.isArray((_e = array.val) === null || _e === void 0 ? void 0 : _e.valueOf()))) {\n            for (let element in (_f = array.val) === null || _f === void 0 ? void 0 : _f.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, new ESString(element), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESArray || Array.isArray((_g = array.val) === null || _g === void 0 ? void 0 : _g.valueOf())) {\n            for (let element of (_h = array.val) === null || _h === void 0 ? void 0 : _h.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, element, this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val);\n        return new interpretResult(new ESUndefined());\n    }\n    compileJS(config) {\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const iteratorRes = this.array.compileJS(config);\n        if (iteratorRes.error)\n            return iteratorRes;\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        let declaration = 'let';\n        if (this.isGlobalId) {\n            declaration = 'var';\n        }\n        else if (this.isConstId) {\n            declaration = 'const';\n        }\n        if (config.minify) {\n            return new compileResult(`for(${declaration} ${this.identifier.value} of ${iteratorRes.val}){${bodyRes.val}\\n${indent}}`);\n        }\n        return new compileResult(`for (${declaration} ${this.identifier.value} of ${iteratorRes.val}) {\\n${bodyRes.val}\\n${indent}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        config.indent += 4;\n        const iteratorRes = res.register(this.array, config);\n        if (res.error)\n            return res;\n        const bodyRes = res.register(this.body, config);\n        if (res.error)\n            return res;\n        if (this.isGlobalId) {\n            res.hoisted += `${this.identifier.value}=None`;\n        }\n        res.val = `for ${this.identifier.value} in ${iteratorRes}:\\n${bodyRes}`;\n        return res;\n    }\n}\nexport class N_array extends Node {\n    constructor(pos, items, shouldClone = false) {\n        super(pos);\n        this.items = items;\n        this.shouldClone = shouldClone;\n    }\n    interpret_(context) {\n        let result = new interpretResult();\n        let interpreted = [];\n        for (let item of this.items) {\n            const res = item.interpret(context);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (!res.val)\n                continue;\n            let val = res.val;\n            if (this.shouldClone) {\n                val = val.clone();\n            }\n            interpreted.push(val);\n        }\n        result.val = new ESArray(interpreted);\n        return result;\n    }\n    compileJS(config) {\n        const res = new compileResult('[');\n        for (let item of this.items) {\n            const itemRes = item.compileJS(config);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ',';\n        }\n        res.val += ']';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult('[');\n        for (let item of this.items) {\n            const itemRes = res.register(item, config);\n            if (res.error)\n                return res;\n            res.val += itemRes + ',';\n        }\n        res.val += ']';\n        return res;\n    }\n}\nexport class N_objectLiteral extends Node {\n    constructor(pos, properties) {\n        super(pos);\n        this.properties = properties;\n    }\n    interpret_(context) {\n        let interpreted = {};\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.interpret(context);\n            if (value.error)\n                return value.error;\n            const key = keyNode.interpret(context);\n            if (key.error)\n                return key.error;\n            if (key.val && value.val) {\n                interpreted[key.val.valueOf()] = value.val;\n            }\n        }\n        return new interpretResult(new ESObject(interpreted));\n    }\n    compileJS(config) {\n        const res = new compileResult('{');\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.compileJS(config);\n            if (value.error)\n                return value;\n            const key = keyNode.compileJS(config);\n            if (key.error)\n                return key;\n            if (key.val && value.val) {\n                res.val += `[${key.val}]: ${value.val},`;\n            }\n        }\n        res.val += '}';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult('{');\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = res.register(valueNode, config);\n            if (res.error)\n                return res;\n            const key = res.register(keyNode, config);\n            if (res.error)\n                return res;\n            if (key && value) {\n                res.val += `${key}: ${value},`;\n            }\n        }\n        res.val += '}';\n        return res;\n    }\n}\nexport class N_statements extends Node {\n    constructor(pos, items, topLevel = false) {\n        super(pos);\n        this.items = items;\n        this.topLevel = topLevel;\n    }\n    interpret_(context) {\n        if (!this.topLevel) {\n            let last;\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (typeof res.funcReturn !== 'undefined') || res.shouldBreak || res.shouldContinue)\n                    return res;\n                last = res.val;\n            }\n            return new interpretResult(last || new ESUndefined());\n        }\n        else {\n            let result = new interpretResult();\n            let interpreted = [];\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (res.funcReturn !== undefined))\n                    return res;\n                if (!res.val)\n                    continue;\n                let val = res.val.clone();\n                interpreted.push(val);\n            }\n            result.val = new ESArray(interpreted);\n            return result;\n        }\n    }\n    compileJS(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        res.val += indent;\n        for (let item of this.items) {\n            const itemRes = item.compileJS(config);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ';';\n            if (!config.minify) {\n                res.val += '\\n' + indent;\n            }\n        }\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        res.val += indent;\n        for (let item of this.items) {\n            const itemRes = res.register(item, config);\n            if (res.error)\n                return res;\n            res.val += itemRes;\n            res.val += '\\n' + indent;\n        }\n        return res;\n    }\n}\nexport class N_functionCall extends Node {\n    constructor(pos, to, args) {\n        super(pos);\n        this.arguments = args;\n        this.to = to;\n    }\n    interpret_(context) {\n        let { val, error } = this.to.interpret(context);\n        if (error) {\n            return error;\n        }\n        if (!val) {\n            return new TypeError(this.pos, 'any', 'undefined', undefined, 'On function call');\n        }\n        let params = [];\n        for (let arg of this.arguments) {\n            const res = arg.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (res.val) {\n                params.push(res.val);\n            }\n        }\n        const res = val.__call__({ context }, ...params);\n        if (res instanceof ESError) {\n            res.traceback.push({\n                position: this.pos,\n                line: `${val.info.name || '<AnonFunction>'}(${params.map(str).join(', ')})`\n            });\n        }\n        return new interpretResult(res);\n    }\n    compileJS(config) {\n        const res = new compileResult;\n        const funcRes = this.to.compileJS(config);\n        if (funcRes.error)\n            return funcRes;\n        res.val = funcRes.val + '(';\n        for (let arg of this.arguments) {\n            const argRes = arg.compileJS(config);\n            if (argRes.error)\n                return argRes;\n            res.val += argRes.val;\n            if (arg !== this.arguments[this.arguments.length - 1]) {\n                res.val += ',';\n                if (!config.minify) {\n                    res.val += ' ';\n                }\n            }\n        }\n        res.val += ')';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const funcRes = res.register(this.to, config);\n        if (res.error)\n            return res;\n        res.val = funcRes + '(';\n        for (let arg of this.arguments) {\n            const argRes = res.register(arg, config);\n            if (res.error)\n                return res;\n            res.val += argRes;\n            if (arg !== this.arguments[this.arguments.length - 1]) {\n                res.val += ',';\n                if (!config.minify) {\n                    res.val += ' ';\n                }\n            }\n        }\n        res.val += ')';\n        return res;\n    }\n}\nexport class N_functionDefinition extends Node {\n    constructor(pos, body, argNames, returnType, name = '(anon)', this_ = new ESObject(), description = '') {\n        super(pos);\n        this.arguments = argNames;\n        this.body = body;\n        this.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        this.description = description;\n    }\n    interpret_(context) {\n        let args = [];\n        for (let arg of this.arguments) {\n            const res = interpretArgument(arg, context);\n            if (res instanceof ESError)\n                return res;\n            args.push(res);\n        }\n        const returnTypeRes = this.returnType.interpret(context);\n        if (returnTypeRes.error)\n            return returnTypeRes.error;\n        return new interpretResult(new ESFunction(this.body, args, this.name, this.this_, returnTypeRes.val, context));\n    }\n    compileJS(config) {\n        const res = new compileResult('function(');\n        for (let param of this.arguments) {\n            res.val += param.name + ',';\n            if (!config.minify) {\n                res.val += ' ';\n            }\n        }\n        if (config.minify) {\n            res.val += '){';\n        }\n        else {\n            res.val += ') {\\n';\n        }\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        res.val += `${bodyRes.val}\\n${indent}}`;\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const hoistedName = generateRandomSymbol(config.symbols);\n        res.hoisted = `def ${hoistedName}(`;\n        for (let param of this.arguments) {\n            res.hoisted += param.name + ',';\n            if (!config.minify) {\n                res.hoisted += ' ';\n            }\n        }\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const body = this.body.compilePy(config);\n        if (body.error)\n            return body;\n        res.hoisted += `):\\n${indent}${body.val}`;\n        res.hoisted = body.hoisted + res.hoisted;\n        res.val = hoistedName;\n        return res;\n    }\n}\nexport class N_return extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        res.funcReturn = val.val;\n        return res;\n    }\n    compileJS(config) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(config);\n        if (valRes === null || valRes === void 0 ? void 0 : valRes.error)\n            return valRes;\n        return new compileResult(`return(${valRes === null || valRes === void 0 ? void 0 : valRes.val})`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        if (!this.value) {\n            return new compileResult('return');\n        }\n        const valRes = res.register(this.value, config);\n        if (res.error)\n            return res;\n        return new compileResult(`return ${valRes}`);\n    }\n}\nexport class N_yield extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        var _a;\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        if ((_a = val.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            res.funcReturn = val.val;\n        }\n        return res;\n    }\n    compileJS(config) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(config);\n        if (!valRes || !valRes.val) {\n            return new compileResult('');\n        }\n        return new compileResult(`if(_=${valRes.val}){return(_))`);\n    }\n    compilePy(config) {\n        if (!this.value) {\n            return new compileResult('');\n        }\n        const res = new compileResult;\n        const valRes = res.register(this.value, config);\n        if (!valRes) {\n            return new compileResult('');\n        }\n        return new compileResult(`if _ := ${valRes}: return _`);\n    }\n}\nexport class N_indexed extends Node {\n    constructor(pos, base, index) {\n        super(pos);\n        this.base = base;\n        this.index = index;\n    }\n    interpret_(context) {\n        var _a;\n        let baseRes = this.base.interpret(context);\n        if (baseRes.error)\n            return baseRes;\n        let indexRes = this.index.interpret(context);\n        if (indexRes.error)\n            return indexRes;\n        const index = indexRes.val;\n        const base = baseRes.val;\n        if (!base || !index) {\n            return new interpretResult(new ESUndefined());\n        }\n        if (this.value !== undefined) {\n            let valRes = this.value.interpret(context);\n            if (valRes.error)\n                return valRes;\n            const currentVal = wrap(base.__getProperty__({ context }, index));\n            let newVal;\n            let assignVal = valRes.val;\n            (_a = this.assignType) !== null && _a !== void 0 ? _a : (this.assignType = '=');\n            if (!assignVal) {\n                return new TypeError(this.pos, '~undefined', 'undefined', 'undefined', 'N_indexed.interpret_');\n            }\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                case '=':\n                    newVal = assignVal;\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError)\n                return newVal;\n            if (!base.__setProperty__)\n                return new TypeError(this.pos, 'mutable', 'immutable', base.valueOf());\n            const res = base.__setProperty__({ context }, index, newVal !== null && newVal !== void 0 ? newVal : new ESUndefined());\n            if (res instanceof ESError)\n                return res;\n        }\n        return new interpretResult(base.__getProperty__({ context }, index));\n    }\n    compileJS(config) {\n        const objectRes = this.base.compileJS(config);\n        if (objectRes.error)\n            return objectRes;\n        const keyRes = this.index.compileJS(config);\n        if (keyRes.error)\n            return keyRes;\n        if (!this.value) {\n            return new compileResult(`${objectRes.val}[${keyRes.val}]`);\n        }\n        const valRes = this.value.compileJS(config);\n        if (valRes.error)\n            return valRes;\n        return new compileResult(`${objectRes.val}[${keyRes.val}]${this.assignType || '='}${valRes.val}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const objectRes = res.register(this.base, config);\n        if (res.error)\n            return res;\n        const keyRes = res.register(this.index, config);\n        if (res.error)\n            return res;\n        if (!this.value) {\n            res.val = `${objectRes}[${keyRes}]`;\n            return res;\n        }\n        const valRes = res.register(this.value, config);\n        if (res.error)\n            return res;\n        res.val = `${objectRes}[${keyRes}] ${this.assignType || '='} ${valRes}`;\n        return res;\n    }\n}\nexport class N_class extends Node {\n    constructor(pos, methods, extends_, init, name = '<anon class>') {\n        super(pos);\n        this.init = init;\n        this.methods = methods;\n        this.name = name;\n        this.extends_ = extends_;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const methods = [];\n        for (let method of this.methods) {\n            const res = method.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (!(res.val instanceof ESFunction)) {\n                return new TypeError(this.pos, 'Function', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            methods.push(res.val);\n        }\n        let extends_ = types.object;\n        if (this.extends_) {\n            const extendsRes = this.extends_.interpret(context);\n            if (extendsRes.error) {\n                return extendsRes.error;\n            }\n            if (!(extendsRes.val instanceof ESType)) {\n                return new TypeError(this.pos, 'Type', ((_b = extendsRes.val) === null || _b === void 0 ? void 0 : _b.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            extends_ = extendsRes.val;\n        }\n        let init;\n        if (this.init) {\n            const initRes = this.init.interpret(context);\n            if (initRes.error) {\n                return initRes.error;\n            }\n            if (!(initRes.val instanceof ESFunction)) {\n                return new TypeError(this.pos, 'Function', ((_c = initRes.val) === null || _c === void 0 ? void 0 : _c.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            init = initRes.val;\n        }\n        return new interpretResult(new ESType(false, this.name, methods, extends_, init));\n    }\n    compileJS(config) {\n        return new compileResult('function(){return{};}');\n    }\n    compilePy(config) {\n        return new compileResult(`class ${this.name}:\\n${' '.repeat(config.indent)}pass`);\n    }\n}\nexport class N_namespace extends Node {\n    constructor(pos, statements, name = '(anon)', mutable = false) {\n        super(pos);\n        this.name = name;\n        this.statements = statements;\n        this.mutable = mutable;\n    }\n    interpret_(context) {\n        const newContext = new Context();\n        newContext.parent = context;\n        const res = this.statements.interpret(newContext);\n        if (res.error)\n            return res;\n        return new interpretResult(new ESNamespace(new ESString(this.name), newContext.getSymbolTableAsDict(), this.mutable));\n    }\n    compileJS(config) {\n        const bodyRes = this.statements.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        return new compileResult(`(() => {${bodyRes.val}})()`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const bodyRes = res.register(this.statements, config);\n        if (res.error)\n            return res;\n        res.val = `'namespace'`;\n        return res;\n    }\n}\nexport class N_tryCatch extends Node {\n    constructor(pos, body, catchBlock) {\n        super(pos, true);\n        this.body = body;\n        this.catchBlock = catchBlock;\n    }\n    interpret_(context) {\n        const res = this.body.interpret(context);\n        if (res.error) {\n            const newContext = new Context();\n            newContext.parent = context;\n            newContext.setOwn(catchBlockErrorSymbolName, new ESErrorPrimitive(res.error), {\n                isConstant: true\n            });\n            const catchRes = this.catchBlock.interpret(newContext);\n            if (catchRes.error)\n                return catchRes.error;\n        }\n        return new interpretResult();\n    }\n    compileJS(config) {\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        const catchRes = this.catchBlock.compileJS(config);\n        if (catchRes.error)\n            return catchRes;\n        return new compileResult(`try{${bodyRes.val}}catch(${catchBlockErrorSymbolName}){${catchRes.val}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const bodyRes = res.register(this.body, config);\n        if (res.error)\n            return res;\n        const catchRes = res.register(this.catchBlock, config);\n        if (res.error)\n            return res;\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 1);\n        res.val = `try:\\n${highIndent}${bodyRes}\\n${indent}except:\\n${highIndent}${catchRes}`;\n        return res;\n    }\n}\nexport class N_number extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        const res = new interpretResult();\n        res.val = new ESNumber(val);\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult(this.a.value.toString());\n    }\n    compilePy(config) {\n        return new compileResult(this.a.value.toString());\n    }\n}\nexport class N_string extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        const res = new interpretResult();\n        res.val = new ESString(val);\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult(`'${this.a.value}'`);\n    }\n    compilePy(config) {\n        return new compileResult(`'${this.a.value}'`);\n    }\n}\nexport class N_variable extends Node {\n    constructor(a) {\n        super(a.pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        if (!context.has(this.a.value)) {\n            return new ReferenceError(this.a.pos, this.a.value);\n        }\n        let res = new interpretResult();\n        let symbol = context.getSymbol(this.a.value);\n        if (!symbol) {\n            return new ReferenceError(this.pos, `No access to undeclared variable ${this.a.value}`);\n        }\n        if (symbol instanceof ESError) {\n            return symbol;\n        }\n        res.val = symbol.value;\n        return res;\n    }\n    compileJS(config) {\n        let val = this.a.value.toString();\n        if (val === 'import') {\n            val = 'import_';\n        }\n        return new compileResult(val);\n    }\n    compilePy(config) {\n        let val = this.a.value.toString();\n        if (val === 'import') {\n            val = 'import_';\n        }\n        return new compileResult(val);\n    }\n}\nexport class N_undefined extends Node {\n    constructor(pos = Position.void) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.val = new ESUndefined();\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('undefined');\n    }\n    compilePy(config) {\n        return new compileResult('None');\n    }\n}\nexport class N_break extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldBreak = true;\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('break');\n    }\n    compilePy(config) {\n        return new compileResult('break');\n    }\n}\nexport class N_continue extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldContinue = true;\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('continue');\n    }\n    compilePy(config) {\n        return new compileResult('continue');\n    }\n}\nexport class N_primitiveWrapper extends Node {\n    constructor(val, pos = Position.void) {\n        super(pos, true);\n        this.value = val;\n    }\n    interpret_(context) {\n        return new interpretResult(this.value);\n    }\n    compileJS(config) {\n        return new compileResult(JSON.stringify(this.value.valueOf()));\n    }\n    compilePy(config) {\n        return new compileResult(JSON.stringify(this.value.valueOf()));\n    }\n}\n","import { Node } from \"../runtime/nodes\";\nimport { ESPrimitive } from '../runtime/primitiveTypes';\nexport function deepClone(obj, hash = new WeakMap()) {\n    let result;\n    if (Object(obj) !== obj || obj instanceof Function) {\n        return obj;\n    }\n    if (hash.has(obj)) {\n        return hash.get(obj);\n    }\n    try {\n        result = new obj.constructor();\n    }\n    catch (e) {\n        result = Object.create(Object.getPrototypeOf(obj));\n    }\n    if (obj instanceof Map) {\n        Array.from(obj, ([key, val]) => result.set(deepClone(key, hash), deepClone(val, hash)));\n    }\n    else if (obj instanceof Set) {\n        Array.from(obj, (key) => result.add(deepClone(key, hash)));\n    }\n    hash.set(obj, result);\n    return Object.assign(result, ...Object.keys(obj).map(key => ({ [key]: deepClone(obj[key], hash) })));\n}\nexport function str(val, depth = 0) {\n    if (typeof val === 'string') {\n        if (depth > 0) {\n            return `'${val}'`;\n        }\n        return val;\n    }\n    if (depth > 20) {\n        return '...';\n    }\n    let result = '';\n    if (typeof val === 'undefined') {\n        return 'undefined';\n    }\n    if (val instanceof ESPrimitive) {\n        return val.str().valueOf();\n    }\n    if (val instanceof Node) {\n        return `<RunTimeNode: ${val.constructor.name}>`;\n    }\n    switch (typeof val) {\n        case 'object':\n            if (Array.isArray(val)) {\n                result += '[';\n                for (let item of val) {\n                    try {\n                        result += str(item, depth + 1) + `, `;\n                    }\n                    catch (e) {\n                        result += '<large property>, ';\n                    }\n                }\n                if (val.length) {\n                    result = result.substring(0, result.length - 2);\n                }\n                result += ']';\n            }\n            else {\n                try {\n                    result += val.constructor.name;\n                }\n                catch (e) {\n                    result += 'UNKNOWN_CONSTRUCTOR';\n                }\n                result += ': {\\n';\n                let i = 0;\n                for (let item in val) {\n                    i++;\n                    if (!val.hasOwnProperty || !val.hasOwnProperty(item)) {\n                        continue;\n                    }\n                    result += `  ${item}: ${str(val[item], depth + 1) || ''}, \\n`;\n                }\n                if (i > 0) {\n                    result = result.substring(0, result.length - 3);\n                }\n                result += '\\n}\\n';\n            }\n            break;\n        case 'string':\n            result = `'${val}'`;\n            break;\n        case \"bigint\":\n        case \"number\":\n        case \"boolean\":\n            result = `${val}`;\n            break;\n        case \"undefined\":\n            result = '<NativeUndefined>';\n            break;\n        case \"function\":\n            result = `<NativeFunction ${val.name}>`;\n            break;\n    }\n    for (let i = 0; i < depth; i++)\n        result = indent(result);\n    return result;\n}\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms));\nexport function indent(str) {\n    return str.replace(/\\n/g, '\\n    ');\n}\nexport function generateRandomSymbol(symbols, length = 10) {\n    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_';\n    const gen = () => {\n        let result = '';\n        for (let i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * characters.length));\n        }\n        return result;\n    };\n    let symbol = gen();\n    while (symbols.indexOf(symbol) !== -1) {\n        symbol = gen();\n    }\n    return symbol;\n}\n","import { IS_NODE_INSTANCE } from './constants';\nimport { Position } from \"./position\";\nimport { str } from \"./util/util\";\nimport chalk from \"./util/colours\";\nexport class ESError {\n    constructor(pos, name, details) {\n        this.traceback = [];\n        this.pos = pos;\n        this.name = name;\n        this.details = details;\n    }\n    get colouredStr() {\n        let out = '';\n        if (this.traceback.length) {\n            out = chalk.yellow('Error Traceback (most recent call last):\\n');\n            for (let pos of [...this.traceback].reverse())\n                out += `    ${chalk.cyan(pos.position.str)}:\\n        ${pos.line}\\n`;\n        }\n        out += `${chalk.red(this.name)}: ${this.details} \\n at ${chalk.cyan(this.pos.str)}`;\n        return out;\n    }\n    get str() {\n        return `${this.name}: ${this.details} \\n at ${this.pos.str}`;\n    }\n}\nexport class IllegalCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'IllegalCharError', `'${char}'`);\n    }\n}\nexport class InvalidSyntaxError extends ESError {\n    constructor(pos, details) {\n        super(pos, 'InvalidSyntaxError', details);\n    }\n}\nexport class ExpectedCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'ExpectedCharError', `'${char}'`);\n    }\n}\nexport class TypeError extends ESError {\n    constructor(pos, expectedType, actualType, value = '', detail = '') {\n        super(pos, 'TypeError', `Expected type '${expectedType}', got type '${actualType}' ${typeof value === 'undefined' ? '' : ` on value '${str(value)}'`} ${!detail ? '' : detail}`);\n    }\n}\nexport class ImportError extends ESError {\n    constructor(pos, url, detail = '') {\n        super(pos, 'ImportError', `Could not import ${url}: ${detail}`);\n    }\n}\nexport class ReferenceError extends ESError {\n    constructor(pos, ref) {\n        super(pos, 'ReferenceError', `${ref} is not defined`);\n    }\n}\nexport class IndexError extends ESError {\n    constructor(pos, ref, object) {\n        var _a;\n        super(pos, 'IndexError', `'${ref}' is not a property of '${((_a = object === null || object === void 0 ? void 0 : object.info) === null || _a === void 0 ? void 0 : _a.name) || str(object)}'`);\n    }\n}\nexport class InvalidOperationError extends ESError {\n    constructor(op, value, detail = '', pos = Position.void) {\n        var _a;\n        super(pos, 'TypeError', `Cannot perform '${op}' on value ${((_a = value === null || value === void 0 ? void 0 : value.info) === null || _a === void 0 ? void 0 : _a.name) || str(value)}: ${detail}`);\n    }\n}\nexport class InvalidRuntimeError extends ESError {\n    constructor() {\n        super(Position.void, 'InvalidRuntimeError', `Required runtime of ${IS_NODE_INSTANCE ? 'browser' : 'node'}`);\n    }\n}\nexport class TestFailed extends ESError {\n    constructor(detail) {\n        super(Position.void, 'TestFailed', detail);\n    }\n}\nexport class PermissionRequiredError extends ESError {\n    constructor(detail) {\n        super(Position.void, 'PermissionRequiredError', detail);\n    }\n}\n","export class Token {\n    constructor(pos, type, value) {\n        this.type = type;\n        this.value = value;\n        this.pos = pos;\n    }\n    matches(type, val) {\n        return this.type === type && this.value === val;\n    }\n}\n","import { Position } from \"../position\";\nimport { digits, doubleCharTokens, identifierChars, KEYWORDS, multiLineCommentEnd, multiLineCommentStart, singleCharTokens, singleLineComment, stringSurrounds, tripleCharTokens, tt, } from '../constants';\nimport { IllegalCharError } from \"../errors\";\nimport { Token } from \"./tokens\";\nexport class Lexer {\n    constructor(program, fileName) {\n        this.text = program;\n        this.position = new Position(-1, 0, -1, fileName);\n        this.advance();\n    }\n    advance() {\n        this.position.advance(this.currentChar);\n        this.currentChar = this.text[this.position.idx];\n    }\n    generate() {\n        if (!this.text) {\n            return [new Token(this.position, tt.EOF, undefined)];\n        }\n        const tokens = [];\n        while (this.currentChar !== undefined) {\n            if (' \\t\\n'.includes(this.currentChar)) {\n                this.advance();\n            }\n            else if (digits.includes(this.currentChar)) {\n                tokens.push(this.makeNumber());\n            }\n            else if (this.currentChar === singleLineComment[0] &&\n                this.text[this.position.idx + 1] === singleLineComment[1]) {\n                this.singleLineComment();\n            }\n            else if (this.currentChar === multiLineCommentStart[0] &&\n                this.text[this.position.idx + 1] === multiLineCommentStart[1]) {\n                this.multiLineComment();\n            }\n            else if (identifierChars.includes(this.currentChar)) {\n                tokens.push(this.makeIdentifier());\n            }\n            else if (stringSurrounds.indexOf(this.currentChar) !== -1) {\n                tokens.push(this.makeString());\n            }\n            else {\n                const possibleAssignFirstChar = this.currentChar;\n                let token = this.unknownChar();\n                if (token) {\n                    if (token.type === tt.ASSIGN) {\n                        token.value = possibleAssignFirstChar;\n                    }\n                    tokens.push(token);\n                }\n                else {\n                    let pos = this.position.clone;\n                    let char = this.currentChar;\n                    this.advance();\n                    return new IllegalCharError(pos, char);\n                }\n            }\n        }\n        tokens.push(new Token(this.position, tt.EOF, undefined));\n        return tokens;\n    }\n    makeNumber() {\n        const pos = this.position.clone;\n        let numStr = '';\n        let dotCount = 0;\n        while (this.currentChar !== undefined && (digits + '._').includes(this.currentChar)) {\n            if (this.currentChar === '.') {\n                if (dotCount === 1) {\n                    break;\n                }\n                dotCount++;\n                numStr += '.';\n            }\n            else if (this.currentChar !== '_') {\n                numStr += this.currentChar;\n            }\n            this.advance();\n        }\n        return new Token(pos, tt.NUMBER, parseFloat(numStr));\n    }\n    makeString() {\n        const pos = this.position.clone;\n        let str = '';\n        let strClose = this.currentChar;\n        this.advance();\n        while (this.currentChar !== strClose && this.currentChar !== undefined) {\n            if (this.currentChar === '\\\\') {\n                this.advance();\n                if (this.currentChar === 'n') {\n                    str += '\\n';\n                    this.advance();\n                    continue;\n                }\n            }\n            str += this.currentChar;\n            this.advance();\n        }\n        this.advance();\n        return new Token(pos, tt.STRING, str);\n    }\n    makeIdentifier() {\n        let idStr = '';\n        const posStart = this.position.clone;\n        while (this.currentChar !== undefined && (identifierChars + digits).includes(this.currentChar)) {\n            idStr += this.currentChar;\n            this.advance();\n        }\n        let tokType = tt.IDENTIFIER;\n        if (KEYWORDS.indexOf(idStr) !== -1) {\n            tokType = tt.KEYWORD;\n        }\n        return new Token(posStart, tokType, idStr);\n    }\n    unknownChar() {\n        if (this.currentChar === undefined) {\n            return undefined;\n        }\n        for (let triple in tripleCharTokens) {\n            if (triple[0] === this.currentChar)\n                if (triple[1] === this.text[this.position.idx + 1])\n                    if (triple[2] === this.text[this.position.idx + 2]) {\n                        const pos = this.position.clone;\n                        this.advance();\n                        this.advance();\n                        this.advance();\n                        return new Token(pos, tripleCharTokens[triple], undefined);\n                    }\n        }\n        for (let double in doubleCharTokens) {\n            if (double[0] === this.currentChar)\n                if (double[1] === this.text[this.position.idx + 1]) {\n                    const pos = this.position.clone;\n                    this.advance();\n                    this.advance();\n                    return new Token(pos, doubleCharTokens[double], undefined);\n                }\n        }\n        if (singleCharTokens.hasOwnProperty(this.currentChar)) {\n            let pos = this.position.clone;\n            let val = singleCharTokens[this.currentChar];\n            this.advance();\n            return new Token(pos, val, undefined);\n        }\n        return undefined;\n    }\n    singleLineComment() {\n        this.advance();\n        while (this.currentChar !== '\\n' && this.currentChar !== undefined) {\n            this.advance();\n        }\n        this.advance();\n    }\n    multiLineComment() {\n        this.advance();\n        while (!(this.currentChar === multiLineCommentEnd[0] &&\n            this.text[this.position.idx + 1] === multiLineCommentEnd[1])) {\n            this.advance();\n        }\n        this.advance();\n        this.advance();\n    }\n}\n","import { tokenType, tokenTypeString, tt, types, VAR_DECLARE_KEYWORDS } from '../constants';\nimport { Token } from \"./tokens\";\nimport * as n from '../runtime/nodes';\nimport { N_functionDefinition, N_namespace, N_primitiveWrapper, N_tryCatch, N_undefined, N_variable, } from '../runtime/nodes';\nimport { ESError, InvalidSyntaxError } from \"../errors\";\nexport class ParseResults {\n    constructor() {\n        this.advanceCount = 0;\n        this.lastRegisteredAdvanceCount = 0;\n        this.reverseCount = 0;\n    }\n    registerAdvance() {\n        this.advanceCount = 1;\n        this.lastRegisteredAdvanceCount++;\n    }\n    register(res) {\n        this.lastRegisteredAdvanceCount = res.advanceCount;\n        this.advanceCount += res.advanceCount;\n        if (res.error) {\n            this.error = res.error;\n        }\n        if (!res.node) {\n            return new N_undefined();\n        }\n        return res.node;\n    }\n    tryRegister(res) {\n        if (res.error) {\n            this.reverseCount += res.advanceCount;\n            return;\n        }\n        return this.register(res);\n    }\n    success(node) {\n        this.node = node;\n        return this;\n    }\n    failure(error) {\n        this.error = error;\n        return this;\n    }\n}\nexport class Parser {\n    constructor(tokens) {\n        this.tokens = tokens;\n        this.tokenIdx = -1;\n        this.currentToken = tokens[0];\n        this.advance();\n    }\n    parse() {\n        var _a;\n        if (!this.currentToken || !this.tokens || (this.tokens.length === 1 && this.tokens[0].type === tt.EOF)) {\n            return new ParseResults();\n        }\n        const res = this.statements(true);\n        if (!res.error && this.currentToken.type !== tokenType.EOF) {\n            return res.failure(new InvalidSyntaxError((_a = this.currentToken) === null || _a === void 0 ? void 0 : _a.pos, `Expected 'End of File', got token of type '${tokenTypeString[this.currentToken.type]}'`));\n        }\n        return res;\n    }\n    advance(res) {\n        if (res)\n            res.registerAdvance();\n        this.tokenIdx++;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    reverse(amount = 1) {\n        this.tokenIdx -= amount;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    consume(res, type, errorMsg) {\n        if (this.currentToken.type !== type)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, errorMsg !== null && errorMsg !== void 0 ? errorMsg : `Expected '${tokenTypeString[type]}' but got '${tokenTypeString[this.currentToken.type]}'`));\n        this.advance(res);\n    }\n    clearEndStatements(res) {\n        while (this.currentToken.type === tt.ENDSTATEMENT) {\n            this.advance(res);\n        }\n    }\n    statements(topLevel = false) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let statements = [];\n        this.clearEndStatements(res);\n        const firstStatement = res.register(this.statement());\n        if (!firstStatement) {\n            return res;\n        }\n        statements.push(firstStatement);\n        if (res.error) {\n            return res;\n        }\n        let moreStatements = true;\n        while (true) {\n            let newLineCount = 0;\n            while (this.currentToken.type === tt.ENDSTATEMENT) {\n                this.advance(res);\n                newLineCount++;\n            }\n            if (newLineCount === 0) {\n                moreStatements = false;\n            }\n            if (!moreStatements) {\n                break;\n            }\n            const statement = res.tryRegister(this.statement());\n            if (!statement) {\n                this.reverse(res.reverseCount);\n                continue;\n            }\n            statements.push(statement);\n        }\n        this.clearEndStatements(res);\n        let node = new n.N_statements(pos, statements, topLevel);\n        return res.success(node);\n    }\n    statement() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        if (this.currentToken.matches(tt.KEYWORD, 'return')) {\n            return this.returnStatement(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'yield')) {\n            return this.returnStatement(res, true);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'break')) {\n            this.advance(res);\n            return res.success(new n.N_break(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'continue')) {\n            this.advance(res);\n            return res.success(new n.N_continue(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'try')) {\n            return this.tryCatch();\n        }\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    returnStatement(res, isYield = false) {\n        const pos = this.currentToken.pos;\n        this.advance(res);\n        let expr = new N_undefined(this.currentToken.pos);\n        if (this.currentToken.type !== tt.ENDSTATEMENT) {\n            let exprRes = res.register(this.expr());\n            if (!exprRes) {\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'Expected end of statement'));\n            }\n            expr = exprRes;\n        }\n        if (isYield) {\n            return res.success(new n.N_yield(pos, expr));\n        }\n        return res.success(new n.N_return(pos, expr));\n    }\n    atom() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        const pos = this.currentToken.pos;\n        switch (tok.type) {\n            case tt.NUMBER:\n                this.advance(res);\n                return res.success(new n.N_number(pos, tok));\n            case tt.STRING:\n                this.advance(res);\n                return res.success(new n.N_string(pos, tok));\n            case tt.IDENTIFIER:\n                return this.atomIdentifier(res, pos, tok);\n            case tt.OPAREN:\n                this.advance(res);\n                const expr = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type === tt.CPAREN) {\n                    this.advance(res);\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ')'\"));\n            case tt.OSQUARE:\n                let arrayExpr = res.register(this.array());\n                if (res.error)\n                    return res;\n                return res.success(arrayExpr);\n            case tt.OBRACES:\n                let objectExpr = res.register(this.object());\n                if (res.error)\n                    return res;\n                return res.success(objectExpr);\n            case tt.KEYWORD:\n                if (tok.value === 'if') {\n                    const expr = res.register(this.ifExpr());\n                    if (res.error)\n                        return res;\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Invalid Identifier ${tok.value}`));\n            default:\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected number, identifier, '(', '+' or '-'`));\n        }\n    }\n    atomIdentifier(res, pos, tok) {\n        this.advance(res);\n        let node = new n.N_variable(tok);\n        let prevNode = new n.N_undefined(pos);\n        let functionCall = false;\n        while ([tt.OPAREN, tt.OSQUARE, tt.DOT].indexOf(this.currentToken.type) !== -1) {\n            switch (this.currentToken.type) {\n                case tt.OPAREN:\n                    functionCall = true;\n                    const tempNode = node;\n                    node = res.register(this.makeFunctionCall(node));\n                    prevNode = tempNode;\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.OSQUARE:\n                    prevNode = node;\n                    node = res.register(this.makeIndex(node));\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.DOT:\n                    this.advance(res);\n                    if (this.currentToken.type !== tt.IDENTIFIER) {\n                        return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected identifier after '.'`));\n                    }\n                    prevNode = node;\n                    node = new n.N_indexed(this.currentToken.pos, node, new n.N_string(this.currentToken.pos, this.currentToken));\n                    this.advance(res);\n            }\n        }\n        if (this.currentToken.type === tt.ASSIGN) {\n            let assignType = this.currentToken.value;\n            if (functionCall) {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot assign to return value of function`));\n            }\n            this.advance(res);\n            const value = res.register(this.expr());\n            if (node instanceof n.N_variable) {\n                node = new n.N_varAssign(pos, node.a, value, assignType, false);\n            }\n            else if (node instanceof n.N_indexed) {\n                node.value = value;\n                node.assignType = assignType;\n            }\n            else {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot have node of type ${this.currentToken.constructor.name}.\n                            Expected either index or variable node.`));\n            }\n            if (res.error)\n                return res;\n        }\n        return res.success(node);\n    }\n    power() {\n        return this.binOp(() => this.atom(), [tt.POW, tt.MOD, tt.APMERSAND, tt.PIPE], () => this.factor());\n    }\n    factor() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        if (tok.type === tt.ADD || tok.type === tt.SUB || tok.type === tt.BITWISE_NOT) {\n            this.advance(res);\n            const factor = res.register(this.factor());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(tok.pos, factor, tok));\n        }\n        return this.power();\n    }\n    term() {\n        return this.binOp(() => this.factor(), [tt.MUL, tt.DIV]);\n    }\n    arithmeticExpr() {\n        return this.binOp(() => this.term(), [tt.ADD, tt.SUB]);\n    }\n    comparisonExpr() {\n        const res = new ParseResults();\n        if (this.currentToken.type === tt.NOT) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            let node = res.register(this.expr());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(opTok.pos, node, opTok));\n        }\n        if (this.currentToken.type === tt.BITWISE_NOT) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            let node = res.register(this.expr());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(opTok.pos, node, opTok));\n        }\n        let node = res.register(this.binOp(() => this.arithmeticExpr(), [tt.EQUALS, tt.NOTEQUALS, tt.GT, tt.GTE, tt.LTE, tt.LT]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    expr() {\n        const res = new ParseResults();\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.KEYWORD && VAR_DECLARE_KEYWORDS.indexOf(this.currentToken.value) !== -1) {\n            return this.initiateVar(res);\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'if')) {\n            return this.ifExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'while')) {\n            return this.whileExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'for')) {\n            return this.forExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'func')) {\n            return this.funcExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'class')) {\n            return this.classExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'namespace')) {\n            return this.namespace();\n        }\n        let node = res.register(this.binOp(() => this.comparisonExpr(), [tt.AND, tt.OR]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    binOp(func, ops, funcB = func) {\n        const res = new ParseResults();\n        let left = res.register(func());\n        if (res.error)\n            return res;\n        while (ops.indexOf(this.currentToken.type) !== -1\n            || ops.indexOf([this.currentToken.type, this.currentToken.value]) !== -1) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            const right = res.register(funcB());\n            if (res.error)\n                return res;\n            left = new n.N_binOp(left.pos, left, opTok, right);\n        }\n        return res.success(left);\n    }\n    makeFunctionCall(to) {\n        const res = new ParseResults();\n        let args = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OPAREN) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '['\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n            return res.success(new n.N_functionCall(pos, to, []));\n        }\n        args.push(res.register(this.expr()));\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid argument\"));\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            args.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CPAREN)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n        this.advance(res);\n        return res.success(new n.N_functionCall(pos, to, args));\n    }\n    makeIndex(to) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const base = to;\n        if (this.currentToken.type !== tt.OSQUARE)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, `Cannot index without expression`));\n        }\n        let index = res.register(this.expr());\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid index\"));\n        if (this.currentToken.type !== tt.CSQUARE)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ']'\"));\n        this.advance(res);\n        return res.success(new n.N_indexed(pos, base, index));\n    }\n    typeExpr(res) {\n        if (this.currentToken.type === tt.IDENTIFIER) {\n            const tok = this.currentToken;\n            this.advance(res);\n            return res.success(new N_variable(tok));\n        }\n        return this.expr();\n    }\n    initiateVar(res) {\n        let pos = this.currentToken.pos;\n        let isConst = true;\n        let isGlobal = false;\n        let isDeclaration = false;\n        if (this.currentToken.type === tt.KEYWORD &&\n            this.currentToken.value === 'global') {\n            isDeclaration = true;\n            isGlobal = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD &&\n            this.currentToken.value === 'let') {\n            isDeclaration = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        else if (this.currentToken.type === tt.KEYWORD &&\n            this.currentToken.value === 'var') {\n            isDeclaration = true;\n            isConst = false;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected variable declaration keyword, not ${this.currentToken.value}`));\n        }\n        if (this.currentToken.type !== tokenType.IDENTIFIER) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected Identifier or Keyword`));\n        }\n        const varName = this.currentToken;\n        this.advance(res);\n        let type = types.any;\n        if (this.currentToken.type === tt.COLON) {\n            isDeclaration = true;\n            this.consume(res, tt.COLON);\n            type = res.register(this.typeExpr(res));\n        }\n        if (this.currentToken.type !== tt.ASSIGN) {\n            if (isConst)\n                return res.failure(new InvalidSyntaxError(pos, 'Cannot initialise constant to undefined'));\n            return res.success(new n.N_varAssign(pos, varName, new n.N_undefined(this.currentToken.pos), '=', isGlobal, isConst, isDeclaration, type));\n        }\n        let assignType = this.currentToken.value;\n        this.advance(res);\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        if (expr instanceof n.N_class || expr instanceof n.N_functionDefinition) {\n            expr.name = varName.value;\n        }\n        if (expr instanceof N_namespace) {\n            expr.name = varName.value;\n            expr.mutable = !isConst;\n        }\n        return res.success(new n.N_varAssign(pos, varName, expr, assignType, isGlobal, isConst, isDeclaration, type));\n    }\n    bracesExp() {\n        const res = new ParseResults();\n        this.consume(res, tt.OBRACES);\n        if (res.error) {\n            return res;\n        }\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_undefined(this.currentToken.pos));\n        }\n        const expr = res.register(this.statements());\n        if (res.error) {\n            return res;\n        }\n        this.consume(res, tt.CBRACES);\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    addEndStatement(res) {\n        this.tokens.splice(this.tokenIdx, 0, new Token(this.currentToken.pos, tt.ENDSTATEMENT, undefined));\n        this.reverse();\n        this.advance(res);\n    }\n    ifExpr() {\n        const res = new ParseResults();\n        let ifTrue;\n        let ifFalse;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'if'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'if'\"));\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        ifTrue = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.clearEndStatements(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'else')) {\n            this.advance(res);\n            if (this.currentToken.type == tt.OBRACES) {\n                ifFalse = res.register(this.bracesExp());\n                if (res.error)\n                    return res;\n            }\n            else {\n                ifFalse = res.register(this.statement());\n                if (res.error)\n                    return res;\n            }\n        }\n        this.addEndStatement(res);\n        return res.success(new n.N_if(pos, condition, ifTrue, ifFalse));\n    }\n    whileExpr() {\n        const res = new ParseResults();\n        let loop;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'while')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'while'\"));\n        }\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        loop = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        return res.success(new n.N_while(pos, condition, loop));\n    }\n    parameter(res) {\n        let name;\n        let type = new n.N_primitiveWrapper(types.any);\n        if (this.currentToken.type !== tt.IDENTIFIER) {\n            return new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\");\n        }\n        name = this.currentToken.value;\n        this.advance(res);\n        if (this.currentToken.type === tt.COLON) {\n            this.consume(res, tt.COLON);\n            if (res.error)\n                return res.error;\n            type = res.register(this.typeExpr(res));\n            if (res.error)\n                return res.error;\n        }\n        return { name, type };\n    }\n    funcCore() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, args = [], returnType = new n.N_primitiveWrapper(types.any);\n        this.consume(res, tt.OPAREN);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n        }\n        else {\n            let param = this.parameter(res);\n            if (param instanceof ESError) {\n                return res.failure(param);\n            }\n            args.push(param);\n            while (this.currentToken.type === tt.COMMA) {\n                this.advance(res);\n                let param = this.parameter(res);\n                if (param instanceof ESError)\n                    return res.failure(param);\n                args.push(param);\n            }\n            if (this.currentToken.type !== tt.CPAREN)\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n            this.advance(res);\n        }\n        if (this.currentToken.type === tt.COLON) {\n            this.advance(res);\n            returnType = res.register(this.typeExpr(res));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.OBRACES) {\n            body = new n.N_return(this.currentToken.pos, res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        else {\n            this.consume(res, tt.OBRACES);\n            if (res.error)\n                return res;\n            if (this.currentToken.type !== tt.CBRACES)\n                body = res.register(this.statements());\n            else\n                body = new n.N_undefined(this.currentToken.pos);\n            this.consume(res, tt.CBRACES);\n            if (res.error)\n                return res;\n        }\n        return res.success(new n.N_functionDefinition(pos, body, args, returnType));\n    }\n    funcExpr() {\n        const res = new ParseResults();\n        if (!this.currentToken.matches(tt.KEYWORD, 'func'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'func'\"));\n        this.advance(res);\n        const func = res.register(this.funcCore());\n        if (res.error)\n            return res;\n        return res.success(func);\n    }\n    classExpr(name) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const methods = [];\n        let init;\n        let extends_ = new N_primitiveWrapper(types.object);\n        if (!this.currentToken.matches(tt.KEYWORD, 'class')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'class'\"));\n        }\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'extends')) {\n            this.advance(res);\n            extends_ = res.register(this.expr());\n            if (res.error)\n                return res;\n        }\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_class(pos, [], extends_, undefined, name));\n        }\n        while (true) {\n            if (this.currentToken.type !== tt.IDENTIFIER) {\n                break;\n            }\n            let methodId = this.currentToken.value;\n            this.advance(res);\n            const func = res.register(this.funcCore());\n            if (res.error)\n                return res;\n            if (!(func instanceof N_functionDefinition)) {\n                return res.failure(new ESError(this.currentToken.pos, 'ParseError', `Tried to get function, but got ${func} instead`));\n            }\n            func.name = methodId;\n            if (methodId === 'init') {\n                init = func;\n            }\n            else {\n                methods.push(func);\n            }\n        }\n        this.consume(res, tt.CBRACES);\n        return res.success(new n.N_class(pos, methods, extends_, init, name));\n    }\n    forExpr() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, array, identifier, isConst = true;\n        if (!this.currentToken.matches(tt.KEYWORD, 'for')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'for'\"));\n        }\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'var')) {\n            isConst = false;\n            this.advance(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'let')) {\n            this.advance(res);\n        }\n        if (res.error)\n            return res;\n        if (this.currentToken.type !== tt.IDENTIFIER) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\"));\n        }\n        identifier = this.currentToken;\n        this.advance(res);\n        if (!this.currentToken.matches(tt.KEYWORD, 'in')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected keyword 'in\"));\n        }\n        this.advance(res);\n        array = res.register(this.expr());\n        if (res.error)\n            return res;\n        body = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new n.N_for(pos, body, array, identifier, false, isConst));\n    }\n    array() {\n        const res = new ParseResults();\n        let elements = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            this.advance(res);\n            return res.success(new n.N_array(pos, []));\n        }\n        elements.push(res.register(this.expr()));\n        if (res.error) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Unexpected token\"));\n        }\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            elements.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ']'\"));\n        }\n        this.advance(res);\n        return res.success(new n.N_array(pos, elements));\n    }\n    object() {\n        const res = new ParseResults();\n        let properties = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OBRACES) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '{\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_objectLiteral(pos, []));\n        }\n        while (true) {\n            let keyType, key, value;\n            if (this.currentToken.type === tt.IDENTIFIER) {\n                keyType = 'id';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.STRING) {\n                keyType = 'string';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.OSQUARE) {\n                keyType = 'value';\n                this.advance(res);\n                key = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.CSQUARE) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ']', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                this.advance(res);\n            }\n            else {\n                break;\n            }\n            if (this.currentToken.type === tt.COLON) {\n                this.advance(res);\n                value = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                if (this.currentToken.type === tt.COMMA) {\n                    this.advance(res);\n                }\n            }\n            else {\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                if (keyType !== 'id') {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `You must specify a value when initialising an object literal with a key that is not an identifier.\n                        Try using \\`key: value\\` syntax.`));\n                }\n                this.reverse();\n                value = new n.N_variable(this.currentToken);\n                this.advance(res);\n                if (this.currentToken.type === tt.COMMA) {\n                    this.advance(res);\n                }\n            }\n            properties.push([key, value]);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CBRACES)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier, ',' or '}'\"));\n        this.advance(res);\n        return res.success(new n.N_objectLiteral(pos, properties));\n    }\n    namespace() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_namespace(pos, new n.N_undefined()));\n        }\n        const statements = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        return res.success(new n.N_namespace(pos, statements));\n    }\n    tryCatch() {\n        const res = new ParseResults();\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'No empty try block'));\n        }\n        const body = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.value !== 'catch') {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'try block requires catch'));\n        }\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.success(new N_tryCatch(this.currentToken.pos, body, new N_undefined()));\n        }\n        const catchBlock = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new N_tryCatch(this.currentToken.pos, body, catchBlock));\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Lexer } from \"./parse/lexer\";\nimport { Parser } from \"./parse/parser\";\nimport { global, libs as allLibs, now, refreshPerformanceNow, runningInNode, setGlobalContext, VERSION } from \"./constants\";\nimport { initialise } from \"./init\";\nimport { ESError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { compileResult, interpretResult, Node } from \"./runtime/nodes\";\nimport { ESArray, initPrimitiveTypes } from \"./runtime/primitiveTypes\";\nimport { Context } from \"./runtime/context\";\nimport addNodeLibs from \"./built-in/nodeLibs\";\nimport colours from './util/colours';\nimport JS_STD_TXT_RAW from 'raw-loader!./built-in/compiledSTD/std.txt.js';\nimport PY_STD_TXT_RAW from 'raw-loader!./built-in/compiledSTD/std.txt.py';\nexport { Context, colours, Position, };\nexport * from './runtime/primitiveTypes';\nexport { VERSION, global, setGlobalContext, IS_NODE_INSTANCE, runningInNode, libs, now, refreshPerformanceNow, configFileName } from './constants';\nexport * from './errors';\nexport * from './runtime/nodes';\nexport * from './util/util';\nexport { strip, wrap } from './runtime/primitives/wrapStrip';\nexport { ESSymbol } from './runtime/symbol';\nexport { parseConfig, config } from './config';\nexport function init(printFunc = console.log, inputFunc, node = true, libs = { print: console.log }, context = new Context(), path = '') {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        initPrimitiveTypes();\n        const res = initialise(context, printFunc, inputFunc);\n        if (res instanceof ESError) {\n            return res;\n        }\n        setGlobalContext(context);\n        (_a = libs['context']) !== null && _a !== void 0 ? _a : (libs['context'] = context);\n        if (path) {\n            context.path = path;\n        }\n        if (libs.print) {\n            allLibs.print = libs.print;\n        }\n        if (node) {\n            runningInNode();\n            yield refreshPerformanceNow(true);\n            addNodeLibs(libs, context);\n        }\n    });\n}\nexport function run(msg, { env = global, measurePerformance = false, fileName = '(unknown)', currentDir = '' } = {}) {\n    if (currentDir) {\n        env.path = currentDir;\n    }\n    Node.maxTime = 0;\n    Node.totalTime = 0;\n    Node.interprets = 0;\n    const timeData = {\n        total: 0,\n        lexerTotal: 0,\n        parserTotal: 0,\n        interpretTotal: 0,\n        nodeMax: 0,\n        nodeAvg: 0,\n        nodeTotal: 0,\n        interprets: 0,\n    };\n    let start = now();\n    if (!env.root.initialisedAsGlobal) {\n        const res = new interpretResult();\n        res.error = new ESError(Position.void, 'Uninitialised', 'Global context has not been initialised with global values');\n        return res;\n    }\n    const lexer = new Lexer(msg, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        const res_ = new interpretResult();\n        res_.error = lexerRes;\n        return res_;\n    }\n    timeData.lexerTotal = now() - start;\n    start = now();\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        const res_ = new interpretResult();\n        res_.error = res.error;\n        return res_;\n    }\n    timeData.parserTotal = now() - start;\n    start = now();\n    if (!res.node) {\n        const res = new interpretResult();\n        res.val = new ESArray([]);\n        return res;\n    }\n    const finalRes = res.node.interpret(env);\n    timeData.interpretTotal = now() - start;\n    timeData.total = now() - start;\n    timeData.nodeMax = Node.maxTime;\n    timeData.nodeTotal = Node.totalTime;\n    timeData.nodeAvg = Node.totalTime / Node.interprets;\n    timeData.interprets = Node.interprets;\n    if (measurePerformance) {\n        console.log(timeData);\n    }\n    return Object.assign(Object.assign({}, finalRes), { timeData });\n}\nexport function parse(code, { fileName = '(unknown)', currentDir = '' } = {}) {\n    const lexer = new Lexer(code, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        return {\n            error: lexerRes\n        };\n    }\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        return {\n            error: res.error\n        };\n    }\n    if (!res.node) {\n        return {\n            error: new ESError(Position.void, 'Error', 'no output')\n        };\n    }\n    return {\n        compileToJavaScript: (config) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            const comment = `// Generated by EntropyScript->JavaScript compiler v${VERSION}\\n`;\n            const stdStr = JS_STD_TXT_RAW.toString().replace(/(\\r\\n|\\n|\\r|\\t| )+/gm, ' ') + '\\n';\n            const out = res.node.compileJS(config);\n            if (out.error)\n                return out;\n            if (config.minify) {\n                out.val = out.val.replace(/(\\r\\n|\\n|\\r|\\t| )+/gm, ' ');\n            }\n            return new compileResult(comment + stdStr + out.val);\n        },\n        compileToPython: (config) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            const comment = `# Generated by EntropyScript->Python compiler v${VERSION}\\n\\n`;\n            const stdStr = PY_STD_TXT_RAW.toString() + '\\n';\n            const out = res.node.compilePy(config);\n            if (out.error)\n                return out;\n            return new compileResult(comment + stdStr + out.hoisted + '\\n' + out.val);\n        },\n        interpret: (env = global) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            if (currentDir) {\n                env.path = currentDir;\n            }\n            if (!env.root.initialisedAsGlobal) {\n                const res = new interpretResult();\n                res.error = new ESError(Position.void, 'Uninitialised', 'Global context has not been initialised with global values');\n                return res;\n            }\n            return res.node.interpret(env);\n        },\n    };\n}\n","import { Position } from \"../position\";\nimport { Context } from \"../runtime/context\";\nimport { ESError, ImportError, PermissionRequiredError } from '../errors';\nimport { ESFunction, ESNamespace, ESObject, ESString } from '../runtime/primitiveTypes';\nimport { str } from \"../util/util\";\nimport { config, run } from '../index';\nimport { addModule, getModule, moduleExist } from './builtInModules';\nimport { global, types, VALID_FILE_ENCODINGS } from \"../constants\";\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nfunction addNodeLibs(libs, context) {\n    const { fs, path } = libs;\n    for (let libName of Object.keys(libs)) {\n        addModule(libName, new ESJSBinding(libs[libName], libName));\n    }\n    context.set('import', new ESFunction(({ context }, rawPath) => {\n        if (!config.permissions.imports) {\n            return new PermissionRequiredError('Imports not allowed');\n        }\n        let scriptPath = str(rawPath);\n        if (config.permissions.useSTD && moduleExist(scriptPath)) {\n            return getModule(scriptPath);\n        }\n        scriptPath = path.join(context.path, scriptPath);\n        try {\n            if (!fs.existsSync(scriptPath)) {\n                if (fs.existsSync('./particles/' + scriptPath)) {\n                    if (fs.existsSync('particles/' + scriptPath + '/main.es')) {\n                        scriptPath = 'particles/' + scriptPath + '/main.es';\n                    }\n                    else {\n                        return new ESError(Position.void, 'ImportError', `Module '${scriptPath}' has no entry point. Requires 'main.es'.`);\n                    }\n                }\n                else {\n                    return new ESError(Position.void, 'ImportError', `Can't find file '${scriptPath}' to import.`);\n                }\n            }\n            const exDir = path.dirname(scriptPath);\n            const code = fs.readFileSync(scriptPath, 'utf-8');\n            const env = new Context();\n            env.parent = global;\n            env.path = exDir;\n            const n = new ESNamespace(new ESString(scriptPath), {});\n            const res = run(code, {\n                env,\n                measurePerformance: false,\n                fileName: scriptPath,\n                currentDir: exDir,\n            });\n            n.__value__ = env.getSymbolTableAsDict();\n            if (res.error) {\n                return res.error;\n            }\n            return n;\n        }\n        catch (E) {\n            return new ESError(Position.void, 'ImportError', E.toString());\n        }\n    }, [{ name: 'path', type: types.string }], 'import', undefined, types.object), {\n        forceThroughConst: true,\n        isConstant: true\n    });\n    context.setOwn('open', new ESFunction(({ context }, path_, encoding_) => {\n        if (!config.permissions.fileSystem) {\n            return new PermissionRequiredError('No access to file system');\n        }\n        const filePath = str(path_);\n        let encoding = str(encoding_);\n        if (VALID_FILE_ENCODINGS.indexOf(encoding) === -1) {\n            encoding = 'utf-8';\n        }\n        if (!fs.existsSync(filePath)) {\n            return new ImportError(Position.void, filePath);\n        }\n        return new ESObject({\n            str: new ESFunction(({ context }) => {\n                return new ESString(fs.readFileSync(path.join(context.path, filePath), encoding).toString());\n            }, [], 'str', undefined, types.string),\n            write: new ESFunction(({ context }, data) => {\n                fs.writeFileSync(context.path + filePath, str(data));\n            }, [{ name: 'path', type: types.string }]),\n            append: new ESFunction(({ context }, data) => {\n                fs.appendFileSync(context.path + filePath, str(data));\n            }, [{ name: 'path', type: types.string }]),\n        });\n    }));\n}\nexport default addNodeLibs;\n","export default \"Array.prototype.contains = function (element) {\\n\\treturn this.indexOf(element) !== -1;\\n};\\n\\nfunction parseNum (str) {\\n\\treturn parseFloat(str);\\n}\\n\\nconst print = console.log;\\n\\nNumber.prototype[Symbol.iterator] = function () {\\n\\treturn {\\n\\t\\tcurrent: 0,\\n\\t\\tlast: this,\\n\\t\\tnext() {\\n\\t\\t\\tif (this.current <= this.last) {\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\tdone: false,\\n\\t\\t\\t\\t\\tvalue: this.current++\\n\\t\\t\\t\\t};\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn { done: true };\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n};\\n\\nconst __private__ = {\\n\\tbims: {\\n\\t\\tmath: Math,\\n\\t\\ttime: {\\n\\t\\t\\tdate: Date,\\n\\t\\t\\tnow: Date.now,\\n\\t\\t},\\n\\t},\\n};\\n\\nif (typeof performance !== 'undefined') {\\n\\t__private__.bims.time.now = performance.now;\\n}\\n\\nfunction import_ (path) {\\n\\tif (__private__.bims.hasOwnProperty(path)) {\\n\\t\\treturn __private__.bims[path];\\n\\t}\\n}\\n\\nfunction range (minP, maxP, stepP) {\\n\\tif (typeof minP !== 'number') {\\n\\t\\treturn [];\\n\\t}\\n\\n\\tconst min = minP.valueOf();\\n\\n\\tif (typeof maxP === 'undefined') {\\n\\t\\ttry {\\n\\t\\t\\treturn [...Array(min).keys()];\\n\\t\\t} catch (e) {\\n\\t\\t\\tthrow `RangeError: Cannot make range of length '${min}'`;\\n\\t\\t}\\n\\t}\\n\\n\\tlet step = 1;\\n\\n\\tif (typeof maxP !== 'number') {\\n\\t\\tthrow 'TypeError: Expected number';\\n\\t}\\n\\n\\tlet max = maxP.valueOf();\\n\\n\\tif (typeof stepP !== 'undefined') {\\n\\t\\tif (typeof stepP !== 'number') {\\n\\t\\t\\tthrow 'TypeError: Expected number';\\n\\t\\t}\\n\\t\\tstep = stepP.valueOf();\\n\\t}\\n\\n\\tlet arr = [];\\n\\n\\tlet i = min;\\n\\twhile (i < max) {\\n\\t\\tarr.push(i);\\n\\t\\ti += step;\\n\\t}\\n\\n\\treturn arr;\\n}\";","export default \"\\n###############################\\n# START OF ENTROPY SCRIPT STD #\\n###############################\\nimport time\\n\\nlog = print\\nparseNum = float\\n\\ndef help(thing):\\n    return 'Help is not available in ES compiled Python'\\n\\n\\ndef GENERATE_PRIVATE():\\n    return {\\n        'modules': {\\n            'ascii': {\\n\\n            },\\n            'time': {\\n                'now': lambda: time.time_ns() / (10 ** 6)\\n            }\\n        }\\n    }\\n\\nPRIVATE = GENERATE_PRIVATE()\\n\\ndef import_ (path):\\n    if path in PRIVATE['modules']:\\n        return PRIVATE['modules'][path]\\n\\n\\n#############################\\n# END OF ENTROPY SCRIPT STD #\\n#############################\";"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Position","constructor","idx","ln","col","file","advance","currentChar","clone","str","isUnknown","void","digits","identifierChars","global","setGlobalContext","c","stringSurrounds","IS_NODE_INSTANCE","window","runningInNode","VAR_DECLARE_KEYWORDS","VERSION","configFileName","VALID_FILE_ENCODINGS","print","console","log","KEYWORDS","now","refreshPerformanceNow","thisArg","_arguments","generator","Date","performance","e","P","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","tokenType","tt","tokenTypeString","NUMBER","STRING","ENDSTATEMENT","IDENTIFIER","KEYWORD","COMMA","OBRACES","CBRACES","OPAREN","CPAREN","OSQUARE","CSQUARE","ASSIGN","ADD","SUB","MUL","DIV","POW","MOD","EQUALS","NOTEQUALS","NOT","GT","LT","GTE","LTE","AND","OR","COLON","DOT","EOF","APMERSAND","PIPE","BITWISE_NOT","singleCharTokens","doubleCharTokens","tripleCharTokens","primitiveMethods","types","ESPrimitive","type","any","self","isa","props","typeCheck","is","ESBoolean","valueOf","__value__","typeName","__type__","hasProperty","describe","info","isBuiltIn","description","detail","res","strip","TypeError","assign","__add__","n","InvalidOperationError","__subtract__","__multiply__","__divide__","__pow__","__mod__","__eq__","__gt__","__lt__","__and__","__or__","__bool__","__pipe__","__ampersand__","__setProperty__","__call__","parameters","ESErrorPrimitive","error","ESError","super","__getProperty__","ESString","name","details","ESArray","traceback","map","s","position","line","IndexError","cast","bool","ESTypeUnion","ESTypeIntersection","ESUndefined","undefined","context","number","ESNumber","string","array","ESType","object","ESObject","ESFunction","boolean","val","length","substr","keys","k","thisElement","nElement","newOb","keysToRemove","Array","isArray","indexOf","toClone","thisType","nValue","func","arguments_","this_","returnType","closure","__closure__","params","path","_a","callContext","fn","newContext","parent","Context","max","Math","i","arg","typeIncludes","setOwn","forceThroughConst","setRes","generateESFunctionCallContext","Node","_b","interpret","funcReturn","callNode","push","callNative","thisReturnVal","args","defaultValue","required","v","ESNamespace","mutable","slice","symbol","isAccessible","isConstant","ESJSBinding","functionsTakeProps","JSON","stringify","fTakesProps","initPrimitiveTypes","dealWithExtends","class_","instance","superFunc","__extends__","initFunc","__init__","res_","createInstance","runInit","on","primitive","__name__","method","__methods__","methodClone","__instances__","isPrimitive","t","ESTypeArray","left","right","leftRes","__left__","rightRes","__right__","ESTypeNot","__val__","toString","pow","Boolean","helpLink","values","len","contains","element","newArr","num","parseFloat","isNaN","split","repeat","strToInsert","firstPart","lastPart","ESSymbol","identifier","options","_c","thing","Number","String","m","a","codes","red","yellow","green","cyan","blue","grey","code","builtInFunctions","minP","maxP","stepP","min","arr","returns","msgs","things","out","indent","total","filter","entries","contents","id","has","set","global_","time","cb","sleep","parse","json","config","permissions","networking","imports","accessDOM","useSTD","fileSystem","pathAsString","p","substring","parsePartOfConfig","configJSON","configKeys","unknownProps","x","includes","parseConfig","modules","ascii","asciiToChar","fromCharCode","charToAscii","char","charCodeAt","processedModules","moduleExist","getModule","processed","moduleDict","moduleRaw","processRawModule","initialise","globalContext","printFunc","inputFunc","rawUrl","callback","url","fetch","text","env","run","ImportError","getSymbolTableAsDict","E","msg","cbRaw","builtIn","globalConstants","constant","load","initModRes","thens","resolved","catch_","catch","date","domRes","PermissionRequiredError","InvalidRuntimeError","w","$","document","ReferenceError","dom","initModules","initialisedAsGlobal","symbolTable","deleted","path_","parent_","hasOwn","getSymbol","getRawSymbolTableAsDict","symbols","remove","clear","resetAsGlobal","deepClone","interpretArgument","typeRes","defaultValRes","interpretResult","shouldBreak","shouldContinue","compileResult","hoisted","register","node","compilePy","pos","isTerminal","start","interpret_","interprets","totalTime","maxTime","N_binOp","opTok","l","r","lt","eq","gt","InvalidSyntaxError","compileJS","minify","switchers","op","N_unaryOp","numVal","abs","N_varAssign","varNameTok","assignType","isGlobal","isDeclaration","N_primitiveWrapper","typeCheckRes","currentVal","newVal","assignVal","declaration","N_if","comparison","ifTrue","ifFalse","compRes","highIndent","statementRes","ifTrueRes","ifFalseRes","N_statements","N_while","loop","shouldLoop","potentialError","comparisonRes","bodyRes","N_for","body","isGlobalIdentifier","isConstIdentifier","isGlobalId","isConstId","_d","_e","_f","_g","_h","iteration","iteratorRes","N_array","items","shouldClone","interpreted","item","itemRes","N_objectLiteral","properties","keyNode","valueNode","topLevel","last","N_functionCall","to","arguments","join","funcRes","argRes","N_functionDefinition","argNames","returnTypeRes","param","hoistedName","generateRandomSymbol","N_return","valRes","N_yield","N_indexed","base","index","baseRes","indexRes","objectRes","keyRes","N_class","methods","extends_","init","extendsRes","initRes","N_namespace","statements","N_tryCatch","catchBlock","catchRes","N_number","N_string","N_variable","N_undefined","N_break","N_continue","hash","WeakMap","Function","create","getPrototypeOf","Map","from","Set","add","depth","ms","setTimeout","replace","characters","gen","charAt","floor","random","colouredStr","reverse","IllegalCharError","ExpectedCharError","expectedType","actualType","ref","TestFailed","Token","matches","Lexer","program","fileName","generate","tokens","makeNumber","singleLineComment","multiLineComment","makeIdentifier","makeString","possibleAssignFirstChar","token","unknownChar","numStr","dotCount","strClose","idStr","posStart","tokType","triple","double","ParseResults","advanceCount","lastRegisteredAdvanceCount","reverseCount","registerAdvance","tryRegister","success","failure","Parser","tokenIdx","currentToken","amount","consume","errorMsg","clearEndStatements","firstStatement","statement","moreStatements","newLineCount","returnStatement","tryCatch","expr","isYield","exprRes","atom","tok","atomIdentifier","arrayExpr","objectExpr","ifExpr","prevNode","functionCall","tempNode","makeFunctionCall","makeIndex","power","binOp","factor","term","arithmeticExpr","comparisonExpr","initiateVar","whileExpr","forExpr","funcExpr","classExpr","namespace","ops","funcB","typeExpr","isConst","varName","bracesExp","addEndStatement","splice","condition","parameter","funcCore","methodId","elements","keyType","libs","fs","libName","rawPath","scriptPath","existsSync","exDir","dirname","readFileSync","measurePerformance","currentDir","encoding_","filePath","encoding","write","data","writeFileSync","append","appendFileSync","timeData","lexerTotal","parserTotal","interpretTotal","nodeMax","nodeAvg","nodeTotal","lexerRes","finalRes","compileToJavaScript","comment","stdStr","compileToPython"],"sourceRoot":""}