{"version":3,"file":"2.8.6.js","mappings":"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","sources":["webpack://es/webpack/universalModuleDefinition","webpack://es/webpack/bootstrap","webpack://es/webpack/runtime/define property getters","webpack://es/webpack/runtime/hasOwnProperty shorthand","webpack://es/webpack/runtime/make namespace object","webpack://es/./src/position.ts","webpack://es/./src/constants.ts","webpack://es/./src/runtime/primitives/primitive.ts","webpack://es/./src/runtime/primitives/esprimitive.ts","webpack://es/./src/runtime/primitives/eserrorprimitive.ts","webpack://es/./src/runtime/instantiator.ts","webpack://es/./src/runtime/primitives/estype.ts","webpack://es/./src/runtime/primitives/esundefined.ts","webpack://es/./src/runtime/primitives/esobject.ts","webpack://es/./src/runtime/primitives/esnamespace.ts","webpack://es/./src/runtime/primitives/esjsbinding.ts","webpack://es/./src/runtime/primitiveTypes.ts","webpack://es/./src/runtime/primitives/esfunction.ts","webpack://es/./src/runtime/functionCaller.ts","webpack://es/./src/runtime/context.ts","webpack://es/./src/runtime/primitives/esnumber.ts","webpack://es/./src/runtime/primitives/esboolean.ts","webpack://es/./src/runtime/primitives/esarray.ts","webpack://es/./src/runtime/primitives/esstring.ts","webpack://es/./src/runtime/symbol.ts","webpack://es/./src/runtime/primitives/wrapStrip.ts","webpack://es/./src/util/colours.ts","webpack://es/./src/built-in/builtInFunctions.ts","webpack://es/./src/built-in/built-in-modules/json.ts","webpack://es/./src/built-in/builtInModules.ts","webpack://es/./src/built-in/built-in-modules/ascii.ts","webpack://es/./src/built-in/built-in-modules/promise.ts","webpack://es/./src/built-in/built-in-modules/dom.ts","webpack://es/./src/init.ts","webpack://es/./src/built-in/globalConstants.ts","webpack://es/./src/runtime/argument.ts","webpack://es/./src/runtime/nodes.ts","webpack://es/./src/util/util.ts","webpack://es/./src/errors.ts","webpack://es/./src/parse/tokens.ts","webpack://es/./src/parse/lexer.ts","webpack://es/./src/parse/parser.ts","webpack://es/./src/index.ts","webpack://es/./src/built-in/nodeLibs.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"es\"] = factory();\n\telse\n\t\troot[\"es\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Position {\n    constructor(idx, ln, col, file = '(unknown)') {\n        this.idx = idx;\n        this.ln = ln;\n        this.col = col;\n        this.file = file;\n    }\n    advance(currentChar = '') {\n        this.idx++;\n        this.col++;\n        if (currentChar === '\\n') {\n            this.ln++;\n            this.col = 0;\n        }\n        return this;\n    }\n    get clone() {\n        return new Position(this.idx, this.ln, this.col, this.file);\n    }\n    get str() {\n        return `File ${this.file}, ${this.ln + 1}:${this.col + 1}`;\n    }\n    get isUnknown() {\n        return this.idx === -2;\n    }\n    static get unknown() {\n        return new Position(-2, -2, -2, '(unknown)');\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const digits = '0123456789';\nexport const identifierChars = '_$abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nexport const singleLineComment = '//';\nexport const multiLineCommentStart = '/*';\nexport const multiLineCommentEnd = '*/';\nexport let global;\nexport const setGlobalContext = (c) => void (global = c);\nexport const stringSurrounds = ['\\'', '`', '\"'];\nexport let IS_NODE_INSTANCE = typeof window === 'undefined';\nexport const runningInNode = () => void (IS_NODE_INSTANCE = true);\nexport const libs = {\n    print: console.log\n};\nexport const KEYWORDS = [\n    'var',\n    'let',\n    'global',\n    'local',\n    'mutable',\n    'const',\n    'if',\n    'else',\n    'while',\n    'for',\n    'in',\n    'continue',\n    'break',\n    'func',\n    'return',\n    'yield',\n    'class',\n    'extends',\n    'namespace',\n    'export'\n];\nexport let now = () => 0;\nexport function refreshPerformanceNow(IS_NODE_INSTANCE) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (IS_NODE_INSTANCE) {\n            now = () => Date.now();\n        }\n        else {\n            now = () => {\n                try {\n                    return performance === null || performance === void 0 ? void 0 : performance.now();\n                }\n                catch (e) {\n                    return 0;\n                }\n            };\n        }\n    });\n}\nrefreshPerformanceNow(IS_NODE_INSTANCE);\nexport const importCache = {};\nexport var tokenType;\n(function (tokenType) {\n    tokenType[tokenType[\"NUMBER\"] = 0] = \"NUMBER\";\n    tokenType[tokenType[\"STRING\"] = 1] = \"STRING\";\n    tokenType[tokenType[\"ENDSTATEMENT\"] = 2] = \"ENDSTATEMENT\";\n    tokenType[tokenType[\"IDENTIFIER\"] = 3] = \"IDENTIFIER\";\n    tokenType[tokenType[\"KEYWORD\"] = 4] = \"KEYWORD\";\n    tokenType[tokenType[\"COMMA\"] = 5] = \"COMMA\";\n    tokenType[tokenType[\"ASSIGN\"] = 6] = \"ASSIGN\";\n    tokenType[tokenType[\"ADD\"] = 7] = \"ADD\";\n    tokenType[tokenType[\"SUB\"] = 8] = \"SUB\";\n    tokenType[tokenType[\"MUL\"] = 9] = \"MUL\";\n    tokenType[tokenType[\"DIV\"] = 10] = \"DIV\";\n    tokenType[tokenType[\"POW\"] = 11] = \"POW\";\n    tokenType[tokenType[\"OPAREN\"] = 12] = \"OPAREN\";\n    tokenType[tokenType[\"CPAREN\"] = 13] = \"CPAREN\";\n    tokenType[tokenType[\"OBRACES\"] = 14] = \"OBRACES\";\n    tokenType[tokenType[\"CBRACES\"] = 15] = \"CBRACES\";\n    tokenType[tokenType[\"OSQUARE\"] = 16] = \"OSQUARE\";\n    tokenType[tokenType[\"CSQUARE\"] = 17] = \"CSQUARE\";\n    tokenType[tokenType[\"EQUALS\"] = 18] = \"EQUALS\";\n    tokenType[tokenType[\"NOTEQUALS\"] = 19] = \"NOTEQUALS\";\n    tokenType[tokenType[\"NOT\"] = 20] = \"NOT\";\n    tokenType[tokenType[\"GT\"] = 21] = \"GT\";\n    tokenType[tokenType[\"LT\"] = 22] = \"LT\";\n    tokenType[tokenType[\"GTE\"] = 23] = \"GTE\";\n    tokenType[tokenType[\"LTE\"] = 24] = \"LTE\";\n    tokenType[tokenType[\"AND\"] = 25] = \"AND\";\n    tokenType[tokenType[\"OR\"] = 26] = \"OR\";\n    tokenType[tokenType[\"COLON\"] = 27] = \"COLON\";\n    tokenType[tokenType[\"DOT\"] = 28] = \"DOT\";\n    tokenType[tokenType[\"EOF\"] = 29] = \"EOF\";\n    tokenType[tokenType[\"BITWISE_OR\"] = 30] = \"BITWISE_OR\";\n    tokenType[tokenType[\"BITWISE_AND\"] = 31] = \"BITWISE_AND\";\n    tokenType[tokenType[\"BITWISE_NOT\"] = 32] = \"BITWISE_NOT\";\n})(tokenType || (tokenType = {}));\nexport let tt = tokenType;\nexport const tokenTypeString = {\n    [tt.NUMBER]: 'Number',\n    [tt.STRING]: 'String',\n    [tt.ENDSTATEMENT]: ';',\n    [tt.IDENTIFIER]: 'Identifier',\n    [tt.KEYWORD]: 'Keyword',\n    [tt.COMMA]: ',',\n    [tt.OBRACES]: '{',\n    [tt.CBRACES]: '}',\n    [tt.OPAREN]: '(',\n    [tt.CPAREN]: ')',\n    [tt.OSQUARE]: '[',\n    [tt.CSQUARE]: ']',\n    [tt.ASSIGN]: '=',\n    [tt.ADD]: '+',\n    [tt.SUB]: '-',\n    [tt.MUL]: '*',\n    [tt.DIV]: '/',\n    [tt.POW]: '^',\n    [tt.EQUALS]: '==',\n    [tt.NOTEQUALS]: '!=',\n    [tt.NOT]: '!',\n    [tt.GT]: '>',\n    [tt.LT]: '<',\n    [tt.GTE]: '>=',\n    [tt.LTE]: '<=',\n    [tt.AND]: '&&',\n    [tt.OR]: '||',\n    [tt.COLON]: ':',\n    [tt.DOT]: '.',\n    [tt.EOF]: 'End of File',\n    [tt.BITWISE_AND]: '&',\n    [tt.BITWISE_OR]: '|',\n    [tt.BITWISE_NOT]: '~',\n};\nexport const singleCharTokens = {\n    '*': tt.MUL,\n    '/': tt.DIV,\n    '+': tt.ADD,\n    '-': tt.SUB,\n    '(': tt.OPAREN,\n    ')': tt.CPAREN,\n    '^': tt.POW,\n    '{': tt.OBRACES,\n    '}': tt.CBRACES,\n    ',': tt.COMMA,\n    '[': tt.OSQUARE,\n    ']': tt.CSQUARE,\n    ';': tt.ENDSTATEMENT,\n    ':': tt.COLON,\n    '.': tt.DOT,\n    '=': tt.ASSIGN,\n    '>': tt.GT,\n    '<': tt.LT,\n    '!': tt.NOT,\n    '|': tt.BITWISE_OR,\n    '&': tt.BITWISE_AND,\n    '~': tt.BITWISE_NOT\n};\nexport const doubleCharTokens = {\n    '==': tt.EQUALS,\n    '!=': tt.NOTEQUALS,\n    '>=': tt.GTE,\n    '<=': tt.LTE,\n    '+=': tt.ASSIGN,\n    '-=': tt.ASSIGN,\n    '*=': tt.ASSIGN,\n    '/=': tt.ASSIGN,\n    '&&': tt.AND,\n    '||': tt.OR\n};\nexport const tripleCharTokens = {};\nexport const primitiveMethods = [\n    '__add__',\n    '__subtract__',\n    '__multiply__',\n    '__divide__',\n    '__pow__',\n    '__eq__',\n    '__gt__',\n    '__lt__',\n    '__and__',\n    '__or__',\n    '__bool__',\n    '__setProperty__',\n    '__getProperty__',\n    '__call__',\n];\n","export const types = {};\n","import { InvalidOperationError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { types } from './primitive';\nimport { str } from '../../util/util';\nimport { strip } from './wrapStrip';\nexport class ESPrimitive {\n    constructor(value, type = types.any) {\n        this.self = this;\n        this.isa = (props, type) => {\n            return new ESBoolean(type === this.__type__);\n        };\n        this.is = (props, obj) => {\n            return new ESBoolean(obj === this);\n        };\n        this.valueOf = () => this.__value__;\n        this.typeName = () => this.__type__.__name__;\n        this.hasProperty = (props, key) => new ESBoolean(this.hasOwnProperty(str(key)));\n        this.describe = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            this.info.description = str(info);\n        };\n        this.detail = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            const res = strip(info, props);\n            if (typeof res !== 'object') {\n                return new TypeError(Position.unknown, 'object', this.typeName(), str(this));\n            }\n            this.info = Object.assign(Object.assign({}, this.info), res);\n            this.info.isBuiltIn = false;\n        };\n        this.__type__ = type || this;\n        this.__value__ = value;\n        this.info = {};\n    }\n    __add__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __subtract__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __multiply__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __divide__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __pow__(props, n) {\n        return new InvalidOperationError('__pow__', this);\n    }\n    __eq__(props, n) {\n        return new InvalidOperationError('__eq__', this);\n    }\n    __gt__(props, n) {\n        return new InvalidOperationError('__gt__', this);\n    }\n    __lt__(props, n) {\n        return new InvalidOperationError('__lt__', this);\n    }\n    __and__(props, n) {\n        return new InvalidOperationError('__and__', this);\n    }\n    __or__(props, n) {\n        return new InvalidOperationError('__or__', this);\n    }\n    __bool__(props) {\n        return new InvalidOperationError('__bool__', this);\n    }\n    __setProperty__(props, key, value) {\n        return new InvalidOperationError('__setProperty__', this, `[${str(key)}] = ${str(value)}`);\n    }\n    __call__(props, ...parameters) {\n        return new InvalidOperationError('__call__', this);\n    }\n}\n","import { ESPrimitive } from './esprimitive';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { ESFunction } from \"./esfunction\";\nimport { wrap } from \"./wrapStrip\";\nimport { str } from \"../../util/util\";\nexport class ESErrorPrimitive extends ESPrimitive {\n    constructor(error = new ESError(Position.unknown, 'Unknown', 'Error not specified')) {\n        super(error, types.error);\n        this.__getProperty__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.cast = ({}) => new ESError(Position.unknown, 'TypeError', `Cannot cast type 'error'`);\n        this.str = () => new ESString(`<Error: ${this.valueOf().str}>`);\n        this.__eq__ = (props, n) => new ESBoolean(n instanceof ESErrorPrimitive &&\n            this.valueOf().constructor === n.valueOf().constructor);\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.clone = () => new ESErrorPrimitive(this.valueOf());\n    }\n}\n","import { primitiveMethods } from '../constants';\nimport { Context } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESFunction, ESNumber, ESObject, ESString, ESType, ESUndefined } from \"./primitiveTypes\";\nfunction dealWithExtends(context, class_, instance, this_, callContext) {\n    if (!(class_ instanceof ESType)) {\n        return new TypeError(Position.unknown, 'Type', typeof class_, class_);\n    }\n    const superFunc = new ESFunction(({ context }, ...args) => {\n        const newContext = new Context();\n        newContext.parent = context;\n        if (class_.__extends__) {\n            let _a = dealWithExtends(newContext, class_.__extends__, instance, this_, callContext);\n            if (_a instanceof ESError) {\n                return _a;\n            }\n        }\n        const initFunc = class_ === null || class_ === void 0 ? void 0 : class_.__init__;\n        if (!initFunc) {\n            return;\n        }\n        initFunc.this_ = this_;\n        initFunc.__closure__ = newContext;\n        const res_ = initFunc.__call__({ context: newContext }, ...args);\n        if (res_ instanceof ESError) {\n            return res_;\n        }\n    }, undefined, 'super', this_);\n    let setRes = context.setOwn('super', superFunc);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    const res = createInstance(class_, { context }, [], false, instance);\n    if (res instanceof ESError) {\n        return res;\n    }\n}\nexport function createInstance(type, { context }, params, runInit = true, on = {}) {\n    var _b;\n    if (type.__isPrimitive__) {\n        if (params.length < 1) {\n            return new ESUndefined();\n        }\n        switch (type.__name__) {\n            case 'Undefined':\n            case 'Type':\n                if (params.length < 1) {\n                    return new ESType();\n                }\n                else {\n                    return new ESString(params[0].__type__.__name__);\n                }\n            case 'String':\n                return new ESString(params[0].str().valueOf());\n            case 'Array':\n                return new ESArray(params);\n            case 'Number':\n                return new ESNumber(params[0].valueOf());\n            case 'Function':\n                return new ESFunction(params[0].valueOf());\n            case 'Boolean':\n                return new ESBoolean(params[0].bool().valueOf());\n            default:\n                return wrap(params[0]);\n        }\n    }\n    const newContext = new Context();\n    newContext.parent = (_b = type.__init__) === null || _b === void 0 ? void 0 : _b.__closure__;\n    const instance = new ESObject();\n    if (type.__extends__) {\n        let res = dealWithExtends(newContext, type.__extends__, on, instance, context);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__value__ = on;\n    for (let method of type.__methods__) {\n        const methodClone = method.clone();\n        methodClone.this_ = instance;\n        on[method.name] = methodClone;\n        if (primitiveMethods.indexOf(method.name) !== -1) {\n            instance[method.name] = methodClone.__call__;\n        }\n    }\n    if (runInit && type.__init__) {\n        type.__init__.this_ = instance;\n        type.__init__.__closure__ = newContext;\n        const res = type.__init__.__call__({ context: newContext }, ...params);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__type__ = type;\n    type.__instances__.push(instance);\n    return instance;\n}\n","import { IndexError, InvalidOperationError } from '../../errors';\nimport { createInstance } from '../instantiator';\nimport { ESBoolean } from './esboolean';\nimport { ESFunction } from './esfunction';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nimport { Position } from \"../../position\";\nimport { str } from \"../../util/util\";\nexport class ESType extends ESPrimitive {\n    constructor(isPrimitive = false, name = '(anon)', __methods__ = [], __extends__, __init__) {\n        super(undefined, types === null || types === void 0 ? void 0 : types.type);\n        this.__instances__ = [];\n        this.clone = () => {\n            return new ESType(this.__isPrimitive__, this.__name__, this.__methods__, this.__extends__, this.__init__);\n        };\n        this.isa = ({}, type) => {\n            return new ESBoolean(type === types.type);\n        };\n        this.cast = ({}, type) => new InvalidOperationError('cast', this);\n        this.includesType = (props, t) => {\n            var _a, _b, _c, _d, _e, _f;\n            if (this.equals(props, types.any).bool().valueOf() ||\n                t.equals(props, types.any).bool().valueOf() ||\n                (((_a = this.__extends__) === null || _a === void 0 ? void 0 : _a.equals(props, t).valueOf()) === true) ||\n                (((_b = this.__extends__) === null || _b === void 0 ? void 0 : _b.equals(props, types.any).valueOf()) === true) ||\n                (((_c = this.__extends__) === null || _c === void 0 ? void 0 : _c.includesType(props, t).valueOf()) === true) ||\n                (((_d = t.__extends__) === null || _d === void 0 ? void 0 : _d.equals(props, this).valueOf()) === true) ||\n                (((_e = t.__extends__) === null || _e === void 0 ? void 0 : _e.equals(props, types.any).valueOf()) === true) ||\n                (((_f = t.__extends__) === null || _f === void 0 ? void 0 : _f.includesType(props, this).valueOf()) === true)) {\n                return new ESBoolean(true);\n            }\n            return this.equals(props, t);\n        };\n        this.equals = ({}, t) => {\n            return new ESBoolean(t.__name__ === this.__name__ &&\n                t.__isPrimitive__ === this.__isPrimitive__ &&\n                Object.is(this.valueOf(), t.valueOf()));\n        };\n        this.__call__ = ({ context }, ...params) => {\n            return createInstance(this, { context }, params || []);\n        };\n        this.str = () => new ESString(`<Type: ${this.__name__}>`);\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.__isPrimitive__ = isPrimitive;\n        this.__name__ = name;\n        this.info.name = name;\n        this.__extends__ = __extends__;\n        this.__methods__ = __methods__;\n        if (__init__) {\n            __init__.name = name;\n            this.__init__ = __init__;\n        }\n        if (!types.type) {\n            this.__type__ = this;\n        }\n    }\n}\n","import { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { str } from '../../util/util';\nimport { wrap } from \"./wrapStrip\";\nexport class ESUndefined extends ESPrimitive {\n    constructor() {\n        super(undefined, types.undefined);\n        this.cast = ({ context }, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber();\n                case types.string:\n                    return new ESString();\n                case types.array:\n                    return new ESArray();\n                case types.undefined:\n                    return new ESUndefined();\n                case types.type:\n                    return new ESType();\n                case types.error:\n                    return new ESErrorPrimitive();\n                case types.object:\n                case types.any:\n                    return new ESObject();\n                case types.function:\n                    return new ESFunction(() => { });\n                case types.boolean:\n                    return new ESBoolean();\n                default:\n                    if (!(type instanceof ESType)) {\n                        return new ESError(Position.unknown, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n                    }\n                    return type.__call__({ context });\n            }\n        };\n        this.str = () => new ESString('<Undefined>');\n        this.__eq__ = ({}, n) => new ESBoolean(n instanceof ESUndefined ||\n            typeof n === 'undefined' ||\n            typeof n.valueOf() === 'undefined');\n        this.__bool__ = () => new ESBoolean();\n        this.bool = this.__bool__;\n        this.clone = () => new ESUndefined();\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.info = {\n            name: 'undefined',\n            description: 'Not defined, not a value.',\n            file: 'built-in',\n            isBuiltIn: true\n        };\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { types } from './primitive';\nimport { strip, wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESObject extends ESPrimitive {\n    constructor(val = {}) {\n        super(val, types.object);\n        this.isa = (props, type) => {\n            if (type === types.object) {\n                return new ESBoolean(true);\n            }\n            if (!(type instanceof ESType)) {\n                return new TypeError(Position.unknown, 'TypeError', 'type', str(type.typeName()), str(type));\n            }\n            return this.__type__.includesType(props, type);\n        };\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => {\n            let val = str(this.valueOf());\n            if (val[val.length - 1] === '\\n')\n                val = val.substr(0, val.length - 1);\n            return new ESString(`<ESObject ${val}>`);\n        };\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new ESBoolean();\n            }\n            if (n.keys.length !== this.keys.length) {\n                return new ESBoolean();\n            }\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const thisElement = this.valueOf()[key];\n                const nElement = n.valueOf()[key];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new TypeError(Position.unknown, 'object', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const res = this.__getProperty__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            for (let k of n.keys) {\n                const key = k.valueOf();\n                if (newOb.hasOwnProperty(key)) {\n                    continue;\n                }\n                const res = n.__getProperty__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            return new ESObject(newOb);\n        };\n        this.__subtract__ = (props, n) => {\n            let keysToRemove = [];\n            if (n instanceof ESString) {\n                keysToRemove = [str(n)];\n            }\n            else if (n instanceof ESArray) {\n                keysToRemove = strip(n, props);\n            }\n            else {\n                return new TypeError(Position.unknown, 'array | string', n.typeName().valueOf(), n);\n            }\n            if (!Array.isArray(keysToRemove)) {\n                return new TypeError(Position.unknown, 'array | string', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                if (keysToRemove.indexOf(key) === -1) {\n                    let res = this.__getProperty__(props, k);\n                    if (res instanceof ESError) {\n                        return res;\n                    }\n                    newOb[key] = res;\n                }\n            }\n            return new ESObject(newOb);\n        };\n        this.__getProperty__ = ({}, k) => {\n            if (!(k instanceof ESString)) {\n                return new TypeError(Position.unknown, 'string', k.typeName(), str(k));\n            }\n            const key = k.valueOf();\n            if (this.valueOf().hasOwnProperty(key)) {\n                return this.valueOf()[key];\n            }\n            if (this.self.hasOwnProperty(key)) {\n                const val = this.self[key];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new ESUndefined();\n        };\n        this.__setProperty__ = ({}, key, value) => {\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.unknown, 'string', key.typeName(), str(key));\n            }\n            this.__value__[key.valueOf()] = value;\n        };\n        this.hasProperty = (props, k) => {\n            const key = str(k);\n            if (this.valueOf().hasOwnProperty(str(key))) {\n                return new ESBoolean(true);\n            }\n            return new ESBoolean(this.hasOwnProperty(key));\n        };\n        this.clone = () => {\n            const res = new ESObject();\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            res.__value__ = obj;\n            return res;\n        };\n    }\n    get keys() {\n        return Object.keys(this.valueOf()).map(s => new ESString(s));\n    }\n    set keys(val) { }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESNamespace extends ESPrimitive {\n    constructor(name, value, mutable = false) {\n        super(value, types.object);\n        this.cast = ({}) => {\n            return new ESError(Position.unknown, 'TypeError', `Cannot cast type 'namespace'`);\n        };\n        this.clone = () => {\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            return new ESNamespace(this.name, obj);\n        };\n        this.str = () => {\n            const keys = Object.keys(this.valueOf());\n            return new ESString(`<Namespace ${str(this.name)}${keys.length > 0 ? ': ' : ''}${keys.slice(0, 5)}${keys.length >= 5 ? '...' : ''}>`);\n        };\n        this.__eq__ = ({}, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = ({}, key) => {\n            if (key instanceof ESString && this.valueOf().hasOwnProperty(key.valueOf())) {\n                const symbol = this.valueOf()[key.valueOf()];\n                if (symbol.isAccessible) {\n                    return symbol.value;\n                }\n            }\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.unknown, 'string', key.typeName());\n            }\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this.self);\n        };\n        this.info.name = str(name);\n        this.mutable = mutable;\n    }\n    get name() {\n        return new ESString(this.info.name);\n    }\n    set name(v) {\n        this.info.name = v.valueOf();\n    }\n    __setProperty__({}, key, value) {\n        if (!(key instanceof ESString)) {\n            return new TypeError(Position.unknown, 'string', key.typeName().valueOf(), str(key));\n        }\n        let idx = str(key);\n        if (!this.mutable) {\n            return new TypeError(Position.unknown, 'mutable', 'immutable', `${str(this.name)}`);\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        const symbol = this.__value__[idx];\n        if (!symbol) {\n            return new ESError(Position.unknown, 'SymbolError', `Symbol ${idx} is not declared in namespace ${str(this.name)}.`);\n        }\n        if (symbol.isConstant) {\n            return new TypeError(Position.unknown, 'mutable', 'immutable', `${str(this.name)}.${idx}`);\n        }\n        if (!symbol.isAccessible) {\n            return new TypeError(Position.unknown, 'accessible', 'inaccessible', `${str(this.name)}.${idx}`);\n        }\n        symbol.value = value;\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { strip, wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESJSBinding extends ESPrimitive {\n    constructor(value, name = '<AnonNative>', functionsTakeProps = false) {\n        super(value, types.object);\n        this.cast = ({}) => {\n            return new ESError(Position.unknown, 'TypeError', `Cannot cast native object`);\n        };\n        this.clone = () => new ESJSBinding(this.__value__);\n        this.str = () => {\n            try {\n                return new ESString(JSON.stringify(this.__value__));\n            }\n            catch (e) {\n                return new ESString(`${this.__value__}`);\n            }\n        };\n        this.__eq__ = ({}, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, k) => {\n            const key = str(k);\n            const val = this.valueOf();\n            const res = val[key];\n            if (res === undefined) {\n                if (this.self.hasOwnProperty(key)) {\n                    const val = this.self[str(key)];\n                    if (typeof val === 'function') {\n                        return new ESFunction(val);\n                    }\n                    return wrap(val);\n                }\n                return new IndexError(Position.unknown, key, this);\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            if (typeof res === 'function') {\n                return new ESFunction(({ context }, ...args) => {\n                    return wrap(val[key](...args.map(o => strip(o, props))));\n                });\n            }\n            return wrap(res);\n        };\n        this.__call__ = (props, ...args) => {\n            if (typeof this.__value__ !== 'function') {\n                return new TypeError(Position.unknown, 'function', typeof this.__value__, str(this));\n            }\n            let res;\n            try {\n                res = new this.__value__(...args.map(o => strip(o, props)));\n            }\n            catch (_a) {\n                res = this.__value__(...args.map(o => strip(o, props)));\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            return wrap(res);\n        };\n        this.hasProperty = (props, key) => {\n            return new ESBoolean(!(this.__getProperty__(props, key) instanceof ESError));\n        };\n        this.info.name = str(name);\n    }\n}\n","import { types } from './primitives/primitive';\nimport { ESPrimitive } from './primitives/esprimitive';\nimport { ESArray } from './primitives/esarray';\nimport { ESBoolean } from './primitives/esboolean';\nimport { ESErrorPrimitive } from './primitives/eserrorprimitive';\nimport { ESFunction } from './primitives/esfunction';\nimport { ESNumber } from './primitives/esnumber';\nimport { ESObject } from './primitives/esobject';\nimport { ESString } from './primitives/esstring';\nimport { ESType } from './primitives/estype';\nimport { ESUndefined } from './primitives/esundefined';\nimport { ESNamespace } from './primitives/esnamespace';\nimport { ESJSBinding } from \"./primitives/esjsbinding\";\nexport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNumber, ESPrimitive, ESString, ESObject, ESType, ESUndefined, ESNamespace, ESJSBinding, types };\ntypes.type = new ESType(true, 'Type');\ntypes.undefined = new ESType(true, 'Undefined');\ntypes.string = new ESType(true, 'String');\ntypes.array = new ESType(true, 'Array');\ntypes.number = new ESType(true, 'Number');\ntypes.any = new ESType(true, 'Any');\ntypes.function = new ESType(true, 'Function');\ntypes.bool = new ESType(true, 'Boolean');\ntypes.object = new ESType(true, 'Object');\ntypes.error = new ESType(true, 'Error');\ntypes.any.info = {\n    name: 'any',\n    description: 'Matches any other type',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.number.info = {\n    name: 'any',\n    description: 'The ES Number type. Is a a double-precision 64-bit binary format IEEE 754 value, like double in Java and C#',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.string.info = {\n    name: 'string',\n    description: 'The ES String type. Holds an array of characters, and can be defined with any of \\', \" and `. Can be indexed like an array.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.bool.info = {\n    name: 'bool',\n    description: 'The ES Bool type. Exactly two instances exist, true and false.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.function.info = {\n    name: 'function',\n    description: 'The ES Function type. Is a block of code which executes when called and takes in 0+ parameters.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.array.info = {\n    name: 'array',\n    description: 'The ES Array type. Defines a set of items of any type which can be accessed by an index with [].',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.object.info = {\n    name: 'object',\n    description: 'The ES Object type. Similar to JS objects or python dictionaries.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.error.info = {\n    name: 'error',\n    description: 'The ES Error type. Call to throw an error.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.type.info = {\n    name: 'type',\n    description: 'The ES Type type. Call to get the type of a value at a string.',\n    file: 'built-in',\n    isBuiltIn: true\n};\n","import { ESPrimitive } from './esprimitive';\nimport { global } from '../../constants';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { call } from '../functionCaller';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nexport class ESFunction extends ESPrimitive {\n    constructor(func = (() => { }), arguments_ = [], name = '(anon)', this_ = new ESObject(), returnType = types.any, closure = global) {\n        super(func, types.function);\n        this.cast = ({}, type) => {\n            return new ESError(Position.unknown, 'TypeError', `Cannot cast type 'function'`);\n        };\n        this.clone = () => {\n            return new ESFunction(this.__value__, this.arguments_, this.name, this.this_, this.returnType, this.__closure__);\n        };\n        this.valueOf = () => this;\n        this.str = () => new ESString(`<Func: ${this.name}>`);\n        this.__eq__ = ({}, n) => {\n            if (!(n instanceof ESFunction))\n                return new ESBoolean(false);\n            return new ESBoolean(this.__value__ === n.__value__);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__call__ = ({ context }, ...params) => {\n            this.__closure__.path = context.path;\n            return call(this.__closure__, this, params);\n        };\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.arguments_ = arguments_;\n        this.info.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        this.__closure__ = closure;\n        this.info.returnType = str(returnType);\n        this.info.args = arguments_.map(arg => ({\n            name: arg.name,\n            defaultValue: str(arg.defaultValue),\n            type: arg.type.info.name,\n            required: true\n        }));\n    }\n    get name() {\n        var _a;\n        return (_a = this.info.name) !== null && _a !== void 0 ? _a : '(anonymous)';\n    }\n    set name(v) {\n        this.info.name = v;\n    }\n}\n","import { Node } from \"./nodes\";\nimport { generateESFunctionCallContext } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { ESObject, ESPrimitive, ESUndefined, types } from \"./primitiveTypes\";\nfunction callNode(self, context, params, fn) {\n    var _a, _b, _c, _d;\n    const res = fn.interpret(context);\n    if (res.error)\n        return res.error;\n    if (res.funcReturn !== undefined) {\n        res.val = res.funcReturn;\n        res.funcReturn = undefined;\n    }\n    if (self.returnType.includesType({ context }, (_b = (_a = res.val) === null || _a === void 0 ? void 0 : _a.__type__) !== null && _b !== void 0 ? _b : types.any).valueOf() === false) {\n        return new TypeError(Position.unknown, self.returnType.__name__, ((_c = res.val) === null || _c === void 0 ? void 0 : _c.typeName().valueOf()) || 'undefined', (_d = res.val) === null || _d === void 0 ? void 0 : _d.str().valueOf(), '(from function return)');\n    }\n    if (res.val) {\n        return res.val;\n    }\n    else {\n        return new ESUndefined();\n    }\n}\nfunction callNative(self, context, params, fn) {\n    for (let i = params.length; i < fn.length; i++)\n        params.push(new ESUndefined());\n    const res = fn({\n        context\n    }, ...params);\n    if (res instanceof ESError || res instanceof ESPrimitive) {\n        return res;\n    }\n    return new ESUndefined();\n}\nexport function call(context, self, params) {\n    var _a;\n    let callContext = context;\n    context = self.__closure__;\n    context.path = callContext.path;\n    const fn = self.__value__;\n    const newContext = generateESFunctionCallContext(params, self, context);\n    if (newContext instanceof ESError) {\n        return newContext;\n    }\n    let this_ = (_a = self.this_) !== null && _a !== void 0 ? _a : new ESObject();\n    if (!(this_ instanceof ESObject))\n        return new TypeError(Position.unknown, 'object', typeof this_, this_, '\\'this\\' must be an object');\n    let setRes = newContext.setOwn('this', this_);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    if (fn instanceof Node) {\n        return callNode(self, newContext, params, fn);\n    }\n    else if (typeof fn === 'function') {\n        return callNative(self, newContext, params, fn);\n    }\n    else {\n        return new TypeError(Position.unknown, 'function', typeof fn);\n    }\n}\n","import { initialise } from \"../init\";\nimport { ESError, TypeError, ReferenceError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESPrimitive, ESType, ESUndefined, types } from \"./primitiveTypes\";\nimport { str } from \"../util/util\";\nimport { ESSymbol } from './symbol';\nimport chalk from \"../util/colours\";\nexport class Context {\n    constructor() {\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        this.deleted = false;\n        this.path_ = '';\n    }\n    get path() {\n        if (this.path_ || !this.parent) {\n            return this.path_;\n        }\n        return this.parent.path;\n    }\n    set path(val) {\n        this.path_ = val;\n    }\n    get parent() {\n        return this.parent_;\n    }\n    set parent(val) {\n        if (val == this) {\n            console.error(chalk.red(`Setting context parent to self`));\n            return;\n        }\n        this.parent_ = val;\n    }\n    has(identifier) {\n        return this.get(identifier) !== undefined;\n    }\n    hasOwn(identifier) {\n        return this.symbolTable[identifier] instanceof ESSymbol;\n    }\n    get(identifier) {\n        let symbol = this.getSymbol(identifier);\n        if (symbol instanceof ESError || symbol == undefined) {\n            return symbol;\n        }\n        return symbol.value;\n    }\n    getRawSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key].value;\n        return symbols;\n    }\n    getSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key];\n        return symbols;\n    }\n    getSymbol(identifier) {\n        let symbol = this.symbolTable[identifier];\n        if (symbol !== undefined && !symbol.isAccessible)\n            return new TypeError(Position.unknown, 'assessable', 'inaccessible', symbol.identifier);\n        if (symbol === undefined && this.parent) {\n            let res = this.parent.getSymbol(identifier);\n            if (res instanceof ESError)\n                return res;\n            if (!res)\n                return new ReferenceError(Position.unknown, identifier);\n            symbol = res;\n        }\n        return symbol;\n    }\n    set(identifier, value, options = {}) {\n        let context = this;\n        if (options.global) {\n            context = this.root;\n        }\n        else {\n            while (!context.hasOwn(identifier) && context.parent !== undefined)\n                context = context.parent;\n            if (!context.hasOwn(identifier))\n                context = this;\n        }\n        return context.setOwn(identifier, value, options);\n    }\n    setOwn(identifier, value, options = {}) {\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        if (options.global && !this.initialisedAsGlobal)\n            options.global = false;\n        if (!options.forceThroughConst) {\n            let symbol = this.symbolTable[identifier];\n            if (symbol === null || symbol === void 0 ? void 0 : symbol.isConstant)\n                return new TypeError(Position.unknown, 'dynamic', 'constant', identifier);\n        }\n        this.symbolTable[identifier] = new ESSymbol(value, identifier, options);\n    }\n    remove(identifier) {\n        delete this.symbolTable[identifier];\n    }\n    clear() {\n        for (let symbol in this.symbolTable) {\n            this.remove(symbol);\n        }\n        this.parent = undefined;\n        this.deleted = true;\n    }\n    get root() {\n        let parent = this;\n        while (parent.parent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    get keys() {\n        return Object.keys(this.symbolTable);\n    }\n    resetAsGlobal() {\n        var _a, _b;\n        if (!this.initialisedAsGlobal)\n            return;\n        const printFunc = this.root.get('print');\n        const inputFunc = this.root.get('input');\n        if (!(printFunc instanceof ESPrimitive) || !(inputFunc instanceof ESPrimitive)) {\n            console.error('Error with print and input functions.');\n            return;\n        }\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        initialise(this, ((_a = printFunc.valueOf()) === null || _a === void 0 ? void 0 : _a.func) || console.log, ((_b = inputFunc.valueOf()) === null || _b === void 0 ? void 0 : _b.func) || (() => { }));\n    }\n    clone() {\n        const newContext = new Context();\n        newContext.parent = this.parent;\n        newContext.deleted = this.deleted;\n        newContext.initialisedAsGlobal = this.initialisedAsGlobal;\n        newContext.symbolTable = Object.assign(Object.assign({}, newContext.symbolTable), this.symbolTable);\n        return newContext;\n    }\n    deepClone() {\n        var _a;\n        let clone = this.clone();\n        clone.parent = (_a = clone.parent) === null || _a === void 0 ? void 0 : _a.deepClone();\n        return clone;\n    }\n    log() {\n        console.log('---- CONTEXT ----');\n        for (let key in this.symbolTable) {\n            const symbol = this.symbolTable[key];\n            let out = key;\n            if (symbol.isConstant)\n                out += ' (CONST)';\n            if (!symbol.isAccessible)\n                out += ' (INACCESSIBLE)';\n            out += ': ';\n            out += str(this.symbolTable[key].value);\n            console.log(out);\n        }\n        console.log('-----------------');\n    }\n}\nexport function generateESFunctionCallContext(params, self, parent) {\n    const newContext = new Context();\n    newContext.parent = parent;\n    let max = Math.max(params.length, self.arguments_.length);\n    for (let i = 0; i < max; i++) {\n        let value = new ESUndefined();\n        let type = types.any;\n        if (!self.arguments_[i]) {\n            continue;\n        }\n        const arg = self.arguments_[i];\n        if (!(arg.type instanceof ESType)) {\n            return new TypeError(Position.unknown, 'Type', typeof arg.type, arg.type);\n        }\n        if (params[i] instanceof ESPrimitive) {\n            type = params[i].__type__;\n            value = params[i];\n        }\n        const typeIncludes = arg.type.includesType({ context: parent }, type).bool().valueOf();\n        if (!typeIncludes) {\n            return new TypeError(Position.unknown, arg.type.__name__, type.__name__, str(value));\n        }\n        newContext.setOwn(arg.name, value, {\n            forceThroughConst: true\n        });\n    }\n    let setRes = newContext.setOwn('args', new ESArray(params), {\n        forceThroughConst: true\n    });\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    return newContext;\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { ESFunction } from \"./esfunction\";\nimport { wrap } from \"./wrapStrip\";\nexport class ESNumber extends ESPrimitive {\n    constructor(value = 0) {\n        super(value, types.number);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return this;\n                case types.string:\n                    return this.str();\n                case types.array:\n                    return new ESArray(new Array(this.valueOf()));\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(this.valueOf().toString());\n        this.__add__ = ({}, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() + n.valueOf());\n        };\n        this.__subtract__ = ({}, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() - n.valueOf());\n        };\n        this.__multiply__ = ({}, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() * n.valueOf());\n        };\n        this.__divide__ = ({}, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() / n.valueOf());\n        };\n        this.__pow__ = ({}, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(Math.pow(this.valueOf(), n.valueOf()));\n        };\n        this.__eq__ = ({}, n) => {\n            if (!(n instanceof ESNumber))\n                return new ESBoolean(false);\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = ({}, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() > n.valueOf());\n        };\n        this.__lt__ = ({}, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() < n.valueOf());\n        };\n        this.__bool__ = () => {\n            return new ESBoolean(this.valueOf() > 0);\n        };\n        this.bool = this.__bool__;\n        this.clone = () => new ESNumber(this.valueOf());\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { ESFunction } from \"./esfunction\";\nimport { wrap } from \"./wrapStrip\";\nexport class ESBoolean extends ESPrimitive {\n    constructor(val = false) {\n        super(Boolean(val), types.bool);\n        this.__getProperty__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESBoolean)) {\n                return new TypeError(Position.unknown, 'Boolean', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__bool__ = () => this;\n        this.__and__ = (props, n) => new ESBoolean(this.valueOf() && n.bool().valueOf());\n        this.__or__ = (props, n) => {\n            return new ESBoolean(this.valueOf() || n.bool().valueOf());\n        };\n        this.str = () => new ESString(this.valueOf() ? 'true' : 'false');\n        this.clone = () => new ESBoolean(this.valueOf());\n        this.bool = () => this;\n        this.info = {\n            name: str(val),\n            description: `Boolean global constant which evaluates to ${str(val)}, the opposite of ${str(!val)}`,\n            file: 'built-in',\n            isBuiltIn: true,\n            helpLink: 'https://en.wikipedia.org/wiki/Boolean_expression'\n        };\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { types } from './primitive';\nimport { wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESArray extends ESPrimitive {\n    constructor(values = []) {\n        super(values, types.array);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.len);\n                case types.boolean:\n                    return this.bool();\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(str(this.valueOf()));\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESArray)) {\n                return new ESBoolean();\n            }\n            if (n.len !== this.len) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.len; i++) {\n                const thisElement = this.valueOf()[i];\n                const nElement = n.valueOf()[i];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESArray)) {\n                return new TypeError(Position.unknown, 'array', n.typeName().valueOf(), n);\n            }\n            return new ESArray([...this.valueOf(), ...n.valueOf()]);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.__getProperty__ = ({}, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESUndefined();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return this.valueOf()[idx];\n            }\n            return new ESUndefined();\n        };\n        this.add = ({}, val, idx = new ESNumber(this.len - 1)) => {\n            if (!(val instanceof ESPrimitive))\n                throw 'adding non-primitive to array: ' + str(val);\n            this.len++;\n            this.__value__.splice(idx.valueOf(), 0, val);\n            return new ESNumber(this.len);\n        };\n        this.contains = ({}, val) => {\n            for (let element of this.__value__)\n                if (val.valueOf() == element.valueOf())\n                    return true;\n            return false;\n        };\n        this.clone = () => {\n            const newArr = [];\n            for (let element of this.valueOf()) {\n                newArr.push(element);\n            }\n            return new ESArray(newArr);\n        };\n        this.len = values.length;\n    }\n    __setProperty__({}, key, value) {\n        if (!(key instanceof ESNumber)) {\n            return;\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        let idx = key.valueOf();\n        while (idx < 0) {\n            idx = this.valueOf().length + idx;\n        }\n        this.__value__[idx] = value;\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESString extends ESPrimitive {\n    constructor(value = '') {\n        super(value, types.string);\n        this.str = () => this;\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    const num = parseFloat(this.valueOf());\n                    if (isNaN(num))\n                        return new ESError(Position.unknown, 'TypeError', `This string is not a valid number`);\n                    return new ESNumber(num);\n                case types.string:\n                    return this;\n                case types.array:\n                    return new ESArray(this.valueOf().split('').map(s => new ESString(s)));\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__add__ = ({}, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.unknown, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESString(this.valueOf() + n.valueOf());\n        };\n        this.__multiply__ = ({}, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESString(this.valueOf().repeat(n.valueOf()));\n        };\n        this.__eq__ = ({}, n) => {\n            if (!(n instanceof ESString))\n                return new ESBoolean(false);\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = ({}, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.unknown, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf().length > n.valueOf().length);\n        };\n        this.__lt__ = ({}, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.unknown, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf().length < n.valueOf().length);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.len = () => {\n            return new ESNumber(this.valueOf().length);\n        };\n        this.clone = () => new ESString(this.valueOf());\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESString();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return new ESString(this.valueOf()[idx]);\n            }\n            return new ESString();\n        };\n    }\n    __setProperty__({}, key, value) {\n        if (!(key instanceof ESNumber))\n            return;\n        if (!(value instanceof ESString))\n            value = new ESString(str(value));\n        let idx = key.valueOf();\n        while (idx < 0)\n            idx = this.valueOf().length + idx;\n        const strToInsert = value.str().valueOf();\n        let firstPart = this.__value__.substr(0, idx);\n        let lastPart = this.__value__.substr(idx + strToInsert.length);\n        this.__value__ = firstPart + strToInsert + lastPart;\n    }\n}\n","import { ESString } from './primitives/esstring';\nexport class ESSymbol {\n    constructor(value, identifier, options = {}) {\n        var _a, _b;\n        this.clone = () => {\n            return new ESSymbol(this.value.clone(), this.identifier, {\n                isConstant: this.isConstant,\n                isAccessible: this.isAccessible\n            });\n        };\n        this.str = () => new ESString(`<Symbol: ${this.identifier}>`);\n        this.value = value;\n        this.identifier = identifier;\n        this.isConstant = (_a = options.isConstant) !== null && _a !== void 0 ? _a : false;\n        this.isAccessible = (_b = options.isAccessible) !== null && _b !== void 0 ? _b : true;\n    }\n}\n","import { ESError } from '../../errors';\nimport { ESSymbol } from '../symbol';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESPrimitive } from './esprimitive';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESUndefined } from './esundefined';\nimport { ESJSBinding } from \"./esjsbinding\";\nexport function wrap(thing, functionsTakeProps = false) {\n    if (thing instanceof ESPrimitive) {\n        return thing;\n    }\n    else if (thing === undefined || thing === null) {\n        return new ESUndefined();\n    }\n    else if (thing instanceof ESError) {\n        return new ESErrorPrimitive(thing);\n    }\n    else if (thing instanceof ESSymbol) {\n        return thing.value;\n    }\n    else if (typeof thing === 'number') {\n        return new ESNumber(thing);\n    }\n    else if (typeof thing === 'string') {\n        return new ESString(thing);\n    }\n    else if (typeof thing === 'boolean') {\n        return new ESBoolean(thing);\n    }\n    else if (typeof thing === 'bigint') {\n        return new ESNumber(Number(thing));\n    }\n    else if (typeof thing === 'symbol') {\n        return new ESString(String(thing));\n    }\n    return new ESJSBinding(thing, undefined, functionsTakeProps);\n}\nexport function strip(thing, props) {\n    if (thing == undefined) {\n        return undefined;\n    }\n    else if (!(thing instanceof ESPrimitive)) {\n        return thing;\n    }\n    else if (thing instanceof ESArray) {\n        return thing.valueOf().map(m => strip(m, props), props);\n    }\n    else if (thing instanceof ESObject) {\n        let val = {};\n        for (let key in thing.valueOf()) {\n            val[key] = strip(thing.valueOf()[key], props);\n        }\n        return val;\n    }\n    else if (thing instanceof ESUndefined) {\n        return undefined;\n    }\n    else if (thing instanceof ESFunction) {\n        return (...args) => {\n            const res = thing.__call__(props, ...args.map(a => wrap(a)));\n            if (res instanceof ESError) {\n                return res;\n            }\n            return strip(res, props);\n        };\n    }\n    else if (thing instanceof ESType) {\n        return thing;\n    }\n    return thing.valueOf();\n}\n","import { IS_NODE_INSTANCE } from \"../constants\";\nconst codes = {\n    red: 31,\n    yellow: 33,\n    green: 32,\n    cyan: 36,\n    blue: 34,\n    grey: 2\n};\nconst c = {};\nfor (let code of Object.keys(codes)) {\n    c[code] = (s) => {\n        s || (s = '');\n        if (IS_NODE_INSTANCE) {\n            return `\\x1b[${codes[code]}m` + s + '\\x1b[0m';\n        }\n        return `<span style=\"color: ${code}\">${s}</span>`;\n    };\n}\nexport default c;\n","import { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from '../runtime/primitives/wrapStrip';\nimport { ESArray, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESUndefined } from '../runtime/primitiveTypes';\nimport { indent, sleep, str } from '../util/util';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport chalk from \"../util/colours\";\nexport const builtInFunctions = {\n    'range': [({ context }, num) => {\n            if (!(num instanceof ESNumber)) {\n                return new TypeError(Position.unknown, 'Number', num.typeName().valueOf(), num.valueOf());\n            }\n            const n = num.valueOf();\n            try {\n                return new ESArray([...Array(n).keys()].map(n => new ESNumber(n)));\n            }\n            catch (e) {\n                return new ESError(Position.unknown, 'RangeError', `Cannot make range of length '${str(num)}'`);\n            }\n        }, {\n            args: [{\n                    name: 'N',\n                    type: 'Number',\n                }],\n            description: 'Generates an array of integers given N. Starts at 0 and goes to N-1. Can be used like for i in range(10) ..., similarly to python.',\n            returns: 'array of numbers from 0 to N-1',\n            returnType: 'number[] | RangeError'\n        }],\n    'log': [({ context }, ...msgs) => {\n            console.log(...msgs.map(m => str(m)));\n        }, {\n            args: [{\n                    name: '...values',\n                    type: 'any[]'\n                }],\n            description: 'Uses console.log to log all values',\n            returnType: 'void'\n        }],\n    'parseNum': [({ context }, num) => {\n            try {\n                const val = parseFloat(str(num));\n                if (isNaN(val)) {\n                    return new ESError(Position.unknown, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n                }\n                return new ESNumber(val);\n            }\n            catch (e) {\n                return new ESError(Position.unknown, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n            }\n        }, {\n            args: [{\n                    name: 'num',\n                    type: 'any'\n                }],\n            description: `Converts a string of digits into a number. Works with decimals and integers. Calls .str() on value before using native JS 'parseFloat' function. Returns TypeError if the string can't be converted into a number.`,\n            returnType: 'number | TypeError'\n        }],\n    'help': [({ context }, ...things) => {\n            if (!things.length) {\n                return new ESString('Visit https://entropygames.io/entropy-script for help with Entropy Script!\\n' +\n                    'Try \\'help(<anything>)\\' for help about a particular object.');\n            }\n            let out = '';\n            for (const thing of things) {\n                if (!(thing instanceof ESPrimitive)) {\n                    console.log('Invalid arg not primitive: ' + str(thing));\n                    return;\n                }\n                const info = thing.info;\n                out += `${chalk.yellow(`Help on '${info.name || '(anonymous)'}'`)}:\n    \n    ${chalk.yellow('Value')}: ${indent(indent(str(thing)))}\n    ${chalk.yellow('Type')}: '${str(thing.typeName())}'\n    ${chalk.yellow('Location')}: ${info.file || chalk.yellow('(unknown)')}\n    \n        ${chalk.green(info.description) || `No description.`}\n        \n    ${info.helpLink ? chalk.cyan(info.helpLink + '\\n\\n') : ''}\n`;\n                if (info.args && thing instanceof ESFunction) {\n                    const total = info.args.length;\n                    const required = info.args.filter(a => a.required).length;\n                    if (total == required)\n                        out += chalk.yellow(`    Arguments (${total}): \\n`);\n                    else\n                        out += chalk.yellow(`    Arguments (${required}-${total}): \\n`);\n                    for (const [idx, arg] of info.args.entries()) {\n                        if (typeof arg !== 'object')\n                            out += `        ${idx + 1}. INVALID ARG INFO`;\n                        else\n                            out += `        ${idx + 1}. ${arg.name}${arg.required === false ? chalk.yellow(' (optional) ') : ' '}{${arg.type}} ${arg.description || ''}\\n`;\n                    }\n                    out += `\\n\\n`;\n                    if (info.returns)\n                        out += `    Returns: ${info.returns}\\n\\n`;\n                    if (info.returnType)\n                        out += `    Return Type: ${info.returnType}\\n\\n`;\n                }\n                if (info.contents && (thing instanceof ESObject || thing instanceof ESNamespace)) {\n                    out += '    Properties: \\n      ';\n                    for (let contents of info.contents)\n                        out += contents.name + '\\n      ';\n                }\n            }\n            console.log(out);\n            if (things.length > 1) {\n                return new ESArray(things);\n            }\n            if (things) {\n                return things[0];\n            }\n        }, {\n            args: [{\n                    name: 'value',\n                    type: 'any'\n                }],\n            description: 'logs info on value',\n            returns: 'value passed in'\n        }],\n    'delete': [({ context }, name) => {\n            const id = str(name);\n            if (!context.has(id)) {\n                return new ESError(Position.unknown, 'DeleteError', `Identifier '${id}' not found in the current context`);\n            }\n            context.set(id, new ESUndefined());\n        }, {\n            name: 'delete',\n            args: [{ name: 'identifier', type: 'string' }],\n            description: 'Deletes a variable from the current context'\n        }],\n    '__path': [({ context }) => {\n            return new ESString(context.path);\n        }, {\n            name: '__path',\n            args: [],\n            description: 'Returns the current path'\n        }],\n    '__symbols': [({ context }) => {\n            return wrap(context.keys);\n        }, {\n            name: '__allSymbols',\n            args: [],\n            description: 'Returns an array of the names of all symbols in the current context'\n        }],\n    'using': [({ context }, module, global_) => {\n            if (!(module instanceof ESNamespace) && !(module instanceof ESJSBinding)) {\n                return new TypeError(Position.unknown, 'Namespace', str(module.typeName()));\n            }\n            let global = true;\n            if (global_) {\n                if (!global_.bool().valueOf()) {\n                    global = false;\n                }\n            }\n            const values = module.valueOf();\n            if (global) {\n                context = context.root;\n            }\n            else if (context.parent) {\n                context = context.parent;\n            }\n            for (const key of Object.keys(values)) {\n                context.setOwn(key, values[key].value, {\n                    isConstant: values[key].isConstant,\n                    isAccessible: values[key].isAccessible,\n                    forceThroughConst: true\n                });\n            }\n        }, {\n            name: 'using',\n            args: [\n                { name: 'module', type: 'namespace' },\n                { name: 'global', type: 'bool' }\n            ],\n            description: 'Adds contents of a namespace to the global context'\n        }],\n    'sleep': [({ context }, time, cb) => {\n            if (!(time instanceof ESNumber)) {\n                return new TypeError(Position.unknown, 'number', str(time.typeName()), str(time));\n            }\n            sleep(time.valueOf())\n                .then(() => {\n                const res = cb.__call__({ context });\n                if (res instanceof ESError) {\n                    console.log(res.str);\n                }\n            });\n        }, {\n            name: 'sleep',\n            args: [{ name: 'n', type: 'number' }, { name: 'callback', type: 'function' }],\n            description: 'Waits n milliseconds and then executes the callback'\n        }],\n    'throw': [({ context }, name, details) => {\n            return new ESError(Position.unknown, str(name), str(details));\n        }, {\n            name: 'throw',\n            args: [{ name: 'name', type: 'string' }, { name: 'details', type: 'string' }]\n        }],\n};\n","import { Position } from '../../position';\nimport { strip } from '../../runtime/primitives/wrapStrip';\nimport { ESObject, ESString } from '../../runtime/primitiveTypes';\nimport { str } from '../../util/util';\nimport { TypeError } from '../../errors';\nconst module = {\n    parse: (props, json) => {\n        return new ESObject(JSON.parse(str(json)));\n    },\n    stringify: (props, json) => {\n        if (!(json instanceof ESObject)) {\n            return new TypeError(Position.unknown, 'object', str(json.typeName()), str(json));\n        }\n        return new ESString(JSON.stringify(strip(json, props)));\n    }\n};\nexport default module;\n","import { IS_NODE_INSTANCE, libs } from '../constants';\nimport { ESError } from '../errors';\nimport { wrap } from '../runtime/primitives/wrapStrip';\nimport { ESSymbol } from '../runtime/symbol';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport ascii from './built-in-modules/ascii';\nimport json from './built-in-modules/json';\nimport dom from './built-in-modules/dom';\nimport Promise from './built-in-modules/promise';\nconst modules = {\n    ascii, json,\n};\nconst processedModules = {};\nexport function initModules() {\n    processedModules['math'] = new ESJSBinding(Math);\n    processedModules['Promise'] = new ESJSBinding(Promise);\n    if (!IS_NODE_INSTANCE) {\n        const domRes = dom(libs);\n        if (!(domRes instanceof ESError)) {\n            modules['dom'] = domRes;\n        }\n        else {\n            return domRes;\n        }\n    }\n}\nexport function processRawModule(module, name) {\n    const moduleDict = {};\n    const moduleRaw = module.valueOf();\n    for (const key of Object.keys(moduleRaw)) {\n        moduleDict[key] = new ESSymbol(moduleRaw[key], key);\n    }\n    return new ESJSBinding(moduleDict, name);\n}\nexport function moduleExist(name) {\n    return name in modules || name in processedModules;\n}\nexport function addModule(name, body) {\n    modules[name] = {};\n    processedModules[name] = body;\n}\nexport function addModuleFromObj(name, raw) {\n    addModule(name, processRawModule(wrap(raw), name));\n}\nexport function getModule(name) {\n    if (name in processedModules) {\n        return processedModules[name];\n    }\n    if (name in modules) {\n        const res = new ESJSBinding(modules[name]);\n        const processed = processRawModule(res, name);\n        processedModules[name] = processed;\n        return processed;\n    }\n}\n","import { TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESNumber, ESString } from '../../runtime/primitiveTypes';\nimport { str } from '../../util/util';\nconst module = {\n    asciiToChar: (props, number) => {\n        if (!(number instanceof ESNumber)) {\n            return new TypeError(Position.unknown, 'number', str(number.typeName()), str(number));\n        }\n        return new ESString(String.fromCharCode(number.valueOf()));\n    },\n    charToAscii: (props, char) => {\n        if (!(char instanceof ESString)) {\n            return new TypeError(Position.unknown, 'string', str(char.typeName()), str(char));\n        }\n        return new ESNumber(str(char).charCodeAt(0));\n    },\n};\nexport default module;\n","export default class {\n    constructor(cb) {\n        this.thens = [];\n        cb((value) => {\n            for (let then of this.thens) {\n                then(value);\n            }\n        }, console.error);\n    }\n    then(cb) {\n        this.thens.push(cb);\n        return this;\n    }\n}\n;\n","import { IS_NODE_INSTANCE } from '../../constants';\nimport { ReferenceError, InvalidRuntimeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESJSBinding } from \"../../runtime/primitives/esjsbinding\";\nconst module = () => {\n    if (IS_NODE_INSTANCE) {\n        return new InvalidRuntimeError();\n    }\n    const w = window;\n    if (typeof w === 'undefined' || !('$' in w)) {\n        return new ReferenceError(Position.unknown, '$ must be property of window to use dom library');\n    }\n    const $ = new ESJSBinding(w['$'], 'jquery');\n    return {\n        $,\n        window: new ESJSBinding(w, 'window'),\n        document: new ESJSBinding(w['document'], 'document'),\n    };\n};\nexport default module;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { builtInFunctions } from \"./built-in/builtInFunctions\";\nimport { getModule, initModules, moduleExist } from './built-in/builtInModules';\nimport { Context } from \"./runtime/context\";\nimport { ESError, ImportError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { run } from \"./index\";\nimport { IS_NODE_INSTANCE } from \"./constants\";\nimport { str } from \"./util/util\";\nimport { ESFunction, ESNamespace, ESString } from './runtime/primitiveTypes';\nimport loadGlobalConstants from \"./built-in/globalConstants\";\nexport function initialise(globalContext, printFunc, inputFunc) {\n    builtInFunctions['import'] = [({ context }, rawUrl, callback) => {\n            if (IS_NODE_INSTANCE) {\n                return new ESError(Position.unknown, 'ImportError', 'Is running in node instance but trying to run browser import function');\n            }\n            const url = rawUrl.str();\n            if (moduleExist(str(url))) {\n                return getModule(str(url));\n            }\n            try {\n                fetch(str(url))\n                    .then(c => c.text())\n                    .then((code) => __awaiter(this, void 0, void 0, function* () {\n                    const env = new Context();\n                    env.parent = globalContext;\n                    const res = yield run(code);\n                    if (res.error) {\n                        printFunc(new ImportError(Position.unknown, str(url), res.error.str).str);\n                        return;\n                    }\n                    if (!(callback instanceof ESFunction))\n                        return;\n                    callback.__call__({ context }, new ESNamespace(url, env.getSymbolTableAsDict()));\n                }));\n            }\n            catch (E) {\n                return new ESError(Position.unknown, 'ImportError', E.toString());\n            }\n        }, {}];\n    builtInFunctions['print'] = [({ context }, ...args) => {\n            let out = ``;\n            for (let arg of args)\n                out += str(arg);\n            printFunc(out);\n        }, {}];\n    builtInFunctions['input'] = [({ context }, msg, cbRaw) => {\n            inputFunc(msg.valueOf(), (msg) => {\n                let cb = cbRaw === null || cbRaw === void 0 ? void 0 : cbRaw.valueOf();\n                if (cb instanceof ESFunction) {\n                    let res = cb.__call__({ context }, new ESString(msg));\n                    if (res instanceof ESError) {\n                        console.log(res.str);\n                    }\n                }\n                else if (typeof cb === 'function')\n                    cb(msg);\n                return new ESString('\\'input()\\' does not return anything. Pass in a function as the second argument, which will take the user input as an argument.');\n            });\n        }, {}];\n    for (let builtIn in builtInFunctions) {\n        const fn = new ESFunction(builtInFunctions[builtIn][0], [], builtIn, undefined, undefined, globalContext);\n        fn.info = builtInFunctions[builtIn][1];\n        fn.info.name = builtIn;\n        fn.info.isBuiltIn = true;\n        fn.info.file = 'built-in';\n        globalContext.set(builtIn, fn, {\n            global: true,\n            isConstant: true\n        });\n    }\n    loadGlobalConstants(globalContext);\n    const initModRes = initModules();\n    if (initModRes) {\n        return initModRes;\n    }\n    globalContext.initialisedAsGlobal = true;\n}\n","import { ESBoolean, ESUndefined, types } from '../runtime/primitiveTypes';\nexport default function load(context) {\n    const globalConstants = {\n        'false': new ESBoolean(false),\n        'true': new ESBoolean(true),\n        'nil': new ESUndefined(),\n        'any': types.any,\n        'number': types.number,\n        'string': types.string,\n        'bool': types.bool,\n        'function': types.function,\n        'array': types.array,\n        'object': types.object,\n        'type': types.type,\n        'error': types.error,\n        'undefined': types.undefined\n    };\n    for (let constant in globalConstants) {\n        const value = globalConstants[constant];\n        context.set(constant, value, {\n            global: true,\n            isConstant: true\n        });\n    }\n}\n","import { ESPrimitive, ESType } from \"./primitiveTypes\";\nimport { TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nexport function interpretArgument(arg, context) {\n    var _a;\n    let type;\n    const typeRes = arg.type.interpret(context);\n    if (typeRes.error)\n        return typeRes.error;\n    if (typeRes.val instanceof ESType)\n        type = typeRes.val;\n    else\n        return new TypeError(Position.unknown, 'Type', typeof typeRes.val, typeRes.val, 'Argument can\\'t be undefined');\n    let defaultValue;\n    if (arg.defaultValue) {\n        let defaultValRes = (_a = arg.defaultValue) === null || _a === void 0 ? void 0 : _a.interpret(context);\n        if (defaultValRes.error)\n            return defaultValRes.error;\n        if (defaultValRes.val instanceof ESPrimitive)\n            defaultValue = defaultValRes.val;\n    }\n    return {\n        name: arg.name,\n        type, defaultValue\n    };\n}\n","import { ESError, InvalidSyntaxError, ReferenceError, TypeError } from \"../errors\";\nimport { Context } from './context';\nimport { Position } from \"../position\";\nimport { now, tokenTypeString, tt } from \"../constants\";\nimport { interpretArgument } from \"./argument\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESType, ESUndefined, types } from \"./primitiveTypes\";\nimport { str } from '../util/util';\nexport class interpretResult {\n    constructor() {\n        this.val = new ESUndefined();\n        this.shouldBreak = false;\n        this.shouldContinue = false;\n    }\n}\nexport class Node {\n    constructor(pos, isTerminal = false) {\n        this.pos = pos;\n        this.isTerminal = isTerminal;\n    }\n    interpret(context) {\n        var _a;\n        const start = now();\n        const res = new interpretResult();\n        const val = this.interpret_(context);\n        if (val instanceof ESError)\n            res.error = val;\n        else if (val instanceof interpretResult) {\n            res.val = val.val;\n            res.error = val.error;\n            res.funcReturn = val.funcReturn;\n            res.shouldBreak = val.shouldBreak;\n            res.shouldContinue = val.shouldContinue;\n        }\n        else\n            res.val = val;\n        if (res.error && res.error.pos.isUnknown)\n            res.error.pos = this.pos;\n        if (!(res.val instanceof ESPrimitive)) {\n            res.error = new TypeError(Position.unknown, 'Primitive', 'Native JS value', str(res.val));\n            res.val = new ESUndefined();\n        }\n        ``;\n        (_a = res.val.info).file || (_a.file = this.pos.file);\n        Node.interprets++;\n        let time = now() - start;\n        Node.totalTime += time;\n        if (time > Node.maxTime)\n            Node.maxTime = time;\n        return res;\n    }\n}\nNode.interprets = 0;\nNode.totalTime = 0;\nNode.maxTime = 0;\nexport class N_binOp extends Node {\n    constructor(pos, left, opTok, right) {\n        super(pos);\n        this.left = left;\n        this.opTok = opTok;\n        this.right = right;\n    }\n    interpret_(context) {\n        const left = this.left.interpret(context);\n        if (left.error)\n            return left.error;\n        const right = this.right.interpret(context);\n        if (right.error)\n            return right.error;\n        const l = left.val;\n        const r = right.val;\n        if (typeof l === 'undefined')\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', l, 'N_binOp.interpret_');\n        if (typeof r === 'undefined')\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', r, 'N_binOp.interpret_');\n        switch (this.opTok.type) {\n            case tt.LTE: {\n                const lt = l.__lt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (lt instanceof ESError)\n                    return lt;\n                if (eq instanceof ESError)\n                    return eq;\n                return lt.__or__({ context }, eq);\n            }\n            case tt.GTE: {\n                const gt = l.__gt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (gt instanceof ESError)\n                    return gt;\n                if (eq instanceof ESError)\n                    return eq;\n                return gt.__or__({ context }, eq);\n            }\n            case tt.NOTEQUALS: {\n                const res = l.__eq__({ context }, r);\n                if (res instanceof ESError)\n                    return res;\n                return new ESBoolean(!res.bool().valueOf());\n            }\n            case tt.ADD:\n                return l.__add__({ context }, r);\n            case tt.SUB:\n                return l.__subtract__({ context }, r);\n            case tt.MUL:\n                return l.__multiply__({ context }, r);\n            case tt.DIV:\n                return l.__divide__({ context }, r);\n            case tt.POW:\n                return l.__pow__({ context }, r);\n            case tt.EQUALS:\n                return l.__eq__({ context }, r);\n            case tt.LT:\n                return l.__lt__({ context }, r);\n            case tt.GT:\n                return l.__gt__({ context }, r);\n            case tt.AND:\n                return l.__and__({ context }, r);\n            case tt.OR:\n                return l.__or__({ context }, r);\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid binary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n}\nexport class N_unaryOp extends Node {\n    constructor(pos, a, opTok) {\n        super(pos);\n        this.a = a;\n        this.opTok = opTok;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const res = this.a.interpret(context);\n        if (res.error)\n            return res.error;\n        switch (this.opTok.type) {\n            case tt.SUB:\n            case tt.ADD:\n                if (!(res.val instanceof ESNumber))\n                    return new TypeError(this.pos, 'Number', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().toString()) || 'undefined_', (_b = res.val) === null || _b === void 0 ? void 0 : _b.valueOf());\n                const numVal = res.val.valueOf();\n                return new ESNumber(this.opTok.type === tt.SUB ? -numVal : Math.abs(numVal));\n            case tt.NOT:\n                return new ESBoolean(!((_c = res === null || res === void 0 ? void 0 : res.val) === null || _c === void 0 ? void 0 : _c.bool().valueOf()));\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid unary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n}\nexport class N_varAssign extends Node {\n    constructor(pos, varNameTok, value, assignType = '=', isGlobal = false, isLocal = false, isConstant = false, isDeclaration = false, type = types.any) {\n        super(pos);\n        this.value = value;\n        this.varNameTok = varNameTok;\n        this.isGlobal = isGlobal;\n        this.assignType = assignType;\n        this.isConstant = isConstant;\n        this.isDeclaration = isDeclaration;\n        this.isLocal = isLocal;\n        if (type instanceof ESType) {\n            this.type = new N_primWrapper(type);\n        }\n        else\n            this.type = type;\n    }\n    interpret_(context) {\n        var _a, _b, _c, _d;\n        if (this.isDeclaration && context.hasOwn(this.varNameTok.value)) {\n            return new InvalidSyntaxError(this.pos, `Symbol '${this.varNameTok.value}' already exists, and cannot be redeclared`);\n        }\n        const res = this.value.interpret(context);\n        const typeRes = this.type.interpret(context);\n        if (res.error)\n            return res.error;\n        if (typeRes.error)\n            return typeRes.error;\n        if (!typeRes.val || !(typeRes.val instanceof ESType)) {\n            return new TypeError(this.varNameTok.pos, 'Type', (_b = (_a = typeRes.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) !== null && _b !== void 0 ? _b : 'undefined', (_c = typeRes.val) === null || _c === void 0 ? void 0 : _c.str(), `@ !typeRes.val || !(typeRes.val instanceof ESType)`);\n        }\n        if (!res.val) {\n            return new TypeError(this.varNameTok.pos, '~undefined', 'undefined', 'N_varAssign.interpret_');\n        }\n        if (!typeRes.val.includesType({ context }, res.val.__type__).bool().valueOf()) {\n            return new TypeError(this.varNameTok.pos, str(typeRes.val), str((_d = res.val) === null || _d === void 0 ? void 0 : _d.typeName()), str(res.val));\n        }\n        if (this.isDeclaration) {\n            if (this.assignType !== '=')\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            context.setOwn(this.varNameTok.value, res.val, {\n                global: false,\n                isConstant: this.isConstant\n            });\n            return res.val;\n        }\n        if (this.assignType === '=') {\n            let value = res.val;\n            if (value === undefined)\n                value = new ESUndefined();\n            const setRes = context.set(this.varNameTok.value, value, {\n                global: this.isGlobal,\n                isConstant: this.isConstant\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n        }\n        else {\n            if (this.isDeclaration)\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            const currentVal = context.get(this.varNameTok.value);\n            if (currentVal instanceof ESError)\n                return currentVal;\n            if (currentVal == undefined)\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            let newVal;\n            let assignVal = res.val;\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError) {\n                return newVal;\n            }\n            let setRes = context.set(this.varNameTok.value, newVal, {\n                global: this.isGlobal,\n                isConstant: this.isConstant\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n            res.val = newVal;\n        }\n        if (res.val.info.name === '(anonymous)' || !res.val.info.name)\n            res.val.info.name = this.varNameTok.value;\n        return res;\n    }\n}\nexport class N_if extends Node {\n    constructor(pos, comparison, ifTrue, ifFalse) {\n        super(pos);\n        this.comparison = comparison;\n        this.ifFalse = ifFalse;\n        this.ifTrue = ifTrue;\n    }\n    interpret_(context) {\n        var _a;\n        let newContext = new Context();\n        newContext.parent = context;\n        let res = new interpretResult();\n        let compRes = this.comparison.interpret(context);\n        if (compRes.error)\n            return compRes;\n        if ((_a = compRes.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            res = this.ifTrue.interpret(newContext);\n            res.val = new ESUndefined();\n            if (res.error)\n                return res;\n        }\n        else if (this.ifFalse) {\n            res = this.ifFalse.interpret(newContext);\n            res.val = new ESUndefined();\n            if (res.error)\n                return res;\n        }\n        return res;\n    }\n}\nexport class N_while extends Node {\n    constructor(pos, comparison, loop) {\n        super(pos);\n        this.comparison = comparison;\n        this.loop = loop;\n    }\n    interpret_(context) {\n        var _a, _b;\n        let newContext = new Context();\n        newContext.parent = context;\n        while (true) {\n            let shouldLoop = this.comparison.interpret(context);\n            if (shouldLoop.error)\n                return shouldLoop;\n            if (!((_b = (_a = shouldLoop.val) === null || _a === void 0 ? void 0 : _a.bool()) === null || _b === void 0 ? void 0 : _b.valueOf()))\n                break;\n            let potentialError = this.loop.interpret(newContext);\n            if (potentialError.error)\n                return potentialError;\n            if (potentialError.shouldBreak)\n                break;\n        }\n        return new ESUndefined();\n    }\n}\nexport class N_for extends Node {\n    constructor(pos, body, array, identifier, isGlobalIdentifier, isConstIdentifier) {\n        super(pos);\n        this.body = body;\n        this.array = array;\n        this.identifier = identifier;\n        this.isGlobalId = isGlobalIdentifier;\n        this.isConstId = isConstIdentifier;\n    }\n    interpret_(context) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        let newContext = new Context();\n        newContext.parent = context;\n        const array = this.array.interpret(context);\n        if (array.error)\n            return array;\n        if (['Array', 'Number', 'Object', 'String', 'Any'].indexOf(((_a = array.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || '') === -1)\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val + ' | ' + ((_b = array.val) === null || _b === void 0 ? void 0 : _b.typeName()));\n        function iteration(body, id, element, isGlobal, isConstant) {\n            newContext.set(id, element, {\n                global: isGlobal,\n                isConstant\n            });\n            const res = body.interpret(newContext);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (res.shouldBreak) {\n                res.shouldBreak = false;\n                return 'break';\n            }\n            if (res.shouldContinue)\n                res.shouldContinue = false;\n        }\n        if (array.val instanceof ESNumber || typeof ((_c = array.val) === null || _c === void 0 ? void 0 : _c.valueOf()) == 'number') {\n            for (let i = 0; i < array.val.valueOf(); i++) {\n                const res = iteration(this.body, this.identifier.value, new ESNumber(i), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESObject ||\n            (typeof ((_d = array.val) === null || _d === void 0 ? void 0 : _d.valueOf()) == 'number' && !Array.isArray((_e = array.val) === null || _e === void 0 ? void 0 : _e.valueOf()))) {\n            for (let element in (_f = array.val) === null || _f === void 0 ? void 0 : _f.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, new ESString(element), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESArray || Array.isArray((_g = array.val) === null || _g === void 0 ? void 0 : _g.valueOf())) {\n            for (let element of (_h = array.val) === null || _h === void 0 ? void 0 : _h.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, element, this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val);\n        return new ESUndefined();\n    }\n}\nexport class N_array extends Node {\n    constructor(pos, items, shouldClone = false) {\n        super(pos);\n        this.items = items;\n        this.shouldClone = shouldClone;\n    }\n    interpret_(context) {\n        let result = new interpretResult();\n        let interpreted = [];\n        for (let item of this.items) {\n            const res = item.interpret(context);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (!res.val)\n                continue;\n            let val = res.val;\n            if (this.shouldClone)\n                val = val.clone();\n            interpreted.push(val);\n        }\n        result.val = new ESArray(interpreted);\n        return result;\n    }\n}\nexport class N_objectLiteral extends Node {\n    constructor(pos, properties) {\n        super(pos);\n        this.properties = properties;\n    }\n    interpret_(context) {\n        let interpreted = {};\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.interpret(context);\n            if (value.error)\n                return value.error;\n            const key = keyNode.interpret(context);\n            if (key.error)\n                return key.error;\n            if (key.val && value.val)\n                interpreted[key.val.valueOf()] = value.val;\n        }\n        return new ESObject(interpreted);\n    }\n}\nexport class N_emptyObject extends Node {\n    constructor(pos) {\n        super(pos);\n    }\n    interpret_(context) {\n        return new ESObject({});\n    }\n}\nexport class N_statements extends Node {\n    constructor(pos, items) {\n        super(pos);\n        this.items = items;\n    }\n    interpret_(context) {\n        let last;\n        for (let item of this.items) {\n            const res = item.interpret(context);\n            if (res.error || (typeof res.funcReturn !== 'undefined') || res.shouldBreak || res.shouldContinue)\n                return res;\n            last = res.val;\n        }\n        if (last)\n            return last;\n        return new ESUndefined();\n    }\n}\nexport class N_functionCall extends Node {\n    constructor(pos, to, args) {\n        super(pos);\n        this.arguments = args;\n        this.to = to;\n    }\n    interpret_(context) {\n        let { val, error } = this.to.interpret(context);\n        if (error) {\n            return error;\n        }\n        if (!val) {\n            return new TypeError(this.pos, 'any', 'undefined', undefined, 'On function call');\n        }\n        let params = [];\n        for (let arg of this.arguments) {\n            const res = arg.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (res.val) {\n                params.push(res.val);\n            }\n        }\n        const res = val.__call__({ context }, ...params);\n        if (res instanceof ESError) {\n            res.traceback.push({\n                position: this.pos,\n                line: `${val.info.name || '<AnonFunction>'}(${params.map(str).join(', ')})`\n            });\n        }\n        return res;\n    }\n}\nexport class N_functionDefinition extends Node {\n    constructor(pos, body, argNames, returnType, name = '(anon)', this_ = new ESObject(), description = '') {\n        super(pos);\n        this.arguments = argNames;\n        this.body = body;\n        this.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        this.description = description;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        let args = [];\n        for (let arg of this.arguments) {\n            const res = interpretArgument(arg, context);\n            if (res instanceof ESError)\n                return res;\n            args.push(res);\n        }\n        const returnTypeRes = this.returnType.interpret(context);\n        if (returnTypeRes.error)\n            return returnTypeRes.error;\n        if (!(returnTypeRes.val instanceof ESType))\n            return new TypeError(this.returnType.pos, 'Type', (_b = (_a = returnTypeRes.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) !== null && _b !== void 0 ? _b : '<Undefined>', (_c = returnTypeRes.val) === null || _c === void 0 ? void 0 : _c.str().valueOf(), `On func '${this.name}' return type`);\n        return new ESFunction(this.body, args, this.name, this.this_, returnTypeRes.val, context);\n    }\n}\nexport class N_return extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        res.funcReturn = val.val;\n        return res;\n    }\n}\nexport class N_yield extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        var _a;\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        if ((_a = val.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf())\n            res.funcReturn = val.val;\n        return res;\n    }\n}\nexport class N_indexed extends Node {\n    constructor(pos, base, index) {\n        super(pos);\n        this.base = base;\n        this.index = index;\n    }\n    interpret_(context) {\n        var _a;\n        let baseRes = this.base.interpret(context);\n        if (baseRes.error)\n            return baseRes;\n        let indexRes = this.index.interpret(context);\n        if (indexRes.error)\n            return indexRes;\n        const index = indexRes.val;\n        const base = baseRes.val;\n        if (!base || !index)\n            return new ESUndefined();\n        if (this.value !== undefined) {\n            let valRes = this.value.interpret(context);\n            if (valRes.error)\n                return valRes;\n            const currentVal = wrap(base.__getProperty__({ context }, index));\n            let newVal;\n            let assignVal = valRes.val;\n            (_a = this.assignType) !== null && _a !== void 0 ? _a : (this.assignType = '=');\n            if (!assignVal) {\n                return new TypeError(this.pos, '~undefined', 'undefined', 'undefined', 'N_indexed.interpret_');\n            }\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                case '=':\n                    newVal = assignVal;\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError)\n                return newVal;\n            if (!base.__setProperty__)\n                return new TypeError(this.pos, 'mutable', 'immutable', base.valueOf());\n            const res = base.__setProperty__({ context }, index, newVal !== null && newVal !== void 0 ? newVal : new ESUndefined());\n            if (res instanceof ESError)\n                return res;\n        }\n        return base.__getProperty__({ context }, index);\n    }\n}\nexport class N_class extends Node {\n    constructor(pos, methods, extends_, init, name = '<anon class>') {\n        super(pos);\n        this.init = init;\n        this.methods = methods;\n        this.name = name;\n        this.extends_ = extends_;\n        this.instances = [];\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const methods = [];\n        for (let method of this.methods) {\n            const res = method.interpret(context);\n            if (res.error)\n                return res.error;\n            if (!(res.val instanceof ESFunction))\n                return new TypeError(this.pos, 'Function', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            methods.push(res.val);\n        }\n        let extends_;\n        if (this.extends_) {\n            const extendsRes = this.extends_.interpret(context);\n            if (extendsRes.error)\n                return extendsRes.error;\n            if (!(extendsRes.val instanceof ESType))\n                return new TypeError(this.pos, 'Function', ((_b = extendsRes.val) === null || _b === void 0 ? void 0 : _b.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            extends_ = extendsRes.val;\n        }\n        let init;\n        if (this.init) {\n            const initRes = this.init.interpret(context);\n            if (initRes.error)\n                return initRes.error;\n            if (!(initRes.val instanceof ESFunction))\n                return new TypeError(this.pos, 'Function', ((_c = initRes.val) === null || _c === void 0 ? void 0 : _c.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            init = initRes.val;\n        }\n        return new ESType(false, this.name, methods, extends_, init);\n    }\n}\nexport class N_namespace extends Node {\n    constructor(pos, statements, name = '(anon)', mutable = false) {\n        super(pos);\n        this.name = name;\n        this.statements = statements;\n        this.mutable = mutable;\n    }\n    interpret_(context) {\n        const newContext = new Context();\n        newContext.parent = context;\n        const res = this.statements.interpret(newContext);\n        if (res.error)\n            return res;\n        return new ESNamespace(new ESString(this.name), newContext.getSymbolTableAsDict(), this.mutable);\n    }\n}\nexport class N_number extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        if (typeof val !== 'number')\n            return new TypeError(this.pos, 'number', typeof val);\n        const res = new interpretResult();\n        res.val = new ESNumber(val);\n        return res;\n    }\n}\nexport class N_string extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        if (typeof val !== 'string')\n            return new TypeError(this.pos, 'string', typeof val);\n        const res = new interpretResult();\n        res.val = new ESString(val);\n        return res;\n    }\n}\nexport class N_variable extends Node {\n    constructor(a) {\n        super(a.pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        if (!context.has(this.a.value))\n            return new ReferenceError(this.a.pos, this.a.value);\n        let res = new interpretResult();\n        let symbol = context.getSymbol(this.a.value);\n        if (!symbol)\n            return new ESUndefined();\n        if (symbol instanceof ESError)\n            return symbol;\n        res.val = symbol.value;\n        return res;\n    }\n}\nexport class N_undefined extends Node {\n    constructor(pos = Position.unknown) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.val = new ESUndefined();\n        return res;\n    }\n}\nexport class N_break extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldBreak = true;\n        return res;\n    }\n}\nexport class N_continue extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldContinue = true;\n        return res;\n    }\n}\nexport class N_primWrapper extends Node {\n    constructor(val, pos = Position.unknown) {\n        super(pos, true);\n        this.value = val;\n    }\n    interpret_(context) {\n        return this.value;\n    }\n}\n","import { Node } from \"../runtime/nodes\";\nimport { ESPrimitive } from '../runtime/primitiveTypes';\nexport function deepClone(obj, hash = new WeakMap()) {\n    let result;\n    if (Object(obj) !== obj || obj instanceof Function) {\n        return obj;\n    }\n    if (hash.has(obj)) {\n        return hash.get(obj);\n    }\n    try {\n        result = new obj.constructor();\n    }\n    catch (e) {\n        result = Object.create(Object.getPrototypeOf(obj));\n    }\n    if (obj instanceof Map) {\n        Array.from(obj, ([key, val]) => result.set(deepClone(key, hash), deepClone(val, hash)));\n    }\n    else if (obj instanceof Set) {\n        Array.from(obj, (key) => result.add(deepClone(key, hash)));\n    }\n    hash.set(obj, result);\n    return Object.assign(result, ...Object.keys(obj).map(key => ({ [key]: deepClone(obj[key], hash) })));\n}\nexport function str(val, depth = 0) {\n    if (typeof val === 'string') {\n        if (depth > 0) {\n            return `'${val}'`;\n        }\n        return val;\n    }\n    if (depth > 20) {\n        return '...';\n    }\n    let result = '';\n    if (typeof val === 'undefined') {\n        return 'undefined';\n    }\n    if (val instanceof ESPrimitive) {\n        return val.str().valueOf();\n    }\n    if (val instanceof Node) {\n        return `<RunTimeNode: ${val.constructor.name}>`;\n    }\n    switch (typeof val) {\n        case 'object':\n            if (Array.isArray(val)) {\n                result += '[';\n                for (let item of val) {\n                    try {\n                        result += str(item, depth + 1) + `, `;\n                    }\n                    catch (e) {\n                        result += '<large property>, ';\n                    }\n                }\n                if (val.length) {\n                    result = result.substring(0, result.length - 2);\n                }\n                result += ']';\n            }\n            else {\n                try {\n                    result += val.constructor.name;\n                }\n                catch (e) {\n                    result += 'UNKNOWN_CONSTRUCTOR';\n                }\n                result += ': {\\n';\n                let i = 0;\n                for (let item in val) {\n                    i++;\n                    if (!val.hasOwnProperty || !val.hasOwnProperty(item)) {\n                        continue;\n                    }\n                    result += `  ${item}: ${str(val[item], depth + 1) || ''}, \\n`;\n                }\n                if (i > 0) {\n                    result = result.substring(0, result.length - 3);\n                }\n                result += '\\n}\\n';\n            }\n            break;\n        case 'string':\n            result = `'${val}'`;\n            break;\n        case \"bigint\":\n        case \"number\":\n        case \"boolean\":\n            result = `${val}`;\n            break;\n        case \"undefined\":\n            result = '<NativeUndefined>';\n            break;\n        case \"function\":\n            result = `<NativeFunction ${val.name}>`;\n            break;\n    }\n    for (let i = 0; i < depth; i++)\n        result = indent(result);\n    return result;\n}\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms));\nexport function indent(str) {\n    return str.replace(/\\n/g, '\\n    ');\n}\nexport const validURI = (value) => /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(value);\n","import { IS_NODE_INSTANCE } from './constants';\nimport { Position } from \"./position\";\nimport { str } from \"./util/util\";\nimport chalk from \"./util/colours\";\nexport class ESError {\n    constructor(pos, name, details) {\n        this.traceback = [];\n        this.pos = pos;\n        this.name = name;\n        this.details = details;\n    }\n    get colouredStr() {\n        let out = '';\n        if (this.traceback.length) {\n            out = chalk.yellow('Error Traceback (most recent call last):\\n');\n            for (let pos of [...this.traceback].reverse())\n                out += `    ${chalk.cyan(pos.position.str)}:\\n        ${pos.line}\\n`;\n        }\n        out += `${chalk.red(this.name)}: ${this.details} \\n at ${chalk.cyan(this.pos.str)}`;\n        return out;\n    }\n    get str() {\n        return `${this.name}: ${this.details} \\n at ${this.pos.str}`;\n    }\n}\nexport class IllegalCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'IllegalCharError', `'${char}'`);\n    }\n}\nexport class InvalidSyntaxError extends ESError {\n    constructor(pos, details) {\n        super(pos, 'InvalidSyntaxError', details);\n    }\n}\nexport class ExpectedCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'ExpectedCharError', `'${char}'`);\n    }\n}\nexport class TypeError extends ESError {\n    constructor(pos, expectedType, actualType, value = '', detail = '') {\n        super(pos, 'TypeError', `Expected type '${expectedType}', got type '${actualType}' ${typeof value === 'undefined' ? '' : ` on value '${str(value)}'`} ${!detail ? '' : detail}`);\n    }\n}\nexport class ImportError extends ESError {\n    constructor(pos, url, detail = '') {\n        super(pos, 'ImportError', `Could not import ${url}: ${detail}`);\n    }\n}\nexport class ReferenceError extends ESError {\n    constructor(pos, ref) {\n        super(pos, 'ReferenceError', `${ref} is not defined`);\n    }\n}\nexport class IndexError extends ESError {\n    constructor(pos, ref, object) {\n        var _a;\n        super(pos, 'IndexError', `'${ref}' is not a property of '${((_a = object === null || object === void 0 ? void 0 : object.info) === null || _a === void 0 ? void 0 : _a.name) || str(object)}'`);\n    }\n}\nexport class InvalidOperationError extends ESError {\n    constructor(op, value, detail = '', pos = Position.unknown) {\n        var _a;\n        super(pos, 'TypeError', `Cannot perform '${op}' on value ${((_a = value === null || value === void 0 ? void 0 : value.info) === null || _a === void 0 ? void 0 : _a.name) || str(value)}: ${detail}`);\n    }\n}\nexport class InvalidRuntimeError extends ESError {\n    constructor() {\n        super(Position.unknown, 'InvalidRuntimeError', `Required runtime of ${IS_NODE_INSTANCE ? 'browser' : 'node'}`);\n    }\n}\nexport class TestFailed extends ESError {\n    constructor(detail) {\n        super(Position.unknown, 'TestFailed', detail);\n    }\n}\n","export class Token {\n    constructor(pos, type, value = undefined) {\n        this.type = type;\n        this.value = value;\n        this.pos = pos;\n    }\n    matches(type, val) {\n        return this.type === type && this.value === val;\n    }\n}\n","import { Position } from \"../position\";\nimport { digits, doubleCharTokens, identifierChars, KEYWORDS, multiLineCommentEnd, multiLineCommentStart, singleCharTokens, singleLineComment, stringSurrounds, tripleCharTokens, tt, } from '../constants';\nimport { IllegalCharError } from \"../errors\";\nimport { Token } from \"./tokens\";\nexport class Lexer {\n    constructor(program, fileName) {\n        this.text = program;\n        this.position = new Position(-1, 0, -1, fileName);\n        this.advance();\n    }\n    advance() {\n        this.position.advance(this.currentChar);\n        this.currentChar = this.text[this.position.idx];\n    }\n    generate() {\n        if (!this.text) {\n            return [new Token(this.position, tt.EOF)];\n        }\n        const tokens = [];\n        while (this.currentChar !== undefined) {\n            if (' \\t\\n'.includes(this.currentChar)) {\n                this.advance();\n            }\n            else if (digits.includes(this.currentChar)) {\n                tokens.push(this.makeNumber());\n            }\n            else if (this.currentChar === singleLineComment[0] &&\n                this.text[this.position.idx + 1] === singleLineComment[1]) {\n                this.singleLineComment();\n            }\n            else if (this.currentChar === multiLineCommentStart[0] &&\n                this.text[this.position.idx + 1] === multiLineCommentStart[1]) {\n                this.multiLineComment();\n            }\n            else if (identifierChars.includes(this.currentChar)) {\n                tokens.push(this.makeIdentifier());\n            }\n            else if (stringSurrounds.indexOf(this.currentChar) !== -1) {\n                tokens.push(this.makeString());\n            }\n            else {\n                const possibleAssignFirstChar = this.currentChar;\n                let token = this.unknownChar();\n                if (token) {\n                    if (token.type === tt.ASSIGN) {\n                        token.value = possibleAssignFirstChar;\n                    }\n                    tokens.push(token);\n                }\n                else {\n                    let pos = this.position.clone;\n                    let char = this.currentChar;\n                    this.advance();\n                    return new IllegalCharError(pos, char);\n                }\n            }\n        }\n        tokens.push(new Token(this.position, tt.EOF));\n        return tokens;\n    }\n    makeNumber() {\n        const pos = this.position.clone;\n        let numStr = '';\n        let dotCount = 0;\n        while (this.currentChar !== undefined && (digits + '._').includes(this.currentChar)) {\n            if (this.currentChar === '.') {\n                if (dotCount === 1) {\n                    break;\n                }\n                dotCount++;\n                numStr += '.';\n            }\n            else if (this.currentChar !== '_') {\n                numStr += this.currentChar;\n            }\n            this.advance();\n        }\n        return new Token(pos, tt.NUMBER, parseFloat(numStr));\n    }\n    makeString() {\n        const pos = this.position.clone;\n        let str = '';\n        let strClose = this.currentChar;\n        this.advance();\n        while (this.currentChar !== strClose && this.currentChar !== undefined) {\n            if (this.currentChar === '\\\\') {\n                this.advance();\n                if (this.currentChar === 'n') {\n                    str += '\\n';\n                    this.advance();\n                    continue;\n                }\n            }\n            str += this.currentChar;\n            this.advance();\n        }\n        this.advance();\n        return new Token(pos, tt.STRING, str);\n    }\n    makeIdentifier() {\n        let idStr = '';\n        const posStart = this.position.clone;\n        while (this.currentChar !== undefined && (identifierChars + digits).includes(this.currentChar)) {\n            idStr += this.currentChar;\n            this.advance();\n        }\n        let tokType = tt.IDENTIFIER;\n        if (KEYWORDS.indexOf(idStr) !== -1) {\n            tokType = tt.KEYWORD;\n        }\n        return new Token(posStart, tokType, idStr);\n    }\n    unknownChar() {\n        if (this.currentChar === undefined) {\n            return undefined;\n        }\n        for (let triple in tripleCharTokens) {\n            if (triple[0] === this.currentChar)\n                if (triple[1] === this.text[this.position.idx + 1])\n                    if (triple[2] === this.text[this.position.idx + 2]) {\n                        const pos = this.position.clone;\n                        this.advance();\n                        this.advance();\n                        this.advance();\n                        return new Token(pos, tripleCharTokens[triple]);\n                    }\n        }\n        for (let double in doubleCharTokens) {\n            if (double[0] === this.currentChar)\n                if (double[1] === this.text[this.position.idx + 1]) {\n                    const pos = this.position.clone;\n                    this.advance();\n                    this.advance();\n                    return new Token(pos, doubleCharTokens[double]);\n                }\n        }\n        if (singleCharTokens.hasOwnProperty(this.currentChar)) {\n            let pos = this.position.clone;\n            let val = singleCharTokens[this.currentChar];\n            this.advance();\n            return new Token(pos, val);\n        }\n        return undefined;\n    }\n    singleLineComment() {\n        this.advance();\n        while (this.currentChar !== '\\n' && this.currentChar !== undefined) {\n            this.advance();\n        }\n        this.advance();\n    }\n    multiLineComment() {\n        this.advance();\n        while (!(this.currentChar === multiLineCommentEnd[0] &&\n            this.text[this.position.idx + 1] === multiLineCommentEnd[1])) {\n            this.advance();\n        }\n        this.advance();\n        this.advance();\n    }\n}\n","import { tokenType, tokenTypeString, tt } from '../constants';\nimport { Token } from \"./tokens\";\nimport * as n from '../runtime/nodes';\nimport { N_functionDefinition, N_namespace, N_undefined, N_variable } from '../runtime/nodes';\nimport { ESError, InvalidSyntaxError } from \"../errors\";\nimport { types } from \"../runtime/primitiveTypes\";\nexport class ParseResults {\n    constructor() {\n        this.advanceCount = 0;\n        this.lastRegisteredAdvanceCount = 0;\n        this.reverseCount = 0;\n    }\n    registerAdvance() {\n        this.advanceCount = 1;\n        this.lastRegisteredAdvanceCount++;\n    }\n    register(res) {\n        this.lastRegisteredAdvanceCount = res.advanceCount;\n        this.advanceCount += res.advanceCount;\n        if (res.error) {\n            this.error = res.error;\n        }\n        if (!res.node) {\n            return new N_undefined();\n        }\n        return res.node;\n    }\n    tryRegister(res) {\n        if (res.error) {\n            this.reverseCount += res.advanceCount;\n            return;\n        }\n        return this.register(res);\n    }\n    success(node) {\n        this.node = node;\n        return this;\n    }\n    failure(error) {\n        this.error = error;\n        return this;\n    }\n}\nexport class Parser {\n    constructor(tokens) {\n        this.tokens = tokens;\n        this.tokenIdx = -1;\n        this.currentToken = tokens[0];\n        this.advance();\n    }\n    parse() {\n        var _a;\n        if (!this.currentToken || !this.tokens || (this.tokens.length === 1 && this.tokens[0].type === tt.EOF))\n            return new ParseResults();\n        const res = this.statements(true);\n        if (!res.error && this.currentToken.type !== tokenType.EOF) {\n            return res.failure(new InvalidSyntaxError((_a = this.currentToken) === null || _a === void 0 ? void 0 : _a.pos, `Expected 'End of File', got token of type'${tokenTypeString[this.currentToken.type]}' of value ${this.currentToken.value}`));\n        }\n        return res;\n    }\n    advance(res) {\n        if (res)\n            res.registerAdvance();\n        this.tokenIdx++;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    reverse(amount = 1) {\n        this.tokenIdx -= amount;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    consume(res, type, errorMsg) {\n        if (this.currentToken.type !== type)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, errorMsg !== null && errorMsg !== void 0 ? errorMsg : `Expected '${tokenTypeString[type]}' but got '${tokenTypeString[this.currentToken.type]}'`));\n        this.advance(res);\n    }\n    clearEndStatements(res) {\n        while (this.currentToken.type === tt.ENDSTATEMENT) {\n            this.advance(res);\n        }\n    }\n    statements(useArray = false) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let statements = [];\n        this.clearEndStatements(res);\n        const firstStatement = res.register(this.statement());\n        if (!firstStatement) {\n            return res;\n        }\n        statements.push(firstStatement);\n        if (res.error) {\n            return res;\n        }\n        let moreStatements = true;\n        while (true) {\n            let newLineCount = 0;\n            while (this.currentToken.type === tt.ENDSTATEMENT) {\n                this.advance(res);\n                newLineCount++;\n            }\n            if (newLineCount === 0)\n                moreStatements = false;\n            if (!moreStatements)\n                break;\n            const statement = res.tryRegister(this.statement());\n            if (!statement) {\n                this.reverse(res.reverseCount);\n                continue;\n            }\n            statements.push(statement);\n        }\n        this.clearEndStatements(res);\n        let node = new n.N_statements(pos, statements);\n        if (useArray)\n            node = new n.N_array(pos, statements, true);\n        return res.success(node);\n    }\n    statement() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        if (this.currentToken.matches(tt.KEYWORD, 'return')) {\n            this.advance(res);\n            let expr = new N_undefined(this.currentToken.pos);\n            if (this.currentToken.type !== tt.ENDSTATEMENT) {\n                let exprRes = res.register(this.expr());\n                if (!exprRes) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'Expected end of statement'));\n                }\n                expr = exprRes;\n            }\n            return res.success(new n.N_return(pos, expr));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'yield')) {\n            this.advance(res);\n            let expr = new N_undefined(this.currentToken.pos);\n            if (this.currentToken.type !== tt.ENDSTATEMENT) {\n                let exprRes = res.register(this.expr());\n                if (!exprRes) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'Expected end of statement'));\n                }\n                expr = exprRes;\n            }\n            return res.success(new n.N_yield(pos, expr));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'break')) {\n            this.advance(res);\n            return res.success(new n.N_break(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'continue')) {\n            this.advance(res);\n            return res.success(new n.N_continue(pos));\n        }\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        if (!expr) {\n            return res.failure(new InvalidSyntaxError(pos, 'No empty statements'));\n        }\n        return res.success(expr);\n    }\n    atom() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        const pos = this.currentToken.pos;\n        switch (tok.type) {\n            case tt.NUMBER:\n                this.advance(res);\n                return res.success(new n.N_number(pos, tok));\n            case tt.STRING:\n                this.advance(res);\n                return res.success(new n.N_string(pos, tok));\n            case tt.IDENTIFIER:\n                return this.atomIdentifier(res, pos, tok);\n            case tt.OPAREN:\n                this.advance(res);\n                const expr = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type == tt.CPAREN) {\n                    this.advance(res);\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ')'\"));\n            case tt.OSQUARE:\n                let arrayExpr = res.register(this.array());\n                if (res.error)\n                    return res;\n                return res.success(arrayExpr);\n            case tt.OBRACES:\n                let objectExpr = res.register(this.object());\n                if (res.error)\n                    return res;\n                return res.success(objectExpr);\n            case tt.KEYWORD:\n                if (tok.value === 'if') {\n                    const expr = res.register(this.ifExpr());\n                    if (res.error)\n                        return res;\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Invalid Identifier ${tok.value}`));\n            default:\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected number, identifier, '(', '+' or '-'`));\n        }\n    }\n    atomIdentifier(res, pos, tok) {\n        this.advance(res);\n        let node = new n.N_variable(tok);\n        let prevNode = new n.N_undefined(pos);\n        let functionCall = false;\n        while ([tt.OPAREN, tt.OSQUARE, tt.DOT].indexOf(this.currentToken.type) !== -1) {\n            switch (this.currentToken.type) {\n                case tt.OPAREN:\n                    functionCall = true;\n                    const tempNode = node;\n                    node = res.register(this.makeFunctionCall(node, prevNode));\n                    prevNode = tempNode;\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.OSQUARE:\n                    prevNode = node;\n                    node = res.register(this.makeIndex(node));\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.DOT:\n                    this.advance(res);\n                    if (this.currentToken.type !== tt.IDENTIFIER)\n                        return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected identifier after '.'`));\n                    prevNode = node;\n                    node = new n.N_indexed(this.currentToken.pos, node, new n.N_string(this.currentToken.pos, this.currentToken));\n                    this.advance(res);\n            }\n        }\n        if (this.currentToken.type === tt.ASSIGN) {\n            let assignType = this.currentToken.value;\n            if (functionCall) {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot assign to return value of function`));\n            }\n            this.advance(res);\n            const value = res.register(this.expr());\n            if (node instanceof n.N_variable) {\n                node = new n.N_varAssign(pos, node.a, value, assignType, false);\n            }\n            else if (node instanceof n.N_indexed) {\n                node.value = value;\n                node.assignType = assignType;\n            }\n            else {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot have node of type ${this.currentToken.constructor.name}.\n                            Expected either index or variable node.`));\n            }\n            if (res.error)\n                return res;\n        }\n        return res.success(node);\n    }\n    power() {\n        return this.binOp(() => this.atom(), [tokenType.POW], () => this.factor());\n    }\n    factor() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        switch (tok.type) {\n            case tt.SUB:\n            case tt.ADD:\n                this.advance(res);\n                const factor = res.register(this.factor());\n                if (res.error)\n                    return res;\n                return res.success(new n.N_unaryOp(tok.pos, factor, tok));\n            default:\n                return this.power();\n        }\n    }\n    term() {\n        return this.binOp(() => this.factor(), [tt.MUL, tt.DIV]);\n    }\n    arithmeticExpr() {\n        return this.binOp(() => this.term(), [tt.ADD, tt.SUB]);\n    }\n    comparisonExpr() {\n        const res = new ParseResults();\n        if (this.currentToken.type === tt.NOT) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            let node = res.register(this.expr());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(opTok.pos, node, opTok));\n        }\n        let node = res.register(this.binOp(() => this.arithmeticExpr(), [tt.EQUALS, tt.NOTEQUALS, tt.GT, tt.GTE, tt.LTE, tt.LT]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    expr() {\n        const res = new ParseResults();\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.KEYWORD &&\n            ['var', 'let', 'global', 'mutable', 'const', 'local'].indexOf(this.currentToken.value) !== -1) {\n            return this.initiateVar(res);\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'if')) {\n            return this.ifExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'while')) {\n            return this.whileExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'for')) {\n            return this.forExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'func')) {\n            return this.funcExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'class')) {\n            return this.classExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'namespace')) {\n            return this.namespace();\n        }\n        let node = res.register(this.binOp(() => this.comparisonExpr(), [tt.AND, tt.OR]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    binOp(func, ops, funcB = func) {\n        const res = new ParseResults();\n        let left = res.register(func());\n        if (res.error)\n            return res;\n        while (ops.indexOf(this.currentToken.type) !== -1\n            || ops.indexOf([this.currentToken.type, this.currentToken.value]) !== -1) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            const right = res.register(funcB());\n            if (res.error)\n                return res;\n            left = new n.N_binOp(left.pos, left, opTok, right);\n        }\n        return res.success(left);\n    }\n    typeExpr() {\n        const res = new ParseResults();\n        if (this.currentToken.type !== tt.IDENTIFIER)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos.clone, `Expected an identifier`));\n        let tok = this.currentToken;\n        this.advance(res);\n        return res.success(new N_variable(tok));\n    }\n    makeFunctionCall(to, this_ = new n.N_undefined()) {\n        const res = new ParseResults();\n        let args = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OPAREN)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '['\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n            return res.success(new n.N_functionCall(pos, to, []));\n        }\n        args.push(res.register(this.expr()));\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid argument\"));\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            args.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CPAREN)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n        this.advance(res);\n        return res.success(new n.N_functionCall(pos, to, args));\n    }\n    makeIndex(to) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const base = to;\n        if (this.currentToken.type !== tt.OSQUARE)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, `Cannot index without expression`));\n        }\n        let index = res.register(this.expr());\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid index\"));\n        if (this.currentToken.type !== tt.CSQUARE)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ']'\"));\n        this.advance(res);\n        return res.success(new n.N_indexed(pos, base, index));\n    }\n    initiateVar(res) {\n        let pos = this.currentToken.pos;\n        let isConst = false;\n        let isLocal = false;\n        let isGlobal = false;\n        let isDeclaration = false;\n        if (this.currentToken.type === tt.KEYWORD && ['var', 'let'].indexOf(this.currentToken.value) !== -1) {\n            isDeclaration = true;\n            isLocal = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD && ['global', 'local'].indexOf(this.currentToken.value) !== -1) {\n            isDeclaration = true;\n            if (this.currentToken.value === 'global')\n                isGlobal = true;\n            else\n                isLocal = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD && ['const', 'mutable'].indexOf(this.currentToken.value) !== -1) {\n            isDeclaration = true;\n            if (this.currentToken.value === 'const')\n                isConst = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected Identifier 'var', 'let', 'const', 'mutable', 'local', or 'global', not ${this.currentToken.value}`));\n        }\n        if (this.currentToken.type !== tokenType.IDENTIFIER) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected Identifier or Keyword`));\n        }\n        const varName = this.currentToken;\n        this.advance(res);\n        let type = types.any;\n        if (this.currentToken.type === tt.COLON) {\n            isDeclaration = true;\n            this.consume(res, tt.COLON);\n            type = res.register(this.typeExpr());\n        }\n        if (this.currentToken.type !== tt.ASSIGN) {\n            if (isConst)\n                return res.failure(new InvalidSyntaxError(pos, 'Cannot initialise constant to undefined'));\n            return res.success(new n.N_varAssign(pos, varName, new n.N_undefined(this.currentToken.pos), '=', isGlobal, isLocal, isConst, isDeclaration, type));\n        }\n        let assignType = this.currentToken.value;\n        this.advance(res);\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        if (expr instanceof n.N_class || expr instanceof n.N_functionDefinition) {\n            expr.name = varName.value;\n        }\n        if (expr instanceof N_namespace) {\n            expr.name = varName.value;\n            expr.mutable = !isConst;\n        }\n        return res.success(new n.N_varAssign(pos, varName, expr, assignType, isGlobal, isLocal, isConst, isDeclaration, type));\n    }\n    bracesExp() {\n        const res = new ParseResults();\n        this.consume(res, tt.OBRACES);\n        if (res.error) {\n            return res;\n        }\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_undefined(this.currentToken.pos));\n        }\n        const expr = res.register(this.statements());\n        if (res.error) {\n            return res;\n        }\n        this.consume(res, tt.CBRACES);\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    addEndStatement(res) {\n        this.tokens.splice(this.tokenIdx, 0, new Token(this.currentToken.pos, tt.ENDSTATEMENT));\n        this.reverse();\n        this.advance(res);\n    }\n    ifExpr() {\n        const res = new ParseResults();\n        let ifTrue;\n        let ifFalse;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'if'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'if'\"));\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        ifTrue = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.clearEndStatements(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'else')) {\n            this.advance(res);\n            if (this.currentToken.type == tt.OBRACES) {\n                ifFalse = res.register(this.bracesExp());\n                if (res.error)\n                    return res;\n            }\n            else {\n                ifFalse = res.register(this.statement());\n                if (res.error)\n                    return res;\n            }\n        }\n        this.addEndStatement(res);\n        return res.success(new n.N_if(pos, condition, ifTrue, ifFalse));\n    }\n    whileExpr() {\n        const res = new ParseResults();\n        let loop;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'while'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'while'\"));\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        loop = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        return res.success(new n.N_while(pos, condition, loop));\n    }\n    parameter(res) {\n        let name;\n        let type = new n.N_primWrapper(types.any);\n        if (this.currentToken.type !== tt.IDENTIFIER)\n            return new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\");\n        name = this.currentToken.value;\n        this.advance(res);\n        if (this.currentToken.type === tt.COLON) {\n            this.consume(res, tt.COLON);\n            if (res.error)\n                return res.error;\n            type = res.register(this.typeExpr());\n            if (res.error)\n                return res.error;\n        }\n        return { name, type };\n    }\n    funcCore() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, args = [], returnType = new n.N_primWrapper(types.any);\n        this.consume(res, tt.OPAREN);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n        }\n        else {\n            let param = this.parameter(res);\n            if (param instanceof ESError)\n                return res.failure(param);\n            args.push(param);\n            while (this.currentToken.type === tt.COMMA) {\n                this.advance(res);\n                let param = this.parameter(res);\n                if (param instanceof ESError)\n                    return res.failure(param);\n                args.push(param);\n            }\n            if (this.currentToken.type !== tt.CPAREN)\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n            this.advance(res);\n        }\n        if (this.currentToken.type === tt.COLON) {\n            this.advance(res);\n            returnType = res.register(this.typeExpr());\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.OBRACES) {\n            body = new n.N_return(this.currentToken.pos, res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        else {\n            this.consume(res, tt.OBRACES);\n            if (res.error)\n                return res;\n            if (this.currentToken.type !== tt.CBRACES)\n                body = res.register(this.statements());\n            else\n                body = new n.N_undefined(this.currentToken.pos);\n            this.consume(res, tt.CBRACES);\n            if (res.error)\n                return res;\n        }\n        return res.success(new n.N_functionDefinition(pos, body, args, returnType));\n    }\n    funcExpr() {\n        const res = new ParseResults();\n        if (!this.currentToken.matches(tt.KEYWORD, 'func'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'func'\"));\n        this.advance(res);\n        const func = res.register(this.funcCore());\n        if (res.error)\n            return res;\n        return res.success(func);\n    }\n    classExpr(name) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const methods = [];\n        let init;\n        let extends_;\n        if (!this.currentToken.matches(tt.KEYWORD, 'class'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'class'\"));\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'extends')) {\n            this.advance(res);\n            extends_ = res.register(this.expr());\n            if (res.error)\n                return res;\n        }\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_class(pos, [], undefined, undefined, name));\n        }\n        while (true) {\n            if (this.currentToken.type !== tt.IDENTIFIER)\n                break;\n            let methodId = this.currentToken.value;\n            this.advance(res);\n            const func = res.register(this.funcCore());\n            if (res.error)\n                return res;\n            if (!(func instanceof N_functionDefinition))\n                return res.failure(new ESError(this.currentToken.pos, 'ParseError', `Tried to get function, but got ${func} instead`));\n            func.name = methodId;\n            if (methodId === 'init')\n                init = func;\n            else\n                methods.push(func);\n        }\n        this.consume(res, tt.CBRACES);\n        return res.success(new n.N_class(pos, methods, extends_, init, name));\n    }\n    forExpr() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, array, identifier, isGlobalIdentifier = false, isConstIdentifier = false;\n        if (!this.currentToken.matches(tt.KEYWORD, 'for'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'for'\"));\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'global')) {\n            isGlobalIdentifier = true;\n            this.advance(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'const')) {\n            isConstIdentifier = true;\n            this.advance(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'var') || this.currentToken.matches(tt.KEYWORD, 'let')) {\n            this.advance(res);\n        }\n        if (this.currentToken.type !== tt.IDENTIFIER)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\"));\n        identifier = this.currentToken;\n        this.advance(res);\n        if (!this.currentToken.matches(tt.KEYWORD, 'in'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected keyword 'in\"));\n        this.advance(res);\n        array = res.register(this.expr());\n        if (res.error)\n            return res;\n        body = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        return res.success(new n.N_for(pos, body, array, identifier, isGlobalIdentifier, isConstIdentifier));\n    }\n    array() {\n        const res = new ParseResults();\n        let elements = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OSQUARE)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            this.advance(res);\n            return res.success(new n.N_array(pos, []));\n        }\n        elements.push(res.register(this.expr()));\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ']', 'var', 'if', 'for', 'while', number, identifier, '+', '-', '(', '[' or '!' 2\"));\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            elements.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CSQUARE)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ']'\"));\n        this.advance(res);\n        return res.success(new n.N_array(pos, elements));\n    }\n    object() {\n        const res = new ParseResults();\n        let properties = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OBRACES)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '{\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_emptyObject(pos));\n        }\n        while (true) {\n            let keyType, key, value;\n            if (this.currentToken.type === tt.IDENTIFIER) {\n                keyType = 'id';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.STRING) {\n                keyType = 'string';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.OSQUARE) {\n                keyType = 'value';\n                this.advance(res);\n                key = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.CSQUARE)\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ']', got '${tokenTypeString[this.currentToken.type]}'`));\n                this.advance(res);\n            }\n            else\n                break;\n            if (this.currentToken.type === tt.COLON) {\n                this.advance(res);\n                value = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES)\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                if (this.currentToken.type === tt.COMMA)\n                    this.advance(res);\n            }\n            else {\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES)\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                if (keyType !== 'id')\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `You must specify a value when initialising an object literal with a key that is not an identifier.\n                        Try using \\`key: value\\` syntax.`));\n                this.reverse();\n                value = new n.N_variable(this.currentToken);\n                this.advance(res);\n                if (this.currentToken.type === tt.COMMA)\n                    this.advance(res);\n            }\n            properties.push([key, value]);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CBRACES)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier, ',' or '}'\"));\n        this.advance(res);\n        return res.success(new n.N_objectLiteral(pos, properties));\n    }\n    namespace() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_namespace(pos, new n.N_undefined()));\n        }\n        const statements = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        return res.success(new n.N_namespace(pos, statements));\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Lexer } from \"./parse/lexer\";\nimport { Parser } from \"./parse/parser\";\nimport { global, now, refreshPerformanceNow, runningInNode, setGlobalContext } from \"./constants\";\nimport { initialise } from \"./init\";\nimport { ESError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { interpretResult, Node } from \"./runtime/nodes\";\nimport { ESArray } from \"./runtime/primitiveTypes\";\nimport { Context } from \"./runtime/context\";\nimport addNodeLibs from \"./built-in/nodeLibs\";\nimport { libs as allLibs } from './constants';\nimport colours from './util/colours';\nexport { Context, colours };\nexport * from './runtime/primitiveTypes';\nexport * from './constants';\nexport * from './errors';\nexport * from './runtime/nodes';\nexport * from './util/util';\nexport * from './runtime/primitives/wrapStrip';\nexport * from './runtime/symbol';\nexport function init(printFunc = console.log, inputFunc, node = true, libs = { print: console.log }, context = new Context(), path = '') {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const res = initialise(context, printFunc, inputFunc);\n        if (res instanceof ESError) {\n            return res;\n        }\n        setGlobalContext(context);\n        (_a = libs['context']) !== null && _a !== void 0 ? _a : (libs['context'] = context);\n        if (path) {\n            context.path = path;\n        }\n        if (libs.print) {\n            allLibs.print = libs.print;\n        }\n        if (node) {\n            runningInNode();\n            yield refreshPerformanceNow(true);\n            addNodeLibs(libs, context);\n        }\n    });\n}\nexport function run(msg, { env = global, measurePerformance = false, fileName = '(unknown)', currentDir = '' } = {}) {\n    if (currentDir) {\n        env.path = currentDir;\n    }\n    Node.maxTime = 0;\n    Node.totalTime = 0;\n    Node.interprets = 0;\n    const timeData = {\n        total: 0,\n        lexerTotal: 0,\n        parserTotal: 0,\n        interpretTotal: 0,\n        nodeMax: 0,\n        nodeAvg: 0,\n        nodeTotal: 0,\n        interprets: 0,\n    };\n    let start = now();\n    if (!env.root.initialisedAsGlobal) {\n        const res = new interpretResult();\n        res.error = new ESError(Position.unknown, 'Uninitialised', 'Global context has not been initialised with global values');\n        return res;\n    }\n    const lexer = new Lexer(msg, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        const res_ = new interpretResult();\n        res_.error = lexerRes;\n        return res_;\n    }\n    timeData.lexerTotal = now() - start;\n    start = now();\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        const res_ = new interpretResult();\n        res_.error = res.error;\n        return res_;\n    }\n    timeData.parserTotal = now() - start;\n    start = now();\n    if (!res.node) {\n        const res = new interpretResult();\n        res.val = new ESArray([]);\n        return res;\n    }\n    const finalRes = res.node.interpret(env);\n    timeData.interpretTotal = now() - start;\n    timeData.total = now() - start;\n    timeData.nodeMax = Node.maxTime;\n    timeData.nodeTotal = Node.totalTime;\n    timeData.nodeAvg = Node.totalTime / Node.interprets;\n    timeData.interprets = Node.interprets;\n    if (measurePerformance) {\n        console.log(timeData);\n    }\n    return Object.assign(Object.assign({}, finalRes), { timeData });\n}\n","import { Position } from \"../position\";\nimport { Context } from \"../runtime/context\";\nimport { ESError, ImportError } from \"../errors\";\nimport { ESFunction, ESNamespace, ESObject, ESString, types } from '../runtime/primitiveTypes';\nimport { str } from \"../util/util\";\nimport { run } from \"../index\";\nimport { addModuleFromObj, getModule, moduleExist } from './builtInModules';\nimport { global, importCache } from \"../constants\";\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nfunction addNodeLibs(options, context) {\n    const { fs, path } = options;\n    for (let libName in options) {\n        if (options.hasOwnProperty(libName)) {\n            addModuleFromObj(libName, new ESJSBinding(options[libName], libName));\n        }\n    }\n    context.set('import', new ESFunction(({ context }, rawPath) => {\n        let scriptPath = str(rawPath);\n        if (moduleExist(scriptPath)) {\n            return getModule(scriptPath);\n        }\n        scriptPath = path.join(context.path, scriptPath);\n        if (scriptPath in importCache) {\n            return importCache[scriptPath];\n        }\n        try {\n            if (!fs.existsSync(scriptPath)) {\n                if (fs.existsSync('./particles/' + scriptPath)) {\n                    if (fs.existsSync('particles/' + scriptPath + '/main.es')) {\n                        scriptPath = 'particles/' + scriptPath + '/main.es';\n                    }\n                    else {\n                        return new ESError(Position.unknown, 'ImportError', `Module '${scriptPath}' has no entry point. Requires 'main.es'.`);\n                    }\n                }\n                else {\n                    return new ESError(Position.unknown, 'ImportError', `Can't find file '${scriptPath}' to import.`);\n                }\n            }\n            const exDir = path.dirname(scriptPath);\n            const code = fs.readFileSync(scriptPath, 'utf-8');\n            const env = new Context();\n            env.parent = global;\n            env.path = exDir;\n            const n = new ESNamespace(new ESString(scriptPath), {});\n            importCache[scriptPath] = n;\n            const res = run(code, {\n                env,\n                measurePerformance: false,\n                fileName: scriptPath,\n                currentDir: exDir,\n            });\n            n.__value__ = env.getSymbolTableAsDict();\n            if (res.error) {\n                return res.error;\n            }\n            return n;\n        }\n        catch (E) {\n            return new ESError(Position.unknown, 'ImportError', E.toString());\n        }\n    }, [{ name: 'path', type: types.string }], 'import', undefined, types.object), {\n        forceThroughConst: true,\n        isConstant: true\n    });\n    context.setOwn('open', new ESFunction(({ context }, path_, encoding_) => {\n        const path = str(path_);\n        const encoding = str(encoding_) || 'utf-8';\n        if (!fs.existsSync(path)) {\n            return new ImportError(Position.unknown, path);\n        }\n        return new ESObject({\n            str: new ESFunction(({ context }) => {\n                return new ESString(fs.readFileSync(context.path + path, encoding));\n            }, [], 'str', undefined, types.string),\n            write: new ESFunction(({ context }, data) => {\n                fs.writeFileSync(context.path + path, str(data));\n            }, [{ name: 'path', type: types.string }]),\n            append: new ESFunction(({ context }, data) => {\n                fs.appendFileSync(context.path + path, str(data));\n            }, [{ name: 'path', type: types.string }]),\n        });\n    }));\n}\nexport default addNodeLibs;\n"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Position","constructor","idx","ln","col","file","advance","currentChar","clone","str","isUnknown","unknown","digits","identifierChars","singleLineComment","multiLineCommentStart","multiLineCommentEnd","global","setGlobalContext","c","stringSurrounds","IS_NODE_INSTANCE","window","runningInNode","print","console","log","KEYWORDS","now","refreshPerformanceNow","thisArg","_arguments","generator","Date","performance","e","P","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","importCache","tokenType","tt","tokenTypeString","NUMBER","STRING","ENDSTATEMENT","IDENTIFIER","KEYWORD","COMMA","OBRACES","CBRACES","OPAREN","CPAREN","OSQUARE","CSQUARE","ASSIGN","ADD","SUB","MUL","DIV","POW","EQUALS","NOTEQUALS","NOT","GT","LT","GTE","LTE","AND","OR","COLON","DOT","EOF","BITWISE_AND","BITWISE_OR","BITWISE_NOT","singleCharTokens","doubleCharTokens","tripleCharTokens","primitiveMethods","types","ESPrimitive","type","any","self","isa","props","ESBoolean","__type__","is","valueOf","__value__","typeName","__name__","hasProperty","describe","info","isBuiltIn","description","detail","res","strip","TypeError","assign","__add__","n","InvalidOperationError","__subtract__","__multiply__","__divide__","__pow__","__eq__","__gt__","__lt__","__and__","__or__","__bool__","__setProperty__","__call__","parameters","ESErrorPrimitive","error","ESError","super","__getProperty__","val","ESFunction","wrap","IndexError","cast","ESString","bool","dealWithExtends","context","class_","instance","this_","callContext","ESType","superFunc","args","newContext","Context","parent","__extends__","_a","initFunc","__init__","__closure__","res_","undefined","setRes","setOwn","createInstance","params","runInit","on","_b","__isPrimitive__","length","ESUndefined","ESArray","ESNumber","ESObject","method","__methods__","methodClone","name","indexOf","__instances__","push","isPrimitive","includesType","t","_c","_d","_e","_f","equals","number","string","array","object","boolean","substr","keys","k","thisElement","nElement","newOb","keysToRemove","Array","isArray","toClone","map","s","ESNamespace","mutable","slice","symbol","isAccessible","v","isConstant","ESJSBinding","functionsTakeProps","JSON","stringify","func","arguments_","returnType","closure","path","fn","max","Math","i","arg","forceThroughConst","generateESFunctionCallContext","Node","interpret","funcReturn","callNode","callNative","defaultValue","required","toString","pow","Boolean","helpLink","values","len","add","splice","contains","element","newArr","num","parseFloat","isNaN","split","repeat","strToInsert","firstPart","lastPart","ESSymbol","identifier","options","thing","Number","String","m","a","codes","red","yellow","green","cyan","blue","grey","code","builtInFunctions","returns","msgs","things","out","indent","total","filter","entries","contents","id","has","set","global_","time","cb","sleep","details","parse","json","modules","ascii","asciiToChar","fromCharCode","charToAscii","char","charCodeAt","processedModules","initModules","thens","domRes","InvalidRuntimeError","w","$","document","ReferenceError","dom","processRawModule","moduleDict","moduleRaw","moduleExist","getModule","processed","initialise","globalContext","printFunc","inputFunc","rawUrl","callback","url","fetch","text","env","run","ImportError","getSymbolTableAsDict","E","msg","cbRaw","builtIn","globalConstants","constant","load","initModRes","initialisedAsGlobal","symbolTable","deleted","path_","parent_","hasOwn","getSymbol","getRawSymbolTableAsDict","symbols","remove","clear","resetAsGlobal","deepClone","interpretArgument","typeRes","defaultValRes","interpretResult","shouldBreak","shouldContinue","pos","isTerminal","start","interpret_","interprets","totalTime","maxTime","N_binOp","left","opTok","right","l","r","lt","eq","gt","InvalidSyntaxError","N_unaryOp","numVal","abs","N_varAssign","varNameTok","assignType","isGlobal","isLocal","isDeclaration","N_primWrapper","currentVal","newVal","assignVal","N_if","comparison","ifTrue","ifFalse","compRes","N_while","loop","shouldLoop","potentialError","N_for","body","isGlobalIdentifier","isConstIdentifier","isGlobalId","isConstId","_g","_h","iteration","N_array","items","shouldClone","interpreted","item","N_objectLiteral","properties","keyNode","valueNode","N_emptyObject","N_statements","last","N_functionCall","to","arguments","traceback","position","line","join","N_functionDefinition","argNames","returnTypeRes","N_return","N_yield","N_indexed","base","index","baseRes","indexRes","valRes","N_class","methods","extends_","init","instances","extendsRes","initRes","N_namespace","statements","N_number","N_string","N_variable","N_undefined","N_break","N_continue","hash","WeakMap","Function","create","getPrototypeOf","Map","from","Set","depth","substring","ms","setTimeout","replace","validURI","test","colouredStr","reverse","IllegalCharError","ExpectedCharError","expectedType","actualType","ref","op","TestFailed","Token","matches","Lexer","program","fileName","generate","tokens","includes","makeNumber","multiLineComment","makeIdentifier","makeString","possibleAssignFirstChar","token","unknownChar","numStr","dotCount","strClose","idStr","posStart","tokType","triple","double","ParseResults","advanceCount","lastRegisteredAdvanceCount","reverseCount","registerAdvance","register","node","tryRegister","success","failure","Parser","tokenIdx","currentToken","amount","consume","errorMsg","clearEndStatements","useArray","firstStatement","statement","moreStatements","newLineCount","expr","exprRes","atom","tok","atomIdentifier","arrayExpr","objectExpr","ifExpr","prevNode","functionCall","tempNode","makeFunctionCall","makeIndex","power","binOp","factor","term","arithmeticExpr","comparisonExpr","initiateVar","whileExpr","forExpr","funcExpr","classExpr","namespace","ops","funcB","typeExpr","isConst","varName","bracesExp","addEndStatement","condition","parameter","funcCore","param","methodId","elements","keyType","libs","fs","libName","raw","addModule","rawPath","scriptPath","existsSync","exDir","dirname","readFileSync","measurePerformance","currentDir","encoding_","encoding","write","data","writeFileSync","append","appendFileSync","timeData","lexerTotal","parserTotal","interpretTotal","nodeMax","nodeAvg","nodeTotal","lexerRes","finalRes"],"sourceRoot":""}