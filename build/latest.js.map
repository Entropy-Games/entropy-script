{"version":3,"file":"2.17.1.js","mappings":"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","sources":["webpack://es/webpack/universalModuleDefinition","webpack://es/webpack/bootstrap","webpack://es/webpack/runtime/define property getters","webpack://es/webpack/runtime/hasOwnProperty shorthand","webpack://es/webpack/runtime/make namespace object","webpack://es/./src/position.ts","webpack://es/./src/constants.ts","webpack://es/./src/runtime/primitives/esprimitive.ts","webpack://es/./src/runtime/primitives/eserrorprimitive.ts","webpack://es/./src/runtime/primitives/esundefined.ts","webpack://es/./src/runtime/primitives/esobject.ts","webpack://es/./src/runtime/primitives/esfunction.ts","webpack://es/./src/runtime/functionCaller.ts","webpack://es/./src/runtime/context.ts","webpack://es/./src/runtime/primitives/esnamespace.ts","webpack://es/./src/runtime/primitives/esjsbinding.ts","webpack://es/./src/runtime/primitiveTypes.ts","webpack://es/./src/runtime/instantiator.ts","webpack://es/./src/runtime/primitives/estype.ts","webpack://es/./src/runtime/primitives/esnumber.ts","webpack://es/./src/runtime/primitives/esboolean.ts","webpack://es/./src/runtime/primitives/esarray.ts","webpack://es/./src/runtime/primitives/esstring.ts","webpack://es/./src/runtime/symbol.ts","webpack://es/./src/runtime/primitives/wrapStrip.ts","webpack://es/./src/util/colours.ts","webpack://es/./src/built-in/built-in-modules/ascii.ts","webpack://es/./src/built-in/built-in-modules/json.ts","webpack://es/./src/config.ts","webpack://es/./src/built-in/builtInModules.ts","webpack://es/./src/built-in/builtInFunctions.ts","webpack://es/./src/init.ts","webpack://es/./src/built-in/globalConstants.ts","webpack://es/./src/built-in/built-in-modules/time.ts","webpack://es/./src/built-in/built-in-modules/dom.ts","webpack://es/./src/runtime/argument.ts","webpack://es/./src/runtime/nodes.ts","webpack://es/./src/util/util.ts","webpack://es/./src/errors.ts","webpack://es/./src/parse/tokens.ts","webpack://es/./src/parse/lexer.ts","webpack://es/./src/parse/parser.ts","webpack://es/./src/index.ts","webpack://es/./src/built-in/nodeLibs.ts","webpack://es/./src/built-in/compiledSTD/std.txt.js","webpack://es/./src/built-in/compiledSTD/std.txt.py"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"es\"] = factory();\n\telse\n\t\troot[\"es\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Position {\n    constructor(idx, ln, col, file = '(unknown)') {\n        this.idx = idx;\n        this.ln = ln;\n        this.col = col;\n        this.file = file;\n    }\n    advance(currentChar = '') {\n        this.idx++;\n        this.col++;\n        if (currentChar === '\\n') {\n            this.ln++;\n            this.col = 0;\n        }\n        return this;\n    }\n    get clone() {\n        return new Position(this.idx, this.ln, this.col, this.file);\n    }\n    get str() {\n        return `File ${this.file}, ${this.ln + 1}:${this.col + 1}`;\n    }\n    get isUnknown() {\n        return this.idx === -2;\n    }\n    static get void() {\n        return new Position(-2, -2, -2, '(unknown)');\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport PACKAGE_JSON from '../package.json';\nexport const digits = '0123456789';\nexport const identifierChars = '_$abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nexport const singleLineComment = '//';\nexport const multiLineCommentStart = '/*';\nexport const multiLineCommentEnd = '*/';\nexport let global;\nexport const setGlobalContext = (c) => void (global = c);\nexport const stringSurrounds = ['\\'', '`', '\"'];\nexport let IS_NODE_INSTANCE = typeof window === 'undefined';\nexport const runningInNode = () => void (IS_NODE_INSTANCE = true);\nexport const VAR_DECLARE_KEYWORDS = ['var', 'let', 'global'];\nexport const VERSION = PACKAGE_JSON['version'];\nexport const configFileName = 'esconfig.json';\nexport const VALID_FILE_ENCODINGS = [\n    'utf8', 'ucs2', 'utf16le', 'latin1',\n    'ascii', 'base64', 'base64url', 'hex'\n];\nexport const libs = {\n    print: console.log\n};\nexport const catchBlockErrorSymbolName = 'err';\nexport const KEYWORDS = [\n    'var',\n    'let',\n    'global',\n    'local',\n    'mutable',\n    'const',\n    'if',\n    'else',\n    'while',\n    'for',\n    'in',\n    'continue',\n    'break',\n    'func',\n    'return',\n    'yield',\n    'class',\n    'extends',\n    'namespace',\n    'export',\n    'try',\n    'catch'\n];\nexport let now = () => 0;\nexport function refreshPerformanceNow(IS_NODE_INSTANCE) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (IS_NODE_INSTANCE) {\n            now = () => Date.now();\n        }\n        else {\n            now = () => {\n                try {\n                    return performance === null || performance === void 0 ? void 0 : performance.now();\n                }\n                catch (e) {\n                    return 0;\n                }\n            };\n        }\n    });\n}\nrefreshPerformanceNow(IS_NODE_INSTANCE);\nexport var tokenType;\n(function (tokenType) {\n    tokenType[tokenType[\"NUMBER\"] = 0] = \"NUMBER\";\n    tokenType[tokenType[\"STRING\"] = 1] = \"STRING\";\n    tokenType[tokenType[\"ENDSTATEMENT\"] = 2] = \"ENDSTATEMENT\";\n    tokenType[tokenType[\"IDENTIFIER\"] = 3] = \"IDENTIFIER\";\n    tokenType[tokenType[\"KEYWORD\"] = 4] = \"KEYWORD\";\n    tokenType[tokenType[\"COMMA\"] = 5] = \"COMMA\";\n    tokenType[tokenType[\"ASSIGN\"] = 6] = \"ASSIGN\";\n    tokenType[tokenType[\"ADD\"] = 7] = \"ADD\";\n    tokenType[tokenType[\"SUB\"] = 8] = \"SUB\";\n    tokenType[tokenType[\"MUL\"] = 9] = \"MUL\";\n    tokenType[tokenType[\"DIV\"] = 10] = \"DIV\";\n    tokenType[tokenType[\"POW\"] = 11] = \"POW\";\n    tokenType[tokenType[\"MOD\"] = 12] = \"MOD\";\n    tokenType[tokenType[\"OPAREN\"] = 13] = \"OPAREN\";\n    tokenType[tokenType[\"CPAREN\"] = 14] = \"CPAREN\";\n    tokenType[tokenType[\"OBRACES\"] = 15] = \"OBRACES\";\n    tokenType[tokenType[\"CBRACES\"] = 16] = \"CBRACES\";\n    tokenType[tokenType[\"OSQUARE\"] = 17] = \"OSQUARE\";\n    tokenType[tokenType[\"CSQUARE\"] = 18] = \"CSQUARE\";\n    tokenType[tokenType[\"EQUALS\"] = 19] = \"EQUALS\";\n    tokenType[tokenType[\"NOTEQUALS\"] = 20] = \"NOTEQUALS\";\n    tokenType[tokenType[\"NOT\"] = 21] = \"NOT\";\n    tokenType[tokenType[\"GT\"] = 22] = \"GT\";\n    tokenType[tokenType[\"LT\"] = 23] = \"LT\";\n    tokenType[tokenType[\"GTE\"] = 24] = \"GTE\";\n    tokenType[tokenType[\"LTE\"] = 25] = \"LTE\";\n    tokenType[tokenType[\"AND\"] = 26] = \"AND\";\n    tokenType[tokenType[\"OR\"] = 27] = \"OR\";\n    tokenType[tokenType[\"COLON\"] = 28] = \"COLON\";\n    tokenType[tokenType[\"DOT\"] = 29] = \"DOT\";\n    tokenType[tokenType[\"EOF\"] = 30] = \"EOF\";\n    tokenType[tokenType[\"PIPE\"] = 31] = \"PIPE\";\n    tokenType[tokenType[\"APMERSAND\"] = 32] = \"APMERSAND\";\n    tokenType[tokenType[\"BITWISE_NOT\"] = 33] = \"BITWISE_NOT\";\n})(tokenType || (tokenType = {}));\nexport let tt = tokenType;\nexport const tokenTypeString = {\n    [tt.NUMBER]: 'Number',\n    [tt.STRING]: 'String',\n    [tt.ENDSTATEMENT]: ';',\n    [tt.IDENTIFIER]: 'Identifier',\n    [tt.KEYWORD]: 'Keyword',\n    [tt.COMMA]: ',',\n    [tt.OBRACES]: '{',\n    [tt.CBRACES]: '}',\n    [tt.OPAREN]: '(',\n    [tt.CPAREN]: ')',\n    [tt.OSQUARE]: '[',\n    [tt.CSQUARE]: ']',\n    [tt.ASSIGN]: '=',\n    [tt.ADD]: '+',\n    [tt.SUB]: '-',\n    [tt.MUL]: '*',\n    [tt.DIV]: '/',\n    [tt.POW]: '^',\n    [tt.MOD]: '%',\n    [tt.EQUALS]: '==',\n    [tt.NOTEQUALS]: '!=',\n    [tt.NOT]: '!',\n    [tt.GT]: '>',\n    [tt.LT]: '<',\n    [tt.GTE]: '>=',\n    [tt.LTE]: '<=',\n    [tt.AND]: '&&',\n    [tt.OR]: '||',\n    [tt.COLON]: ':',\n    [tt.DOT]: '.',\n    [tt.EOF]: 'End of File',\n    [tt.APMERSAND]: '&',\n    [tt.PIPE]: '|',\n    [tt.BITWISE_NOT]: '~',\n};\nexport const singleCharTokens = {\n    '*': tt.MUL,\n    '/': tt.DIV,\n    '+': tt.ADD,\n    '-': tt.SUB,\n    '(': tt.OPAREN,\n    ')': tt.CPAREN,\n    '^': tt.POW,\n    '%': tt.MOD,\n    '{': tt.OBRACES,\n    '}': tt.CBRACES,\n    ',': tt.COMMA,\n    '[': tt.OSQUARE,\n    ']': tt.CSQUARE,\n    ';': tt.ENDSTATEMENT,\n    ':': tt.COLON,\n    '.': tt.DOT,\n    '=': tt.ASSIGN,\n    '>': tt.GT,\n    '<': tt.LT,\n    '!': tt.NOT,\n    '|': tt.PIPE,\n    '&': tt.APMERSAND,\n    '~': tt.BITWISE_NOT\n};\nexport const doubleCharTokens = {\n    '==': tt.EQUALS,\n    '!=': tt.NOTEQUALS,\n    '>=': tt.GTE,\n    '<=': tt.LTE,\n    '+=': tt.ASSIGN,\n    '-=': tt.ASSIGN,\n    '*=': tt.ASSIGN,\n    '/=': tt.ASSIGN,\n    '&&': tt.AND,\n    '||': tt.OR\n};\nexport const tripleCharTokens = {};\nexport const primitiveMethods = [\n    '__add__',\n    '__subtract__',\n    '__multiply__',\n    '__divide__',\n    '__pow__',\n    '__eq__',\n    '__gt__',\n    '__lt__',\n    '__and__',\n    '__or__',\n    '__pipe__',\n    '__ampersand__',\n    '__bool__',\n    '__setProperty__',\n    '__getProperty__',\n    '__call__',\n];\nexport const types = {};\n","import { InvalidOperationError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { str } from '../../util/util';\nimport { strip } from './wrapStrip';\nimport { types } from \"../../constants\";\nexport class ESPrimitive {\n    constructor(value, type = types.any) {\n        this.self = this;\n        this.isa = (props, type) => {\n            return type.type_check(props, this);\n        };\n        this.is = (props, obj) => {\n            return new ESBoolean(obj === this);\n        };\n        this.valueOf = () => this.__value__;\n        this.typeName = () => str(this.__type__);\n        this.has_property = (props, key) => new ESBoolean(this.hasOwnProperty(str(key)));\n        this.describe = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            this.info.description = str(info);\n        };\n        this.detail = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            const res = strip(info, props);\n            if (typeof res !== 'object') {\n                return new TypeError(Position.void, 'object', this.typeName(), str(this));\n            }\n            this.info = Object.assign(Object.assign({}, this.info), res);\n            this.info.isBuiltIn = false;\n        };\n        this.__type__ = type || this;\n        this.__value__ = value;\n        this.info = {};\n    }\n    __add__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __subtract__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __multiply__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __divide__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __pow__(props, n) {\n        return new InvalidOperationError('__pow__', this);\n    }\n    __mod__(props, n) {\n        return new InvalidOperationError('__mod__', this);\n    }\n    __eq__(props, n) {\n        return new InvalidOperationError('__eq__', this);\n    }\n    __gt__(props, n) {\n        return new InvalidOperationError('__gt__', this);\n    }\n    __lt__(props, n) {\n        return new InvalidOperationError('__lt__', this);\n    }\n    __and__(props, n) {\n        return new InvalidOperationError('__and__', this);\n    }\n    __or__(props, n) {\n        return new InvalidOperationError('__or__', this);\n    }\n    __bool__(props) {\n        return new InvalidOperationError('__bool__', this);\n    }\n    __pipe__(props, n) {\n        return new InvalidOperationError('__pipe__', this);\n    }\n    __ampersand__(props, n) {\n        return new InvalidOperationError('__ampersand__', this);\n    }\n    __set_property__(props, key, value) {\n        return new InvalidOperationError('__set_property__', this, `[${str(key)}] = ${str(value)}`);\n    }\n    __call__(props, ...parameters) {\n        return new InvalidOperationError('__call__', this);\n    }\n}\n","import { ESPrimitive } from './esprimitive';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nimport { str } from \"../../util/util\";\nimport { ESArray } from \"./esarray\";\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESErrorPrimitive extends ESPrimitive {\n    constructor(error = new ESError(Position.void, 'Unknown', 'Error not specified')) {\n        super(error, types.error);\n        this.__get_property__ = (props, key) => {\n            switch (str(key)) {\n                case 'name':\n                    return new ESString(this.valueOf().name);\n                case 'details':\n                    return new ESString(this.valueOf().details);\n                case 'traceback':\n                    return new ESArray(this.valueOf().traceback\n                        .map(s => new ESString(`${s.position.str} : ${s.line}`)));\n                default:\n                    if (this.self.hasOwnProperty(str(key))) {\n                        return wrap(this.self[str(key)], true);\n                    }\n                    return new IndexError(Position.void, key.valueOf(), this);\n            }\n        };\n        this.cast = () => new ESError(Position.void, 'TypeError', `Cannot cast type 'error'`);\n        this.str = () => new ESString(`<Error: ${this.valueOf().str}>`);\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(n instanceof ESErrorPrimitive &&\n                this.valueOf().constructor === n.valueOf().constructor);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.clone = () => new ESErrorPrimitive(this.valueOf());\n        this.type_check = this.__eq__;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { ESType, ESTypeIntersection, ESTypeUnion } from './estype';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { wrap } from \"./wrapStrip\";\nimport { types } from \"../../constants\";\nexport class ESUndefined extends ESPrimitive {\n    constructor() {\n        super(undefined, types.undefined);\n        this.cast = ({ context }, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber();\n                case types.string:\n                    return new ESString();\n                case types.array:\n                    return new ESArray();\n                case types.undefined:\n                    return new ESUndefined();\n                case types.type:\n                    return new ESType();\n                case types.error:\n                    return new ESErrorPrimitive();\n                case types.object:\n                case types.any:\n                    return new ESObject();\n                case types.function:\n                    return new ESFunction(() => { });\n                case types.boolean:\n                    return new ESBoolean();\n                default:\n                    if (!(type instanceof ESType)) {\n                        return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n                    }\n                    return type.__call__({ context });\n            }\n        };\n        this.str = () => new ESString('<Undefined>');\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(n instanceof ESUndefined ||\n                typeof n === 'undefined' ||\n                typeof n.valueOf() === 'undefined');\n        };\n        this.__bool__ = () => new ESBoolean();\n        this.bool = this.__bool__;\n        this.clone = () => new ESUndefined();\n        this.__get_property__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.type_check = this.__eq__;\n        this.info = {\n            name: 'undefined',\n            description: 'Not defined, not a value.',\n            file: 'built-in',\n            isBuiltIn: true\n        };\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { strip, wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESObject extends ESPrimitive {\n    constructor(val = {}) {\n        super(val, types.object);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => {\n            let val = str(this.valueOf());\n            if (val[val.length - 1] === '\\n') {\n                val = val.substr(0, val.length - 1);\n            }\n            return new ESString(`<ESObject ${val}>`);\n        };\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new ESBoolean();\n            }\n            if (n.keys.length !== this.keys.length) {\n                return new ESBoolean();\n            }\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const thisElement = this.valueOf()[key];\n                const nElement = n.valueOf()[key];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new TypeError(Position.void, 'object', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const res = this.__get_property__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            for (let k of n.keys) {\n                const key = k.valueOf();\n                if (newOb.hasOwnProperty(key)) {\n                    continue;\n                }\n                const res = n.__get_property__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            return new ESObject(newOb);\n        };\n        this.__subtract__ = (props, n) => {\n            let keysToRemove = [];\n            if (n instanceof ESString) {\n                keysToRemove = [str(n)];\n            }\n            else if (n instanceof ESArray) {\n                keysToRemove = strip(n, props);\n            }\n            else {\n                return new TypeError(Position.void, 'array | string', n.typeName().valueOf(), n);\n            }\n            if (!Array.isArray(keysToRemove)) {\n                return new TypeError(Position.void, 'array | string', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                if (keysToRemove.indexOf(key) === -1) {\n                    let res = this.__get_property__(props, k);\n                    if (res instanceof ESError) {\n                        return res;\n                    }\n                    newOb[key] = res;\n                }\n            }\n            return new ESObject(newOb);\n        };\n        this.__get_property__ = (props, k) => {\n            if (!(k instanceof ESString) && !(k instanceof ESNumber)) {\n                return new TypeError(Position.void, 'string | number', k.typeName(), str(k));\n            }\n            const key = k.valueOf();\n            if (this.valueOf().hasOwnProperty(key)) {\n                return this.valueOf()[key];\n            }\n            if (this.self.hasOwnProperty(key)) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new ESUndefined();\n        };\n        this.__set_property__ = ({}, key, value) => {\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.void, 'string', key.typeName(), str(key));\n            }\n            this.__value__[key.valueOf()] = value;\n        };\n        this.has_property = (props, k) => {\n            const key = str(k);\n            if (this.valueOf().hasOwnProperty(str(key))) {\n                return new ESBoolean(true);\n            }\n            return new ESBoolean(this.hasOwnProperty(key));\n        };\n        this.clone = () => {\n            const res = new ESObject();\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            res.__value__ = obj;\n            return res;\n        };\n        this.type_check = (props, n) => {\n            if (!(n instanceof ESObject)) {\n                return new ESBoolean();\n            }\n            if (Object.keys(this.valueOf()).length !== Object.keys(n.valueOf()).length) {\n                return new ESBoolean();\n            }\n            for (let key of Object.keys(this.valueOf())) {\n                if (!n.valueOf().hasOwnProperty(key) || !this.valueOf().hasOwnProperty(key)) {\n                    return new ESBoolean();\n                }\n                const thisType = this.valueOf()[key];\n                const nValue = n.valueOf()[key];\n                if (!thisType.type_check(props, nValue).valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n    }\n    get keys() {\n        return Object.keys(this.valueOf()).map(s => new ESString(s));\n    }\n    set keys(val) { }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESPrimitive } from './esprimitive';\nimport { global, types } from '../../constants';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { Context } from '../context';\nimport { call } from '../functionCaller';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESFunction extends ESPrimitive {\n    constructor(func = (() => { }), arguments_ = [], name = '(anon)', this_ = new ESObject(), returnType = types.any, closure) {\n        super(func, types.function);\n        this.cast = (props, type) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast type 'function'`);\n        };\n        this.clone = () => {\n            return new ESFunction(this.__value__, this.arguments_, this.name, this.this_, this.returnType, this.__closure__);\n        };\n        this.valueOf = () => this;\n        this.str = () => new ESString(`<Func: ${this.name}>`);\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESFunction))\n                return new ESBoolean(false);\n            return new ESBoolean(this.__value__ === n.__value__);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__call__ = ({ context }, ...params) => {\n            this.__closure__.path = context.path;\n            return call(this.__closure__, this, params);\n        };\n        this.__get_property__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.type_check = (props, n) => {\n            if (!(n instanceof ESFunction)) {\n                return new ESBoolean();\n            }\n            if (this.arguments_.length !== n.arguments_.length) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.arguments_.length; i++) {\n                if (!this.arguments_[i].type.type_check(props, n.arguments_[i].type).valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            const thisReturnVal = this.__call__(props);\n            if (thisReturnVal instanceof ESError) {\n                return thisReturnVal;\n            }\n            if (!thisReturnVal.__eq__(props, n.returnType).valueOf()) {\n                return new ESBoolean();\n            }\n            return new ESBoolean(true);\n        };\n        this.arguments_ = arguments_;\n        this.info.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        if (closure) {\n            this.__closure__ = closure;\n        }\n        else {\n            this.__closure__ = new Context();\n            this.__closure__.parent = global;\n        }\n        this.info.returnType = str(returnType);\n        this.info.args = arguments_.map(arg => ({\n            name: arg.name,\n            defaultValue: str(arg.defaultValue),\n            type: arg.type.info.name,\n            required: true\n        }));\n    }\n    get name() {\n        var _a;\n        return (_a = this.info.name) !== null && _a !== void 0 ? _a : '(anonymous)';\n    }\n    set name(v) {\n        this.info.name = v;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { str } from '../util/util';\nimport { Node } from \"./nodes\";\nimport { generateESFunctionCallContext } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { ESObject, ESPrimitive, ESUndefined } from \"./primitiveTypes\";\nfunction callNode(self, context, params, fn) {\n    var _a, _b;\n    const res = fn.interpret(context);\n    if (res.error)\n        return res.error;\n    if (res.funcReturn !== undefined) {\n        res.val = res.funcReturn;\n        res.funcReturn = undefined;\n    }\n    if (self.returnType.type_check({ context }, res.val).valueOf() === false) {\n        return new TypeError(Position.void, str(self.returnType), ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || 'undefined', (_b = res.val) === null || _b === void 0 ? void 0 : _b.str().valueOf(), '(from function return)');\n    }\n    if (res.val) {\n        return res.val;\n    }\n    else {\n        return new ESUndefined();\n    }\n}\nfunction callNative(self, context, params, fn) {\n    for (let i = params.length; i < fn.length; i++)\n        params.push(new ESUndefined());\n    const res = fn({\n        context\n    }, ...params);\n    if (res instanceof ESError || res instanceof ESPrimitive) {\n        return res;\n    }\n    return new ESUndefined();\n}\nexport function call(context, self, params) {\n    var _a;\n    let callContext = context;\n    context = self.__closure__;\n    context.path = callContext.path;\n    const fn = self.__value__;\n    const newContext = generateESFunctionCallContext(params, self, context);\n    if (newContext instanceof ESError) {\n        return newContext;\n    }\n    let this_ = (_a = self.this_) !== null && _a !== void 0 ? _a : new ESObject();\n    if (!(this_ instanceof ESObject)) {\n        return new TypeError(Position.void, 'object', typeof this_, this_, '\\'this\\' must be an object');\n    }\n    let setRes = newContext.setOwn('this', this_);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    if (fn instanceof Node) {\n        return callNode(self, newContext, params, fn);\n    }\n    else if (typeof fn === 'function') {\n        return callNative(self, newContext, params, fn);\n    }\n    else {\n        return new TypeError(Position.void, 'function', typeof fn);\n    }\n}\n","import { initialise } from \"../init\";\nimport { ESError, TypeError, ReferenceError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESPrimitive, ESUndefined } from \"./primitiveTypes\";\nimport { str } from \"../util/util\";\nimport { ESSymbol } from './symbol';\nimport chalk from \"../util/colours\";\nimport { types } from \"../constants\";\nexport class Context {\n    constructor() {\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        this.deleted = false;\n        this.path_ = '';\n    }\n    get path() {\n        if (this.path_ || !this.parent) {\n            return this.path_;\n        }\n        return this.parent.path;\n    }\n    set path(val) {\n        this.path_ = val;\n    }\n    get parent() {\n        return this.parent_;\n    }\n    set parent(val) {\n        if (val == this) {\n            console.error(chalk.red(`Setting context parent to self`));\n            return;\n        }\n        this.parent_ = val;\n    }\n    has(identifier) {\n        if (!identifier)\n            return false;\n        return this.get(identifier) !== undefined;\n    }\n    hasOwn(identifier) {\n        return this.symbolTable[identifier] instanceof ESSymbol;\n    }\n    get(identifier) {\n        let symbol = this.getSymbol(identifier);\n        if (symbol instanceof ESError || symbol == undefined) {\n            return symbol;\n        }\n        return symbol.value;\n    }\n    getRawSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key].value;\n        return symbols;\n    }\n    getSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key];\n        return symbols;\n    }\n    getSymbol(identifier) {\n        let symbol = this.symbolTable[identifier];\n        if (symbol !== undefined && !symbol.isAccessible)\n            return new TypeError(Position.void, 'assessable', 'inaccessible', symbol.identifier);\n        if (symbol === undefined && this.parent) {\n            let res = this.parent.getSymbol(identifier);\n            if (res instanceof ESError)\n                return res;\n            if (!res)\n                return new ReferenceError(Position.void, identifier);\n            symbol = res;\n        }\n        return symbol;\n    }\n    set(identifier, value, options = {}) {\n        let context = this;\n        if (options.global) {\n            context = this.root;\n        }\n        else {\n            while (!context.hasOwn(identifier) && context.parent !== undefined) {\n                context = context.parent;\n            }\n            if (!context.hasOwn(identifier)) {\n                context = this;\n            }\n        }\n        return context.setOwn(identifier, value, options);\n    }\n    setOwn(identifier, value, options = {}) {\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        if (options.global && !this.initialisedAsGlobal) {\n            options.global = false;\n        }\n        if (!options.forceThroughConst) {\n            let symbol = this.symbolTable[identifier];\n            if (symbol === null || symbol === void 0 ? void 0 : symbol.isConstant)\n                return new TypeError(Position.void, 'dynamic', 'constant', identifier);\n        }\n        this.symbolTable[identifier] = new ESSymbol(value, identifier, options);\n    }\n    remove(identifier) {\n        delete this.symbolTable[identifier];\n    }\n    clear() {\n        for (let symbol in this.symbolTable) {\n            this.remove(symbol);\n        }\n        this.parent = undefined;\n        this.deleted = true;\n    }\n    get root() {\n        let parent = this;\n        while (parent.parent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    get keys() {\n        return Object.keys(this.symbolTable);\n    }\n    resetAsGlobal() {\n        var _a, _b;\n        if (!this.initialisedAsGlobal)\n            return;\n        const printFunc = this.root.get('print');\n        const inputFunc = this.root.get('input');\n        if (!(printFunc instanceof ESPrimitive) || !(inputFunc instanceof ESPrimitive)) {\n            console.error('Error with print and input functions.');\n            return;\n        }\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        initialise(this, ((_a = printFunc.valueOf()) === null || _a === void 0 ? void 0 : _a.func) || console.log, ((_b = inputFunc.valueOf()) === null || _b === void 0 ? void 0 : _b.func) || (() => { }));\n    }\n    clone() {\n        const newContext = new Context();\n        newContext.parent = this.parent;\n        newContext.deleted = this.deleted;\n        newContext.initialisedAsGlobal = this.initialisedAsGlobal;\n        newContext.symbolTable = Object.assign(Object.assign({}, newContext.symbolTable), this.symbolTable);\n        return newContext;\n    }\n    deepClone() {\n        var _a;\n        let clone = this.clone();\n        clone.parent = (_a = clone.parent) === null || _a === void 0 ? void 0 : _a.deepClone();\n        return clone;\n    }\n    log() {\n        console.log('---- CONTEXT ----');\n        for (let key in this.symbolTable) {\n            const symbol = this.symbolTable[key];\n            let out = key;\n            if (symbol.isConstant)\n                out += ' (CONST)';\n            if (!symbol.isAccessible)\n                out += ' (INACCESSIBLE)';\n            out += ': ';\n            out += str(this.symbolTable[key].value);\n            console.log(out);\n        }\n        console.log('-----------------');\n    }\n}\nexport function generateESFunctionCallContext(params, self, parent) {\n    const newContext = new Context();\n    newContext.parent = parent;\n    let max = Math.max(params.length, self.arguments_.length);\n    for (let i = 0; i < max; i++) {\n        let value = new ESUndefined();\n        let type = types.any;\n        if (!self.arguments_[i]) {\n            continue;\n        }\n        const arg = self.arguments_[i];\n        if (params[i] instanceof ESPrimitive) {\n            type = params[i].__type__;\n            value = params[i];\n        }\n        const typeIncludes = arg.type.type_check({ context: parent }, params[i]);\n        if (typeIncludes instanceof ESError)\n            return typeIncludes;\n        if (!typeIncludes.valueOf()) {\n            return new TypeError(Position.void, str(arg.type), str(type), str(value));\n        }\n        newContext.setOwn(arg.name, value, {\n            forceThroughConst: true\n        });\n    }\n    let setRes = newContext.setOwn('args', new ESArray(params), {\n        forceThroughConst: true\n    });\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    return newContext;\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESNamespace extends ESPrimitive {\n    constructor(name, value, mutable = false) {\n        super(value, types.object);\n        this.cast = (props) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast type 'namespace'`);\n        };\n        this.clone = () => {\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            return new ESNamespace(this.name, obj);\n        };\n        this.str = () => {\n            const keys = Object.keys(this.valueOf());\n            return new ESString(`<Namespace ${str(this.name)}${keys.length > 0 ? ': ' : ''}${keys.slice(0, 5)}${keys.length >= 5 ? '...' : ''}>`);\n        };\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__get_property__ = (props, key) => {\n            if (key instanceof ESString && this.valueOf().hasOwnProperty(key.valueOf())) {\n                const symbol = this.valueOf()[key.valueOf()];\n                if (symbol.isAccessible) {\n                    return symbol.value;\n                }\n            }\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.void, 'string', key.typeName());\n            }\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this.self);\n        };\n        this.type_check = this.__eq__;\n        this.info.name = str(name);\n        this.mutable = mutable;\n    }\n    get name() {\n        return new ESString(this.info.name);\n    }\n    set name(v) {\n        this.info.name = v.valueOf();\n    }\n    __set_property__(props, key, value) {\n        if (!(key instanceof ESString)) {\n            return new TypeError(Position.void, 'string', key.typeName().valueOf(), str(key));\n        }\n        let idx = str(key);\n        if (!this.mutable) {\n            return new TypeError(Position.void, 'mutable', 'immutable', `${str(this.name)}`);\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        const symbol = this.__value__[idx];\n        if (!symbol) {\n            return new ESError(Position.void, 'SymbolError', `Symbol ${idx} is not declared in namespace ${str(this.name)}.`);\n        }\n        if (symbol.isConstant) {\n            return new TypeError(Position.void, 'mutable', 'immutable', `${str(this.name)}[${idx}]`);\n        }\n        if (!symbol.isAccessible) {\n            return new TypeError(Position.void, 'accessible', 'inaccessible', `${str(this.name)}[${idx}]`);\n        }\n        symbol.value = value;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { strip, wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESJSBinding extends ESPrimitive {\n    constructor(value, name = '<AnonNative>', functionsTakeProps = false) {\n        super(value, types.object);\n        this.cast = (props) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast native object`);\n        };\n        this.clone = () => new ESJSBinding(this.__value__);\n        this.str = () => {\n            return new ESString(str(this.__value__));\n        };\n        this.__eq__ = ({}, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__get_property__ = (props, k) => {\n            const key = str(k);\n            const val = this.__value__;\n            const res = val[key];\n            if (res === undefined) {\n                if (this.self.hasOwnProperty(key)) {\n                    return wrap(this.self[str(key)], true);\n                }\n                return new IndexError(Position.void, key, this);\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            if (typeof res === 'function') {\n                const fTakesProps = this.functionsTakeProps;\n                return new ESFunction((props, ...args) => {\n                    let res;\n                    if (fTakesProps) {\n                        try {\n                            res = new val[key](props, ...args);\n                        }\n                        catch (_a) {\n                            try {\n                                res = val[key](props, ...args);\n                            }\n                            catch (e) {\n                                return new ESError(Position.void, e.name, e.toString());\n                            }\n                        }\n                    }\n                    else {\n                        try {\n                            res = new val[key](...args.map(o => strip(o, props)));\n                        }\n                        catch (_b) {\n                            try {\n                                res = val[key](...args.map(o => strip(o, props)));\n                            }\n                            catch (e) {\n                                return new ESError(Position.void, e.name, e.toString());\n                            }\n                        }\n                    }\n                    return wrap(res);\n                });\n            }\n            return wrap(res);\n        };\n        this.__call__ = (props, ...args) => {\n            if (typeof this.__value__ !== 'function') {\n                return new TypeError(Position.void, 'function', typeof this.__value__, str(this));\n            }\n            let res;\n            if (this.functionsTakeProps) {\n                try {\n                    res = new this.__value__(props, ...args);\n                }\n                catch (_a) {\n                    try {\n                        res = this.__value__(props, ...args);\n                    }\n                    catch (e) {\n                        return new ESError(Position.void, e.name, e.toString());\n                    }\n                }\n            }\n            else {\n                try {\n                    res = new this.__value__(...args.map(o => strip(o, props)));\n                }\n                catch (_b) {\n                    try {\n                        res = this.__value__(...args.map(o => strip(o, props)));\n                    }\n                    catch (e) {\n                        return new ESError(Position.void, e.name, e.toString());\n                    }\n                }\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            return wrap(res);\n        };\n        this.has_property = (props, key) => {\n            return new ESBoolean(!(this.__get_property__(props, key) instanceof ESError));\n        };\n        this.type_check = this.__eq__;\n        this.info.name = str(name);\n        this.functionsTakeProps = functionsTakeProps;\n    }\n    __set_property__(props, k, value) {\n        const key = str(k);\n        const val = this.__value__;\n        if (this.self.hasOwnProperty(key)) {\n            this.self[str(key)] = value;\n            return;\n        }\n        val[key] = strip(value, props);\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESPrimitive } from './primitives/esprimitive';\nimport { ESArray } from './primitives/esarray';\nimport { ESBoolean } from './primitives/esboolean';\nimport { ESErrorPrimitive } from './primitives/eserrorprimitive';\nimport { ESFunction } from './primitives/esfunction';\nimport { ESNumber } from './primitives/esnumber';\nimport { ESObject } from './primitives/esobject';\nimport { ESString } from './primitives/esstring';\nimport { ESType } from './primitives/estype';\nimport { ESUndefined } from './primitives/esundefined';\nimport { ESNamespace } from './primitives/esnamespace';\nimport { ESJSBinding } from \"./primitives/esjsbinding\";\nimport { types } from \"../constants\";\nexport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNumber, ESPrimitive, ESString, ESObject, ESType, ESUndefined, ESNamespace, ESJSBinding };\nexport function initPrimitiveTypes() {\n    types.type = new ESType(true, 'Type');\n    types.undefined = new ESType(true, 'Undefined');\n    types.string = new ESType(true, 'String');\n    types.array = new ESType(true, 'Array');\n    types.number = new ESType(true, 'Number');\n    types.any = new ESType(true, 'Any');\n    types.function = new ESType(true, 'Function');\n    types.bool = new ESType(true, 'Boolean');\n    types.object = new ESType(true, 'Object');\n    types.error = new ESType(true, 'Error');\n    types.any.info = {\n        name: 'any',\n        description: 'Matches any other type',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.number.info = {\n        name: 'any',\n        description: 'The ES Number type. Is a a double-precision 64-bit binary format IEEE 754 value, like double in Java and C#',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.string.info = {\n        name: 'string',\n        description: 'The ES String type. Holds an array of characters, and can be defined with any of \\', \" and `. Can be indexed like an array.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.bool.info = {\n        name: 'bool',\n        description: 'The ES Bool type. Exactly two instances exist, true and false.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.function.info = {\n        name: 'function',\n        description: 'The ES Function type. Is a block of code which executes when called and takes in 0+ parameters.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.array.info = {\n        name: 'array',\n        description: 'The ES Array type. Defines a set of items of any type which can be accessed by an index with [].',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.object.info = {\n        name: 'object',\n        description: 'The ES Object type. Similar to JS objects or python dictionaries.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.error.info = {\n        name: 'error',\n        description: 'The ES Error type. Call to throw an error.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.type.info = {\n        name: 'type',\n        description: 'The ES Type type. Call to get the type of a value at a string.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n}\n","import { primitiveMethods } from '../constants';\nimport { Context } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESFunction, ESNumber, ESObject, ESString, ESType, ESUndefined } from \"./primitiveTypes\";\nfunction dealWithExtends(context, class_, instance, this_, callContext) {\n    if (!(class_ instanceof ESType)) {\n        return new TypeError(Position.void, 'Type', typeof class_, class_);\n    }\n    const superFunc = new ESFunction(({ context }, ...args) => {\n        const newContext = new Context();\n        newContext.parent = context;\n        if (class_.__extends__) {\n            let _a = dealWithExtends(newContext, class_.__extends__, instance, this_, callContext);\n            if (_a instanceof ESError) {\n                return _a;\n            }\n        }\n        const initFunc = class_ === null || class_ === void 0 ? void 0 : class_.__init__;\n        if (!initFunc) {\n            return;\n        }\n        initFunc.this_ = this_;\n        initFunc.__closure__ = newContext;\n        const res_ = initFunc.__call__({ context: newContext }, ...args);\n        if (res_ instanceof ESError) {\n            return res_;\n        }\n    }, undefined, 'super', this_);\n    let setRes = context.setOwn('super', superFunc);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    const res = createInstance(class_, { context }, [], false, instance);\n    if (res instanceof ESError) {\n        return res;\n    }\n}\nexport function createInstance(type, { context }, params, runInit = true, on = {}) {\n    var _b;\n    if (type.primitive) {\n        if (params.length < 1) {\n            return new ESUndefined();\n        }\n        switch (type.__name__) {\n            case 'Undefined':\n            case 'Type':\n                if (params.length < 1) {\n                    return new ESType();\n                }\n                else {\n                    return new ESString(params[0].typeName());\n                }\n            case 'String':\n                return new ESString(params[0].str().valueOf());\n            case 'Array':\n                return new ESArray(params);\n            case 'Number':\n                return new ESNumber(params[0].valueOf());\n            case 'Function':\n                return new ESFunction(params[0].valueOf());\n            case 'Boolean':\n                return new ESBoolean(params[0].bool().valueOf());\n            default:\n                return wrap(params[0]);\n        }\n    }\n    const newContext = new Context();\n    newContext.parent = (_b = type.__init__) === null || _b === void 0 ? void 0 : _b.__closure__;\n    const instance = new ESObject();\n    if (type.__extends__) {\n        let res = dealWithExtends(newContext, type.__extends__, on, instance, context);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__value__ = on;\n    for (let method of type.__methods__) {\n        const methodClone = method.clone();\n        methodClone.this_ = instance;\n        on[method.name] = methodClone;\n        if (primitiveMethods.indexOf(method.name) !== -1) {\n            instance[method.name] = methodClone.__call__;\n        }\n    }\n    if (runInit && type.__init__) {\n        type.__init__.this_ = instance;\n        type.__init__.__closure__ = newContext;\n        const res = type.__init__.__call__({ context: newContext }, ...params);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__type__ = type;\n    type.__instances__.push(instance);\n    return instance;\n}\n","import { ESPrimitive } from './esprimitive';\nimport { ESError, InvalidOperationError, TypeError } from '../../errors';\nimport { createInstance } from '../instantiator';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nimport { Position } from \"../../position\";\nimport { str } from \"../../util/util\";\nimport { types } from \"../../constants\";\nimport { ESTypeArray } from \"./esarray\";\nexport class ESType extends ESPrimitive {\n    constructor(isPrimitive = false, name = '(anon)', __methods__ = [], __extends__, __init__) {\n        super(undefined, types === null || types === void 0 ? void 0 : types.type);\n        this.__instances__ = [];\n        this.clone = () => {\n            return new ESType(this.primitive, this.__name__, this.__methods__, this.__extends__, this.__init__);\n        };\n        this.isa = (props, type) => {\n            return new ESBoolean(type === types.type);\n        };\n        this.cast = (props, type) => {\n            return new InvalidOperationError('cast', this);\n        };\n        this.type_check = (props, n) => {\n            var _a;\n            if (!n)\n                return new ESBoolean();\n            let t = n.__type__;\n            if (this === types.any ||\n                t === types.any ||\n                this === t) {\n                return new ESBoolean(true);\n            }\n            while (t instanceof ESType) {\n                if (((_a = t.__extends__) === null || _a === void 0 ? void 0 : _a.__eq__(props, this).valueOf()) === true) {\n                    return new ESBoolean(true);\n                }\n                if (!t.__extends__) {\n                    break;\n                }\n                t = t.__extends__;\n            }\n            return new ESBoolean();\n        };\n        this.__eq__ = (props, t) => {\n            return new ESBoolean(t === this);\n        };\n        this.__call__ = (props, ...params) => {\n            return createInstance(this, props, params || []);\n        };\n        this.str = () => new ESString(this.__name__);\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__get_property__ = (props, k) => {\n            if (!(k instanceof ESString)) {\n                if (this === types.array) {\n                    return new ESTypeArray(k);\n                }\n                return new TypeError(Position.void, 'string', k.typeName(), str(k));\n            }\n            const key = k.valueOf();\n            if (this.self.hasOwnProperty(key)) {\n                return wrap(this.self[key], true);\n            }\n            return new ESTypeArray(k);\n        };\n        this.primitive = isPrimitive;\n        this.__name__ = name;\n        this.info.name = name;\n        this.__extends__ = __extends__;\n        this.__methods__ = __methods__;\n        if (__init__) {\n            __init__.name = name;\n            this.__init__ = __init__;\n        }\n        if (!types.type) {\n            this.__type__ = this;\n        }\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\nexport class ESTypeUnion extends ESType {\n    constructor(left, right) {\n        super(false, `(${str(left)}) | (${str(right)})`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.type_check = (props, t) => {\n            const leftRes = this.__left__.type_check(props, t);\n            const rightRes = this.__right__.type_check(props, t);\n            if (leftRes instanceof ESError)\n                return leftRes;\n            if (rightRes instanceof ESError)\n                return rightRes;\n            return new ESBoolean(leftRes.valueOf() ||\n                rightRes.valueOf());\n        };\n        this.clone = () => {\n            return new ESTypeUnion(this.__left__, this.__right__);\n        };\n        this.__eq__ = (props, t) => {\n            return new ESBoolean(t instanceof ESTypeUnion &&\n                this.__left__.__eq__(props, t.__left__).valueOf() === true &&\n                this.__right__.__eq__(props, t.__right__).valueOf() === true);\n        };\n        this.__left__ = left;\n        this.__right__ = right;\n    }\n}\nexport class ESTypeIntersection extends ESType {\n    constructor(left, right) {\n        super(false, `(${str(left)}) & (${str(right)})`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.type_check = (props, t) => {\n            const leftRes = this.__left__.type_check(props, t);\n            const rightRes = this.__right__.type_check(props, t);\n            if (leftRes instanceof ESError)\n                return leftRes;\n            if (rightRes instanceof ESError)\n                return rightRes;\n            return new ESBoolean(leftRes.valueOf() &&\n                rightRes.valueOf());\n        };\n        this.clone = () => {\n            return new ESTypeIntersection(this.__left__, this.__right__);\n        };\n        this.__eq__ = (props, t) => {\n            return new ESBoolean(t instanceof ESTypeIntersection &&\n                this.__left__.__eq__(props, t.__left__).valueOf() === true &&\n                this.__right__.__eq__(props, t.__right__).valueOf() === true);\n        };\n        this.__left__ = left;\n        this.__right__ = right;\n    }\n}\nexport class ESTypeNot extends ESType {\n    constructor(type) {\n        super(false, `~(${str(type)})`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.type_check = (props, t) => {\n            const res = this.__val__.type_check(props, t);\n            if (res instanceof ESError)\n                return res;\n            return new ESBoolean(!res.valueOf());\n        };\n        this.clone = () => {\n            return new ESTypeNot(this.__val__);\n        };\n        this.__eq__ = (props, t) => {\n            return new ESBoolean(t instanceof ESTypeNot &&\n                this.__val__.__eq__(props, t.__val__).valueOf() === true);\n        };\n        this.__val__ = type;\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { wrap } from \"./wrapStrip\";\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESNumber extends ESPrimitive {\n    constructor(value = 0) {\n        super(value, types.number);\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return this;\n                case types.string:\n                    return this.str();\n                case types.array:\n                    return new ESArray(new Array(this.valueOf()));\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(this.valueOf().toString());\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() + n.valueOf());\n        };\n        this.__subtract__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() - n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() * n.valueOf());\n        };\n        this.__divide__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() / n.valueOf());\n        };\n        this.__pow__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESNumber(Math.pow(this.valueOf(), n.valueOf()));\n        };\n        this.__mod__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESNumber(this.valueOf() % n.valueOf());\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new ESBoolean(false);\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() > n.valueOf());\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() < n.valueOf());\n        };\n        this.__bool__ = () => {\n            return new ESBoolean(this.valueOf() > 0);\n        };\n        this.bool = this.__bool__;\n        this.clone = () => new ESNumber(this.valueOf());\n        this.__get_property__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.type_check = this.__eq__;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESBoolean extends ESPrimitive {\n    constructor(val = false) {\n        super(Boolean(val), types.bool);\n        this.__get_property__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESBoolean)) {\n                return new TypeError(Position.void, 'Boolean', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__bool__ = () => this;\n        this.__and__ = (props, n) => new ESBoolean(this.valueOf() && n.bool().valueOf());\n        this.__or__ = (props, n) => {\n            return new ESBoolean(this.valueOf() || n.bool().valueOf());\n        };\n        this.str = () => new ESString(this.valueOf() ? 'true' : 'false');\n        this.clone = () => new ESBoolean(this.valueOf());\n        this.bool = () => this;\n        this.type_check = this.__eq__;\n        this.info = {\n            name: str(val),\n            description: `Boolean global constant which evaluates to ${str(val)}, the opposite of ${str(!val)}`,\n            file: 'built-in',\n            isBuiltIn: true,\n            helpLink: 'https://en.wikipedia.org/wiki/Boolean_expression'\n        };\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, InvalidOperationError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nimport { ESType, ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESArray extends ESPrimitive {\n    constructor(values = []) {\n        super(values, types.array);\n        this.len = (props) => {\n            return new ESNumber(this.valueOf().length);\n        };\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.len(props).valueOf());\n                case types.boolean:\n                    return this.bool();\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(str(this.valueOf()));\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESArray)) {\n                return new ESBoolean();\n            }\n            if (n.len(props).valueOf() !== this.len(props).valueOf()) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.len(props).valueOf(); i++) {\n                const thisElement = this.valueOf()[i];\n                const nElement = n.valueOf()[i];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__(props, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESArray)) {\n                return new TypeError(Position.void, 'array', n.typeName().valueOf(), n);\n            }\n            return new ESArray([...this.valueOf(), ...n.valueOf()]);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.__get_property__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESUndefined();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return this.valueOf()[idx];\n            }\n            return new ESUndefined();\n        };\n        this.contains = (props, val) => {\n            for (let element of this.__value__) {\n                if (val.__eq__(props, element)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        this.clone = () => {\n            const newArr = [];\n            for (let element of this.valueOf()) {\n                newArr.push(element);\n            }\n            return new ESArray(newArr);\n        };\n        this.type_check = (props, n) => {\n            if (!(n instanceof ESArray) || this.len(props).valueOf() !== n.len(props).valueOf()) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.__value__.length; i++) {\n                const res = this.__value__[i].type_check(props, n.__value__[i]);\n                if (res instanceof ESError)\n                    return res;\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n    }\n    __set_property__(props, key, value) {\n        if (!(key instanceof ESNumber)) {\n            return;\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        let idx = key.valueOf();\n        while (idx < 0) {\n            idx = this.valueOf().length + idx;\n        }\n        this.__value__[idx] = value;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\nexport class ESTypeArray extends ESType {\n    constructor(type) {\n        super(false, `Array[${str(type)}]`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.type_check = (props, t) => {\n            if (!(t instanceof ESArray)) {\n                return new ESBoolean();\n            }\n            for (const element of t.valueOf()) {\n                if (!this.type.type_check(props, element).valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.clone = () => {\n            return new ESTypeArray(this.type);\n        };\n        this.type = type;\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESPrimitive } from './esprimitive';\nimport { wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESString extends ESPrimitive {\n    constructor(value = '') {\n        super(value, types.string);\n        this.str = () => this;\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    const num = parseFloat(this.valueOf());\n                    if (isNaN(num)) {\n                        return new ESError(Position.void, 'TypeError', `This string is not a valid number`);\n                    }\n                    return new ESNumber(num);\n                case types.string:\n                    return this;\n                case types.array:\n                    return new ESArray(this.valueOf().split('').map(s => new ESString(s)));\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESString(this.valueOf() + n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESString(this.valueOf().repeat(n.valueOf()));\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new ESBoolean(false);\n            }\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf().length > n.valueOf().length);\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf().length < n.valueOf().length);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.len = () => {\n            return new ESNumber(this.valueOf().length);\n        };\n        this.clone = () => new ESString(this.valueOf());\n        this.__get_property__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESString();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return new ESString(this.valueOf()[idx]);\n            }\n            return new ESString();\n        };\n        this.type_check = this.__eq__;\n    }\n    __set_property__(props, key, value) {\n        if (!(key instanceof ESNumber))\n            return;\n        if (!(value instanceof ESString))\n            value = new ESString(str(value));\n        let idx = key.valueOf();\n        while (idx < 0)\n            idx = this.valueOf().length + idx;\n        const strToInsert = value.str().valueOf();\n        let firstPart = this.__value__.substr(0, idx);\n        let lastPart = this.__value__.substr(idx + strToInsert.length);\n        this.__value__ = firstPart + strToInsert + lastPart;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESString } from './primitives/esstring';\nimport { types } from \"../constants\";\nexport class ESSymbol {\n    constructor(value, identifier, options = {}) {\n        var _a, _b, _c;\n        this.clone = () => {\n            return new ESSymbol(this.value.clone(), this.identifier, {\n                isConstant: this.isConstant,\n                isAccessible: this.isAccessible\n            });\n        };\n        this.str = () => new ESString(`<Symbol: ${this.identifier}>`);\n        this.value = value;\n        this.identifier = identifier;\n        this.isConstant = (_a = options.isConstant) !== null && _a !== void 0 ? _a : false;\n        this.isAccessible = (_b = options.isAccessible) !== null && _b !== void 0 ? _b : true;\n        this.type = (_c = options.type) !== null && _c !== void 0 ? _c : types.any;\n    }\n}\n","import { ESError } from '../../errors';\nimport { ESSymbol } from '../symbol';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESPrimitive } from './esprimitive';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESUndefined } from './esundefined';\nimport { ESJSBinding } from \"./esjsbinding\";\nexport function wrap(thing, functionsTakeProps = false) {\n    if (thing instanceof ESPrimitive) {\n        return thing;\n    }\n    else if (thing === undefined || thing === null) {\n        return new ESUndefined();\n    }\n    else if (thing instanceof ESError) {\n        return new ESErrorPrimitive(thing);\n    }\n    else if (thing instanceof ESSymbol) {\n        return thing.value;\n    }\n    else if (typeof thing === 'number') {\n        return new ESNumber(thing);\n    }\n    else if (typeof thing === 'string') {\n        return new ESString(thing);\n    }\n    else if (typeof thing === 'boolean') {\n        return new ESBoolean(thing);\n    }\n    else if (typeof thing === 'bigint') {\n        return new ESNumber(Number(thing));\n    }\n    else if (typeof thing === 'symbol') {\n        return new ESString(String(thing));\n    }\n    else if (Array.isArray(thing)) {\n        return new ESArray(thing.map(o => wrap(o, functionsTakeProps)));\n    }\n    return new ESJSBinding(thing, undefined, functionsTakeProps);\n}\nexport function strip(thing, props) {\n    if (!(thing instanceof ESPrimitive)) {\n        return thing;\n    }\n    else if (thing instanceof ESArray) {\n        return thing.valueOf().map(m => strip(m, props), props);\n    }\n    else if (thing instanceof ESObject) {\n        let val = {};\n        for (let key in thing.valueOf()) {\n            val[key] = strip(thing.valueOf()[key], props);\n        }\n        return val;\n    }\n    else if (thing instanceof ESUndefined) {\n        return undefined;\n    }\n    else if (thing instanceof ESFunction) {\n        return (...args) => {\n            const res = thing.__call__(props, ...args.map(a => wrap(a)));\n            if (res instanceof ESError) {\n                console.error(res.str);\n                return res;\n            }\n            return strip(res, props);\n        };\n    }\n    else if (thing instanceof ESType) {\n        return thing;\n    }\n    return thing.valueOf();\n}\n","import { IS_NODE_INSTANCE } from \"../constants\";\nconst codes = {\n    red: 31,\n    yellow: 33,\n    green: 32,\n    cyan: 36,\n    blue: 34,\n    grey: 2\n};\nconst c = {};\nfor (let code of Object.keys(codes)) {\n    c[code] = (s) => {\n        s || (s = '');\n        if (IS_NODE_INSTANCE) {\n            return `\\x1b[${codes[code]}m` + s + '\\x1b[0m';\n        }\n        return `<span style=\"color: ${code}\">${s}</span>`;\n    };\n}\nexport default c;\n","import { TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESNumber, ESString } from '../../runtime/primitiveTypes';\nimport { str } from '../../util/util';\nconst module = {\n    asciiToChar: (props, number) => {\n        if (!(number instanceof ESNumber)) {\n            return new TypeError(Position.void, 'number', str(number.typeName()), str(number));\n        }\n        return new ESString(String.fromCharCode(number.valueOf()));\n    },\n    charToAscii: (props, char) => {\n        if (!(char instanceof ESString)) {\n            return new TypeError(Position.void, 'string', str(char.typeName()), str(char));\n        }\n        return new ESNumber(str(char).charCodeAt(0));\n    },\n};\nexport default module;\n","import { strip } from '../../runtime/primitives/wrapStrip';\nimport { str } from '../../util/util';\nimport { global } from \"../../constants\";\nconst module = {\n    parse: (json) => {\n        return JSON.parse(str(json));\n    },\n    stringify: (json) => {\n        return JSON.stringify(strip(json, { context: global }));\n    }\n};\nexport default module;\n","let AllowAny = Symbol('AllowAny');\nexport const config = {\n    permissions: {\n        networking: false,\n        imports: true,\n        accessDOM: false,\n        useSTD: true,\n        fileSystem: false,\n    },\n    modules: {\n        [AllowAny]: 'y'\n    },\n};\nfunction pathAsString(path) {\n    let res = '[';\n    for (let p of path) {\n        res += p + '][';\n    }\n    return res.substring(0, res.length - 1);\n}\nfunction parsePartOfConfig(config, configJSON, path = []) {\n    if (!config[AllowAny]) {\n        const unknownProps = Object.keys(configJSON).filter(x => !(x in config));\n        for (const k of unknownProps) {\n            console.error(`Cannot parse config`, ` - unknown property config${pathAsString([...path, k])}`);\n        }\n    }\n    for (const key of Object.keys(configJSON)) {\n        if (typeof config[key] !== typeof configJSON[key] && !config[AllowAny]) {\n            console.error(`Cannot parse config`, ` - config${pathAsString([...path, key])} should be of type '${typeof config[key]}'`);\n            return;\n        }\n        if (typeof config[key] === 'object') {\n            parsePartOfConfig(config[key], configJSON[key], [...path, key]);\n            continue;\n        }\n        config[key] = configJSON[key];\n    }\n}\nexport function parseConfig(configJSON) {\n    parsePartOfConfig(config, configJSON);\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { global, IS_NODE_INSTANCE, libs } from '../constants';\nimport { ESError } from '../errors';\nimport { ESSymbol } from '../runtime/symbol';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport ascii from './built-in-modules/ascii';\nimport json from './built-in-modules/json';\nimport dom from './built-in-modules/dom';\nimport time from './built-in-modules/time';\nimport { Position } from \"../position\";\nimport { Context } from \"../runtime/context\";\nimport { ESNamespace } from \"../runtime/primitives/esnamespace\";\nimport { ESString } from \"../runtime/primitives/esstring\";\nimport { run } from \"../index\";\nconst modules = {};\nconst processedModules = {};\nexport function initModules() {\n    processedModules['math'] = new ESJSBinding(Math);\n    processedModules['promise'] = new ESJSBinding(Promise);\n    processedModules['time'] = new ESJSBinding(time(libs));\n    processedModules['json'] = new ESJSBinding(json);\n    processedModules['ascii'] = new ESJSBinding(ascii);\n    if (!IS_NODE_INSTANCE) {\n        const domRes = dom(libs);\n        if (!(domRes instanceof ESError)) {\n            modules['dom'] = domRes;\n        }\n        else {\n            return domRes;\n        }\n    }\n}\nexport function processRawModule(module, name) {\n    const moduleDict = {};\n    const moduleRaw = module.valueOf();\n    for (const key of Object.keys(moduleRaw)) {\n        moduleDict[key] = new ESSymbol(moduleRaw[key], key);\n    }\n    return new ESJSBinding(moduleDict, name);\n}\nexport function moduleExist(name) {\n    return name in modules || name in processedModules;\n}\nexport function addModule(name, body) {\n    modules[name] = {};\n    processedModules[name] = body;\n}\nexport function getModule(name) {\n    if (name in processedModules) {\n        return processedModules[name];\n    }\n    if (name in modules) {\n        const res = new ESJSBinding(modules[name]);\n        const processed = processRawModule(res, name);\n        processedModules[name] = processed;\n        return processed;\n    }\n}\nexport function preloadModules(urls) {\n    return __awaiter(this, void 0, void 0, function* () {\n        for (const name of Object.keys(urls)) {\n            let url = urls[name];\n            if (url.substring(url.length - 3) !== '.es') {\n                url = url + '.es';\n            }\n            try {\n                let data = yield (yield fetch(url)).text();\n                const env = new Context();\n                env.parent = global;\n                let splitUrl = url.split(\"/\");\n                let scriptName = splitUrl.pop();\n                let exDir = splitUrl.join(\"/\");\n                const n = new ESNamespace(new ESString(scriptName), {});\n                const res = run(data, {\n                    env,\n                    fileName: name,\n                    currentDir: exDir,\n                });\n                n.__value__ = env.getSymbolTableAsDict();\n                if (res.error) {\n                    return res.error;\n                }\n                processedModules[name] = n;\n            }\n            catch (E) {\n                return new ESError(Position.void, 'ImportError', E.toString());\n            }\n        }\n    });\n}\n","import { ESError, ImportError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { strip, wrap } from '../runtime/primitives/wrapStrip';\nimport { ESArray, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESUndefined } from '../runtime/primitiveTypes';\nimport { indent, sleep, str } from '../util/util';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport chalk from \"../util/colours\";\nimport { IS_NODE_INSTANCE } from \"../constants\";\nimport { getModule, moduleExist } from \"./builtInModules\";\nexport const builtInFunctions = {\n    'range': [({ context }, minP, maxP, stepP) => {\n            if (!(minP instanceof ESNumber)) {\n                return new ESArray();\n            }\n            const min = minP.valueOf();\n            if (maxP instanceof ESUndefined) {\n                try {\n                    return new ESArray([...Array(min).keys()].map(n => new ESNumber(n)));\n                }\n                catch (e) {\n                    return new ESError(Position.void, 'RangeError', `Cannot make range of length '${str(min)}'`);\n                }\n            }\n            let step = 1;\n            if (!(maxP instanceof ESNumber)) {\n                return new TypeError(Position.void, 'number', maxP.typeName(), str(maxP));\n            }\n            let max = maxP.valueOf();\n            if (!(stepP instanceof ESUndefined)) {\n                if (!(stepP instanceof ESNumber)) {\n                    return new TypeError(Position.void, 'number', stepP.typeName(), str(stepP));\n                }\n                step = stepP.valueOf();\n            }\n            let arr = [];\n            let i = min;\n            while (i < max) {\n                arr.push(new ESNumber(i));\n                i += step;\n            }\n            return new ESArray(arr);\n        }, {\n            args: [{\n                    name: 'N',\n                    type: 'Number',\n                }],\n            description: 'Generates an array of integers given N. Starts at 0 and goes to N-1. Can be used like for i in range(10) ..., similarly to python.',\n            returns: 'array of numbers from 0 to N-1',\n            returnType: 'number[] | RangeError'\n        }],\n    'log': [({ context }, ...msgs) => {\n            console.log(...msgs.map(m => str(m)));\n        }, {\n            args: [{\n                    name: '...values',\n                    type: 'any[]'\n                }],\n            description: 'Uses console.log to log all values',\n            returnType: 'void'\n        }],\n    'parse_num': [({ context }, num) => {\n            try {\n                const val = parseFloat(str(num));\n                if (isNaN(val)) {\n                    return new ESError(Position.void, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n                }\n                return new ESNumber(val);\n            }\n            catch (e) {\n                return new ESError(Position.void, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n            }\n        }, {\n            args: [{\n                    name: 'num',\n                    type: 'any'\n                }],\n            description: `Converts a string of digits into a number. Works with decimals and integers. Calls .str() on value before using native JS 'parseFloat' function. Returns TypeError if the string can't be converted into a number.`,\n            returnType: 'number | TypeError'\n        }],\n    'help': [({ context }, ...things) => {\n            if (!things.length) {\n                return new ESString('Visit https://entropygames.io/entropy-script for help with Entropy Script!\\n' +\n                    'Try \\'help(<anything>)\\' for help about a particular object.');\n            }\n            let out = '';\n            for (const thing of things) {\n                if (!(thing instanceof ESPrimitive)) {\n                    console.log('Invalid arg not primitive: ' + str(thing));\n                    return;\n                }\n                const info = thing.info;\n                out += `${chalk.yellow(`Help on '${info.name || '(anonymous)'}'`)}:\n    \n    ${chalk.yellow('Value')}: ${indent(indent(str(thing)))}\n    ${chalk.yellow('Type')}: '${str(thing.typeName())}'\n    ${chalk.yellow('Location')}: ${info.file || chalk.yellow('(unknown)')}\n    \n        ${chalk.green(info.description) || `No description.`}\n        \n    ${info.helpLink ? chalk.cyan(info.helpLink + '\\n\\n') : ''}\n`;\n                if (info.args && thing instanceof ESFunction) {\n                    const total = info.args.length;\n                    const required = info.args.filter(a => a.required).length;\n                    if (total == required)\n                        out += chalk.yellow(`    Arguments (${total}): \\n`);\n                    else\n                        out += chalk.yellow(`    Arguments (${required}-${total}): \\n`);\n                    for (const [idx, arg] of info.args.entries()) {\n                        if (typeof arg !== 'object')\n                            out += `        ${idx + 1}. INVALID ARG INFO`;\n                        else\n                            out += `        ${idx + 1}. ${arg.name}${arg.required === false ? chalk.yellow(' (optional) ') : ' '}{${arg.type}} ${arg.description || ''}\\n`;\n                    }\n                    out += `\\n\\n`;\n                    if (info.returns)\n                        out += `    Returns: ${info.returns}\\n\\n`;\n                    if (info.returnType)\n                        out += `    Return Type: ${info.returnType}\\n\\n`;\n                }\n                if (info.contents && (thing instanceof ESObject || thing instanceof ESNamespace)) {\n                    out += '    Properties: \\n      ';\n                    for (let contents of info.contents)\n                        out += contents.name + '\\n      ';\n                }\n            }\n            console.log(out);\n            if (things.length > 1) {\n                return new ESArray(things);\n            }\n            if (things) {\n                return things[0];\n            }\n        }, {\n            args: [{\n                    name: 'value',\n                    type: 'any'\n                }],\n            description: 'logs info on value',\n            returns: 'value passed in'\n        }],\n    'delete': [({ context }, name) => {\n            const id = str(name);\n            if (!context.has(id)) {\n                return new ESError(Position.void, 'DeleteError', `Identifier '${id}' not found in the current context`);\n            }\n            context.set(id, new ESUndefined());\n        }, {\n            name: 'delete',\n            args: [{ name: 'identifier', type: 'string' }],\n            description: 'Deletes a variable from the current context'\n        }],\n    '__path__': [({ context }) => {\n            return new ESString(context.path);\n        }, {\n            name: '__path__',\n            args: [],\n            description: 'Returns the current path'\n        }],\n    '__symbols__': [({ context }) => {\n            return wrap(context.keys);\n        }, {\n            name: '__allSymbols',\n            args: [],\n            description: 'Returns an array of the names of all symbols in the current context'\n        }],\n    'using': [(props, module, global_) => {\n            if (!(module instanceof ESNamespace) && !(module instanceof ESJSBinding) && !(module instanceof ESObject)) {\n                return new TypeError(Position.void, 'Namespace', str(module.typeName()));\n            }\n            let { context } = props;\n            let global = !(global_ && !global_.bool().valueOf());\n            let value = strip(module, props);\n            if (global) {\n                context = context.root;\n            }\n            else if (context.parent) {\n                context = context.parent;\n            }\n            for (const key of Object.keys(value)) {\n                let res = context.setOwn(key, wrap(value[key]));\n                if (res)\n                    return res;\n            }\n        }, {\n            name: 'using',\n            args: [\n                { name: 'module', type: 'namespace' },\n                { name: 'global', type: 'bool' }\n            ],\n            description: 'Adds contents of a namespace to the current or global context'\n        }],\n    'sleep': [({ context }, time, cb) => {\n            if (!(time instanceof ESNumber)) {\n                return new TypeError(Position.void, 'number', str(time.typeName()), str(time));\n            }\n            sleep(time.valueOf())\n                .then(() => {\n                const res = cb.__call__({ context });\n                if (res instanceof ESError) {\n                    console.log(res.str);\n                }\n            });\n        }, {\n            name: 'sleep',\n            args: [{ name: 'n', type: 'number' }, { name: 'callback', type: 'function' }],\n            description: 'Waits n milliseconds and then executes the callback'\n        }],\n    'throw': [({ context }, name, details) => {\n            return new ESError(Position.void, str(name), str(details));\n        }, {\n            name: 'throw',\n            args: [{ name: 'name', type: 'string' }, { name: 'details', type: 'string' }]\n        }],\n};\nexport function addDependencyInjectedBIFs(printFunc, inputFunc) {\n    builtInFunctions['import'] = [(props, rawUrl) => {\n            if (IS_NODE_INSTANCE) {\n                return new ESError(Position.void, 'ImportError', 'Is running in node instance but trying to run browser import function');\n            }\n            if (!(rawUrl instanceof ESString)) {\n                return new TypeError(Position.void, 'String', rawUrl.typeName(), str(rawUrl));\n            }\n            const url = str(rawUrl);\n            if (moduleExist(url)) {\n                return getModule(url);\n            }\n            return new ImportError(Position.void, url, 'Module not found. Try adding it to the pre-loaded modules.');\n        }, {\n            description: 'Loads a module. Cannot be used asynchronously, so add any modules to pre-load in the esconfig.json file.'\n        }];\n    builtInFunctions['print'] = [({ context }, ...args) => {\n            let out = ``;\n            for (let arg of args) {\n                out += str(arg);\n            }\n            printFunc(out);\n        }, {}];\n    builtInFunctions['input'] = [({ context }, msg, cbRaw) => {\n            inputFunc(msg.valueOf(), (msg) => {\n                let cb = cbRaw === null || cbRaw === void 0 ? void 0 : cbRaw.valueOf();\n                if (cb instanceof ESFunction) {\n                    let res = cb.__call__({ context }, new ESString(msg));\n                    if (res instanceof ESError) {\n                        console.log(res.str);\n                    }\n                }\n                else if (typeof cb === 'function') {\n                    cb(msg);\n                }\n                return new ESString('\\'input()\\' does not return anything. Pass in a function as the second argument, which will take the user input as an argument.');\n            });\n        }, {}];\n}\n","import { addDependencyInjectedBIFs, builtInFunctions } from \"./built-in/builtInFunctions\";\nimport { initModules } from './built-in/builtInModules';\nimport { ESFunction } from './runtime/primitiveTypes';\nimport loadGlobalConstants from \"./built-in/globalConstants\";\nexport function initialise(globalContext, printFunc, inputFunc) {\n    addDependencyInjectedBIFs(printFunc, inputFunc);\n    for (let builtIn in builtInFunctions) {\n        const fn = new ESFunction(builtInFunctions[builtIn][0], [], builtIn, undefined, undefined, globalContext);\n        fn.info = builtInFunctions[builtIn][1];\n        fn.info.name = builtIn;\n        fn.info.isBuiltIn = true;\n        fn.info.file = 'built-in';\n        globalContext.set(builtIn, fn, {\n            global: true,\n            isConstant: true\n        });\n    }\n    loadGlobalConstants(globalContext);\n    const initModRes = initModules();\n    if (initModRes) {\n        return initModRes;\n    }\n    globalContext.initialisedAsGlobal = true;\n}\n","import { ESBoolean, ESUndefined } from '../runtime/primitiveTypes';\nimport { types } from \"../constants\";\nexport default function load(context) {\n    const globalConstants = {\n        'false': new ESBoolean(false),\n        'true': new ESBoolean(true),\n        'nil': new ESUndefined(),\n        'Any': types.any,\n        'Number': types.number,\n        'String': types.string,\n        'Bool': types.bool,\n        'Func': types.function,\n        'Array': types.array,\n        'Object': types.object,\n        'Type': types.type,\n        'Error': types.error,\n        'Undefined': types.undefined\n    };\n    for (let constant in globalConstants) {\n        const value = globalConstants[constant];\n        context.set(constant, value, {\n            global: true,\n            isConstant: true\n        });\n    }\n}\n","import { now } from '../../constants';\nimport { ESFunction } from '../../runtime/primitives/esfunction';\nimport { ESJSBinding } from '../../runtime/primitives/esjsbinding';\nimport { ESNumber } from '../../runtime/primitives/esnumber';\nconst module = (config) => ({\n    now: new ESFunction(() => new ESNumber(now())),\n    date: new ESJSBinding(Date)\n});\nexport default module;\n","import { IS_NODE_INSTANCE } from '../../constants';\nimport { ReferenceError, InvalidRuntimeError, PermissionRequiredError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESJSBinding } from \"../../runtime/primitives/esjsbinding\";\nimport { config } from \"../../config\";\nconst module = () => {\n    if (!config.permissions.accessDOM) {\n        return new PermissionRequiredError('No access to DOM');\n    }\n    if (IS_NODE_INSTANCE) {\n        return new InvalidRuntimeError();\n    }\n    const w = window;\n    if (typeof w === 'undefined' || !('$' in w)) {\n        return new ReferenceError(Position.void, '$ must be property of window to use dom library');\n    }\n    const $ = new ESJSBinding(w['$'], 'jquery');\n    return {\n        $,\n        window: new ESJSBinding(w, 'window'),\n        document: new ESJSBinding(w['document'], 'document'),\n    };\n};\nexport default module;\n","import { ESPrimitive } from \"./primitiveTypes\";\nexport function interpretArgument(arg, context) {\n    var _a;\n    const typeRes = arg.type.interpret(context);\n    if (typeRes.error) {\n        return typeRes.error;\n    }\n    let defaultValue;\n    if (arg.defaultValue) {\n        let defaultValRes = (_a = arg.defaultValue) === null || _a === void 0 ? void 0 : _a.interpret(context);\n        if (defaultValRes.error) {\n            return defaultValRes.error;\n        }\n        if (defaultValRes.val instanceof ESPrimitive) {\n            defaultValue = defaultValRes.val;\n        }\n    }\n    return {\n        name: arg.name,\n        type: typeRes.val,\n        defaultValue\n    };\n}\n","import { ESError, InvalidSyntaxError, ReferenceError, TypeError } from \"../errors\";\nimport { Context } from './context';\nimport { Position } from \"../position\";\nimport { catchBlockErrorSymbolName, now, tokenTypeString, tt, types } from \"../constants\";\nimport { interpretArgument } from \"./argument\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESJSBinding, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESType, ESUndefined } from \"./primitiveTypes\";\nimport { generateRandomSymbol, str } from '../util/util';\nimport { ESTypeNot } from \"./primitives/estype\";\nexport class interpretResult {\n    constructor(val) {\n        this.val = new ESUndefined();\n        this.shouldBreak = false;\n        this.shouldContinue = false;\n        if (val instanceof ESError) {\n            this.error = val;\n        }\n        else if (val) {\n            this.val = val;\n        }\n    }\n}\nexport class compileResult {\n    constructor(val) {\n        this.val = '';\n        this.hoisted = '';\n        if (typeof val === 'string') {\n            this.val = val;\n        }\n        else if (val) {\n            this.error = val;\n        }\n    }\n    register(node, config) {\n        const res = node.compilePy(config);\n        this.hoisted += res.hoisted;\n        if (res.error) {\n            this.error = res.error;\n            return '';\n        }\n        return res.val;\n    }\n}\nexport class Node {\n    constructor(pos, isTerminal = false) {\n        this.pos = pos;\n        this.isTerminal = isTerminal;\n    }\n    interpret(context) {\n        var _a;\n        const start = now();\n        const res = new interpretResult;\n        const val = this.interpret_(context);\n        if (val instanceof ESError) {\n            res.error = val;\n        }\n        else if (val instanceof interpretResult) {\n            res.val = val.val;\n            res.error = val.error;\n            res.funcReturn = val.funcReturn;\n            res.shouldBreak = val.shouldBreak;\n            res.shouldContinue = val.shouldContinue;\n        }\n        else {\n            res.val = val;\n        }\n        if (res.error && res.error.pos.isUnknown) {\n            res.error.pos = this.pos;\n        }\n        if (!(res.val instanceof ESPrimitive)) {\n            res.error = new TypeError(Position.void, 'Primitive', 'Native JS value', str(res.val));\n            res.val = new ESUndefined();\n        }\n        (_a = res.val.info).file || (_a.file = this.pos.file);\n        Node.interprets++;\n        let time = now() - start;\n        Node.totalTime += time;\n        if (time > Node.maxTime)\n            Node.maxTime = time;\n        return res;\n    }\n}\nNode.interprets = 0;\nNode.totalTime = 0;\nNode.maxTime = 0;\nexport class N_binOp extends Node {\n    constructor(pos, left, opTok, right) {\n        super(pos);\n        this.left = left;\n        this.opTok = opTok;\n        this.right = right;\n    }\n    interpret_(context) {\n        const left = this.left.interpret(context);\n        if (left.error)\n            return left.error;\n        const right = this.right.interpret(context);\n        if (right.error)\n            return right.error;\n        const l = left.val;\n        const r = right.val;\n        if (typeof l === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', l, 'N_binOp.interpret_');\n        }\n        if (typeof r === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', r, 'N_binOp.interpret_');\n        }\n        switch (this.opTok.type) {\n            case tt.LTE: {\n                const lt = l.__lt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (lt instanceof ESError)\n                    return lt;\n                if (eq instanceof ESError)\n                    return eq;\n                return new interpretResult(lt.__or__({ context }, eq));\n            }\n            case tt.GTE: {\n                const gt = l.__gt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (gt instanceof ESError)\n                    return gt;\n                if (eq instanceof ESError)\n                    return eq;\n                return new interpretResult(gt.__or__({ context }, eq));\n            }\n            case tt.NOTEQUALS: {\n                const res = l.__eq__({ context }, r);\n                if (res instanceof ESError)\n                    return res;\n                return new interpretResult(new ESBoolean(!res.bool().valueOf()));\n            }\n            case tt.ADD:\n                return new interpretResult(l.__add__({ context }, r));\n            case tt.SUB:\n                return new interpretResult(l.__subtract__({ context }, r));\n            case tt.MUL:\n                return new interpretResult(l.__multiply__({ context }, r));\n            case tt.DIV:\n                return new interpretResult(l.__divide__({ context }, r));\n            case tt.POW:\n                return new interpretResult(l.__pow__({ context }, r));\n            case tt.MOD:\n                return new interpretResult(l.__mod__({ context }, r));\n            case tt.EQUALS:\n                return new interpretResult(l.__eq__({ context }, r));\n            case tt.LT:\n                return new interpretResult(l.__lt__({ context }, r));\n            case tt.GT:\n                return new interpretResult(l.__gt__({ context }, r));\n            case tt.AND:\n                return new interpretResult(l.__and__({ context }, r));\n            case tt.OR:\n                return new interpretResult(l.__or__({ context }, r));\n            case tt.APMERSAND:\n                return new interpretResult(l.__ampersand__({ context }, r));\n            case tt.PIPE:\n                return new interpretResult(l.__pipe__({ context }, r));\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid binary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(config) {\n        const left = this.left.compileJS(config);\n        if (left.error)\n            return left;\n        const right = this.right.compileJS(config);\n        if (right.error)\n            return right;\n        if (config.minify) {\n            return new compileResult(`${left.val}${tokenTypeString[this.opTok.type]}${right.val}`);\n        }\n        return new compileResult(`${left.val} ${tokenTypeString[this.opTok.type]} ${right.val}`);\n    }\n    compilePy(config) {\n        const left = this.left.compilePy(config);\n        if (left.error)\n            return left;\n        const right = this.right.compilePy(config);\n        if (right.error)\n            return right;\n        const switchers = {\n            '&&': 'and',\n            '||': 'or',\n            '^': '**',\n        };\n        let op = tokenTypeString[this.opTok.type];\n        if (op in switchers) {\n            op = switchers[op];\n        }\n        return new compileResult(`${left.val} ${op} ${right.val}`);\n    }\n}\nexport class N_unaryOp extends Node {\n    constructor(pos, a, opTok) {\n        super(pos);\n        this.a = a;\n        this.opTok = opTok;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const res = this.a.interpret(context);\n        if (res.error)\n            return res.error;\n        switch (this.opTok.type) {\n            case tt.SUB:\n            case tt.ADD:\n                if (!(res.val instanceof ESNumber)) {\n                    return new TypeError(this.pos, 'Number', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().toString()) || 'undefined_', (_b = res.val) === null || _b === void 0 ? void 0 : _b.valueOf());\n                }\n                const numVal = res.val.valueOf();\n                return new interpretResult(new ESNumber(this.opTok.type === tt.SUB ? -numVal : Math.abs(numVal)));\n            case tt.NOT:\n                return new interpretResult(new ESBoolean(!((_c = res === null || res === void 0 ? void 0 : res.val) === null || _c === void 0 ? void 0 : _c.bool().valueOf())));\n            case tt.BITWISE_NOT:\n                return new interpretResult(new ESTypeNot(res.val));\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid unary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(config) {\n        const val = this.a.compileJS(config);\n        if (val.error)\n            return val;\n        return new compileResult(`${tokenTypeString[this.opTok.type]}${val.val}`);\n    }\n    compilePy(config) {\n        const val = this.a.compilePy(config);\n        if (val.error)\n            return val;\n        return new compileResult(`${tokenTypeString[this.opTok.type]}${val.val}`);\n    }\n}\nexport class N_varAssign extends Node {\n    constructor(pos, varNameTok, value, assignType = '=', isGlobal = false, isConstant = false, isDeclaration = false, type = types.any) {\n        super(pos);\n        this.value = value;\n        this.varNameTok = varNameTok;\n        this.isGlobal = isGlobal;\n        this.assignType = assignType;\n        this.isConstant = isConstant;\n        this.isDeclaration = isDeclaration;\n        if (type instanceof ESPrimitive) {\n            this.type = new N_primitiveWrapper(type);\n        }\n        else {\n            this.type = type;\n        }\n    }\n    interpret_(context) {\n        var _a, _b;\n        if (this.isDeclaration && context.hasOwn(this.varNameTok.value)) {\n            return new InvalidSyntaxError(this.pos, `Symbol '${this.varNameTok.value}' already exists, and cannot be redeclared`);\n        }\n        const res = this.value.interpret(context);\n        const typeRes = this.type.interpret(context);\n        if (res.error)\n            return res.error;\n        if (typeRes.error)\n            return typeRes.error;\n        if (!typeRes.val) {\n            return new TypeError(this.varNameTok.pos, 'Type', 'undefined');\n        }\n        if (!res.val) {\n            return new TypeError(this.varNameTok.pos, '~undefined', 'undefined', 'N_varAssign.interpret_');\n        }\n        const typeCheckRes = typeRes.val.type_check({ context }, res.val);\n        if (typeCheckRes instanceof ESError)\n            return typeCheckRes;\n        if (!typeCheckRes.bool().valueOf()) {\n            return new TypeError(this.varNameTok.pos, str(typeRes.val), str((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName()), str(res.val));\n        }\n        if (this.isDeclaration) {\n            if (this.assignType !== '=') {\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            }\n            if (context.hasOwn(this.varNameTok.value)) {\n                return new InvalidSyntaxError(this.pos, `Cannot redeclare variable which exists in the current scope`);\n            }\n            context.setOwn(this.varNameTok.value, res.val, {\n                global: false,\n                isConstant: this.isConstant,\n                type: typeRes.val\n            });\n            return new interpretResult(res.val);\n        }\n        if (context.has(this.varNameTok.value)) {\n            const symbol = context.getSymbol(this.varNameTok.value);\n            if (symbol instanceof ESError)\n                return symbol;\n            if (symbol) {\n                if (!symbol.type.type_check({ context }, res.val).valueOf()) {\n                    return new TypeError(this.varNameTok.pos, str(symbol.type), (_b = res.val) === null || _b === void 0 ? void 0 : _b.typeName(), str(res.val));\n                }\n            }\n        }\n        if (this.assignType === '=') {\n            let value = res.val;\n            if (value === undefined) {\n                value = new ESUndefined();\n            }\n            const type = context.getSymbol(this.varNameTok.value);\n            if (type instanceof ESError) {\n                return type;\n            }\n            if (!type) {\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable without keyword`);\n            }\n            const typeCheckRes = type.type.type_check({ context }, res.val);\n            if (typeCheckRes instanceof ESError)\n                return typeCheckRes;\n            if (!typeCheckRes.bool().valueOf()) {\n                return new TypeError(Position.void, str(type.type), str(res.val.__type__), str(res.val));\n            }\n            const setRes = context.set(this.varNameTok.value, value, {\n                global: this.isGlobal,\n                isConstant: this.isConstant,\n                type: res.val.__type__\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n        }\n        else {\n            const currentVal = context.get(this.varNameTok.value);\n            if (currentVal instanceof ESError)\n                return currentVal;\n            if (currentVal == undefined)\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            let newVal;\n            let assignVal = res.val;\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError) {\n                return newVal;\n            }\n            let setRes = context.set(this.varNameTok.value, newVal, {\n                global: this.isGlobal,\n                isConstant: this.isConstant,\n                type: newVal.__type__\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n            res.val = newVal;\n        }\n        if (res.val.info.name === '(anonymous)' || !res.val.info.name) {\n            res.val.info.name = this.varNameTok.value;\n        }\n        return res;\n    }\n    compileJS(config) {\n        const val = this.value.compileJS(config);\n        if (val.error)\n            return val;\n        let declaration = '';\n        if (this.isDeclaration) {\n            if (this.isGlobal) {\n                declaration = 'var';\n            }\n            else if (this.isConstant) {\n                declaration = 'const';\n            }\n            else {\n                declaration = 'let';\n            }\n        }\n        let assign = this.assignType;\n        if (assign !== '=') {\n            assign += '=';\n        }\n        if (config.minify) {\n            return new compileResult(`${declaration} ${this.varNameTok.value}${assign}${val.val}`);\n        }\n        return new compileResult(`${declaration} ${this.varNameTok.value} ${assign} ${val.val}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const val = this.value.compilePy(config);\n        if (val.error)\n            return val;\n        res.hoisted += val.hoisted;\n        let assign = this.assignType;\n        if (assign !== '=') {\n            assign += '=';\n        }\n        if (this.isGlobal) {\n            res.hoisted += `${this.varNameTok.value}=None`;\n        }\n        if (config.minify) {\n            res.val = `${this.varNameTok.value}${assign}${val.val}`;\n        }\n        else {\n            res.val = `${this.varNameTok.value} ${assign} ${val.val}`;\n        }\n        return res;\n    }\n}\nexport class N_if extends Node {\n    constructor(pos, comparison, ifTrue, ifFalse) {\n        super(pos);\n        this.comparison = comparison;\n        this.ifFalse = ifFalse;\n        this.ifTrue = ifTrue;\n    }\n    interpret_(context) {\n        var _a;\n        let newContext = new Context();\n        newContext.parent = context;\n        let res = new interpretResult();\n        let compRes = this.comparison.interpret(context);\n        if (compRes.error)\n            return compRes;\n        if ((_a = compRes.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            return this.ifTrue.interpret(newContext);\n        }\n        else if (this.ifFalse) {\n            return this.ifFalse.interpret(newContext);\n        }\n        return res;\n    }\n    compileJS(config) {\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 4);\n        config.indent += 4;\n        const statementRes = this.comparison.compileJS(config);\n        if (statementRes.error)\n            return statementRes;\n        const ifTrueRes = this.ifTrue.compileJS(config);\n        if (ifTrueRes.error)\n            return ifTrueRes;\n        if (!this.ifFalse) {\n            if (config.minify) {\n                return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}\\n}`);\n            }\n            return new compileResult(`if (${statementRes.val}) {\\n${ifTrueRes.val}\\n}`);\n        }\n        config.indent = highIndent.length;\n        let ifFalseRes = this.ifFalse.compileJS(config);\n        if (ifFalseRes.error)\n            return ifFalseRes;\n        if (!(this.ifFalse instanceof N_statements)) {\n            ifFalseRes.val = highIndent + ifFalseRes.val;\n        }\n        if (config.minify) {\n            return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}}else{${ifFalseRes.val}}`);\n        }\n        return new compileResult(`if (${statementRes.val}) {\\n${ifTrueRes.val}\\n${indent}} else {\\n${ifFalseRes.val}\\n${indent}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 4);\n        config.indent += 4;\n        const statementRes = this.comparison.compilePy(config);\n        if (statementRes.error)\n            return statementRes;\n        res.hoisted += statementRes.hoisted;\n        const ifTrueRes = this.ifTrue.compilePy(config);\n        if (ifTrueRes.error)\n            return ifTrueRes;\n        res.hoisted += ifTrueRes.hoisted;\n        if (!this.ifFalse) {\n            return new compileResult(`if ${statementRes.val}:\\n${highIndent}${ifTrueRes.val}`);\n        }\n        const ifFalseRes = this.ifFalse.compilePy(config);\n        if (ifFalseRes.error)\n            return ifFalseRes;\n        res.hoisted += ifFalseRes.hoisted;\n        if (!(this.ifFalse instanceof N_statements)) {\n            ifFalseRes.val = highIndent + ifFalseRes.val;\n        }\n        return new compileResult(`if ${statementRes.val}:\\n${ifTrueRes.val}\\n${indent}else:\\n${ifFalseRes.val}\\n${indent}`);\n    }\n}\nexport class N_while extends Node {\n    constructor(pos, comparison, loop) {\n        super(pos);\n        this.comparison = comparison;\n        this.loop = loop;\n    }\n    interpret_(context) {\n        var _a, _b;\n        while (true) {\n            let newContext = new Context();\n            newContext.parent = context;\n            let shouldLoop = this.comparison.interpret(context);\n            if (shouldLoop.error)\n                return shouldLoop;\n            if (!((_b = (_a = shouldLoop.val) === null || _a === void 0 ? void 0 : _a.bool()) === null || _b === void 0 ? void 0 : _b.valueOf()))\n                break;\n            let potentialError = this.loop.interpret(newContext);\n            if (potentialError.error)\n                return potentialError;\n            if (potentialError.shouldBreak)\n                break;\n        }\n        return new interpretResult(new ESUndefined());\n    }\n    compileJS(config) {\n        config.indent += 4;\n        const comparisonRes = this.comparison.compileJS(config);\n        if (comparisonRes.error)\n            return comparisonRes;\n        const bodyRes = this.loop.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        if (config.minify) {\n            return new compileResult(`while(${comparisonRes.val}){${bodyRes.val}}`);\n        }\n        return new compileResult(`while (${comparisonRes.val}) {\\n${bodyRes.val}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const highIndent = ' '.repeat(config.indent || 0);\n        const comparisonRes = this.comparison.compilePy(config);\n        if (comparisonRes.error)\n            return comparisonRes;\n        res.hoisted += comparisonRes.hoisted;\n        const bodyRes = this.loop.compilePy(config);\n        if (bodyRes.error)\n            return bodyRes;\n        res.hoisted += bodyRes.hoisted;\n        return new compileResult(`while ${comparisonRes.val}:\\n${highIndent}${bodyRes.val}`);\n    }\n}\nexport class N_for extends Node {\n    constructor(pos, body, array, identifier, isGlobalIdentifier, isConstIdentifier) {\n        super(pos);\n        this.body = body;\n        this.array = array;\n        this.identifier = identifier;\n        this.isGlobalId = isGlobalIdentifier;\n        this.isConstId = isConstIdentifier;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const array = this.array.interpret(context);\n        if (array.error)\n            return array;\n        if (context.has(this.identifier.value) && this.isGlobalId) {\n            return new InvalidSyntaxError(this.identifier.pos, 'Cannot declare global variable which exists in the current scope');\n        }\n        function iteration(body, id, element, isGlobal, isConstant) {\n            let newContext = new Context();\n            newContext.parent = context;\n            newContext.set(id, element, {\n                global: isGlobal,\n                isConstant,\n                type: element.__type__\n            });\n            const res = body.interpret(newContext);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (res.shouldBreak) {\n                res.shouldBreak = false;\n                return 'break';\n            }\n            if (res.shouldContinue) {\n                res.shouldContinue = false;\n            }\n        }\n        if (array.val instanceof ESNumber) {\n            for (let i = 0; i < array.val.valueOf(); i++) {\n                const res = iteration(this.body, this.identifier.value, new ESNumber(i), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESObject || array.val instanceof ESJSBinding) {\n            for (let element in (_a = array.val) === null || _a === void 0 ? void 0 : _a.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, new ESString(element), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESArray) {\n            for (let element of (_b = array.val) === null || _b === void 0 ? void 0 : _b.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, element, this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESString) {\n            for (let element of (_c = array.val) === null || _c === void 0 ? void 0 : _c.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, new ESString(element), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val);\n        return new interpretResult(new ESUndefined());\n    }\n    compileJS(config) {\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const iteratorRes = this.array.compileJS(config);\n        if (iteratorRes.error)\n            return iteratorRes;\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        let declaration = 'let';\n        if (this.isGlobalId) {\n            declaration = 'var';\n        }\n        else if (this.isConstId) {\n            declaration = 'const';\n        }\n        if (config.minify) {\n            return new compileResult(`for(${declaration} ${this.identifier.value} of ${iteratorRes.val}){${bodyRes.val}\\n${indent}}`);\n        }\n        return new compileResult(`for (${declaration} ${this.identifier.value} of ${iteratorRes.val}) {\\n${bodyRes.val}\\n${indent}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        config.indent += 4;\n        const iteratorRes = res.register(this.array, config);\n        if (res.error)\n            return res;\n        const bodyRes = res.register(this.body, config);\n        if (res.error)\n            return res;\n        if (this.isGlobalId) {\n            res.hoisted += `${this.identifier.value}=None`;\n        }\n        res.val = `for ${this.identifier.value} in ${iteratorRes}:\\n${bodyRes}`;\n        return res;\n    }\n}\nexport class N_array extends Node {\n    constructor(pos, items, shouldClone = false) {\n        super(pos);\n        this.items = items;\n        this.shouldClone = shouldClone;\n    }\n    interpret_(context) {\n        let result = new interpretResult();\n        let interpreted = [];\n        for (let item of this.items) {\n            const res = item.interpret(context);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (!res.val)\n                continue;\n            let val = res.val;\n            if (this.shouldClone) {\n                val = val.clone();\n            }\n            interpreted.push(val);\n        }\n        result.val = new ESArray(interpreted);\n        return result;\n    }\n    compileJS(config) {\n        const res = new compileResult('[');\n        for (let item of this.items) {\n            const itemRes = item.compileJS(config);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ',';\n        }\n        res.val += ']';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult('[');\n        for (let item of this.items) {\n            const itemRes = res.register(item, config);\n            if (res.error)\n                return res;\n            res.val += itemRes + ',';\n        }\n        res.val += ']';\n        return res;\n    }\n}\nexport class N_objectLiteral extends Node {\n    constructor(pos, properties) {\n        super(pos);\n        this.properties = properties;\n    }\n    interpret_(context) {\n        let interpreted = {};\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.interpret(context);\n            if (value.error)\n                return value.error;\n            const key = keyNode.interpret(context);\n            if (key.error)\n                return key.error;\n            if (key.val && value.val) {\n                interpreted[key.val.valueOf()] = value.val;\n            }\n        }\n        return new interpretResult(new ESObject(interpreted));\n    }\n    compileJS(config) {\n        const res = new compileResult('{');\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.compileJS(config);\n            if (value.error)\n                return value;\n            const key = keyNode.compileJS(config);\n            if (key.error)\n                return key;\n            if (key.val && value.val) {\n                res.val += `[${key.val}]: ${value.val},`;\n            }\n        }\n        res.val += '}';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult('{');\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = res.register(valueNode, config);\n            if (res.error)\n                return res;\n            const key = res.register(keyNode, config);\n            if (res.error)\n                return res;\n            if (key && value) {\n                res.val += `${key}: ${value},`;\n            }\n        }\n        res.val += '}';\n        return res;\n    }\n}\nexport class N_statements extends Node {\n    constructor(pos, items, topLevel = false) {\n        super(pos);\n        this.items = items;\n        this.topLevel = topLevel;\n    }\n    interpret_(context) {\n        if (!this.topLevel) {\n            let last;\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (typeof res.funcReturn !== 'undefined') || res.shouldBreak || res.shouldContinue)\n                    return res;\n                last = res.val;\n            }\n            return new interpretResult(last || new ESUndefined());\n        }\n        else {\n            let result = new interpretResult();\n            let interpreted = [];\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (res.funcReturn !== undefined))\n                    return res;\n                if (!res.val)\n                    continue;\n                let val = res.val.clone();\n                interpreted.push(val);\n            }\n            result.val = new ESArray(interpreted);\n            return result;\n        }\n    }\n    compileJS(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        res.val += indent;\n        for (let item of this.items) {\n            const itemRes = item.compileJS(config);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ';';\n            if (!config.minify) {\n                res.val += '\\n' + indent;\n            }\n        }\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        res.val += indent;\n        for (let item of this.items) {\n            const itemRes = res.register(item, config);\n            if (res.error)\n                return res;\n            res.val += itemRes;\n            res.val += '\\n' + indent;\n        }\n        return res;\n    }\n}\nexport class N_functionCall extends Node {\n    constructor(pos, to, args) {\n        super(pos);\n        this.arguments = args;\n        this.to = to;\n    }\n    interpret_(context) {\n        let { val, error } = this.to.interpret(context);\n        if (error) {\n            return error;\n        }\n        if (!val) {\n            return new TypeError(this.pos, 'any', 'undefined', undefined, 'On function call');\n        }\n        let params = [];\n        for (let arg of this.arguments) {\n            const res = arg.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (res.val) {\n                params.push(res.val);\n            }\n        }\n        const res = val.__call__({ context }, ...params);\n        if (res instanceof ESError) {\n            res.traceback.push({\n                position: this.pos,\n                line: `${val.info.name || '<AnonFunction>'}(${params.map(str).join(', ')})`\n            });\n        }\n        return new interpretResult(res);\n    }\n    compileJS(config) {\n        const res = new compileResult;\n        const funcRes = this.to.compileJS(config);\n        if (funcRes.error)\n            return funcRes;\n        res.val = funcRes.val + '(';\n        for (let arg of this.arguments) {\n            const argRes = arg.compileJS(config);\n            if (argRes.error)\n                return argRes;\n            res.val += argRes.val;\n            if (arg !== this.arguments[this.arguments.length - 1]) {\n                res.val += ',';\n                if (!config.minify) {\n                    res.val += ' ';\n                }\n            }\n        }\n        res.val += ')';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const funcRes = res.register(this.to, config);\n        if (res.error)\n            return res;\n        res.val = funcRes + '(';\n        for (let arg of this.arguments) {\n            const argRes = res.register(arg, config);\n            if (res.error)\n                return res;\n            res.val += argRes;\n            if (arg !== this.arguments[this.arguments.length - 1]) {\n                res.val += ',';\n                if (!config.minify) {\n                    res.val += ' ';\n                }\n            }\n        }\n        res.val += ')';\n        return res;\n    }\n}\nexport class N_functionDefinition extends Node {\n    constructor(pos, body, argNames, returnType, name = '(anon)', this_ = new ESObject(), description = '') {\n        super(pos);\n        this.arguments = argNames;\n        this.body = body;\n        this.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        this.description = description;\n    }\n    interpret_(context) {\n        let args = [];\n        for (let arg of this.arguments) {\n            const res = interpretArgument(arg, context);\n            if (res instanceof ESError)\n                return res;\n            args.push(res);\n        }\n        const returnTypeRes = this.returnType.interpret(context);\n        if (returnTypeRes.error)\n            return returnTypeRes.error;\n        return new interpretResult(new ESFunction(this.body, args, this.name, this.this_, returnTypeRes.val, context));\n    }\n    compileJS(config) {\n        const res = new compileResult('function(');\n        for (let param of this.arguments) {\n            res.val += param.name + ',';\n            if (!config.minify) {\n                res.val += ' ';\n            }\n        }\n        if (config.minify) {\n            res.val += '){';\n        }\n        else {\n            res.val += ') {\\n';\n        }\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        res.val += `${bodyRes.val}\\n${indent}}`;\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const hoistedName = generateRandomSymbol(config.symbols);\n        res.hoisted = `def ${hoistedName}(`;\n        for (let param of this.arguments) {\n            res.hoisted += param.name + ',';\n            if (!config.minify) {\n                res.hoisted += ' ';\n            }\n        }\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const body = this.body.compilePy(config);\n        if (body.error)\n            return body;\n        res.hoisted += `):\\n${indent}${body.val}`;\n        res.hoisted = body.hoisted + res.hoisted;\n        res.val = hoistedName;\n        return res;\n    }\n}\nexport class N_return extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        res.funcReturn = val.val;\n        return res;\n    }\n    compileJS(config) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(config);\n        if (valRes === null || valRes === void 0 ? void 0 : valRes.error)\n            return valRes;\n        return new compileResult(`return(${valRes === null || valRes === void 0 ? void 0 : valRes.val})`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        if (!this.value) {\n            return new compileResult('return');\n        }\n        const valRes = res.register(this.value, config);\n        if (res.error)\n            return res;\n        return new compileResult(`return ${valRes}`);\n    }\n}\nexport class N_yield extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        var _a;\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        if ((_a = val.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            res.funcReturn = val.val;\n        }\n        return res;\n    }\n    compileJS(config) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(config);\n        if (!valRes || !valRes.val) {\n            return new compileResult('');\n        }\n        return new compileResult(`if(_=${valRes.val}){return(_))`);\n    }\n    compilePy(config) {\n        if (!this.value) {\n            return new compileResult('');\n        }\n        const res = new compileResult;\n        const valRes = res.register(this.value, config);\n        if (!valRes) {\n            return new compileResult('');\n        }\n        return new compileResult(`if _ := ${valRes}: return _`);\n    }\n}\nexport class N_indexed extends Node {\n    constructor(pos, base, index) {\n        super(pos);\n        this.base = base;\n        this.index = index;\n    }\n    interpret_(context) {\n        var _a;\n        let baseRes = this.base.interpret(context);\n        if (baseRes.error)\n            return baseRes;\n        let indexRes = this.index.interpret(context);\n        if (indexRes.error)\n            return indexRes;\n        const index = indexRes.val;\n        const base = baseRes.val;\n        if (!base || !index) {\n            return new interpretResult(new ESUndefined());\n        }\n        if (this.value !== undefined) {\n            let valRes = this.value.interpret(context);\n            if (valRes.error)\n                return valRes;\n            const currentVal = wrap(base.__get_property__({ context }, index));\n            let newVal;\n            let assignVal = valRes.val;\n            (_a = this.assignType) !== null && _a !== void 0 ? _a : (this.assignType = '=');\n            if (!assignVal) {\n                return new TypeError(this.pos, '~undefined', 'undefined', 'undefined', 'N_indexed.interpret_');\n            }\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                case '=':\n                    newVal = assignVal;\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError)\n                return newVal;\n            if (!base.__set_property__)\n                return new TypeError(this.pos, 'mutable', 'immutable', base.valueOf());\n            const res = base.__set_property__({ context }, index, newVal !== null && newVal !== void 0 ? newVal : new ESUndefined());\n            if (res instanceof ESError)\n                return res;\n        }\n        return new interpretResult(base.__get_property__({ context }, index));\n    }\n    compileJS(config) {\n        const objectRes = this.base.compileJS(config);\n        if (objectRes.error)\n            return objectRes;\n        const keyRes = this.index.compileJS(config);\n        if (keyRes.error)\n            return keyRes;\n        if (!this.value) {\n            return new compileResult(`${objectRes.val}[${keyRes.val}]`);\n        }\n        const valRes = this.value.compileJS(config);\n        if (valRes.error)\n            return valRes;\n        return new compileResult(`${objectRes.val}[${keyRes.val}]${this.assignType || '='}${valRes.val}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const objectRes = res.register(this.base, config);\n        if (res.error)\n            return res;\n        const keyRes = res.register(this.index, config);\n        if (res.error)\n            return res;\n        if (!this.value) {\n            res.val = `${objectRes}[${keyRes}]`;\n            return res;\n        }\n        const valRes = res.register(this.value, config);\n        if (res.error)\n            return res;\n        res.val = `${objectRes}[${keyRes}] ${this.assignType || '='} ${valRes}`;\n        return res;\n    }\n}\nexport class N_class extends Node {\n    constructor(pos, methods, extends_, init, name = '<anon class>') {\n        super(pos);\n        this.init = init;\n        this.methods = methods;\n        this.name = name;\n        this.extends_ = extends_;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const methods = [];\n        for (let method of this.methods) {\n            const res = method.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (!(res.val instanceof ESFunction)) {\n                return new TypeError(this.pos, 'Function', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            methods.push(res.val);\n        }\n        let extends_ = types.object;\n        if (this.extends_) {\n            const extendsRes = this.extends_.interpret(context);\n            if (extendsRes.error) {\n                return extendsRes.error;\n            }\n            if (!(extendsRes.val instanceof ESType)) {\n                return new TypeError(this.pos, 'Type', ((_b = extendsRes.val) === null || _b === void 0 ? void 0 : _b.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            extends_ = extendsRes.val;\n        }\n        let init;\n        if (this.init) {\n            const initRes = this.init.interpret(context);\n            if (initRes.error) {\n                return initRes.error;\n            }\n            if (!(initRes.val instanceof ESFunction)) {\n                return new TypeError(this.pos, 'Function', ((_c = initRes.val) === null || _c === void 0 ? void 0 : _c.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            init = initRes.val;\n        }\n        return new interpretResult(new ESType(false, this.name, methods, extends_, init));\n    }\n    compileJS(config) {\n        return new compileResult('function(){return{};}');\n    }\n    compilePy(config) {\n        return new compileResult(`class ${this.name}:\\n${' '.repeat(config.indent)}pass`);\n    }\n}\nexport class N_namespace extends Node {\n    constructor(pos, statements, name = '(anon)', mutable = false) {\n        super(pos);\n        this.name = name;\n        this.statements = statements;\n        this.mutable = mutable;\n    }\n    interpret_(context) {\n        const newContext = new Context();\n        newContext.parent = context;\n        const res = this.statements.interpret(newContext);\n        if (res.error)\n            return res;\n        return new interpretResult(new ESNamespace(new ESString(this.name), newContext.getSymbolTableAsDict(), this.mutable));\n    }\n    compileJS(config) {\n        const bodyRes = this.statements.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        return new compileResult(`(() => {${bodyRes.val}})()`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const bodyRes = res.register(this.statements, config);\n        if (res.error)\n            return res;\n        res.val = `'namespace'`;\n        return res;\n    }\n}\nexport class N_tryCatch extends Node {\n    constructor(pos, body, catchBlock) {\n        super(pos, true);\n        this.body = body;\n        this.catchBlock = catchBlock;\n    }\n    interpret_(context) {\n        const res = this.body.interpret(context);\n        if (res.error) {\n            const newContext = new Context();\n            newContext.parent = context;\n            newContext.setOwn(catchBlockErrorSymbolName, new ESErrorPrimitive(res.error), {\n                isConstant: true\n            });\n            const catchRes = this.catchBlock.interpret(newContext);\n            if (catchRes.error)\n                return catchRes.error;\n        }\n        return new interpretResult();\n    }\n    compileJS(config) {\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        const catchRes = this.catchBlock.compileJS(config);\n        if (catchRes.error)\n            return catchRes;\n        return new compileResult(`try{${bodyRes.val}}catch(${catchBlockErrorSymbolName}){${catchRes.val}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const bodyRes = res.register(this.body, config);\n        if (res.error)\n            return res;\n        const catchRes = res.register(this.catchBlock, config);\n        if (res.error)\n            return res;\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 1);\n        res.val = `try:\\n${highIndent}${bodyRes}\\n${indent}except:\\n${highIndent}${catchRes}`;\n        return res;\n    }\n}\nexport class N_number extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        const res = new interpretResult();\n        res.val = new ESNumber(val);\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult(this.a.value.toString());\n    }\n    compilePy(config) {\n        return new compileResult(this.a.value.toString());\n    }\n}\nexport class N_string extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        const res = new interpretResult();\n        res.val = new ESString(val);\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult(`'${this.a.value}'`);\n    }\n    compilePy(config) {\n        return new compileResult(`'${this.a.value}'`);\n    }\n}\nexport class N_variable extends Node {\n    constructor(a) {\n        super(a.pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        if (!context.has(this.a.value)) {\n            return new ReferenceError(this.a.pos, this.a.value);\n        }\n        let res = new interpretResult();\n        let symbol = context.getSymbol(this.a.value);\n        if (!symbol) {\n            return new ReferenceError(this.pos, `No access to undeclared variable ${this.a.value}`);\n        }\n        if (symbol instanceof ESError) {\n            return symbol;\n        }\n        res.val = symbol.value;\n        return res;\n    }\n    compileJS(config) {\n        let val = this.a.value.toString();\n        if (val === 'import') {\n            val = 'import_';\n        }\n        return new compileResult(val);\n    }\n    compilePy(config) {\n        let val = this.a.value.toString();\n        if (val === 'import') {\n            val = 'import_';\n        }\n        return new compileResult(val);\n    }\n}\nexport class N_undefined extends Node {\n    constructor(pos = Position.void) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.val = new ESUndefined();\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('undefined');\n    }\n    compilePy(config) {\n        return new compileResult('None');\n    }\n}\nexport class N_break extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldBreak = true;\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('break');\n    }\n    compilePy(config) {\n        return new compileResult('break');\n    }\n}\nexport class N_continue extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldContinue = true;\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('continue');\n    }\n    compilePy(config) {\n        return new compileResult('continue');\n    }\n}\nexport class N_primitiveWrapper extends Node {\n    constructor(val, pos = Position.void) {\n        super(pos, true);\n        this.value = val;\n    }\n    interpret_(context) {\n        return new interpretResult(this.value);\n    }\n    compileJS(config) {\n        return new compileResult(JSON.stringify(this.value.valueOf()));\n    }\n    compilePy(config) {\n        return new compileResult(JSON.stringify(this.value.valueOf()));\n    }\n}\n","import { Node } from \"../runtime/nodes\";\nimport { ESPrimitive } from '../runtime/primitiveTypes';\nexport function deepClone(obj, hash = new WeakMap()) {\n    let result;\n    if (Object(obj) !== obj || obj instanceof Function) {\n        return obj;\n    }\n    if (hash.has(obj)) {\n        return hash.get(obj);\n    }\n    try {\n        result = new obj.constructor();\n    }\n    catch (e) {\n        result = Object.create(Object.getPrototypeOf(obj));\n    }\n    if (obj instanceof Map) {\n        Array.from(obj, ([key, val]) => result.set(deepClone(key, hash), deepClone(val, hash)));\n    }\n    else if (obj instanceof Set) {\n        Array.from(obj, (key) => result.add(deepClone(key, hash)));\n    }\n    hash.set(obj, result);\n    return Object.assign(result, ...Object.keys(obj).map(key => ({ [key]: deepClone(obj[key], hash) })));\n}\nexport function str(val, depth = 0) {\n    if (typeof val === 'string') {\n        if (depth > 0) {\n            return `'${val}'`;\n        }\n        return val;\n    }\n    if (depth > 20) {\n        return '...';\n    }\n    let result = '';\n    if (typeof val === 'undefined') {\n        return 'undefined';\n    }\n    if (val instanceof ESPrimitive) {\n        return val.str().valueOf();\n    }\n    if (val instanceof Node) {\n        return `<RunTimeNode: ${val.constructor.name}>`;\n    }\n    switch (typeof val) {\n        case 'object':\n            if (Array.isArray(val)) {\n                result += '[';\n                for (let item of val) {\n                    try {\n                        result += str(item, depth + 1) + `, `;\n                    }\n                    catch (e) {\n                        result += '<large property>, ';\n                    }\n                }\n                if (val.length) {\n                    result = result.substring(0, result.length - 2);\n                }\n                result += ']';\n            }\n            else {\n                try {\n                    result += val.constructor.name;\n                }\n                catch (e) {\n                    result += 'UNKNOWN_CONSTRUCTOR';\n                }\n                result += ': {\\n';\n                let i = 0;\n                for (let item in val) {\n                    i++;\n                    if (!val.hasOwnProperty || !val.hasOwnProperty(item)) {\n                        continue;\n                    }\n                    result += `  ${item}: ${str(val[item], depth + 1) || ''}, \\n`;\n                }\n                if (i > 0) {\n                    result = result.substring(0, result.length - 3);\n                }\n                result += '\\n}\\n';\n            }\n            break;\n        case 'string':\n            result = `'${val}'`;\n            break;\n        case \"bigint\":\n        case \"number\":\n        case \"boolean\":\n            result = `${val}`;\n            break;\n        case \"undefined\":\n            result = '<NativeUndefined>';\n            break;\n        case \"function\":\n            result = `<NativeFunction ${val.name}>`;\n            break;\n    }\n    for (let i = 0; i < depth; i++) {\n        result = indent(result);\n    }\n    return result;\n}\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms));\nexport function indent(str) {\n    return str.replace(/\\n/g, '\\n    ');\n}\nexport function generateRandomSymbol(symbols, length = 10) {\n    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_';\n    const gen = () => {\n        let result = '';\n        for (let i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * characters.length));\n        }\n        return result;\n    };\n    let symbol = gen();\n    while (symbols.indexOf(symbol) !== -1) {\n        symbol = gen();\n    }\n    return symbol;\n}\n","import { IS_NODE_INSTANCE } from './constants';\nimport { Position } from \"./position\";\nimport { str } from \"./util/util\";\nimport chalk from \"./util/colours\";\nexport class ESError {\n    constructor(pos, name, details) {\n        this.traceback = [];\n        this.pos = pos;\n        this.name = name;\n        this.details = details;\n    }\n    get colouredStr() {\n        let out = '';\n        if (this.traceback.length) {\n            out = chalk.yellow('Error Traceback (most recent call last):\\n');\n            for (let pos of [...this.traceback].reverse())\n                out += `    ${chalk.cyan(pos.position.str)}:\\n        ${pos.line}\\n`;\n        }\n        out += `${chalk.red(this.name)}: ${this.details} \\n at ${chalk.cyan(this.pos.str)}`;\n        return out;\n    }\n    get str() {\n        return `${this.name}: ${this.details} \\n at ${this.pos.str}`;\n    }\n}\nexport class IllegalCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'IllegalCharError', `'${char}'`);\n    }\n}\nexport class InvalidSyntaxError extends ESError {\n    constructor(pos, details) {\n        super(pos, 'InvalidSyntaxError', details);\n    }\n}\nexport class ExpectedCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'ExpectedCharError', `'${char}'`);\n    }\n}\nexport class TypeError extends ESError {\n    constructor(pos, expectedType, actualType, value = '', detail = '') {\n        super(pos, 'TypeError', `Expected type '${expectedType}', got type '${actualType}' ${typeof value === 'undefined' ? '' : ` on value '${str(value)}'`} ${!detail ? '' : detail}`);\n    }\n}\nexport class ImportError extends ESError {\n    constructor(pos, url, detail = '') {\n        super(pos, 'ImportError', `Could not import ${url}: ${detail}`);\n    }\n}\nexport class ReferenceError extends ESError {\n    constructor(pos, ref) {\n        super(pos, 'ReferenceError', `${ref} is not defined`);\n    }\n}\nexport class IndexError extends ESError {\n    constructor(pos, ref, object) {\n        var _a;\n        super(pos, 'IndexError', `'${ref}' is not a property of '${((_a = object === null || object === void 0 ? void 0 : object.info) === null || _a === void 0 ? void 0 : _a.name) || str(object)}'`);\n    }\n}\nexport class InvalidOperationError extends ESError {\n    constructor(op, value, detail = '', pos = Position.void) {\n        var _a;\n        super(pos, 'TypeError', `Cannot perform '${op}' on value ${((_a = value === null || value === void 0 ? void 0 : value.info) === null || _a === void 0 ? void 0 : _a.name) || str(value)}: ${detail}`);\n    }\n}\nexport class InvalidRuntimeError extends ESError {\n    constructor() {\n        super(Position.void, 'InvalidRuntimeError', `Required runtime of ${IS_NODE_INSTANCE ? 'browser' : 'node'}`);\n    }\n}\nexport class TestFailed extends ESError {\n    constructor(detail) {\n        super(Position.void, 'TestFailed', detail);\n    }\n}\nexport class PermissionRequiredError extends ESError {\n    constructor(detail) {\n        super(Position.void, 'PermissionRequiredError', detail);\n    }\n}\n","export class Token {\n    constructor(pos, type, value) {\n        this.type = type;\n        this.value = value;\n        this.pos = pos;\n    }\n    matches(type, val) {\n        return this.type === type && this.value === val;\n    }\n}\n","import { Position } from \"../position\";\nimport { digits, doubleCharTokens, identifierChars, KEYWORDS, multiLineCommentEnd, multiLineCommentStart, singleCharTokens, singleLineComment, stringSurrounds, tripleCharTokens, tt, } from '../constants';\nimport { IllegalCharError } from \"../errors\";\nimport { Token } from \"./tokens\";\nexport class Lexer {\n    constructor(program, fileName) {\n        this.text = program;\n        this.position = new Position(-1, 0, -1, fileName);\n        this.advance();\n    }\n    advance() {\n        this.position.advance(this.currentChar);\n        this.currentChar = this.text[this.position.idx];\n    }\n    generate() {\n        if (!this.text) {\n            return [new Token(this.position, tt.EOF, undefined)];\n        }\n        const tokens = [];\n        while (this.currentChar !== undefined) {\n            if (' \\t\\n'.includes(this.currentChar)) {\n                this.advance();\n            }\n            else if (digits.includes(this.currentChar)) {\n                tokens.push(this.makeNumber());\n            }\n            else if (this.currentChar === singleLineComment[0] &&\n                this.text[this.position.idx + 1] === singleLineComment[1]) {\n                this.singleLineComment();\n            }\n            else if (this.currentChar === multiLineCommentStart[0] &&\n                this.text[this.position.idx + 1] === multiLineCommentStart[1]) {\n                this.multiLineComment();\n            }\n            else if (identifierChars.includes(this.currentChar)) {\n                tokens.push(this.makeIdentifier());\n            }\n            else if (stringSurrounds.indexOf(this.currentChar) !== -1) {\n                tokens.push(this.makeString());\n            }\n            else {\n                const possibleAssignFirstChar = this.currentChar;\n                let token = this.unknownChar();\n                if (token) {\n                    if (token.type === tt.ASSIGN) {\n                        token.value = possibleAssignFirstChar;\n                    }\n                    tokens.push(token);\n                }\n                else {\n                    let pos = this.position.clone;\n                    let char = this.currentChar;\n                    this.advance();\n                    return new IllegalCharError(pos, char);\n                }\n            }\n        }\n        tokens.push(new Token(this.position, tt.EOF, undefined));\n        return tokens;\n    }\n    makeNumber() {\n        const pos = this.position.clone;\n        let numStr = '';\n        let dotCount = 0;\n        while (this.currentChar !== undefined && (digits + '._').includes(this.currentChar)) {\n            if (this.currentChar === '.') {\n                if (dotCount === 1) {\n                    break;\n                }\n                dotCount++;\n                numStr += '.';\n            }\n            else if (this.currentChar !== '_') {\n                numStr += this.currentChar;\n            }\n            this.advance();\n        }\n        return new Token(pos, tt.NUMBER, parseFloat(numStr));\n    }\n    makeString() {\n        const pos = this.position.clone;\n        let str = '';\n        let strClose = this.currentChar;\n        this.advance();\n        while (this.currentChar !== strClose && this.currentChar !== undefined) {\n            if (this.currentChar === '\\\\') {\n                this.advance();\n                if (this.currentChar === 'n') {\n                    str += '\\n';\n                    this.advance();\n                    continue;\n                }\n            }\n            str += this.currentChar;\n            this.advance();\n        }\n        this.advance();\n        return new Token(pos, tt.STRING, str);\n    }\n    makeIdentifier() {\n        let idStr = '';\n        const posStart = this.position.clone;\n        while (this.currentChar !== undefined && (identifierChars + digits).includes(this.currentChar)) {\n            idStr += this.currentChar;\n            this.advance();\n        }\n        let tokType = tt.IDENTIFIER;\n        if (KEYWORDS.indexOf(idStr) !== -1) {\n            tokType = tt.KEYWORD;\n        }\n        return new Token(posStart, tokType, idStr);\n    }\n    unknownChar() {\n        if (this.currentChar === undefined) {\n            return undefined;\n        }\n        for (let triple in tripleCharTokens) {\n            if (triple[0] === this.currentChar)\n                if (triple[1] === this.text[this.position.idx + 1])\n                    if (triple[2] === this.text[this.position.idx + 2]) {\n                        const pos = this.position.clone;\n                        this.advance();\n                        this.advance();\n                        this.advance();\n                        return new Token(pos, tripleCharTokens[triple], undefined);\n                    }\n        }\n        for (let double in doubleCharTokens) {\n            if (double[0] === this.currentChar)\n                if (double[1] === this.text[this.position.idx + 1]) {\n                    const pos = this.position.clone;\n                    this.advance();\n                    this.advance();\n                    return new Token(pos, doubleCharTokens[double], undefined);\n                }\n        }\n        if (singleCharTokens.hasOwnProperty(this.currentChar)) {\n            let pos = this.position.clone;\n            let val = singleCharTokens[this.currentChar];\n            this.advance();\n            return new Token(pos, val, undefined);\n        }\n        return undefined;\n    }\n    singleLineComment() {\n        this.advance();\n        while (this.currentChar !== '\\n' && this.currentChar !== undefined) {\n            this.advance();\n        }\n        this.advance();\n    }\n    multiLineComment() {\n        this.advance();\n        while (!(this.currentChar === multiLineCommentEnd[0] &&\n            this.text[this.position.idx + 1] === multiLineCommentEnd[1])) {\n            this.advance();\n        }\n        this.advance();\n        this.advance();\n    }\n}\n","import { tokenType, tokenTypeString, tt, types, VAR_DECLARE_KEYWORDS } from '../constants';\nimport { Token } from \"./tokens\";\nimport * as n from '../runtime/nodes';\nimport { N_functionDefinition, N_namespace, N_primitiveWrapper, N_tryCatch, N_undefined, N_variable, } from '../runtime/nodes';\nimport { ESError, InvalidSyntaxError } from \"../errors\";\nexport class ParseResults {\n    constructor() {\n        this.advanceCount = 0;\n        this.lastRegisteredAdvanceCount = 0;\n        this.reverseCount = 0;\n    }\n    registerAdvance() {\n        this.advanceCount = 1;\n        this.lastRegisteredAdvanceCount++;\n    }\n    register(res) {\n        this.lastRegisteredAdvanceCount = res.advanceCount;\n        this.advanceCount += res.advanceCount;\n        if (res.error) {\n            this.error = res.error;\n        }\n        if (!res.node) {\n            return new N_undefined();\n        }\n        return res.node;\n    }\n    tryRegister(res) {\n        if (res.error) {\n            this.reverseCount += res.advanceCount;\n            return;\n        }\n        return this.register(res);\n    }\n    success(node) {\n        this.node = node;\n        return this;\n    }\n    failure(error) {\n        this.error = error;\n        return this;\n    }\n}\nexport class Parser {\n    constructor(tokens) {\n        this.tokens = tokens;\n        this.tokenIdx = -1;\n        this.currentToken = tokens[0];\n        this.advance();\n    }\n    parse() {\n        var _a;\n        if (!this.currentToken || !this.tokens || (this.tokens.length === 1 && this.tokens[0].type === tt.EOF)) {\n            return new ParseResults();\n        }\n        const res = this.statements(true);\n        if (!res.error && this.currentToken.type !== tokenType.EOF) {\n            return res.failure(new InvalidSyntaxError((_a = this.currentToken) === null || _a === void 0 ? void 0 : _a.pos, `Expected 'End of File', got token of type '${tokenTypeString[this.currentToken.type]}'`));\n        }\n        return res;\n    }\n    advance(res) {\n        if (res)\n            res.registerAdvance();\n        this.tokenIdx++;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    reverse(amount = 1) {\n        this.tokenIdx -= amount;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    consume(res, type, errorMsg) {\n        if (this.currentToken.type !== type)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, errorMsg !== null && errorMsg !== void 0 ? errorMsg : `Expected '${tokenTypeString[type]}' but got '${tokenTypeString[this.currentToken.type]}'`));\n        this.advance(res);\n    }\n    clearEndStatements(res) {\n        while (this.currentToken.type === tt.ENDSTATEMENT) {\n            this.advance(res);\n        }\n    }\n    statements(topLevel = false) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let statements = [];\n        this.clearEndStatements(res);\n        const firstStatement = res.register(this.statement());\n        if (!firstStatement) {\n            return res;\n        }\n        statements.push(firstStatement);\n        if (res.error) {\n            return res;\n        }\n        let moreStatements = true;\n        while (true) {\n            let newLineCount = 0;\n            while (this.currentToken.type === tt.ENDSTATEMENT) {\n                this.advance(res);\n                newLineCount++;\n            }\n            if (newLineCount === 0) {\n                moreStatements = false;\n            }\n            if (!moreStatements) {\n                break;\n            }\n            const statement = res.tryRegister(this.statement());\n            if (!statement) {\n                this.reverse(res.reverseCount);\n                continue;\n            }\n            statements.push(statement);\n        }\n        this.clearEndStatements(res);\n        let node = new n.N_statements(pos, statements, topLevel);\n        return res.success(node);\n    }\n    statement() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        if (this.currentToken.matches(tt.KEYWORD, 'return')) {\n            return this.returnStatement(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'yield')) {\n            return this.returnStatement(res, true);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'break')) {\n            this.advance(res);\n            return res.success(new n.N_break(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'continue')) {\n            this.advance(res);\n            return res.success(new n.N_continue(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'try')) {\n            return this.tryCatch();\n        }\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    returnStatement(res, isYield = false) {\n        const pos = this.currentToken.pos;\n        this.advance(res);\n        let expr = new N_undefined(this.currentToken.pos);\n        if (this.currentToken.type !== tt.ENDSTATEMENT) {\n            let exprRes = res.register(this.expr());\n            if (!exprRes) {\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'Expected end of statement'));\n            }\n            expr = exprRes;\n        }\n        if (isYield) {\n            return res.success(new n.N_yield(pos, expr));\n        }\n        return res.success(new n.N_return(pos, expr));\n    }\n    atom() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        const pos = this.currentToken.pos;\n        switch (tok.type) {\n            case tt.NUMBER:\n                this.advance(res);\n                return res.success(new n.N_number(pos, tok));\n            case tt.STRING:\n                this.advance(res);\n                return res.success(new n.N_string(pos, tok));\n            case tt.IDENTIFIER:\n                return this.atomIdentifier(res, pos, tok);\n            case tt.OPAREN:\n                this.advance(res);\n                const expr = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type === tt.CPAREN) {\n                    this.advance(res);\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ')'\"));\n            case tt.OSQUARE:\n                let arrayExpr = res.register(this.array());\n                if (res.error)\n                    return res;\n                return res.success(arrayExpr);\n            case tt.OBRACES:\n                let objectExpr = res.register(this.object());\n                if (res.error)\n                    return res;\n                return res.success(objectExpr);\n            case tt.KEYWORD:\n                if (tok.value === 'if') {\n                    const expr = res.register(this.ifExpr());\n                    if (res.error)\n                        return res;\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Invalid Identifier ${tok.value}`));\n            default:\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected number, identifier, '(', '+' or '-'`));\n        }\n    }\n    atomIdentifier(res, pos, tok) {\n        this.advance(res);\n        let node = new n.N_variable(tok);\n        let prevNode = new n.N_undefined(pos);\n        let functionCall = false;\n        while ([tt.OPAREN, tt.OSQUARE, tt.DOT].indexOf(this.currentToken.type) !== -1) {\n            switch (this.currentToken.type) {\n                case tt.OPAREN:\n                    functionCall = true;\n                    const tempNode = node;\n                    node = res.register(this.makeFunctionCall(node));\n                    prevNode = tempNode;\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.OSQUARE:\n                    prevNode = node;\n                    node = res.register(this.makeIndex(node));\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.DOT:\n                    this.advance(res);\n                    if (this.currentToken.type !== tt.IDENTIFIER) {\n                        return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected identifier after '.'`));\n                    }\n                    prevNode = node;\n                    node = new n.N_indexed(this.currentToken.pos, node, new n.N_string(this.currentToken.pos, this.currentToken));\n                    this.advance(res);\n            }\n        }\n        if (this.currentToken.type === tt.ASSIGN) {\n            let assignType = this.currentToken.value;\n            if (functionCall) {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot assign to return value of function`));\n            }\n            this.advance(res);\n            const value = res.register(this.expr());\n            if (node instanceof n.N_variable) {\n                node = new n.N_varAssign(pos, node.a, value, assignType, false);\n            }\n            else if (node instanceof n.N_indexed) {\n                node.value = value;\n                node.assignType = assignType;\n            }\n            else {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot have node of type ${this.currentToken.constructor.name}.\n                            Expected either index or variable node.`));\n            }\n            if (res.error)\n                return res;\n        }\n        return res.success(node);\n    }\n    power() {\n        return this.binOp(() => this.atom(), [tt.POW, tt.MOD, tt.APMERSAND, tt.PIPE], () => this.factor());\n    }\n    factor() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        if (tok.type === tt.ADD || tok.type === tt.SUB || tok.type === tt.BITWISE_NOT) {\n            this.advance(res);\n            const factor = res.register(this.factor());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(tok.pos, factor, tok));\n        }\n        return this.power();\n    }\n    term() {\n        return this.binOp(() => this.factor(), [tt.MUL, tt.DIV]);\n    }\n    arithmeticExpr() {\n        return this.binOp(() => this.term(), [tt.ADD, tt.SUB]);\n    }\n    comparisonExpr() {\n        const res = new ParseResults();\n        if (this.currentToken.type === tt.NOT) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            let node = res.register(this.expr());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(opTok.pos, node, opTok));\n        }\n        if (this.currentToken.type === tt.BITWISE_NOT) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            let node = res.register(this.expr());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(opTok.pos, node, opTok));\n        }\n        let node = res.register(this.binOp(() => this.arithmeticExpr(), [tt.EQUALS, tt.NOTEQUALS, tt.GT, tt.GTE, tt.LTE, tt.LT]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    expr() {\n        const res = new ParseResults();\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.KEYWORD && VAR_DECLARE_KEYWORDS.indexOf(this.currentToken.value) !== -1) {\n            return this.initiateVar(res);\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'if')) {\n            return this.ifExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'while')) {\n            return this.whileExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'for')) {\n            return this.forExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'func')) {\n            return this.funcExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'class')) {\n            return this.classExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'namespace')) {\n            return this.namespace();\n        }\n        let node = res.register(this.binOp(() => this.comparisonExpr(), [tt.AND, tt.OR]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    binOp(func, ops, funcB = func) {\n        const res = new ParseResults();\n        let left = res.register(func());\n        if (res.error)\n            return res;\n        while (ops.indexOf(this.currentToken.type) !== -1\n            || ops.indexOf([this.currentToken.type, this.currentToken.value]) !== -1) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            const right = res.register(funcB());\n            if (res.error)\n                return res;\n            left = new n.N_binOp(left.pos, left, opTok, right);\n        }\n        return res.success(left);\n    }\n    makeFunctionCall(to) {\n        const res = new ParseResults();\n        let args = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OPAREN) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '['\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n            return res.success(new n.N_functionCall(pos, to, []));\n        }\n        args.push(res.register(this.expr()));\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid argument\"));\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            args.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CPAREN)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n        this.advance(res);\n        return res.success(new n.N_functionCall(pos, to, args));\n    }\n    makeIndex(to) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const base = to;\n        if (this.currentToken.type !== tt.OSQUARE)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, `Cannot index without expression`));\n        }\n        let index = res.register(this.expr());\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid index\"));\n        if (this.currentToken.type !== tt.CSQUARE)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ']'\"));\n        this.advance(res);\n        return res.success(new n.N_indexed(pos, base, index));\n    }\n    typeExpr(res) {\n        if (this.currentToken.type === tt.IDENTIFIER) {\n            const tok = this.currentToken;\n            this.advance(res);\n            return res.success(new N_variable(tok));\n        }\n        return this.expr();\n    }\n    initiateVar(res) {\n        let pos = this.currentToken.pos;\n        let isConst = true;\n        let isGlobal = false;\n        let isDeclaration = false;\n        if (this.currentToken.type === tt.KEYWORD &&\n            this.currentToken.value === 'global') {\n            isDeclaration = true;\n            isGlobal = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD &&\n            this.currentToken.value === 'let') {\n            isDeclaration = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        else if (this.currentToken.type === tt.KEYWORD &&\n            this.currentToken.value === 'var') {\n            isDeclaration = true;\n            isConst = false;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected variable declaration keyword, not ${this.currentToken.value}`));\n        }\n        if (this.currentToken.type !== tokenType.IDENTIFIER) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected Identifier or Keyword`));\n        }\n        const varName = this.currentToken;\n        this.advance(res);\n        let type = types.any;\n        if (this.currentToken.type === tt.COLON) {\n            isDeclaration = true;\n            this.consume(res, tt.COLON);\n            type = res.register(this.typeExpr(res));\n        }\n        if (this.currentToken.type !== tt.ASSIGN) {\n            if (isConst)\n                return res.failure(new InvalidSyntaxError(pos, 'Cannot initialise constant to undefined'));\n            return res.success(new n.N_varAssign(pos, varName, new n.N_undefined(this.currentToken.pos), '=', isGlobal, isConst, isDeclaration, type));\n        }\n        let assignType = this.currentToken.value;\n        this.advance(res);\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        if (expr instanceof n.N_class || expr instanceof n.N_functionDefinition) {\n            expr.name = varName.value;\n        }\n        if (expr instanceof N_namespace) {\n            expr.name = varName.value;\n            expr.mutable = !isConst;\n        }\n        return res.success(new n.N_varAssign(pos, varName, expr, assignType, isGlobal, isConst, isDeclaration, type));\n    }\n    bracesExp() {\n        const res = new ParseResults();\n        this.consume(res, tt.OBRACES);\n        if (res.error) {\n            return res;\n        }\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_undefined(this.currentToken.pos));\n        }\n        const expr = res.register(this.statements());\n        if (res.error) {\n            return res;\n        }\n        this.consume(res, tt.CBRACES);\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    addEndStatement(res) {\n        this.tokens.splice(this.tokenIdx, 0, new Token(this.currentToken.pos, tt.ENDSTATEMENT, undefined));\n        this.reverse();\n        this.advance(res);\n    }\n    ifExpr() {\n        const res = new ParseResults();\n        let ifTrue;\n        let ifFalse;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'if'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'if'\"));\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        ifTrue = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.clearEndStatements(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'else')) {\n            this.advance(res);\n            if (this.currentToken.type == tt.OBRACES) {\n                ifFalse = res.register(this.bracesExp());\n                if (res.error)\n                    return res;\n            }\n            else {\n                ifFalse = res.register(this.statement());\n                if (res.error)\n                    return res;\n            }\n        }\n        this.addEndStatement(res);\n        return res.success(new n.N_if(pos, condition, ifTrue, ifFalse));\n    }\n    whileExpr() {\n        const res = new ParseResults();\n        let loop;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'while')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'while'\"));\n        }\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        loop = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        return res.success(new n.N_while(pos, condition, loop));\n    }\n    parameter(res) {\n        let name;\n        let type = new n.N_primitiveWrapper(types.any);\n        if (this.currentToken.type !== tt.IDENTIFIER) {\n            return new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\");\n        }\n        name = this.currentToken.value;\n        this.advance(res);\n        if (this.currentToken.type === tt.COLON) {\n            this.consume(res, tt.COLON);\n            if (res.error)\n                return res.error;\n            type = res.register(this.typeExpr(res));\n            if (res.error)\n                return res.error;\n        }\n        return { name, type };\n    }\n    funcCore() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, args = [], returnType = new n.N_primitiveWrapper(types.any);\n        this.consume(res, tt.OPAREN);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n        }\n        else {\n            let param = this.parameter(res);\n            if (param instanceof ESError) {\n                return res.failure(param);\n            }\n            args.push(param);\n            while (this.currentToken.type === tt.COMMA) {\n                this.advance(res);\n                let param = this.parameter(res);\n                if (param instanceof ESError)\n                    return res.failure(param);\n                args.push(param);\n            }\n            if (this.currentToken.type !== tt.CPAREN)\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n            this.advance(res);\n        }\n        if (this.currentToken.type === tt.COLON) {\n            this.advance(res);\n            returnType = res.register(this.typeExpr(res));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.OBRACES) {\n            body = new n.N_return(this.currentToken.pos, res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        else {\n            this.consume(res, tt.OBRACES);\n            if (res.error)\n                return res;\n            if (this.currentToken.type !== tt.CBRACES)\n                body = res.register(this.statements());\n            else\n                body = new n.N_undefined(this.currentToken.pos);\n            this.consume(res, tt.CBRACES);\n            if (res.error)\n                return res;\n        }\n        return res.success(new n.N_functionDefinition(pos, body, args, returnType));\n    }\n    funcExpr() {\n        const res = new ParseResults();\n        if (!this.currentToken.matches(tt.KEYWORD, 'func'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'func'\"));\n        this.advance(res);\n        const func = res.register(this.funcCore());\n        if (res.error)\n            return res;\n        return res.success(func);\n    }\n    classExpr(name) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const methods = [];\n        let init;\n        let extends_ = new N_primitiveWrapper(types.object);\n        if (!this.currentToken.matches(tt.KEYWORD, 'class')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'class'\"));\n        }\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'extends')) {\n            this.advance(res);\n            extends_ = res.register(this.expr());\n            if (res.error)\n                return res;\n        }\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_class(pos, [], extends_, undefined, name));\n        }\n        while (true) {\n            if (this.currentToken.type !== tt.IDENTIFIER) {\n                break;\n            }\n            let methodId = this.currentToken.value;\n            this.advance(res);\n            const func = res.register(this.funcCore());\n            if (res.error)\n                return res;\n            if (!(func instanceof N_functionDefinition)) {\n                return res.failure(new ESError(this.currentToken.pos, 'ParseError', `Tried to get function, but got ${func} instead`));\n            }\n            func.name = methodId;\n            if (methodId === 'init') {\n                init = func;\n            }\n            else {\n                methods.push(func);\n            }\n        }\n        this.consume(res, tt.CBRACES);\n        return res.success(new n.N_class(pos, methods, extends_, init, name));\n    }\n    forExpr() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, array, identifier, isConst = true;\n        if (!this.currentToken.matches(tt.KEYWORD, 'for')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'for'\"));\n        }\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'var')) {\n            isConst = false;\n            this.advance(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'let')) {\n            this.advance(res);\n        }\n        if (res.error)\n            return res;\n        if (this.currentToken.type !== tt.IDENTIFIER) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\"));\n        }\n        identifier = this.currentToken;\n        this.advance(res);\n        if (!this.currentToken.matches(tt.KEYWORD, 'in')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected keyword 'in\"));\n        }\n        this.advance(res);\n        array = res.register(this.expr());\n        if (res.error)\n            return res;\n        body = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new n.N_for(pos, body, array, identifier, false, isConst));\n    }\n    array() {\n        const res = new ParseResults();\n        let elements = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            this.advance(res);\n            return res.success(new n.N_array(pos, []));\n        }\n        elements.push(res.register(this.expr()));\n        if (res.error) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Unexpected token\"));\n        }\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            elements.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ']'\"));\n        }\n        this.advance(res);\n        return res.success(new n.N_array(pos, elements));\n    }\n    object() {\n        const res = new ParseResults();\n        let properties = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OBRACES) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '{\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_objectLiteral(pos, []));\n        }\n        while (true) {\n            let keyType, key, value;\n            if (this.currentToken.type === tt.IDENTIFIER) {\n                keyType = 'id';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.STRING) {\n                keyType = 'string';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.OSQUARE) {\n                keyType = 'value';\n                this.advance(res);\n                key = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.CSQUARE) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ']', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                this.advance(res);\n            }\n            else {\n                break;\n            }\n            if (this.currentToken.type === tt.COLON) {\n                this.advance(res);\n                value = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                if (this.currentToken.type === tt.COMMA) {\n                    this.advance(res);\n                }\n            }\n            else {\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                if (keyType !== 'id') {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `You must specify a value when initialising an object literal with a key that is not an identifier.\n                        Try using \\`key: value\\` syntax.`));\n                }\n                this.reverse();\n                value = new n.N_variable(this.currentToken);\n                this.advance(res);\n                if (this.currentToken.type === tt.COMMA) {\n                    this.advance(res);\n                }\n            }\n            properties.push([key, value]);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CBRACES)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier, ',' or '}'\"));\n        this.advance(res);\n        return res.success(new n.N_objectLiteral(pos, properties));\n    }\n    namespace() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_namespace(pos, new n.N_undefined()));\n        }\n        const statements = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        return res.success(new n.N_namespace(pos, statements));\n    }\n    tryCatch() {\n        const res = new ParseResults();\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'No empty try block'));\n        }\n        const body = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.value !== 'catch') {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'try block requires catch'));\n        }\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.success(new N_tryCatch(this.currentToken.pos, body, new N_undefined()));\n        }\n        const catchBlock = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new N_tryCatch(this.currentToken.pos, body, catchBlock));\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Lexer } from \"./parse/lexer\";\nimport { Parser } from \"./parse/parser\";\nimport { global, libs as allLibs, now, refreshPerformanceNow, runningInNode, setGlobalContext, VERSION } from \"./constants\";\nimport { initialise } from \"./init\";\nimport { ESError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { compileResult, interpretResult, Node } from \"./runtime/nodes\";\nimport { ESArray, initPrimitiveTypes } from \"./runtime/primitiveTypes\";\nimport { Context } from \"./runtime/context\";\nimport addNodeLibs from \"./built-in/nodeLibs\";\nimport colours from './util/colours';\nimport JS_STD_TXT_RAW from 'raw-loader!./built-in/compiledSTD/std.txt.js';\nimport PY_STD_TXT_RAW from 'raw-loader!./built-in/compiledSTD/std.txt.py';\nimport { preloadModules } from \"./built-in/builtInModules\";\nimport { config } from \"./config\";\nexport { Context, colours, Position, };\nexport * from './runtime/primitiveTypes';\nexport { VERSION, global, setGlobalContext, IS_NODE_INSTANCE, runningInNode, libs, now, refreshPerformanceNow, configFileName } from './constants';\nexport * from './errors';\nexport * from './runtime/nodes';\nexport * from './util/util';\nexport { strip, wrap } from './runtime/primitives/wrapStrip';\nexport { ESSymbol } from './runtime/symbol';\nexport { parseConfig, config } from './config';\nexport function init(printFunc = console.log, inputFunc, node = true, libs = { print: console.log }, context = new Context(), path = '') {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        initPrimitiveTypes();\n        const res = initialise(context, printFunc, inputFunc);\n        if (res instanceof ESError) {\n            return res;\n        }\n        setGlobalContext(context);\n        (_a = libs['context']) !== null && _a !== void 0 ? _a : (libs['context'] = context);\n        if (path) {\n            context.path = path;\n        }\n        if (libs.print) {\n            allLibs.print = libs.print;\n        }\n        if (node) {\n            runningInNode();\n            yield refreshPerformanceNow(true);\n            addNodeLibs(libs, context);\n        }\n        let modulePreloadRes = yield preloadModules(config.modules);\n        if (modulePreloadRes instanceof ESError) {\n            return modulePreloadRes;\n        }\n        return global;\n    });\n}\nexport function run(msg, { env = global, measurePerformance = false, fileName = '(unknown)', currentDir = '' } = {}) {\n    if (currentDir) {\n        env.path = currentDir;\n    }\n    Node.maxTime = 0;\n    Node.totalTime = 0;\n    Node.interprets = 0;\n    const timeData = {\n        total: 0,\n        lexerTotal: 0,\n        parserTotal: 0,\n        interpretTotal: 0,\n        nodeMax: 0,\n        nodeAvg: 0,\n        nodeTotal: 0,\n        interprets: 0,\n    };\n    let start = now();\n    if (!env.root.initialisedAsGlobal) {\n        const res = new interpretResult();\n        res.error = new ESError(Position.void, 'Uninitialised', 'Global context has not been initialised with global values');\n        return res;\n    }\n    const lexer = new Lexer(msg, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        const res_ = new interpretResult();\n        res_.error = lexerRes;\n        return res_;\n    }\n    timeData.lexerTotal = now() - start;\n    start = now();\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        const res_ = new interpretResult();\n        res_.error = res.error;\n        return res_;\n    }\n    timeData.parserTotal = now() - start;\n    start = now();\n    if (!res.node) {\n        const res = new interpretResult();\n        res.val = new ESArray([]);\n        return res;\n    }\n    const finalRes = res.node.interpret(env);\n    timeData.interpretTotal = now() - start;\n    timeData.total = now() - start;\n    timeData.nodeMax = Node.maxTime;\n    timeData.nodeTotal = Node.totalTime;\n    timeData.nodeAvg = Node.totalTime / Node.interprets;\n    timeData.interprets = Node.interprets;\n    if (measurePerformance) {\n        console.log(timeData);\n    }\n    return Object.assign(Object.assign({}, finalRes), { timeData });\n}\nexport function parse(code, { fileName = '(unknown)', currentDir = '' } = {}) {\n    const lexer = new Lexer(code, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        return {\n            error: lexerRes\n        };\n    }\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        return {\n            error: res.error\n        };\n    }\n    if (!res.node) {\n        return {\n            error: new ESError(Position.void, 'Error', 'no output')\n        };\n    }\n    return {\n        compileToJavaScript: (config) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            const comment = `// Generated by EntropyScript->JavaScript compiler v${VERSION}\\n`;\n            const stdStr = JS_STD_TXT_RAW.toString().replace(/(\\r\\n|\\n|\\r|\\t| )+/gm, ' ') + '\\n';\n            const out = res.node.compileJS(config);\n            if (out.error)\n                return out;\n            if (config.minify) {\n                out.val = out.val.replace(/(\\r\\n|\\n|\\r|\\t| )+/gm, ' ');\n            }\n            return new compileResult(comment + stdStr + out.val);\n        },\n        compileToPython: (config) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            const comment = `# Generated by EntropyScript->Python compiler v${VERSION}\\n\\n`;\n            const stdStr = PY_STD_TXT_RAW.toString() + '\\n';\n            const out = res.node.compilePy(config);\n            if (out.error)\n                return out;\n            return new compileResult(comment + stdStr + out.hoisted + '\\n' + out.val);\n        },\n        interpret: (env = global) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            if (currentDir) {\n                env.path = currentDir;\n            }\n            if (!env.root.initialisedAsGlobal) {\n                const res = new interpretResult();\n                res.error = new ESError(Position.void, 'Uninitialised', 'Global context has not been initialised with global values');\n                return res;\n            }\n            return res.node.interpret(env);\n        },\n    };\n}\n","import { Position } from \"../position\";\nimport { Context } from \"../runtime/context\";\nimport { ESError, ImportError, PermissionRequiredError } from '../errors';\nimport { ESFunction, ESNamespace, ESObject, ESString } from '../runtime/primitiveTypes';\nimport { str } from \"../util/util\";\nimport { config, run } from '../index';\nimport { addModule, getModule, moduleExist } from './builtInModules';\nimport { global, types, VALID_FILE_ENCODINGS } from \"../constants\";\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nfunction addNodeLibs(libs, context) {\n    const { fs, path } = libs;\n    for (let libName of Object.keys(libs)) {\n        addModule(libName, new ESJSBinding(libs[libName], libName));\n    }\n    context.set('import', new ESFunction(({ context }, rawPath) => {\n        if (!config.permissions.imports) {\n            return new PermissionRequiredError('Imports not allowed');\n        }\n        let scriptPath = str(rawPath);\n        if (config.permissions.useSTD && moduleExist(scriptPath)) {\n            return getModule(scriptPath);\n        }\n        scriptPath = path.join(context.path, scriptPath);\n        try {\n            if (!fs.existsSync(scriptPath)) {\n                if (fs.existsSync('./particles/' + scriptPath)) {\n                    if (fs.existsSync('particles/' + scriptPath + '/main.es')) {\n                        scriptPath = 'particles/' + scriptPath + '/main.es';\n                    }\n                    else {\n                        return new ESError(Position.void, 'ImportError', `Module '${scriptPath}' has no entry point. Requires 'main.es'.`);\n                    }\n                }\n                else {\n                    return new ESError(Position.void, 'ImportError', `Can't find file '${scriptPath}' to import.`);\n                }\n            }\n            const exDir = path.dirname(scriptPath);\n            const code = fs.readFileSync(scriptPath, 'utf-8');\n            const env = new Context();\n            env.parent = global;\n            env.path = exDir;\n            const n = new ESNamespace(new ESString(scriptPath), {});\n            const res = run(code, {\n                env,\n                fileName: scriptPath,\n                currentDir: exDir,\n            });\n            n.__value__ = env.getSymbolTableAsDict();\n            if (res.error) {\n                return res.error;\n            }\n            return n;\n        }\n        catch (E) {\n            return new ESError(Position.void, 'ImportError', E.toString());\n        }\n    }, [{ name: 'path', type: types.string }], 'import', undefined, types.object), {\n        forceThroughConst: true,\n        isConstant: true\n    });\n    context.setOwn('open', new ESFunction(({ context }, path_, encoding_) => {\n        if (!config.permissions.fileSystem) {\n            return new PermissionRequiredError('No access to file system');\n        }\n        const filePath = str(path_);\n        let encoding = str(encoding_);\n        if (VALID_FILE_ENCODINGS.indexOf(encoding) === -1) {\n            encoding = 'utf-8';\n        }\n        if (!fs.existsSync(filePath)) {\n            return new ImportError(Position.void, filePath);\n        }\n        return new ESObject({\n            str: new ESFunction(({ context }) => {\n                return new ESString(fs.readFileSync(path.join(context.path, filePath), encoding).toString());\n            }, [], 'str', undefined, types.string),\n            write: new ESFunction(({ context }, data) => {\n                fs.writeFileSync(context.path + filePath, str(data));\n            }, [{ name: 'path', type: types.string }]),\n            append: new ESFunction(({ context }, data) => {\n                fs.appendFileSync(context.path + filePath, str(data));\n            }, [{ name: 'path', type: types.string }]),\n        });\n    }));\n}\nexport default addNodeLibs;\n","export default \"Array.prototype.contains = function (element) {\\n\\treturn this.indexOf(element) !== -1;\\n};\\n\\nfunction parseNum (str) {\\n\\treturn parseFloat(str);\\n}\\n\\nconst print = console.log;\\n\\nNumber.prototype[Symbol.iterator] = function () {\\n\\treturn {\\n\\t\\tcurrent: 0,\\n\\t\\tlast: this,\\n\\t\\tnext() {\\n\\t\\t\\tif (this.current <= this.last) {\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\tdone: false,\\n\\t\\t\\t\\t\\tvalue: this.current++\\n\\t\\t\\t\\t};\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn { done: true };\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n};\\n\\nconst __private__ = {\\n\\tbims: {\\n\\t\\tmath: Math,\\n\\t\\ttime: {\\n\\t\\t\\tdate: Date,\\n\\t\\t\\tnow: Date.now,\\n\\t\\t},\\n\\t},\\n};\\n\\nif (typeof performance !== 'undefined') {\\n\\t__private__.bims.time.now = performance.now;\\n}\\n\\nfunction import_ (path) {\\n\\tif (__private__.bims.hasOwnProperty(path)) {\\n\\t\\treturn __private__.bims[path];\\n\\t}\\n}\\n\\nfunction range (minP, maxP, stepP) {\\n\\tif (typeof minP !== 'number') {\\n\\t\\treturn [];\\n\\t}\\n\\n\\tconst min = minP.valueOf();\\n\\n\\tif (typeof maxP === 'undefined') {\\n\\t\\ttry {\\n\\t\\t\\treturn [...Array(min).keys()];\\n\\t\\t} catch (e) {\\n\\t\\t\\tthrow `RangeError: Cannot make range of length '${min}'`;\\n\\t\\t}\\n\\t}\\n\\n\\tlet step = 1;\\n\\n\\tif (typeof maxP !== 'number') {\\n\\t\\tthrow 'TypeError: Expected number';\\n\\t}\\n\\n\\tlet max = maxP.valueOf();\\n\\n\\tif (typeof stepP !== 'undefined') {\\n\\t\\tif (typeof stepP !== 'number') {\\n\\t\\t\\tthrow 'TypeError: Expected number';\\n\\t\\t}\\n\\t\\tstep = stepP.valueOf();\\n\\t}\\n\\n\\tlet arr = [];\\n\\n\\tlet i = min;\\n\\twhile (i < max) {\\n\\t\\tarr.push(i);\\n\\t\\ti += step;\\n\\t}\\n\\n\\treturn arr;\\n}\";","export default \"\\n###############################\\n# START OF ENTROPY SCRIPT STD #\\n###############################\\nimport time\\n\\nlog = print\\nparseNum = float\\n\\ndef help(thing):\\n    return 'Help is not available in ES compiled Python'\\n\\n\\ndef GENERATE_PRIVATE():\\n    return {\\n        'modules': {\\n            'ascii': {\\n\\n            },\\n            'time': {\\n                'now': lambda: time.time_ns() / (10 ** 6)\\n            }\\n        }\\n    }\\n\\nPRIVATE = GENERATE_PRIVATE()\\n\\ndef import_ (path):\\n    if path in PRIVATE['modules']:\\n        return PRIVATE['modules'][path]\\n\\n\\n#############################\\n# END OF ENTROPY SCRIPT STD #\\n#############################\";"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Position","constructor","idx","ln","col","file","advance","currentChar","clone","str","isUnknown","void","digits","identifierChars","global","setGlobalContext","c","stringSurrounds","IS_NODE_INSTANCE","window","runningInNode","VAR_DECLARE_KEYWORDS","VERSION","configFileName","VALID_FILE_ENCODINGS","print","console","log","KEYWORDS","now","refreshPerformanceNow","thisArg","_arguments","generator","Date","performance","e","P","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","tokenType","tt","tokenTypeString","NUMBER","STRING","ENDSTATEMENT","IDENTIFIER","KEYWORD","COMMA","OBRACES","CBRACES","OPAREN","CPAREN","OSQUARE","CSQUARE","ASSIGN","ADD","SUB","MUL","DIV","POW","MOD","EQUALS","NOTEQUALS","NOT","GT","LT","GTE","LTE","AND","OR","COLON","DOT","EOF","APMERSAND","PIPE","BITWISE_NOT","singleCharTokens","doubleCharTokens","tripleCharTokens","primitiveMethods","types","ESPrimitive","type","any","self","isa","props","type_check","is","ESBoolean","valueOf","__value__","typeName","__type__","has_property","describe","info","isBuiltIn","description","detail","res","strip","TypeError","assign","__add__","n","InvalidOperationError","__subtract__","__multiply__","__divide__","__pow__","__mod__","__eq__","__gt__","__lt__","__and__","__or__","__bool__","__pipe__","__ampersand__","__set_property__","__call__","parameters","ESErrorPrimitive","error","ESError","super","__get_property__","ESString","name","details","ESArray","traceback","map","s","position","line","wrap","IndexError","cast","bool","ESTypeUnion","ESTypeIntersection","ESUndefined","undefined","context","number","ESNumber","string","array","ESType","object","ESObject","ESFunction","boolean","val","length","substr","keys","k","thisElement","nElement","newOb","keysToRemove","Array","isArray","indexOf","toClone","thisType","nValue","func","arguments_","this_","returnType","closure","__closure__","params","path","_a","callContext","fn","newContext","parent","Context","max","Math","i","arg","typeIncludes","setOwn","forceThroughConst","setRes","generateESFunctionCallContext","Node","_b","interpret","funcReturn","callNode","push","callNative","thisReturnVal","args","defaultValue","required","v","ESNamespace","mutable","slice","symbol","isAccessible","isConstant","ESJSBinding","functionsTakeProps","fTakesProps","toString","initPrimitiveTypes","dealWithExtends","class_","instance","superFunc","__extends__","initFunc","__init__","res_","createInstance","runInit","on","primitive","__name__","method","__methods__","methodClone","__instances__","isPrimitive","t","ESTypeArray","left","right","leftRes","__left__","rightRes","__right__","ESTypeNot","__val__","pow","Boolean","helpLink","values","len","contains","element","newArr","num","parseFloat","isNaN","split","repeat","strToInsert","firstPart","lastPart","ESSymbol","identifier","options","_c","thing","Number","String","m","a","codes","red","yellow","green","cyan","blue","grey","code","asciiToChar","fromCharCode","charToAscii","char","charCodeAt","parse","json","JSON","stringify","AllowAny","config","permissions","networking","imports","accessDOM","useSTD","fileSystem","modules","pathAsString","p","substring","parsePartOfConfig","configJSON","unknownProps","filter","x","parseConfig","processedModules","moduleExist","getModule","processed","moduleDict","moduleRaw","processRawModule","builtInFunctions","minP","maxP","stepP","min","arr","returns","msgs","things","out","indent","total","entries","contents","id","has","set","global_","time","cb","sleep","initialise","globalContext","printFunc","inputFunc","rawUrl","url","ImportError","msg","cbRaw","addDependencyInjectedBIFs","builtIn","globalConstants","constant","load","initModRes","date","ascii","domRes","PermissionRequiredError","InvalidRuntimeError","w","$","document","ReferenceError","dom","initModules","initialisedAsGlobal","symbolTable","deleted","path_","parent_","hasOwn","getSymbol","getRawSymbolTableAsDict","symbols","getSymbolTableAsDict","remove","clear","resetAsGlobal","deepClone","interpretArgument","typeRes","defaultValRes","interpretResult","shouldBreak","shouldContinue","compileResult","hoisted","register","node","compilePy","pos","isTerminal","start","interpret_","interprets","totalTime","maxTime","N_binOp","opTok","l","r","lt","eq","gt","InvalidSyntaxError","compileJS","minify","switchers","op","N_unaryOp","numVal","abs","N_varAssign","varNameTok","assignType","isGlobal","isDeclaration","N_primitiveWrapper","typeCheckRes","currentVal","newVal","assignVal","declaration","N_if","comparison","ifTrue","ifFalse","compRes","highIndent","statementRes","ifTrueRes","ifFalseRes","N_statements","N_while","loop","shouldLoop","potentialError","comparisonRes","bodyRes","N_for","body","isGlobalIdentifier","isConstIdentifier","isGlobalId","isConstId","iteration","iteratorRes","N_array","items","shouldClone","interpreted","item","itemRes","N_objectLiteral","properties","keyNode","valueNode","topLevel","last","N_functionCall","to","arguments","join","funcRes","argRes","N_functionDefinition","argNames","returnTypeRes","param","hoistedName","generateRandomSymbol","N_return","valRes","N_yield","N_indexed","base","index","baseRes","indexRes","objectRes","keyRes","N_class","methods","extends_","init","extendsRes","initRes","N_namespace","statements","N_tryCatch","catchBlock","catchRes","N_number","N_string","N_variable","N_undefined","N_break","N_continue","hash","WeakMap","Function","create","getPrototypeOf","Map","from","Set","add","depth","ms","setTimeout","replace","characters","gen","charAt","floor","random","colouredStr","reverse","IllegalCharError","ExpectedCharError","expectedType","actualType","ref","TestFailed","Token","matches","Lexer","program","fileName","text","generate","tokens","includes","makeNumber","singleLineComment","multiLineComment","makeIdentifier","makeString","possibleAssignFirstChar","token","unknownChar","numStr","dotCount","strClose","idStr","posStart","tokType","triple","double","ParseResults","advanceCount","lastRegisteredAdvanceCount","reverseCount","registerAdvance","tryRegister","success","failure","Parser","tokenIdx","currentToken","amount","consume","errorMsg","clearEndStatements","firstStatement","statement","moreStatements","newLineCount","returnStatement","tryCatch","expr","isYield","exprRes","atom","tok","atomIdentifier","arrayExpr","objectExpr","ifExpr","prevNode","functionCall","tempNode","makeFunctionCall","makeIndex","power","binOp","factor","term","arithmeticExpr","comparisonExpr","initiateVar","whileExpr","forExpr","funcExpr","classExpr","namespace","ops","funcB","typeExpr","isConst","varName","bracesExp","addEndStatement","splice","condition","parameter","funcCore","methodId","elements","keyType","libs","fs","libName","rawPath","scriptPath","existsSync","exDir","dirname","readFileSync","env","run","currentDir","E","encoding_","filePath","encoding","write","data","writeFileSync","append","appendFileSync","modulePreloadRes","urls","fetch","splitUrl","scriptName","pop","preloadModules","measurePerformance","timeData","lexerTotal","parserTotal","interpretTotal","nodeMax","nodeAvg","nodeTotal","lexerRes","finalRes","compileToJavaScript","comment","stdStr","compileToPython"],"sourceRoot":""}