{"version":3,"file":"2.11.0.js","mappings":"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","sources":["webpack://es/webpack/universalModuleDefinition","webpack://es/webpack/bootstrap","webpack://es/webpack/runtime/define property getters","webpack://es/webpack/runtime/hasOwnProperty shorthand","webpack://es/webpack/runtime/make namespace object","webpack://es/./src/position.ts","webpack://es/./src/constants.ts","webpack://es/./src/runtime/primitives/primitive.ts","webpack://es/./src/runtime/primitives/esprimitive.ts","webpack://es/./src/runtime/primitives/eserrorprimitive.ts","webpack://es/./src/runtime/instantiator.ts","webpack://es/./src/runtime/primitives/estype.ts","webpack://es/./src/runtime/primitives/esundefined.ts","webpack://es/./src/runtime/primitives/esobject.ts","webpack://es/./src/runtime/primitives/esnamespace.ts","webpack://es/./src/runtime/primitives/esjsbinding.ts","webpack://es/./src/runtime/primitiveTypes.ts","webpack://es/./src/runtime/primitives/esfunction.ts","webpack://es/./src/runtime/functionCaller.ts","webpack://es/./src/runtime/context.ts","webpack://es/./src/runtime/primitives/esnumber.ts","webpack://es/./src/runtime/primitives/esboolean.ts","webpack://es/./src/runtime/primitives/esarray.ts","webpack://es/./src/runtime/primitives/esstring.ts","webpack://es/./src/runtime/symbol.ts","webpack://es/./src/runtime/primitives/wrapStrip.ts","webpack://es/./src/util/colours.ts","webpack://es/./src/built-in/builtInFunctions.ts","webpack://es/./src/built-in/built-in-modules/json.ts","webpack://es/./src/built-in/builtInModules.ts","webpack://es/./src/built-in/built-in-modules/ascii.ts","webpack://es/./src/init.ts","webpack://es/./src/built-in/globalConstants.ts","webpack://es/./src/built-in/built-in-modules/promise.ts","webpack://es/./src/built-in/built-in-modules/time.ts","webpack://es/./src/built-in/built-in-modules/dom.ts","webpack://es/./src/runtime/argument.ts","webpack://es/./src/runtime/nodes.ts","webpack://es/./src/util/util.ts","webpack://es/./src/errors.ts","webpack://es/./src/parse/tokens.ts","webpack://es/./src/parse/lexer.ts","webpack://es/./src/parse/parser.ts","webpack://es/./src/index.ts","webpack://es/./src/built-in/nodeLibs.ts","webpack://es/./src/built-in/compiledSTD/std.txt.js","webpack://es/./src/built-in/compiledSTD/std.txt.py"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"es\"] = factory();\n\telse\n\t\troot[\"es\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Position {\n    constructor(idx, ln, col, file = '(unknown)') {\n        this.idx = idx;\n        this.ln = ln;\n        this.col = col;\n        this.file = file;\n    }\n    advance(currentChar = '') {\n        this.idx++;\n        this.col++;\n        if (currentChar === '\\n') {\n            this.ln++;\n            this.col = 0;\n        }\n        return this;\n    }\n    get clone() {\n        return new Position(this.idx, this.ln, this.col, this.file);\n    }\n    get str() {\n        return `File ${this.file}, ${this.ln + 1}:${this.col + 1}`;\n    }\n    get isUnknown() {\n        return this.idx === -2;\n    }\n    static get unknown() {\n        return new Position(-2, -2, -2, '(unknown)');\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const digits = '0123456789';\nexport const identifierChars = '_$abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nexport const singleLineComment = '//';\nexport const multiLineCommentStart = '/*';\nexport const multiLineCommentEnd = '*/';\nexport let global;\nexport const setGlobalContext = (c) => void (global = c);\nexport const stringSurrounds = ['\\'', '`', '\"'];\nexport let IS_NODE_INSTANCE = typeof window === 'undefined';\nexport const runningInNode = () => void (IS_NODE_INSTANCE = true);\nexport const VAR_DECLARE_KEYWORDS = ['var', 'let', 'global', 'mutable', 'const', 'local'];\nimport PACKAGE_JSON from '../package.json';\nexport const VERSION = PACKAGE_JSON['version'];\nexport let permissions = {\n    networking: false,\n    imports: true,\n    accessDOM: false,\n    useSTD: true,\n    fileSystem: false,\n};\nexport function updatePermissions(newPermissions) {\n    permissions = Object.assign(Object.assign({}, permissions), newPermissions);\n}\nexport const libs = {\n    print: console.log\n};\nexport const catchBlockErrorSymbolName = 'err';\nexport const KEYWORDS = [\n    'var',\n    'let',\n    'global',\n    'local',\n    'mutable',\n    'const',\n    'if',\n    'else',\n    'while',\n    'for',\n    'in',\n    'continue',\n    'break',\n    'func',\n    'return',\n    'yield',\n    'class',\n    'extends',\n    'namespace',\n    'export',\n    'try',\n    'catch'\n];\nexport let now = () => 0;\nexport function refreshPerformanceNow(IS_NODE_INSTANCE) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (IS_NODE_INSTANCE) {\n            now = () => Date.now();\n        }\n        else {\n            now = () => {\n                try {\n                    return performance === null || performance === void 0 ? void 0 : performance.now();\n                }\n                catch (e) {\n                    return 0;\n                }\n            };\n        }\n    });\n}\nrefreshPerformanceNow(IS_NODE_INSTANCE);\nexport var tokenType;\n(function (tokenType) {\n    tokenType[tokenType[\"NUMBER\"] = 0] = \"NUMBER\";\n    tokenType[tokenType[\"STRING\"] = 1] = \"STRING\";\n    tokenType[tokenType[\"ENDSTATEMENT\"] = 2] = \"ENDSTATEMENT\";\n    tokenType[tokenType[\"IDENTIFIER\"] = 3] = \"IDENTIFIER\";\n    tokenType[tokenType[\"KEYWORD\"] = 4] = \"KEYWORD\";\n    tokenType[tokenType[\"COMMA\"] = 5] = \"COMMA\";\n    tokenType[tokenType[\"ASSIGN\"] = 6] = \"ASSIGN\";\n    tokenType[tokenType[\"ADD\"] = 7] = \"ADD\";\n    tokenType[tokenType[\"SUB\"] = 8] = \"SUB\";\n    tokenType[tokenType[\"MUL\"] = 9] = \"MUL\";\n    tokenType[tokenType[\"DIV\"] = 10] = \"DIV\";\n    tokenType[tokenType[\"POW\"] = 11] = \"POW\";\n    tokenType[tokenType[\"MOD\"] = 12] = \"MOD\";\n    tokenType[tokenType[\"OPAREN\"] = 13] = \"OPAREN\";\n    tokenType[tokenType[\"CPAREN\"] = 14] = \"CPAREN\";\n    tokenType[tokenType[\"OBRACES\"] = 15] = \"OBRACES\";\n    tokenType[tokenType[\"CBRACES\"] = 16] = \"CBRACES\";\n    tokenType[tokenType[\"OSQUARE\"] = 17] = \"OSQUARE\";\n    tokenType[tokenType[\"CSQUARE\"] = 18] = \"CSQUARE\";\n    tokenType[tokenType[\"EQUALS\"] = 19] = \"EQUALS\";\n    tokenType[tokenType[\"NOTEQUALS\"] = 20] = \"NOTEQUALS\";\n    tokenType[tokenType[\"NOT\"] = 21] = \"NOT\";\n    tokenType[tokenType[\"GT\"] = 22] = \"GT\";\n    tokenType[tokenType[\"LT\"] = 23] = \"LT\";\n    tokenType[tokenType[\"GTE\"] = 24] = \"GTE\";\n    tokenType[tokenType[\"LTE\"] = 25] = \"LTE\";\n    tokenType[tokenType[\"AND\"] = 26] = \"AND\";\n    tokenType[tokenType[\"OR\"] = 27] = \"OR\";\n    tokenType[tokenType[\"COLON\"] = 28] = \"COLON\";\n    tokenType[tokenType[\"DOT\"] = 29] = \"DOT\";\n    tokenType[tokenType[\"EOF\"] = 30] = \"EOF\";\n    tokenType[tokenType[\"BITWISE_OR\"] = 31] = \"BITWISE_OR\";\n    tokenType[tokenType[\"BITWISE_AND\"] = 32] = \"BITWISE_AND\";\n    tokenType[tokenType[\"BITWISE_NOT\"] = 33] = \"BITWISE_NOT\";\n})(tokenType || (tokenType = {}));\nexport let tt = tokenType;\nexport const tokenTypeString = {\n    [tt.NUMBER]: 'Number',\n    [tt.STRING]: 'String',\n    [tt.ENDSTATEMENT]: ';',\n    [tt.IDENTIFIER]: 'Identifier',\n    [tt.KEYWORD]: 'Keyword',\n    [tt.COMMA]: ',',\n    [tt.OBRACES]: '{',\n    [tt.CBRACES]: '}',\n    [tt.OPAREN]: '(',\n    [tt.CPAREN]: ')',\n    [tt.OSQUARE]: '[',\n    [tt.CSQUARE]: ']',\n    [tt.ASSIGN]: '=',\n    [tt.ADD]: '+',\n    [tt.SUB]: '-',\n    [tt.MUL]: '*',\n    [tt.DIV]: '/',\n    [tt.POW]: '^',\n    [tt.MOD]: '%',\n    [tt.EQUALS]: '==',\n    [tt.NOTEQUALS]: '!=',\n    [tt.NOT]: '!',\n    [tt.GT]: '>',\n    [tt.LT]: '<',\n    [tt.GTE]: '>=',\n    [tt.LTE]: '<=',\n    [tt.AND]: '&&',\n    [tt.OR]: '||',\n    [tt.COLON]: ':',\n    [tt.DOT]: '.',\n    [tt.EOF]: 'End of File',\n    [tt.BITWISE_AND]: '&',\n    [tt.BITWISE_OR]: '|',\n    [tt.BITWISE_NOT]: '~',\n};\nexport const singleCharTokens = {\n    '*': tt.MUL,\n    '/': tt.DIV,\n    '+': tt.ADD,\n    '-': tt.SUB,\n    '(': tt.OPAREN,\n    ')': tt.CPAREN,\n    '^': tt.POW,\n    '%': tt.MOD,\n    '{': tt.OBRACES,\n    '}': tt.CBRACES,\n    ',': tt.COMMA,\n    '[': tt.OSQUARE,\n    ']': tt.CSQUARE,\n    ';': tt.ENDSTATEMENT,\n    ':': tt.COLON,\n    '.': tt.DOT,\n    '=': tt.ASSIGN,\n    '>': tt.GT,\n    '<': tt.LT,\n    '!': tt.NOT,\n    '|': tt.BITWISE_OR,\n    '&': tt.BITWISE_AND,\n    '~': tt.BITWISE_NOT\n};\nexport const doubleCharTokens = {\n    '==': tt.EQUALS,\n    '!=': tt.NOTEQUALS,\n    '>=': tt.GTE,\n    '<=': tt.LTE,\n    '+=': tt.ASSIGN,\n    '-=': tt.ASSIGN,\n    '*=': tt.ASSIGN,\n    '/=': tt.ASSIGN,\n    '&&': tt.AND,\n    '||': tt.OR\n};\nexport const tripleCharTokens = {};\nexport const primitiveMethods = [\n    '__add__',\n    '__subtract__',\n    '__multiply__',\n    '__divide__',\n    '__pow__',\n    '__eq__',\n    '__gt__',\n    '__lt__',\n    '__and__',\n    '__or__',\n    '__bool__',\n    '__setProperty__',\n    '__getProperty__',\n    '__call__',\n];\n","export const types = {};\n","import { InvalidOperationError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { types } from './primitive';\nimport { str } from '../../util/util';\nimport { strip } from './wrapStrip';\nexport class ESPrimitive {\n    constructor(value, type = types.any) {\n        this.self = this;\n        this.isa = (props, type) => {\n            return new ESBoolean(type === this.__type__);\n        };\n        this.is = (props, obj) => {\n            return new ESBoolean(obj === this);\n        };\n        this.valueOf = () => this.__value__;\n        this.typeName = () => this.__type__.__name__;\n        this.hasProperty = (props, key) => new ESBoolean(this.hasOwnProperty(str(key)));\n        this.describe = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            this.info.description = str(info);\n        };\n        this.detail = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            const res = strip(info, props);\n            if (typeof res !== 'object') {\n                return new TypeError(Position.unknown, 'object', this.typeName(), str(this));\n            }\n            this.info = Object.assign(Object.assign({}, this.info), res);\n            this.info.isBuiltIn = false;\n        };\n        this.__type__ = type || this;\n        this.__value__ = value;\n        this.info = {};\n    }\n    __add__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __subtract__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __multiply__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __divide__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __pow__(props, n) {\n        return new InvalidOperationError('__pow__', this);\n    }\n    __mod__(props, n) {\n        return new InvalidOperationError('__mod__', this);\n    }\n    __eq__(props, n) {\n        return new InvalidOperationError('__eq__', this);\n    }\n    __gt__(props, n) {\n        return new InvalidOperationError('__gt__', this);\n    }\n    __lt__(props, n) {\n        return new InvalidOperationError('__lt__', this);\n    }\n    __and__(props, n) {\n        return new InvalidOperationError('__and__', this);\n    }\n    __or__(props, n) {\n        return new InvalidOperationError('__or__', this);\n    }\n    __bool__(props) {\n        return new InvalidOperationError('__bool__', this);\n    }\n    __setProperty__(props, key, value) {\n        return new InvalidOperationError('__setProperty__', this, `[${str(key)}] = ${str(value)}`);\n    }\n    __call__(props, ...parameters) {\n        return new InvalidOperationError('__call__', this);\n    }\n}\n","import { ESPrimitive } from './esprimitive';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nimport { str } from \"../../util/util\";\nimport { ESArray } from \"./esarray\";\nexport class ESErrorPrimitive extends ESPrimitive {\n    constructor(error = new ESError(Position.unknown, 'Unknown', 'Error not specified')) {\n        super(error, types.error);\n        this.__getProperty__ = (props, key) => {\n            switch (str(key)) {\n                case 'name':\n                    return new ESString(this.valueOf().name);\n                case 'details':\n                    return new ESString(this.valueOf().details);\n                case 'traceback':\n                    return new ESArray(this.valueOf().traceback\n                        .map(s => new ESString(`${s.position.str} : ${s.line}`)));\n                default:\n                    if (this.self.hasOwnProperty(str(key))) {\n                        return wrap(this.self[str(key)]);\n                    }\n                    return new IndexError(Position.unknown, key.valueOf(), this);\n            }\n        };\n        this.cast = () => new ESError(Position.unknown, 'TypeError', `Cannot cast type 'error'`);\n        this.str = () => new ESString(`<Error: ${this.valueOf().str}>`);\n        this.__eq__ = (props, n) => new ESBoolean(n instanceof ESErrorPrimitive &&\n            this.valueOf().constructor === n.valueOf().constructor);\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.clone = () => new ESErrorPrimitive(this.valueOf());\n    }\n}\n","import { primitiveMethods } from '../constants';\nimport { Context } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESFunction, ESNumber, ESObject, ESString, ESType, ESUndefined } from \"./primitiveTypes\";\nfunction dealWithExtends(context, class_, instance, this_, callContext) {\n    if (!(class_ instanceof ESType)) {\n        return new TypeError(Position.unknown, 'Type', typeof class_, class_);\n    }\n    const superFunc = new ESFunction(({ context }, ...args) => {\n        const newContext = new Context();\n        newContext.parent = context;\n        if (class_.__extends__) {\n            let _a = dealWithExtends(newContext, class_.__extends__, instance, this_, callContext);\n            if (_a instanceof ESError) {\n                return _a;\n            }\n        }\n        const initFunc = class_ === null || class_ === void 0 ? void 0 : class_.__init__;\n        if (!initFunc) {\n            return;\n        }\n        initFunc.this_ = this_;\n        initFunc.__closure__ = newContext;\n        const res_ = initFunc.__call__({ context: newContext }, ...args);\n        if (res_ instanceof ESError) {\n            return res_;\n        }\n    }, undefined, 'super', this_);\n    let setRes = context.setOwn('super', superFunc);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    const res = createInstance(class_, { context }, [], false, instance);\n    if (res instanceof ESError) {\n        return res;\n    }\n}\nexport function createInstance(type, { context }, params, runInit = true, on = {}) {\n    var _b;\n    if (type.primitive) {\n        if (params.length < 1) {\n            return new ESUndefined();\n        }\n        switch (type.__name__) {\n            case 'Undefined':\n            case 'Type':\n                if (params.length < 1) {\n                    return new ESType();\n                }\n                else {\n                    return new ESString(params[0].__type__.__name__);\n                }\n            case 'String':\n                return new ESString(params[0].str().valueOf());\n            case 'Array':\n                return new ESArray(params);\n            case 'Number':\n                return new ESNumber(params[0].valueOf());\n            case 'Function':\n                return new ESFunction(params[0].valueOf());\n            case 'Boolean':\n                return new ESBoolean(params[0].bool().valueOf());\n            default:\n                return wrap(params[0]);\n        }\n    }\n    const newContext = new Context();\n    newContext.parent = (_b = type.__init__) === null || _b === void 0 ? void 0 : _b.__closure__;\n    const instance = new ESObject();\n    if (type.__extends__) {\n        let res = dealWithExtends(newContext, type.__extends__, on, instance, context);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__value__ = on;\n    for (let method of type.__methods__) {\n        const methodClone = method.clone();\n        methodClone.this_ = instance;\n        on[method.name] = methodClone;\n        if (primitiveMethods.indexOf(method.name) !== -1) {\n            instance[method.name] = methodClone.__call__;\n        }\n    }\n    if (runInit && type.__init__) {\n        type.__init__.this_ = instance;\n        type.__init__.__closure__ = newContext;\n        const res = type.__init__.__call__({ context: newContext }, ...params);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__type__ = type;\n    type.__instances__.push(instance);\n    return instance;\n}\n","import { IndexError, InvalidOperationError } from '../../errors';\nimport { createInstance } from '../instantiator';\nimport { ESBoolean } from './esboolean';\nimport { ESFunction } from './esfunction';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nimport { Position } from \"../../position\";\nimport { str } from \"../../util/util\";\nexport class ESType extends ESPrimitive {\n    constructor(isPrimitive = false, name = '(anon)', __methods__ = [], __extends__, __init__) {\n        super(undefined, types === null || types === void 0 ? void 0 : types.type);\n        this.__instances__ = [];\n        this.clone = () => {\n            return new ESType(this.primitive, this.__name__, this.__methods__, this.__extends__, this.__init__);\n        };\n        this.isa = (props, type) => {\n            return new ESBoolean(type === types.type);\n        };\n        this.cast = (props, type) => {\n            return new InvalidOperationError('cast', this);\n        };\n        this.resolve = (props, t) => {\n            var _a, _b, _c, _d, _e, _f;\n            if (this.__eq__(props, types.any).bool().valueOf() ||\n                t.__eq__(props, types.any).bool().valueOf() ||\n                (((_a = this.__extends__) === null || _a === void 0 ? void 0 : _a.__eq__(props, t).valueOf()) === true) ||\n                (((_b = this.__extends__) === null || _b === void 0 ? void 0 : _b.__eq__(props, types.any).valueOf()) === true) ||\n                (((_c = this.__extends__) === null || _c === void 0 ? void 0 : _c.resolve(props, t).valueOf()) === true) ||\n                (((_d = t.__extends__) === null || _d === void 0 ? void 0 : _d.__eq__(props, this).valueOf()) === true) ||\n                (((_e = t.__extends__) === null || _e === void 0 ? void 0 : _e.__eq__(props, types.any).valueOf()) === true) ||\n                (((_f = t.__extends__) === null || _f === void 0 ? void 0 : _f.resolve(props, this).valueOf()) === true)) {\n                return new ESBoolean(true);\n            }\n            return this.__eq__(props, t);\n        };\n        this.__eq__ = (props, t) => {\n            if (!(t instanceof ESType)) {\n                return new ESBoolean();\n            }\n            return new ESBoolean(t.__name__ === this.__name__ &&\n                t.primitive === this.primitive &&\n                Object.is(this.valueOf(), t.valueOf()));\n        };\n        this.__call__ = (props, ...params) => {\n            return createInstance(this, props, params || []);\n        };\n        this.str = () => new ESString(`<Type: ${this.__name__}>`);\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.primitive = isPrimitive;\n        this.__name__ = name;\n        this.info.name = name;\n        this.__extends__ = __extends__;\n        this.__methods__ = __methods__;\n        if (__init__) {\n            __init__.name = name;\n            this.__init__ = __init__;\n        }\n        if (!types.type) {\n            this.__type__ = this;\n        }\n    }\n}\n","import { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { str } from '../../util/util';\nimport { wrap } from \"./wrapStrip\";\nexport class ESUndefined extends ESPrimitive {\n    constructor() {\n        super(undefined, types.undefined);\n        this.cast = ({ context }, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber();\n                case types.string:\n                    return new ESString();\n                case types.array:\n                    return new ESArray();\n                case types.undefined:\n                    return new ESUndefined();\n                case types.type:\n                    return new ESType();\n                case types.error:\n                    return new ESErrorPrimitive();\n                case types.object:\n                case types.any:\n                    return new ESObject();\n                case types.function:\n                    return new ESFunction(() => { });\n                case types.boolean:\n                    return new ESBoolean();\n                default:\n                    if (!(type instanceof ESType)) {\n                        return new ESError(Position.unknown, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n                    }\n                    return type.__call__({ context });\n            }\n        };\n        this.str = () => new ESString('<Undefined>');\n        this.__eq__ = (props, n) => new ESBoolean(n instanceof ESUndefined ||\n            typeof n === 'undefined' ||\n            typeof n.valueOf() === 'undefined');\n        this.__bool__ = () => new ESBoolean();\n        this.bool = this.__bool__;\n        this.clone = () => new ESUndefined();\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.info = {\n            name: 'undefined',\n            description: 'Not defined, not a value.',\n            file: 'built-in',\n            isBuiltIn: true\n        };\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { types } from './primitive';\nimport { strip, wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESObject extends ESPrimitive {\n    constructor(val = {}) {\n        super(val, types.object);\n        this.isa = (props, type) => {\n            if (type === types.object) {\n                return new ESBoolean(true);\n            }\n            if (!(type instanceof ESType)) {\n                return new TypeError(Position.unknown, 'TypeError', 'type', str(type.typeName()), str(type));\n            }\n            return this.__type__.resolve(props, type);\n        };\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => {\n            let val = str(this.valueOf());\n            if (val[val.length - 1] === '\\n')\n                val = val.substr(0, val.length - 1);\n            return new ESString(`<ESObject ${val}>`);\n        };\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new ESBoolean();\n            }\n            if (n.keys.length !== this.keys.length) {\n                return new ESBoolean();\n            }\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const thisElement = this.valueOf()[key];\n                const nElement = n.valueOf()[key];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new TypeError(Position.unknown, 'object', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const res = this.__getProperty__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            for (let k of n.keys) {\n                const key = k.valueOf();\n                if (newOb.hasOwnProperty(key)) {\n                    continue;\n                }\n                const res = n.__getProperty__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            return new ESObject(newOb);\n        };\n        this.__subtract__ = (props, n) => {\n            let keysToRemove = [];\n            if (n instanceof ESString) {\n                keysToRemove = [str(n)];\n            }\n            else if (n instanceof ESArray) {\n                keysToRemove = strip(n, props);\n            }\n            else {\n                return new TypeError(Position.unknown, 'array | string', n.typeName().valueOf(), n);\n            }\n            if (!Array.isArray(keysToRemove)) {\n                return new TypeError(Position.unknown, 'array | string', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                if (keysToRemove.indexOf(key) === -1) {\n                    let res = this.__getProperty__(props, k);\n                    if (res instanceof ESError) {\n                        return res;\n                    }\n                    newOb[key] = res;\n                }\n            }\n            return new ESObject(newOb);\n        };\n        this.__getProperty__ = (props, k) => {\n            if (!(k instanceof ESString) && !(k instanceof ESNumber)) {\n                return new TypeError(Position.unknown, 'string | number', k.typeName(), str(k));\n            }\n            const key = k.valueOf();\n            if (this.valueOf().hasOwnProperty(key)) {\n                return this.valueOf()[key];\n            }\n            if (this.self.hasOwnProperty(key)) {\n                const val = this.self[key];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new ESUndefined();\n        };\n        this.__setProperty__ = ({}, key, value) => {\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.unknown, 'string', key.typeName(), str(key));\n            }\n            this.__value__[key.valueOf()] = value;\n        };\n        this.hasProperty = (props, k) => {\n            const key = str(k);\n            if (this.valueOf().hasOwnProperty(str(key))) {\n                return new ESBoolean(true);\n            }\n            return new ESBoolean(this.hasOwnProperty(key));\n        };\n        this.clone = () => {\n            const res = new ESObject();\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            res.__value__ = obj;\n            return res;\n        };\n    }\n    get keys() {\n        return Object.keys(this.valueOf()).map(s => new ESString(s));\n    }\n    set keys(val) { }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESNamespace extends ESPrimitive {\n    constructor(name, value, mutable = false) {\n        super(value, types.object);\n        this.cast = ({}) => {\n            return new ESError(Position.unknown, 'TypeError', `Cannot cast type 'namespace'`);\n        };\n        this.clone = () => {\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            return new ESNamespace(this.name, obj);\n        };\n        this.str = () => {\n            const keys = Object.keys(this.valueOf());\n            return new ESString(`<Namespace ${str(this.name)}${keys.length > 0 ? ': ' : ''}${keys.slice(0, 5)}${keys.length >= 5 ? '...' : ''}>`);\n        };\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.valueOf().hasOwnProperty(key.valueOf())) {\n                const symbol = this.valueOf()[key.valueOf()];\n                if (symbol.isAccessible) {\n                    return symbol.value;\n                }\n            }\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.unknown, 'string', key.typeName());\n            }\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this.self);\n        };\n        this.info.name = str(name);\n        this.mutable = mutable;\n    }\n    get name() {\n        return new ESString(this.info.name);\n    }\n    set name(v) {\n        this.info.name = v.valueOf();\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESString)) {\n            return new TypeError(Position.unknown, 'string', key.typeName().valueOf(), str(key));\n        }\n        let idx = str(key);\n        if (!this.mutable) {\n            return new TypeError(Position.unknown, 'mutable', 'immutable', `${str(this.name)}`);\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        const symbol = this.__value__[idx];\n        if (!symbol) {\n            return new ESError(Position.unknown, 'SymbolError', `Symbol ${idx} is not declared in namespace ${str(this.name)}.`);\n        }\n        if (symbol.isConstant) {\n            return new TypeError(Position.unknown, 'mutable', 'immutable', `${str(this.name)}[${idx}]`);\n        }\n        if (!symbol.isAccessible) {\n            return new TypeError(Position.unknown, 'accessible', 'inaccessible', `${str(this.name)}[${idx}]`);\n        }\n        symbol.value = value;\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { strip, wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESJSBinding extends ESPrimitive {\n    constructor(value, name = '<AnonNative>', functionsTakeProps = false) {\n        super(value, types.object);\n        this.cast = ({}) => {\n            return new ESError(Position.unknown, 'TypeError', `Cannot cast native object`);\n        };\n        this.clone = () => new ESJSBinding(this.__value__);\n        this.str = () => {\n            try {\n                return new ESString(JSON.stringify(this.__value__));\n            }\n            catch (e) {\n                return new ESString(`${this.__value__}`);\n            }\n        };\n        this.__eq__ = ({}, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, k) => {\n            const key = str(k);\n            const val = this.valueOf();\n            const res = val[key];\n            if (res === undefined) {\n                if (this.self.hasOwnProperty(key)) {\n                    const val = this.self[str(key)];\n                    if (typeof val === 'function') {\n                        return new ESFunction(val);\n                    }\n                    return wrap(val);\n                }\n                return new IndexError(Position.unknown, key, this);\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            if (typeof res === 'function') {\n                return new ESFunction(({ context }, ...args) => {\n                    args = args.map(o => strip(o, props));\n                    const res = val[key](...args);\n                    return wrap(res);\n                });\n            }\n            return wrap(res);\n        };\n        this.__call__ = (props, ...args) => {\n            if (typeof this.__value__ !== 'function') {\n                return new TypeError(Position.unknown, 'function', typeof this.__value__, str(this));\n            }\n            let res;\n            try {\n                res = new this.__value__(...args.map(o => strip(o, props)));\n            }\n            catch (_a) {\n                res = this.__value__(...args.map(o => strip(o, props)));\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            return wrap(res);\n        };\n        this.hasProperty = (props, key) => {\n            return new ESBoolean(!(this.__getProperty__(props, key) instanceof ESError));\n        };\n        this.info.name = str(name);\n    }\n}\n","import { types } from './primitives/primitive';\nimport { ESPrimitive } from './primitives/esprimitive';\nimport { ESArray } from './primitives/esarray';\nimport { ESBoolean } from './primitives/esboolean';\nimport { ESErrorPrimitive } from './primitives/eserrorprimitive';\nimport { ESFunction } from './primitives/esfunction';\nimport { ESNumber } from './primitives/esnumber';\nimport { ESObject } from './primitives/esobject';\nimport { ESString } from './primitives/esstring';\nimport { ESType } from './primitives/estype';\nimport { ESUndefined } from './primitives/esundefined';\nimport { ESNamespace } from './primitives/esnamespace';\nimport { ESJSBinding } from \"./primitives/esjsbinding\";\nexport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNumber, ESPrimitive, ESString, ESObject, ESType, ESUndefined, ESNamespace, ESJSBinding, types };\ntypes.type = new ESType(true, 'Type');\ntypes.undefined = new ESType(true, 'Undefined');\ntypes.string = new ESType(true, 'String');\ntypes.array = new ESType(true, 'Array');\ntypes.number = new ESType(true, 'Number');\ntypes.any = new ESType(true, 'Any');\ntypes.function = new ESType(true, 'Function');\ntypes.bool = new ESType(true, 'Boolean');\ntypes.object = new ESType(true, 'Object');\ntypes.error = new ESType(true, 'Error');\ntypes.any.info = {\n    name: 'any',\n    description: 'Matches any other type',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.number.info = {\n    name: 'any',\n    description: 'The ES Number type. Is a a double-precision 64-bit binary format IEEE 754 value, like double in Java and C#',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.string.info = {\n    name: 'string',\n    description: 'The ES String type. Holds an array of characters, and can be defined with any of \\', \" and `. Can be indexed like an array.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.bool.info = {\n    name: 'bool',\n    description: 'The ES Bool type. Exactly two instances exist, true and false.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.function.info = {\n    name: 'function',\n    description: 'The ES Function type. Is a block of code which executes when called and takes in 0+ parameters.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.array.info = {\n    name: 'array',\n    description: 'The ES Array type. Defines a set of items of any type which can be accessed by an index with [].',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.object.info = {\n    name: 'object',\n    description: 'The ES Object type. Similar to JS objects or python dictionaries.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.error.info = {\n    name: 'error',\n    description: 'The ES Error type. Call to throw an error.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.type.info = {\n    name: 'type',\n    description: 'The ES Type type. Call to get the type of a value at a string.',\n    file: 'built-in',\n    isBuiltIn: true\n};\n","import { ESPrimitive } from './esprimitive';\nimport { global } from '../../constants';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { Context } from '../context';\nimport { call } from '../functionCaller';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nexport class ESFunction extends ESPrimitive {\n    constructor(func = (() => { }), arguments_ = [], name = '(anon)', this_ = new ESObject(), returnType = types.any, closure) {\n        super(func, types.function);\n        this.cast = ({}, type) => {\n            return new ESError(Position.unknown, 'TypeError', `Cannot cast type 'function'`);\n        };\n        this.clone = () => {\n            return new ESFunction(this.__value__, this.arguments_, this.name, this.this_, this.returnType, this.__closure__);\n        };\n        this.valueOf = () => this;\n        this.str = () => new ESString(`<Func: ${this.name}>`);\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESFunction))\n                return new ESBoolean(false);\n            return new ESBoolean(this.__value__ === n.__value__);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__call__ = ({ context }, ...params) => {\n            this.__closure__.path = context.path;\n            return call(this.__closure__, this, params);\n        };\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.arguments_ = arguments_;\n        this.info.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        if (closure) {\n            this.__closure__ = closure;\n        }\n        else {\n            this.__closure__ = new Context();\n            this.__closure__.parent = global;\n        }\n        this.info.returnType = str(returnType);\n        this.info.args = arguments_.map(arg => ({\n            name: arg.name,\n            defaultValue: str(arg.defaultValue),\n            type: arg.type.info.name,\n            required: true\n        }));\n    }\n    get name() {\n        var _a;\n        return (_a = this.info.name) !== null && _a !== void 0 ? _a : '(anonymous)';\n    }\n    set name(v) {\n        this.info.name = v;\n    }\n}\n","import { Node } from \"./nodes\";\nimport { generateESFunctionCallContext } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { ESObject, ESPrimitive, ESUndefined, types } from \"./primitiveTypes\";\nfunction callNode(self, context, params, fn) {\n    var _a, _b, _c, _d;\n    const res = fn.interpret(context);\n    if (res.error)\n        return res.error;\n    if (res.funcReturn !== undefined) {\n        res.val = res.funcReturn;\n        res.funcReturn = undefined;\n    }\n    if (self.returnType.resolve({ context }, (_b = (_a = res.val) === null || _a === void 0 ? void 0 : _a.__type__) !== null && _b !== void 0 ? _b : types.any).valueOf() === false) {\n        return new TypeError(Position.unknown, self.returnType.__name__, ((_c = res.val) === null || _c === void 0 ? void 0 : _c.typeName().valueOf()) || 'undefined', (_d = res.val) === null || _d === void 0 ? void 0 : _d.str().valueOf(), '(from function return)');\n    }\n    if (res.val) {\n        return res.val;\n    }\n    else {\n        return new ESUndefined();\n    }\n}\nfunction callNative(self, context, params, fn) {\n    for (let i = params.length; i < fn.length; i++)\n        params.push(new ESUndefined());\n    const res = fn({\n        context\n    }, ...params);\n    if (res instanceof ESError || res instanceof ESPrimitive) {\n        return res;\n    }\n    return new ESUndefined();\n}\nexport function call(context, self, params) {\n    var _a;\n    let callContext = context;\n    context = self.__closure__;\n    context.path = callContext.path;\n    const fn = self.__value__;\n    const newContext = generateESFunctionCallContext(params, self, context);\n    if (newContext instanceof ESError) {\n        return newContext;\n    }\n    let this_ = (_a = self.this_) !== null && _a !== void 0 ? _a : new ESObject();\n    if (!(this_ instanceof ESObject))\n        return new TypeError(Position.unknown, 'object', typeof this_, this_, '\\'this\\' must be an object');\n    let setRes = newContext.setOwn('this', this_);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    if (fn instanceof Node) {\n        return callNode(self, newContext, params, fn);\n    }\n    else if (typeof fn === 'function') {\n        return callNative(self, newContext, params, fn);\n    }\n    else {\n        return new TypeError(Position.unknown, 'function', typeof fn);\n    }\n}\n","import { initialise } from \"../init\";\nimport { ESError, TypeError, ReferenceError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESPrimitive, ESType, ESUndefined, types } from \"./primitiveTypes\";\nimport { str } from \"../util/util\";\nimport { ESSymbol } from './symbol';\nimport chalk from \"../util/colours\";\nexport class Context {\n    constructor() {\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        this.deleted = false;\n        this.path_ = '';\n    }\n    get path() {\n        if (this.path_ || !this.parent) {\n            return this.path_;\n        }\n        return this.parent.path;\n    }\n    set path(val) {\n        this.path_ = val;\n    }\n    get parent() {\n        return this.parent_;\n    }\n    set parent(val) {\n        if (val == this) {\n            console.error(chalk.red(`Setting context parent to self`));\n            return;\n        }\n        this.parent_ = val;\n    }\n    has(identifier) {\n        if (!identifier)\n            return false;\n        return this.get(identifier) !== undefined;\n    }\n    hasOwn(identifier) {\n        return this.symbolTable[identifier] instanceof ESSymbol;\n    }\n    get(identifier) {\n        let symbol = this.getSymbol(identifier);\n        if (symbol instanceof ESError || symbol == undefined) {\n            return symbol;\n        }\n        return symbol.value;\n    }\n    getRawSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key].value;\n        return symbols;\n    }\n    getSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key];\n        return symbols;\n    }\n    getSymbol(identifier) {\n        let symbol = this.symbolTable[identifier];\n        if (symbol !== undefined && !symbol.isAccessible)\n            return new TypeError(Position.unknown, 'assessable', 'inaccessible', symbol.identifier);\n        if (symbol === undefined && this.parent) {\n            let res = this.parent.getSymbol(identifier);\n            if (res instanceof ESError)\n                return res;\n            if (!res)\n                return new ReferenceError(Position.unknown, identifier);\n            symbol = res;\n        }\n        return symbol;\n    }\n    set(identifier, value, options = {}) {\n        let context = this;\n        if (options.global) {\n            context = this.root;\n        }\n        else {\n            while (!context.hasOwn(identifier) && context.parent !== undefined)\n                context = context.parent;\n            if (!context.hasOwn(identifier))\n                context = this;\n        }\n        return context.setOwn(identifier, value, options);\n    }\n    setOwn(identifier, value, options = {}) {\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        if (options.global && !this.initialisedAsGlobal)\n            options.global = false;\n        if (!options.forceThroughConst) {\n            let symbol = this.symbolTable[identifier];\n            if (symbol === null || symbol === void 0 ? void 0 : symbol.isConstant)\n                return new TypeError(Position.unknown, 'dynamic', 'constant', identifier);\n        }\n        this.symbolTable[identifier] = new ESSymbol(value, identifier, options);\n    }\n    remove(identifier) {\n        delete this.symbolTable[identifier];\n    }\n    clear() {\n        for (let symbol in this.symbolTable) {\n            this.remove(symbol);\n        }\n        this.parent = undefined;\n        this.deleted = true;\n    }\n    get root() {\n        let parent = this;\n        while (parent.parent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    get keys() {\n        return Object.keys(this.symbolTable);\n    }\n    resetAsGlobal() {\n        var _a, _b;\n        if (!this.initialisedAsGlobal)\n            return;\n        const printFunc = this.root.get('print');\n        const inputFunc = this.root.get('input');\n        if (!(printFunc instanceof ESPrimitive) || !(inputFunc instanceof ESPrimitive)) {\n            console.error('Error with print and input functions.');\n            return;\n        }\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        initialise(this, ((_a = printFunc.valueOf()) === null || _a === void 0 ? void 0 : _a.func) || console.log, ((_b = inputFunc.valueOf()) === null || _b === void 0 ? void 0 : _b.func) || (() => { }));\n    }\n    clone() {\n        const newContext = new Context();\n        newContext.parent = this.parent;\n        newContext.deleted = this.deleted;\n        newContext.initialisedAsGlobal = this.initialisedAsGlobal;\n        newContext.symbolTable = Object.assign(Object.assign({}, newContext.symbolTable), this.symbolTable);\n        return newContext;\n    }\n    deepClone() {\n        var _a;\n        let clone = this.clone();\n        clone.parent = (_a = clone.parent) === null || _a === void 0 ? void 0 : _a.deepClone();\n        return clone;\n    }\n    log() {\n        console.log('---- CONTEXT ----');\n        for (let key in this.symbolTable) {\n            const symbol = this.symbolTable[key];\n            let out = key;\n            if (symbol.isConstant)\n                out += ' (CONST)';\n            if (!symbol.isAccessible)\n                out += ' (INACCESSIBLE)';\n            out += ': ';\n            out += str(this.symbolTable[key].value);\n            console.log(out);\n        }\n        console.log('-----------------');\n    }\n}\nexport function generateESFunctionCallContext(params, self, parent) {\n    const newContext = new Context();\n    newContext.parent = parent;\n    let max = Math.max(params.length, self.arguments_.length);\n    for (let i = 0; i < max; i++) {\n        let value = new ESUndefined();\n        let type = types.any;\n        if (!self.arguments_[i]) {\n            continue;\n        }\n        const arg = self.arguments_[i];\n        if (!(arg.type instanceof ESType)) {\n            return new TypeError(Position.unknown, 'Type', typeof arg.type, arg.type);\n        }\n        if (params[i] instanceof ESPrimitive) {\n            type = params[i].__type__;\n            value = params[i];\n        }\n        const typeIncludes = arg.type.resolve({ context: parent }, type).bool().valueOf();\n        if (!typeIncludes) {\n            return new TypeError(Position.unknown, arg.type.__name__, type.__name__, str(value));\n        }\n        newContext.setOwn(arg.name, value, {\n            forceThroughConst: true\n        });\n    }\n    let setRes = newContext.setOwn('args', new ESArray(params), {\n        forceThroughConst: true\n    });\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    return newContext;\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { ESFunction } from \"./esfunction\";\nimport { wrap } from \"./wrapStrip\";\nexport class ESNumber extends ESPrimitive {\n    constructor(value = 0) {\n        super(value, types.number);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return this;\n                case types.string:\n                    return this.str();\n                case types.array:\n                    return new ESArray(new Array(this.valueOf()));\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(this.valueOf().toString());\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() + n.valueOf());\n        };\n        this.__subtract__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() - n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() * n.valueOf());\n        };\n        this.__divide__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() / n.valueOf());\n        };\n        this.__pow__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESNumber(Math.pow(this.valueOf(), n.valueOf()));\n        };\n        this.__mod__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESNumber(this.valueOf() % n.valueOf());\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new ESBoolean(false);\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() > n.valueOf());\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() < n.valueOf());\n        };\n        this.__bool__ = () => {\n            return new ESBoolean(this.valueOf() > 0);\n        };\n        this.bool = this.__bool__;\n        this.clone = () => new ESNumber(this.valueOf());\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { ESFunction } from \"./esfunction\";\nimport { wrap } from \"./wrapStrip\";\nexport class ESBoolean extends ESPrimitive {\n    constructor(val = false) {\n        super(Boolean(val), types.bool);\n        this.__getProperty__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESBoolean)) {\n                return new TypeError(Position.unknown, 'Boolean', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__bool__ = () => this;\n        this.__and__ = (props, n) => new ESBoolean(this.valueOf() && n.bool().valueOf());\n        this.__or__ = (props, n) => {\n            return new ESBoolean(this.valueOf() || n.bool().valueOf());\n        };\n        this.str = () => new ESString(this.valueOf() ? 'true' : 'false');\n        this.clone = () => new ESBoolean(this.valueOf());\n        this.bool = () => this;\n        this.info = {\n            name: str(val),\n            description: `Boolean global constant which evaluates to ${str(val)}, the opposite of ${str(!val)}`,\n            file: 'built-in',\n            isBuiltIn: true,\n            helpLink: 'https://en.wikipedia.org/wiki/Boolean_expression'\n        };\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { types } from './primitive';\nimport { wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESArray extends ESPrimitive {\n    constructor(values = []) {\n        super(values, types.array);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.len);\n                case types.boolean:\n                    return this.bool();\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(str(this.valueOf()));\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESArray)) {\n                return new ESBoolean();\n            }\n            if (n.len !== this.len) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.len; i++) {\n                const thisElement = this.valueOf()[i];\n                const nElement = n.valueOf()[i];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESArray)) {\n                return new TypeError(Position.unknown, 'array', n.typeName().valueOf(), n);\n            }\n            return new ESArray([...this.valueOf(), ...n.valueOf()]);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESUndefined();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return this.valueOf()[idx];\n            }\n            return new ESUndefined();\n        };\n        this.add = (props, val, idx = new ESNumber(this.len - 1)) => {\n            if (!(val instanceof ESPrimitive))\n                throw 'adding non-primitive to array: ' + str(val);\n            this.len++;\n            this.__value__.splice(idx.valueOf(), 0, val);\n            return new ESNumber(this.len);\n        };\n        this.contains = (props, val) => {\n            for (let element of this.__value__) {\n                if (val.__eq__(props, element)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        this.clone = () => {\n            const newArr = [];\n            for (let element of this.valueOf()) {\n                newArr.push(element);\n            }\n            return new ESArray(newArr);\n        };\n        this.len = values.length;\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESNumber)) {\n            return;\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        let idx = key.valueOf();\n        while (idx < 0) {\n            idx = this.valueOf().length + idx;\n        }\n        this.__value__[idx] = value;\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESString extends ESPrimitive {\n    constructor(value = '') {\n        super(value, types.string);\n        this.str = () => this;\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    const num = parseFloat(this.valueOf());\n                    if (isNaN(num))\n                        return new ESError(Position.unknown, 'TypeError', `This string is not a valid number`);\n                    return new ESNumber(num);\n                case types.string:\n                    return this;\n                case types.array:\n                    return new ESArray(this.valueOf().split('').map(s => new ESString(s)));\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.unknown, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESString(this.valueOf() + n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESString(this.valueOf().repeat(n.valueOf()));\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new ESBoolean(false);\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.unknown, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf().length > n.valueOf().length);\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.unknown, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf().length < n.valueOf().length);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.len = () => {\n            return new ESNumber(this.valueOf().length);\n        };\n        this.clone = () => new ESString(this.valueOf());\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESString();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return new ESString(this.valueOf()[idx]);\n            }\n            return new ESString();\n        };\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESNumber))\n            return;\n        if (!(value instanceof ESString))\n            value = new ESString(str(value));\n        let idx = key.valueOf();\n        while (idx < 0)\n            idx = this.valueOf().length + idx;\n        const strToInsert = value.str().valueOf();\n        let firstPart = this.__value__.substr(0, idx);\n        let lastPart = this.__value__.substr(idx + strToInsert.length);\n        this.__value__ = firstPart + strToInsert + lastPart;\n    }\n}\n","import { ESString } from './primitives/esstring';\nexport class ESSymbol {\n    constructor(value, identifier, options = {}) {\n        var _a, _b;\n        this.clone = () => {\n            return new ESSymbol(this.value.clone(), this.identifier, {\n                isConstant: this.isConstant,\n                isAccessible: this.isAccessible\n            });\n        };\n        this.str = () => new ESString(`<Symbol: ${this.identifier}>`);\n        this.value = value;\n        this.identifier = identifier;\n        this.isConstant = (_a = options.isConstant) !== null && _a !== void 0 ? _a : false;\n        this.isAccessible = (_b = options.isAccessible) !== null && _b !== void 0 ? _b : true;\n    }\n}\n","import { ESError } from '../../errors';\nimport { ESSymbol } from '../symbol';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESPrimitive } from './esprimitive';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESUndefined } from './esundefined';\nimport { ESJSBinding } from \"./esjsbinding\";\nexport function wrap(thing, functionsTakeProps = false) {\n    if (thing instanceof ESPrimitive) {\n        return thing;\n    }\n    else if (thing === undefined || thing === null) {\n        return new ESUndefined();\n    }\n    else if (thing instanceof ESError) {\n        return new ESErrorPrimitive(thing);\n    }\n    else if (thing instanceof ESSymbol) {\n        return thing.value;\n    }\n    else if (typeof thing === 'number') {\n        return new ESNumber(thing);\n    }\n    else if (typeof thing === 'string') {\n        return new ESString(thing);\n    }\n    else if (typeof thing === 'boolean') {\n        return new ESBoolean(thing);\n    }\n    else if (typeof thing === 'bigint') {\n        return new ESNumber(Number(thing));\n    }\n    else if (typeof thing === 'symbol') {\n        return new ESString(String(thing));\n    }\n    return new ESJSBinding(thing, undefined, functionsTakeProps);\n}\nexport function strip(thing, props) {\n    if (thing == undefined) {\n        return undefined;\n    }\n    else if (!(thing instanceof ESPrimitive)) {\n        return thing;\n    }\n    else if (thing instanceof ESArray) {\n        return thing.valueOf().map(m => strip(m, props), props);\n    }\n    else if (thing instanceof ESObject) {\n        let val = {};\n        for (let key in thing.valueOf()) {\n            val[key] = strip(thing.valueOf()[key], props);\n        }\n        return val;\n    }\n    else if (thing instanceof ESUndefined) {\n        return undefined;\n    }\n    else if (thing instanceof ESFunction) {\n        return (...args) => {\n            const res = thing.__call__(props, ...args.map(a => wrap(a)));\n            if (res instanceof ESError) {\n                return res;\n            }\n            return strip(res, props);\n        };\n    }\n    else if (thing instanceof ESType) {\n        return thing;\n    }\n    return thing.valueOf();\n}\n","import { IS_NODE_INSTANCE } from \"../constants\";\nconst codes = {\n    red: 31,\n    yellow: 33,\n    green: 32,\n    cyan: 36,\n    blue: 34,\n    grey: 2\n};\nconst c = {};\nfor (let code of Object.keys(codes)) {\n    c[code] = (s) => {\n        s || (s = '');\n        if (IS_NODE_INSTANCE) {\n            return `\\x1b[${codes[code]}m` + s + '\\x1b[0m';\n        }\n        return `<span style=\"color: ${code}\">${s}</span>`;\n    };\n}\nexport default c;\n","import { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from '../runtime/primitives/wrapStrip';\nimport { ESArray, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESUndefined } from '../runtime/primitiveTypes';\nimport { indent, sleep, str } from '../util/util';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport chalk from \"../util/colours\";\nexport const builtInFunctions = {\n    'range': [({ context }, minP, maxP, stepP) => {\n            if (!(minP instanceof ESNumber)) {\n                return new ESArray();\n            }\n            const min = minP.valueOf();\n            if (maxP instanceof ESUndefined) {\n                try {\n                    return new ESArray([...Array(min).keys()].map(n => new ESNumber(n)));\n                }\n                catch (e) {\n                    return new ESError(Position.unknown, 'RangeError', `Cannot make range of length '${str(min)}'`);\n                }\n            }\n            let step = 1;\n            if (!(maxP instanceof ESNumber)) {\n                return new TypeError(Position.unknown, 'number', maxP.typeName(), str(maxP));\n            }\n            let max = maxP.valueOf();\n            if (!(stepP instanceof ESUndefined)) {\n                if (!(stepP instanceof ESNumber)) {\n                    return new TypeError(Position.unknown, 'number', stepP.typeName(), str(stepP));\n                }\n                step = stepP.valueOf();\n            }\n            let arr = [];\n            let i = min;\n            while (i < max) {\n                arr.push(new ESNumber(i));\n                i += step;\n            }\n            return new ESArray(arr);\n        }, {\n            args: [{\n                    name: 'N',\n                    type: 'Number',\n                }],\n            description: 'Generates an array of integers given N. Starts at 0 and goes to N-1. Can be used like for i in range(10) ..., similarly to python.',\n            returns: 'array of numbers from 0 to N-1',\n            returnType: 'number[] | RangeError'\n        }],\n    'log': [({ context }, ...msgs) => {\n            console.log(...msgs.map(m => str(m)));\n        }, {\n            args: [{\n                    name: '...values',\n                    type: 'any[]'\n                }],\n            description: 'Uses console.log to log all values',\n            returnType: 'void'\n        }],\n    'parseNum': [({ context }, num) => {\n            try {\n                const val = parseFloat(str(num));\n                if (isNaN(val)) {\n                    return new ESError(Position.unknown, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n                }\n                return new ESNumber(val);\n            }\n            catch (e) {\n                return new ESError(Position.unknown, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n            }\n        }, {\n            args: [{\n                    name: 'num',\n                    type: 'any'\n                }],\n            description: `Converts a string of digits into a number. Works with decimals and integers. Calls .str() on value before using native JS 'parseFloat' function. Returns TypeError if the string can't be converted into a number.`,\n            returnType: 'number | TypeError'\n        }],\n    'help': [({ context }, ...things) => {\n            if (!things.length) {\n                return new ESString('Visit https://entropygames.io/entropy-script for help with Entropy Script!\\n' +\n                    'Try \\'help(<anything>)\\' for help about a particular object.');\n            }\n            let out = '';\n            for (const thing of things) {\n                if (!(thing instanceof ESPrimitive)) {\n                    console.log('Invalid arg not primitive: ' + str(thing));\n                    return;\n                }\n                const info = thing.info;\n                out += `${chalk.yellow(`Help on '${info.name || '(anonymous)'}'`)}:\n    \n    ${chalk.yellow('Value')}: ${indent(indent(str(thing)))}\n    ${chalk.yellow('Type')}: '${str(thing.typeName())}'\n    ${chalk.yellow('Location')}: ${info.file || chalk.yellow('(unknown)')}\n    \n        ${chalk.green(info.description) || `No description.`}\n        \n    ${info.helpLink ? chalk.cyan(info.helpLink + '\\n\\n') : ''}\n`;\n                if (info.args && thing instanceof ESFunction) {\n                    const total = info.args.length;\n                    const required = info.args.filter(a => a.required).length;\n                    if (total == required)\n                        out += chalk.yellow(`    Arguments (${total}): \\n`);\n                    else\n                        out += chalk.yellow(`    Arguments (${required}-${total}): \\n`);\n                    for (const [idx, arg] of info.args.entries()) {\n                        if (typeof arg !== 'object')\n                            out += `        ${idx + 1}. INVALID ARG INFO`;\n                        else\n                            out += `        ${idx + 1}. ${arg.name}${arg.required === false ? chalk.yellow(' (optional) ') : ' '}{${arg.type}} ${arg.description || ''}\\n`;\n                    }\n                    out += `\\n\\n`;\n                    if (info.returns)\n                        out += `    Returns: ${info.returns}\\n\\n`;\n                    if (info.returnType)\n                        out += `    Return Type: ${info.returnType}\\n\\n`;\n                }\n                if (info.contents && (thing instanceof ESObject || thing instanceof ESNamespace)) {\n                    out += '    Properties: \\n      ';\n                    for (let contents of info.contents)\n                        out += contents.name + '\\n      ';\n                }\n            }\n            console.log(out);\n            if (things.length > 1) {\n                return new ESArray(things);\n            }\n            if (things) {\n                return things[0];\n            }\n        }, {\n            args: [{\n                    name: 'value',\n                    type: 'any'\n                }],\n            description: 'logs info on value',\n            returns: 'value passed in'\n        }],\n    'delete': [({ context }, name) => {\n            const id = str(name);\n            if (!context.has(id)) {\n                return new ESError(Position.unknown, 'DeleteError', `Identifier '${id}' not found in the current context`);\n            }\n            context.set(id, new ESUndefined());\n        }, {\n            name: 'delete',\n            args: [{ name: 'identifier', type: 'string' }],\n            description: 'Deletes a variable from the current context'\n        }],\n    '__path': [({ context }) => {\n            return new ESString(context.path);\n        }, {\n            name: '__path',\n            args: [],\n            description: 'Returns the current path'\n        }],\n    '__symbols': [({ context }) => {\n            return wrap(context.keys);\n        }, {\n            name: '__allSymbols',\n            args: [],\n            description: 'Returns an array of the names of all symbols in the current context'\n        }],\n    'using': [({ context }, module, global_) => {\n            if (!(module instanceof ESNamespace) && !(module instanceof ESJSBinding)) {\n                return new TypeError(Position.unknown, 'Namespace', str(module.typeName()));\n            }\n            let global = true;\n            if (global_) {\n                if (!global_.bool().valueOf()) {\n                    global = false;\n                }\n            }\n            const values = module.valueOf();\n            if (global) {\n                context = context.root;\n            }\n            else if (context.parent) {\n                context = context.parent;\n            }\n            for (const key of Object.keys(values)) {\n                context.setOwn(key, values[key].value, {\n                    isConstant: values[key].isConstant,\n                    isAccessible: values[key].isAccessible,\n                    forceThroughConst: true\n                });\n            }\n        }, {\n            name: 'using',\n            args: [\n                { name: 'module', type: 'namespace' },\n                { name: 'global', type: 'bool' }\n            ],\n            description: 'Adds contents of a namespace to the global context'\n        }],\n    'sleep': [({ context }, time, cb) => {\n            if (!(time instanceof ESNumber)) {\n                return new TypeError(Position.unknown, 'number', str(time.typeName()), str(time));\n            }\n            sleep(time.valueOf())\n                .then(() => {\n                const res = cb.__call__({ context });\n                if (res instanceof ESError) {\n                    console.log(res.str);\n                }\n            });\n        }, {\n            name: 'sleep',\n            args: [{ name: 'n', type: 'number' }, { name: 'callback', type: 'function' }],\n            description: 'Waits n milliseconds and then executes the callback'\n        }],\n    'throw': [({ context }, name, details) => {\n            return new ESError(Position.unknown, str(name), str(details));\n        }, {\n            name: 'throw',\n            args: [{ name: 'name', type: 'string' }, { name: 'details', type: 'string' }]\n        }],\n};\n","import { Position } from '../../position';\nimport { strip } from '../../runtime/primitives/wrapStrip';\nimport { ESObject, ESString } from '../../runtime/primitiveTypes';\nimport { str } from '../../util/util';\nimport { TypeError } from '../../errors';\nconst module = {\n    parse: (props, json) => {\n        return new ESObject(JSON.parse(str(json)));\n    },\n    stringify: (props, json) => {\n        if (!(json instanceof ESObject)) {\n            return new TypeError(Position.unknown, 'object', str(json.typeName()), str(json));\n        }\n        return new ESString(JSON.stringify(strip(json, props)));\n    }\n};\nexport default module;\n","import { IS_NODE_INSTANCE, libs } from '../constants';\nimport { ESError } from '../errors';\nimport { wrap } from '../runtime/primitives/wrapStrip';\nimport { ESSymbol } from '../runtime/symbol';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport ascii from './built-in-modules/ascii';\nimport json from './built-in-modules/json';\nimport dom from './built-in-modules/dom';\nimport Promise from './built-in-modules/promise';\nimport time from './built-in-modules/time';\nconst modules = {\n    ascii, json\n};\nconst processedModules = {};\nexport function initModules() {\n    processedModules['math'] = new ESJSBinding(Math);\n    processedModules['Promise'] = new ESJSBinding(Promise);\n    processedModules['time'] = new ESJSBinding(time(libs));\n    if (!IS_NODE_INSTANCE) {\n        const domRes = dom(libs);\n        if (!(domRes instanceof ESError)) {\n            modules['dom'] = domRes;\n        }\n        else {\n            return domRes;\n        }\n    }\n}\nexport function processRawModule(module, name) {\n    const moduleDict = {};\n    const moduleRaw = module.valueOf();\n    for (const key of Object.keys(moduleRaw)) {\n        moduleDict[key] = new ESSymbol(moduleRaw[key], key);\n    }\n    return new ESJSBinding(moduleDict, name);\n}\nexport function moduleExist(name) {\n    return name in modules || name in processedModules;\n}\nexport function addModule(name, body) {\n    modules[name] = {};\n    processedModules[name] = body;\n}\nexport function addModuleFromObj(name, raw) {\n    addModule(name, processRawModule(wrap(raw), name));\n}\nexport function getModule(name) {\n    if (name in processedModules) {\n        return processedModules[name];\n    }\n    if (name in modules) {\n        const res = new ESJSBinding(modules[name]);\n        const processed = processRawModule(res, name);\n        processedModules[name] = processed;\n        return processed;\n    }\n}\n","import { TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESNumber, ESString } from '../../runtime/primitiveTypes';\nimport { str } from '../../util/util';\nconst module = {\n    asciiToChar: (props, number) => {\n        if (!(number instanceof ESNumber)) {\n            return new TypeError(Position.unknown, 'number', str(number.typeName()), str(number));\n        }\n        return new ESString(String.fromCharCode(number.valueOf()));\n    },\n    charToAscii: (props, char) => {\n        if (!(char instanceof ESString)) {\n            return new TypeError(Position.unknown, 'string', str(char.typeName()), str(char));\n        }\n        return new ESNumber(str(char).charCodeAt(0));\n    },\n};\nexport default module;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { builtInFunctions } from \"./built-in/builtInFunctions\";\nimport { getModule, initModules, moduleExist } from './built-in/builtInModules';\nimport { Context } from \"./runtime/context\";\nimport { ESError, ImportError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { run } from \"./index\";\nimport { IS_NODE_INSTANCE } from \"./constants\";\nimport { str } from \"./util/util\";\nimport { ESFunction, ESNamespace, ESString } from './runtime/primitiveTypes';\nimport loadGlobalConstants from \"./built-in/globalConstants\";\nexport function initialise(globalContext, printFunc, inputFunc) {\n    builtInFunctions['import'] = [({ context }, rawUrl, callback) => {\n            if (IS_NODE_INSTANCE) {\n                return new ESError(Position.unknown, 'ImportError', 'Is running in node instance but trying to run browser import function');\n            }\n            const url = rawUrl.str();\n            if (moduleExist(str(url))) {\n                return getModule(str(url));\n            }\n            try {\n                fetch(str(url))\n                    .then(c => c.text())\n                    .then((code) => __awaiter(this, void 0, void 0, function* () {\n                    const env = new Context();\n                    env.parent = globalContext;\n                    const res = yield run(code);\n                    if (res.error) {\n                        printFunc(new ImportError(Position.unknown, str(url), res.error.str).str);\n                        return;\n                    }\n                    if (!(callback instanceof ESFunction))\n                        return;\n                    callback.__call__({ context }, new ESNamespace(url, env.getSymbolTableAsDict()));\n                }));\n            }\n            catch (E) {\n                return new ESError(Position.unknown, 'ImportError', E.toString());\n            }\n        }, {}];\n    builtInFunctions['print'] = [({ context }, ...args) => {\n            let out = ``;\n            for (let arg of args)\n                out += str(arg);\n            printFunc(out);\n        }, {}];\n    builtInFunctions['input'] = [({ context }, msg, cbRaw) => {\n            inputFunc(msg.valueOf(), (msg) => {\n                let cb = cbRaw === null || cbRaw === void 0 ? void 0 : cbRaw.valueOf();\n                if (cb instanceof ESFunction) {\n                    let res = cb.__call__({ context }, new ESString(msg));\n                    if (res instanceof ESError) {\n                        console.log(res.str);\n                    }\n                }\n                else if (typeof cb === 'function')\n                    cb(msg);\n                return new ESString('\\'input()\\' does not return anything. Pass in a function as the second argument, which will take the user input as an argument.');\n            });\n        }, {}];\n    for (let builtIn in builtInFunctions) {\n        const fn = new ESFunction(builtInFunctions[builtIn][0], [], builtIn, undefined, undefined, globalContext);\n        fn.info = builtInFunctions[builtIn][1];\n        fn.info.name = builtIn;\n        fn.info.isBuiltIn = true;\n        fn.info.file = 'built-in';\n        globalContext.set(builtIn, fn, {\n            global: true,\n            isConstant: true\n        });\n    }\n    loadGlobalConstants(globalContext);\n    const initModRes = initModules();\n    if (initModRes) {\n        return initModRes;\n    }\n    globalContext.initialisedAsGlobal = true;\n}\n","import { ESBoolean, ESUndefined, types } from '../runtime/primitiveTypes';\nexport default function load(context) {\n    const globalConstants = {\n        'false': new ESBoolean(false),\n        'true': new ESBoolean(true),\n        'nil': new ESUndefined(),\n        'any': types.any,\n        'number': types.number,\n        'string': types.string,\n        'bool': types.bool,\n        'function': types.function,\n        'array': types.array,\n        'object': types.object,\n        'type': types.type,\n        'error': types.error,\n        'undefined': types.undefined\n    };\n    for (let constant in globalConstants) {\n        const value = globalConstants[constant];\n        context.set(constant, value, {\n            global: true,\n            isConstant: true\n        });\n    }\n}\n","export default class {\n    constructor(cb) {\n        this.thens = [];\n        this.resolved = false;\n        cb((value) => {\n            if (this.resolved) {\n                return;\n            }\n            this.resolved = true;\n            for (let then of this.thens) {\n                then(value);\n            }\n        }, (error) => {\n            if (this.resolved) {\n                return;\n            }\n            this.resolved = true;\n            if (this.catch_) {\n                this.catch_(error);\n            }\n        });\n    }\n    then(cb) {\n        if (this.resolved) {\n            return;\n        }\n        this.thens.push(cb);\n        return this;\n    }\n    catch(cb) {\n        if (this.resolved) {\n            return;\n        }\n        this.catch_ = cb;\n        return this;\n    }\n}\n;\n","import { now } from '../../constants';\nimport { ESFunction } from '../../runtime/primitives/esfunction';\nimport { ESJSBinding } from '../../runtime/primitives/esjsbinding';\nimport { ESNumber } from '../../runtime/primitives/esnumber';\nconst module = (config) => ({\n    now: new ESFunction(() => new ESNumber(now())),\n    date: new ESJSBinding(Date)\n});\nexport default module;\n","import { IS_NODE_INSTANCE, permissions } from '../../constants';\nimport { ReferenceError, InvalidRuntimeError, PermissionRequiredError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESJSBinding } from \"../../runtime/primitives/esjsbinding\";\nconst module = () => {\n    if (!permissions.accessDOM) {\n        return new PermissionRequiredError('No access to DOM');\n    }\n    if (IS_NODE_INSTANCE) {\n        return new InvalidRuntimeError();\n    }\n    const w = window;\n    if (typeof w === 'undefined' || !('$' in w)) {\n        return new ReferenceError(Position.unknown, '$ must be property of window to use dom library');\n    }\n    const $ = new ESJSBinding(w['$'], 'jquery');\n    return {\n        $,\n        window: new ESJSBinding(w, 'window'),\n        document: new ESJSBinding(w['document'], 'document'),\n    };\n};\nexport default module;\n","import { ESPrimitive, ESType } from \"./primitiveTypes\";\nimport { TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nexport function interpretArgument(arg, context) {\n    var _a;\n    let type;\n    const typeRes = arg.type.interpret(context);\n    if (typeRes.error)\n        return typeRes.error;\n    if (typeRes.val instanceof ESType)\n        type = typeRes.val;\n    else\n        return new TypeError(Position.unknown, 'Type', typeof typeRes.val, typeRes.val, 'Argument can\\'t be undefined');\n    let defaultValue;\n    if (arg.defaultValue) {\n        let defaultValRes = (_a = arg.defaultValue) === null || _a === void 0 ? void 0 : _a.interpret(context);\n        if (defaultValRes.error)\n            return defaultValRes.error;\n        if (defaultValRes.val instanceof ESPrimitive)\n            defaultValue = defaultValRes.val;\n    }\n    return {\n        name: arg.name,\n        type, defaultValue\n    };\n}\n","import { ESError, InvalidSyntaxError, ReferenceError, TypeError } from \"../errors\";\nimport { Context } from './context';\nimport { Position } from \"../position\";\nimport { catchBlockErrorSymbolName, now, tokenTypeString, tt } from \"../constants\";\nimport { interpretArgument } from \"./argument\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESType, ESUndefined, types } from \"./primitiveTypes\";\nimport { generateRandomSymbol, str } from '../util/util';\nexport class interpretResult {\n    constructor() {\n        this.val = new ESUndefined();\n        this.shouldBreak = false;\n        this.shouldContinue = false;\n    }\n}\nexport class compileResult {\n    constructor(val) {\n        this.val = '';\n        this.hoisted = '';\n        if (typeof val === 'string') {\n            this.val = val;\n        }\n        else if (val) {\n            this.error = val;\n        }\n    }\n    register(node, config) {\n        const res = node.compilePy(config);\n        this.hoisted += res.hoisted;\n        if (res.error) {\n            this.error = res.error;\n            return '';\n        }\n        return res.val;\n    }\n}\nexport class Node {\n    constructor(pos, isTerminal = false) {\n        this.pos = pos;\n        this.isTerminal = isTerminal;\n    }\n    interpret(context) {\n        var _a;\n        const start = now();\n        const res = new interpretResult;\n        const val = this.interpret_(context);\n        if (val instanceof ESError) {\n            res.error = val;\n        }\n        else if (val instanceof interpretResult) {\n            res.val = val.val;\n            res.error = val.error;\n            res.funcReturn = val.funcReturn;\n            res.shouldBreak = val.shouldBreak;\n            res.shouldContinue = val.shouldContinue;\n        }\n        else {\n            res.val = val;\n        }\n        if (res.error && res.error.pos.isUnknown) {\n            res.error.pos = this.pos;\n        }\n        if (!(res.val instanceof ESPrimitive)) {\n            res.error = new TypeError(Position.unknown, 'Primitive', 'Native JS value', str(res.val));\n            res.val = new ESUndefined();\n        }\n        (_a = res.val.info).file || (_a.file = this.pos.file);\n        Node.interprets++;\n        let time = now() - start;\n        Node.totalTime += time;\n        if (time > Node.maxTime)\n            Node.maxTime = time;\n        return res;\n    }\n}\nNode.interprets = 0;\nNode.totalTime = 0;\nNode.maxTime = 0;\nexport class N_binOp extends Node {\n    constructor(pos, left, opTok, right) {\n        super(pos);\n        this.left = left;\n        this.opTok = opTok;\n        this.right = right;\n    }\n    interpret_(context) {\n        const left = this.left.interpret(context);\n        if (left.error)\n            return left.error;\n        const right = this.right.interpret(context);\n        if (right.error)\n            return right.error;\n        const l = left.val;\n        const r = right.val;\n        if (typeof l === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', l, 'N_binOp.interpret_');\n        }\n        if (typeof r === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', r, 'N_binOp.interpret_');\n        }\n        switch (this.opTok.type) {\n            case tt.LTE: {\n                const lt = l.__lt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (lt instanceof ESError)\n                    return lt;\n                if (eq instanceof ESError)\n                    return eq;\n                return lt.__or__({ context }, eq);\n            }\n            case tt.GTE: {\n                const gt = l.__gt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (gt instanceof ESError)\n                    return gt;\n                if (eq instanceof ESError)\n                    return eq;\n                return gt.__or__({ context }, eq);\n            }\n            case tt.NOTEQUALS: {\n                const res = l.__eq__({ context }, r);\n                if (res instanceof ESError)\n                    return res;\n                return new ESBoolean(!res.bool().valueOf());\n            }\n            case tt.ADD:\n                return l.__add__({ context }, r);\n            case tt.SUB:\n                return l.__subtract__({ context }, r);\n            case tt.MUL:\n                return l.__multiply__({ context }, r);\n            case tt.DIV:\n                return l.__divide__({ context }, r);\n            case tt.POW:\n                return l.__pow__({ context }, r);\n            case tt.MOD:\n                return l.__mod__({ context }, r);\n            case tt.EQUALS:\n                return l.__eq__({ context }, r);\n            case tt.LT:\n                return l.__lt__({ context }, r);\n            case tt.GT:\n                return l.__gt__({ context }, r);\n            case tt.AND:\n                return l.__and__({ context }, r);\n            case tt.OR:\n                return l.__or__({ context }, r);\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid binary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(config) {\n        const left = this.left.compileJS(config);\n        if (left.error)\n            return left;\n        const right = this.right.compileJS(config);\n        if (right.error)\n            return right;\n        if (config.minify) {\n            return new compileResult(`${left.val}${tokenTypeString[this.opTok.type]}${right.val}`);\n        }\n        return new compileResult(`${left.val} ${tokenTypeString[this.opTok.type]} ${right.val}`);\n    }\n    compilePy(config) {\n        const left = this.left.compilePy(config);\n        if (left.error)\n            return left;\n        const right = this.right.compilePy(config);\n        if (right.error)\n            return right;\n        const switchers = {\n            '&&': 'and',\n            '||': 'or',\n            '^': '**',\n        };\n        let op = tokenTypeString[this.opTok.type];\n        if (op in switchers) {\n            op = switchers[op];\n        }\n        return new compileResult(`${left.val} ${op} ${right.val}`);\n    }\n}\nexport class N_unaryOp extends Node {\n    constructor(pos, a, opTok) {\n        super(pos);\n        this.a = a;\n        this.opTok = opTok;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const res = this.a.interpret(context);\n        if (res.error)\n            return res.error;\n        switch (this.opTok.type) {\n            case tt.SUB:\n            case tt.ADD:\n                if (!(res.val instanceof ESNumber)) {\n                    return new TypeError(this.pos, 'Number', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().toString()) || 'undefined_', (_b = res.val) === null || _b === void 0 ? void 0 : _b.valueOf());\n                }\n                const numVal = res.val.valueOf();\n                return new ESNumber(this.opTok.type === tt.SUB ? -numVal : Math.abs(numVal));\n            case tt.NOT:\n                return new ESBoolean(!((_c = res === null || res === void 0 ? void 0 : res.val) === null || _c === void 0 ? void 0 : _c.bool().valueOf()));\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid unary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(config) {\n        const val = this.a.compileJS(config);\n        if (val.error)\n            return val;\n        return new compileResult(`${tokenTypeString[this.opTok.type]}${val.val}`);\n    }\n    compilePy(config) {\n        const val = this.a.compilePy(config);\n        if (val.error)\n            return val;\n        return new compileResult(`${tokenTypeString[this.opTok.type]}${val.val}`);\n    }\n}\nexport class N_varAssign extends Node {\n    constructor(pos, varNameTok, value, assignType = '=', isGlobal = false, isLocal = false, isConstant = false, isDeclaration = false, type = types.any) {\n        super(pos);\n        this.value = value;\n        this.varNameTok = varNameTok;\n        this.isGlobal = isGlobal;\n        this.assignType = assignType;\n        this.isConstant = isConstant;\n        this.isDeclaration = isDeclaration;\n        this.isLocal = isLocal;\n        if (type instanceof ESType) {\n            this.type = new N_primitiveWrapper(type);\n        }\n        else\n            this.type = type;\n    }\n    interpret_(context) {\n        var _a, _b, _c, _d;\n        if (this.isDeclaration && context.hasOwn(this.varNameTok.value)) {\n            return new InvalidSyntaxError(this.pos, `Symbol '${this.varNameTok.value}' already exists, and cannot be redeclared`);\n        }\n        const res = this.value.interpret(context);\n        const typeRes = this.type.interpret(context);\n        if (res.error)\n            return res.error;\n        if (typeRes.error)\n            return typeRes.error;\n        if (!typeRes.val || !(typeRes.val instanceof ESType)) {\n            return new TypeError(this.varNameTok.pos, 'Type', (_b = (_a = typeRes.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) !== null && _b !== void 0 ? _b : 'undefined', (_c = typeRes.val) === null || _c === void 0 ? void 0 : _c.str(), `@ !typeRes.val || !(typeRes.val instanceof ESType)`);\n        }\n        if (!res.val) {\n            return new TypeError(this.varNameTok.pos, '~undefined', 'undefined', 'N_varAssign.interpret_');\n        }\n        if (!typeRes.val.resolve({ context }, res.val.__type__).bool().valueOf()) {\n            return new TypeError(this.varNameTok.pos, str(typeRes.val), str((_d = res.val) === null || _d === void 0 ? void 0 : _d.typeName()), str(res.val));\n        }\n        if (this.isDeclaration) {\n            if (this.assignType !== '=')\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            context.setOwn(this.varNameTok.value, res.val, {\n                global: false,\n                isConstant: this.isConstant\n            });\n            return res.val;\n        }\n        if (this.assignType === '=') {\n            let value = res.val;\n            if (value === undefined)\n                value = new ESUndefined();\n            const setRes = context.set(this.varNameTok.value, value, {\n                global: this.isGlobal,\n                isConstant: this.isConstant\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n        }\n        else {\n            if (this.isDeclaration)\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            const currentVal = context.get(this.varNameTok.value);\n            if (currentVal instanceof ESError)\n                return currentVal;\n            if (currentVal == undefined)\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            let newVal;\n            let assignVal = res.val;\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError) {\n                return newVal;\n            }\n            let setRes = context.set(this.varNameTok.value, newVal, {\n                global: this.isGlobal,\n                isConstant: this.isConstant\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n            res.val = newVal;\n        }\n        if (res.val.info.name === '(anonymous)' || !res.val.info.name) {\n            res.val.info.name = this.varNameTok.value;\n        }\n        return res;\n    }\n    compileJS(config) {\n        const val = this.value.compileJS(config);\n        if (val.error)\n            return val;\n        let declaration = '';\n        if (this.isDeclaration) {\n            if (this.isGlobal) {\n                declaration = 'var';\n            }\n            else if (this.isConstant) {\n                declaration = 'const';\n            }\n            else {\n                declaration = 'let';\n            }\n        }\n        let assign = this.assignType;\n        if (assign !== '=') {\n            assign += '=';\n        }\n        if (config.minify) {\n            return new compileResult(`${declaration} ${this.varNameTok.value}${assign}${val.val}`);\n        }\n        return new compileResult(`${declaration} ${this.varNameTok.value} ${assign} ${val.val}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const val = this.value.compilePy(config);\n        if (val.error)\n            return val;\n        res.hoisted += val.hoisted;\n        let assign = this.assignType;\n        if (assign !== '=') {\n            assign += '=';\n        }\n        if (this.isGlobal) {\n            res.hoisted += `${this.varNameTok.value}=None`;\n        }\n        if (config.minify) {\n            res.val = `${this.varNameTok.value}${assign}${val.val}`;\n        }\n        else {\n            res.val = `${this.varNameTok.value} ${assign} ${val.val}`;\n        }\n        return res;\n    }\n}\nexport class N_if extends Node {\n    constructor(pos, comparison, ifTrue, ifFalse) {\n        super(pos);\n        this.comparison = comparison;\n        this.ifFalse = ifFalse;\n        this.ifTrue = ifTrue;\n    }\n    interpret_(context) {\n        var _a;\n        let newContext = new Context();\n        newContext.parent = context;\n        let res = new interpretResult();\n        let compRes = this.comparison.interpret(context);\n        if (compRes.error)\n            return compRes;\n        if ((_a = compRes.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            res = this.ifTrue.interpret(newContext);\n            res.val = new ESUndefined();\n            if (res.error)\n                return res;\n        }\n        else if (this.ifFalse) {\n            res = this.ifFalse.interpret(newContext);\n            res.val = new ESUndefined();\n            if (res.error)\n                return res;\n        }\n        return res;\n    }\n    compileJS(config) {\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 4);\n        config.indent += 4;\n        const statementRes = this.comparison.compileJS(config);\n        if (statementRes.error)\n            return statementRes;\n        const ifTrueRes = this.ifTrue.compileJS(config);\n        if (ifTrueRes.error)\n            return ifTrueRes;\n        if (!this.ifFalse) {\n            if (config.minify) {\n                return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}\\n}`);\n            }\n            return new compileResult(`if (${statementRes.val}) {\\n${ifTrueRes.val}\\n}`);\n        }\n        config.indent = highIndent.length;\n        let ifFalseRes = this.ifFalse.compileJS(config);\n        if (ifFalseRes.error)\n            return ifFalseRes;\n        if (!(this.ifFalse instanceof N_statements)) {\n            ifFalseRes.val = highIndent + ifFalseRes.val;\n        }\n        if (config.minify) {\n            return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}}else{${ifFalseRes.val}}`);\n        }\n        return new compileResult(`if (${statementRes.val}) {\\n${ifTrueRes.val}\\n${indent}} else {\\n${ifFalseRes.val}\\n${indent}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 4);\n        config.indent += 4;\n        const statementRes = this.comparison.compilePy(config);\n        if (statementRes.error)\n            return statementRes;\n        res.hoisted += statementRes.hoisted;\n        const ifTrueRes = this.ifTrue.compilePy(config);\n        if (ifTrueRes.error)\n            return ifTrueRes;\n        res.hoisted += ifTrueRes.hoisted;\n        if (!this.ifFalse) {\n            return new compileResult(`if ${statementRes.val}:\\n${highIndent}${ifTrueRes.val}`);\n        }\n        const ifFalseRes = this.ifFalse.compilePy(config);\n        if (ifFalseRes.error)\n            return ifFalseRes;\n        res.hoisted += ifFalseRes.hoisted;\n        if (!(this.ifFalse instanceof N_statements)) {\n            ifFalseRes.val = highIndent + ifFalseRes.val;\n        }\n        return new compileResult(`if ${statementRes.val}:\\n${ifTrueRes.val}\\n${indent}else:\\n${ifFalseRes.val}\\n${indent}`);\n    }\n}\nexport class N_while extends Node {\n    constructor(pos, comparison, loop) {\n        super(pos);\n        this.comparison = comparison;\n        this.loop = loop;\n    }\n    interpret_(context) {\n        var _a, _b;\n        let newContext = new Context();\n        newContext.parent = context;\n        while (true) {\n            let shouldLoop = this.comparison.interpret(context);\n            if (shouldLoop.error)\n                return shouldLoop;\n            if (!((_b = (_a = shouldLoop.val) === null || _a === void 0 ? void 0 : _a.bool()) === null || _b === void 0 ? void 0 : _b.valueOf()))\n                break;\n            let potentialError = this.loop.interpret(newContext);\n            if (potentialError.error)\n                return potentialError;\n            if (potentialError.shouldBreak)\n                break;\n        }\n        return new ESUndefined();\n    }\n    compileJS(config) {\n        config.indent += 4;\n        const comparisonRes = this.comparison.compileJS(config);\n        if (comparisonRes.error)\n            return comparisonRes;\n        const bodyRes = this.loop.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        if (config.minify) {\n            return new compileResult(`while(${comparisonRes.val}){${bodyRes.val}}`);\n        }\n        return new compileResult(`while (${comparisonRes.val}) {\\n${bodyRes.val}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const highIndent = ' '.repeat(config.indent || 0);\n        const comparisonRes = this.comparison.compilePy(config);\n        if (comparisonRes.error)\n            return comparisonRes;\n        res.hoisted += comparisonRes.hoisted;\n        const bodyRes = this.loop.compilePy(config);\n        if (bodyRes.error)\n            return bodyRes;\n        res.hoisted += bodyRes.hoisted;\n        return new compileResult(`while ${comparisonRes.val}:\\n${highIndent}${bodyRes.val}`);\n    }\n}\nexport class N_for extends Node {\n    constructor(pos, body, array, identifier, isGlobalIdentifier, isConstIdentifier) {\n        super(pos);\n        this.body = body;\n        this.array = array;\n        this.identifier = identifier;\n        this.isGlobalId = isGlobalIdentifier;\n        this.isConstId = isConstIdentifier;\n    }\n    interpret_(context) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        const array = this.array.interpret(context);\n        if (array.error)\n            return array;\n        if (['Array', 'Number', 'Object', 'String', 'Any'].indexOf(((_a = array.val) === null || _a === void 0 ? void 0 : _a.typeName()) || '') === -1) {\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val + ' | ' + ((_b = array.val) === null || _b === void 0 ? void 0 : _b.typeName()));\n        }\n        function iteration(body, id, element, isGlobal, isConstant) {\n            let newContext = new Context();\n            newContext.parent = context;\n            newContext.set(id, element, {\n                global: isGlobal,\n                isConstant\n            });\n            const res = body.interpret(newContext);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (res.shouldBreak) {\n                res.shouldBreak = false;\n                return 'break';\n            }\n            if (res.shouldContinue)\n                res.shouldContinue = false;\n        }\n        if (array.val instanceof ESNumber || typeof ((_c = array.val) === null || _c === void 0 ? void 0 : _c.valueOf()) == 'number') {\n            for (let i = 0; i < array.val.valueOf(); i++) {\n                const res = iteration(this.body, this.identifier.value, new ESNumber(i), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESObject ||\n            (typeof ((_d = array.val) === null || _d === void 0 ? void 0 : _d.valueOf()) == 'number' && !Array.isArray((_e = array.val) === null || _e === void 0 ? void 0 : _e.valueOf()))) {\n            for (let element in (_f = array.val) === null || _f === void 0 ? void 0 : _f.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, new ESString(element), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESArray || Array.isArray((_g = array.val) === null || _g === void 0 ? void 0 : _g.valueOf())) {\n            for (let element of (_h = array.val) === null || _h === void 0 ? void 0 : _h.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, element, this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val);\n        return new ESUndefined();\n    }\n    compileJS(config) {\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const iteratorRes = this.array.compileJS(config);\n        if (iteratorRes.error)\n            return iteratorRes;\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        let declaration = 'let';\n        if (this.isGlobalId) {\n            declaration = 'var';\n        }\n        else if (this.isConstId) {\n            declaration = 'const';\n        }\n        if (config.minify) {\n            return new compileResult(`for(${declaration} ${this.identifier.value} of ${iteratorRes.val}){${bodyRes.val}\\n${indent}}`);\n        }\n        return new compileResult(`for (${declaration} ${this.identifier.value} of ${iteratorRes.val}) {\\n${bodyRes.val}\\n${indent}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        config.indent += 4;\n        const iteratorRes = res.register(this.array, config);\n        if (res.error)\n            return res;\n        const bodyRes = res.register(this.body, config);\n        if (res.error)\n            return res;\n        if (this.isGlobalId) {\n            res.hoisted += `${this.identifier.value}=None`;\n        }\n        res.val = `for ${this.identifier.value} in ${iteratorRes}:\\n${bodyRes}`;\n        return res;\n    }\n}\nexport class N_array extends Node {\n    constructor(pos, items, shouldClone = false) {\n        super(pos);\n        this.items = items;\n        this.shouldClone = shouldClone;\n    }\n    interpret_(context) {\n        let result = new interpretResult();\n        let interpreted = [];\n        for (let item of this.items) {\n            const res = item.interpret(context);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (!res.val)\n                continue;\n            let val = res.val;\n            if (this.shouldClone) {\n                val = val.clone();\n            }\n            interpreted.push(val);\n        }\n        result.val = new ESArray(interpreted);\n        return result;\n    }\n    compileJS(config) {\n        const res = new compileResult('[');\n        for (let item of this.items) {\n            const itemRes = item.compileJS(config);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ',';\n        }\n        res.val += ']';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult('[');\n        for (let item of this.items) {\n            const itemRes = res.register(item, config);\n            if (res.error)\n                return res;\n            res.val += itemRes + ',';\n        }\n        res.val += ']';\n        return res;\n    }\n}\nexport class N_objectLiteral extends Node {\n    constructor(pos, properties) {\n        super(pos);\n        this.properties = properties;\n    }\n    interpret_(context) {\n        let interpreted = {};\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.interpret(context);\n            if (value.error)\n                return value.error;\n            const key = keyNode.interpret(context);\n            if (key.error)\n                return key.error;\n            if (key.val && value.val) {\n                interpreted[key.val.valueOf()] = value.val;\n            }\n        }\n        return new ESObject(interpreted);\n    }\n    compileJS(config) {\n        const res = new compileResult('{');\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.compileJS(config);\n            if (value.error)\n                return value;\n            const key = keyNode.compileJS(config);\n            if (key.error)\n                return key;\n            if (key.val && value.val) {\n                res.val += `[${key.val}]: ${value.val},`;\n            }\n        }\n        res.val += '}';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult('{');\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = res.register(valueNode, config);\n            if (res.error)\n                return res;\n            const key = res.register(keyNode, config);\n            if (res.error)\n                return res;\n            if (key && value) {\n                res.val += `${key}: ${value},`;\n            }\n        }\n        res.val += '}';\n        return res;\n    }\n}\nexport class N_statements extends Node {\n    constructor(pos, items, topLevel = false) {\n        super(pos);\n        this.items = items;\n        this.topLevel = topLevel;\n    }\n    interpret_(context) {\n        if (!this.topLevel) {\n            let last;\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (typeof res.funcReturn !== 'undefined') || res.shouldBreak || res.shouldContinue)\n                    return res;\n                last = res.val;\n            }\n            if (last)\n                return last;\n            return new ESUndefined();\n        }\n        else {\n            let result = new interpretResult();\n            let interpreted = [];\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (res.funcReturn !== undefined))\n                    return res;\n                if (!res.val)\n                    continue;\n                let val = res.val.clone();\n                interpreted.push(val);\n            }\n            result.val = new ESArray(interpreted);\n            return result;\n        }\n    }\n    compileJS(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        res.val += indent;\n        for (let item of this.items) {\n            const itemRes = item.compileJS(config);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ';';\n            if (!config.minify) {\n                res.val += '\\n' + indent;\n            }\n        }\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        res.val += indent;\n        for (let item of this.items) {\n            const itemRes = res.register(item, config);\n            if (res.error)\n                return res;\n            res.val += itemRes;\n            res.val += '\\n' + indent;\n        }\n        return res;\n    }\n}\nexport class N_functionCall extends Node {\n    constructor(pos, to, args) {\n        super(pos);\n        this.arguments = args;\n        this.to = to;\n    }\n    interpret_(context) {\n        let { val, error } = this.to.interpret(context);\n        if (error) {\n            return error;\n        }\n        if (!val) {\n            return new TypeError(this.pos, 'any', 'undefined', undefined, 'On function call');\n        }\n        let params = [];\n        for (let arg of this.arguments) {\n            const res = arg.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (res.val) {\n                params.push(res.val);\n            }\n        }\n        const res = val.__call__({ context }, ...params);\n        if (res instanceof ESError) {\n            res.traceback.push({\n                position: this.pos,\n                line: `${val.info.name || '<AnonFunction>'}(${params.map(str).join(', ')})`\n            });\n        }\n        return res;\n    }\n    compileJS(config) {\n        const res = new compileResult;\n        const funcRes = this.to.compileJS(config);\n        if (funcRes.error)\n            return funcRes;\n        res.val = funcRes.val + '(';\n        for (let arg of this.arguments) {\n            const argRes = arg.compileJS(config);\n            if (argRes.error)\n                return argRes;\n            res.val += argRes.val;\n            if (arg !== this.arguments[this.arguments.length - 1]) {\n                res.val += ',';\n                if (!config.minify) {\n                    res.val += ' ';\n                }\n            }\n        }\n        res.val += ')';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const funcRes = res.register(this.to, config);\n        if (res.error)\n            return res;\n        res.val = funcRes + '(';\n        for (let arg of this.arguments) {\n            const argRes = res.register(arg, config);\n            if (res.error)\n                return res;\n            res.val += argRes;\n            if (arg !== this.arguments[this.arguments.length - 1]) {\n                res.val += ',';\n                if (!config.minify) {\n                    res.val += ' ';\n                }\n            }\n        }\n        res.val += ')';\n        return res;\n    }\n}\nexport class N_functionDefinition extends Node {\n    constructor(pos, body, argNames, returnType, name = '(anon)', this_ = new ESObject(), description = '') {\n        super(pos);\n        this.arguments = argNames;\n        this.body = body;\n        this.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        this.description = description;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        let args = [];\n        for (let arg of this.arguments) {\n            const res = interpretArgument(arg, context);\n            if (res instanceof ESError)\n                return res;\n            args.push(res);\n        }\n        const returnTypeRes = this.returnType.interpret(context);\n        if (returnTypeRes.error)\n            return returnTypeRes.error;\n        if (!(returnTypeRes.val instanceof ESType))\n            return new TypeError(this.returnType.pos, 'Type', (_b = (_a = returnTypeRes.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) !== null && _b !== void 0 ? _b : '<Undefined>', (_c = returnTypeRes.val) === null || _c === void 0 ? void 0 : _c.str().valueOf(), `On func '${this.name}' return type`);\n        return new ESFunction(this.body, args, this.name, this.this_, returnTypeRes.val, context);\n    }\n    compileJS(config) {\n        const res = new compileResult('function(');\n        for (let param of this.arguments) {\n            res.val += param.name + ',';\n            if (!config.minify) {\n                res.val += ' ';\n            }\n        }\n        if (config.minify) {\n            res.val += '){';\n        }\n        else {\n            res.val += ') {\\n';\n        }\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        res.val += `${bodyRes.val}\\n${indent}}`;\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const hoistedName = generateRandomSymbol(config.symbols);\n        res.hoisted = `def ${hoistedName}(`;\n        for (let param of this.arguments) {\n            res.hoisted += param.name + ',';\n            if (!config.minify) {\n                res.hoisted += ' ';\n            }\n        }\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const body = this.body.compilePy(config);\n        if (body.error)\n            return body;\n        res.hoisted += `):\\n${indent}${body.val}`;\n        res.hoisted = body.hoisted + res.hoisted;\n        res.val = hoistedName;\n        return res;\n    }\n}\nexport class N_return extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        res.funcReturn = val.val;\n        return res;\n    }\n    compileJS(config) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(config);\n        if (valRes === null || valRes === void 0 ? void 0 : valRes.error)\n            return valRes;\n        return new compileResult(`return(${valRes === null || valRes === void 0 ? void 0 : valRes.val})`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        if (!this.value) {\n            return new compileResult('return');\n        }\n        const valRes = res.register(this.value, config);\n        if (res.error)\n            return res;\n        return new compileResult(`return ${valRes}`);\n    }\n}\nexport class N_yield extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        var _a;\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        if ((_a = val.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            res.funcReturn = val.val;\n        }\n        return res;\n    }\n    compileJS(config) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(config);\n        if (!valRes || !valRes.val) {\n            return new compileResult('');\n        }\n        return new compileResult(`if(_=${valRes.val}){return(_))`);\n    }\n    compilePy(config) {\n        if (!this.value) {\n            return new compileResult('');\n        }\n        const res = new compileResult;\n        const valRes = res.register(this.value, config);\n        if (!valRes) {\n            return new compileResult('');\n        }\n        return new compileResult(`if _ := ${valRes}: return _`);\n    }\n}\nexport class N_indexed extends Node {\n    constructor(pos, base, index) {\n        super(pos);\n        this.base = base;\n        this.index = index;\n    }\n    interpret_(context) {\n        var _a;\n        let baseRes = this.base.interpret(context);\n        if (baseRes.error)\n            return baseRes;\n        let indexRes = this.index.interpret(context);\n        if (indexRes.error)\n            return indexRes;\n        const index = indexRes.val;\n        const base = baseRes.val;\n        if (!base || !index)\n            return new ESUndefined();\n        if (this.value !== undefined) {\n            let valRes = this.value.interpret(context);\n            if (valRes.error)\n                return valRes;\n            const currentVal = wrap(base.__getProperty__({ context }, index));\n            let newVal;\n            let assignVal = valRes.val;\n            (_a = this.assignType) !== null && _a !== void 0 ? _a : (this.assignType = '=');\n            if (!assignVal) {\n                return new TypeError(this.pos, '~undefined', 'undefined', 'undefined', 'N_indexed.interpret_');\n            }\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                case '=':\n                    newVal = assignVal;\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError)\n                return newVal;\n            if (!base.__setProperty__)\n                return new TypeError(this.pos, 'mutable', 'immutable', base.valueOf());\n            const res = base.__setProperty__({ context }, index, newVal !== null && newVal !== void 0 ? newVal : new ESUndefined());\n            if (res instanceof ESError)\n                return res;\n        }\n        return base.__getProperty__({ context }, index);\n    }\n    compileJS(config) {\n        const objectRes = this.base.compileJS(config);\n        if (objectRes.error)\n            return objectRes;\n        const keyRes = this.index.compileJS(config);\n        if (keyRes.error)\n            return keyRes;\n        if (!this.value) {\n            return new compileResult(`${objectRes.val}[${keyRes.val}]`);\n        }\n        const valRes = this.value.compileJS(config);\n        if (valRes.error)\n            return valRes;\n        return new compileResult(`${objectRes.val}[${keyRes.val}]${this.assignType || '='}${valRes.val}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const objectRes = res.register(this.base, config);\n        if (res.error)\n            return res;\n        const keyRes = res.register(this.index, config);\n        if (res.error)\n            return res;\n        if (!this.value) {\n            res.val = `${objectRes}[${keyRes}]`;\n            return res;\n        }\n        const valRes = res.register(this.value, config);\n        if (res.error)\n            return res;\n        res.val = `${objectRes}[${keyRes}] ${this.assignType || '='} ${valRes}`;\n        return res;\n    }\n}\nexport class N_class extends Node {\n    constructor(pos, methods, extends_, init, name = '<anon class>') {\n        super(pos);\n        this.init = init;\n        this.methods = methods;\n        this.name = name;\n        this.extends_ = extends_;\n        this.instances = [];\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const methods = [];\n        for (let method of this.methods) {\n            const res = method.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (!(res.val instanceof ESFunction))\n                return new TypeError(this.pos, 'Function', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            methods.push(res.val);\n        }\n        let extends_;\n        if (this.extends_) {\n            const extendsRes = this.extends_.interpret(context);\n            if (extendsRes.error) {\n                return extendsRes.error;\n            }\n            if (!(extendsRes.val instanceof ESType))\n                return new TypeError(this.pos, 'Function', ((_b = extendsRes.val) === null || _b === void 0 ? void 0 : _b.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            extends_ = extendsRes.val;\n        }\n        let init;\n        if (this.init) {\n            const initRes = this.init.interpret(context);\n            if (initRes.error) {\n                return initRes.error;\n            }\n            if (!(initRes.val instanceof ESFunction)) {\n                return new TypeError(this.pos, 'Function', ((_c = initRes.val) === null || _c === void 0 ? void 0 : _c.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            init = initRes.val;\n        }\n        return new ESType(false, this.name, methods, extends_, init);\n    }\n    compileJS(config) {\n        return new compileResult('function(){return{};}');\n    }\n    compilePy(config) {\n        return new compileResult(`class ${this.name}:\\n${' '.repeat(config.indent)}pass`);\n    }\n}\nexport class N_namespace extends Node {\n    constructor(pos, statements, name = '(anon)', mutable = false) {\n        super(pos);\n        this.name = name;\n        this.statements = statements;\n        this.mutable = mutable;\n    }\n    interpret_(context) {\n        const newContext = new Context();\n        newContext.parent = context;\n        const res = this.statements.interpret(newContext);\n        if (res.error)\n            return res;\n        return new ESNamespace(new ESString(this.name), newContext.getSymbolTableAsDict(), this.mutable);\n    }\n    compileJS(config) {\n        const bodyRes = this.statements.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        return new compileResult(`(() => {${bodyRes.val}})()`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const bodyRes = res.register(this.statements, config);\n        if (res.error)\n            return res;\n        res.val = `'namespace'`;\n        return res;\n    }\n}\nexport class N_tryCatch extends Node {\n    constructor(pos, body, catchBlock) {\n        super(pos, true);\n        this.body = body;\n        this.catchBlock = catchBlock;\n    }\n    interpret_(context) {\n        const res = this.body.interpret(context);\n        if (res.error) {\n            const newContext = new Context();\n            newContext.parent = context;\n            newContext.setOwn(catchBlockErrorSymbolName, new ESErrorPrimitive(res.error), {\n                isConstant: true\n            });\n            const catchRes = this.catchBlock.interpret(newContext);\n            if (catchRes.error)\n                return catchRes.error;\n        }\n        return new interpretResult();\n    }\n    compileJS(config) {\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        const catchRes = this.catchBlock.compileJS(config);\n        if (catchRes.error)\n            return catchRes;\n        return new compileResult(`try{${bodyRes.val}}catch(${catchBlockErrorSymbolName}){${catchRes.val}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const bodyRes = res.register(this.body, config);\n        if (res.error)\n            return res;\n        const catchRes = res.register(this.catchBlock, config);\n        if (res.error)\n            return res;\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 1);\n        res.val = `try:\\n${highIndent}${bodyRes}\\n${indent}except:\\n${highIndent}${catchRes}`;\n        return res;\n    }\n}\nexport class N_number extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        const res = new interpretResult();\n        res.val = new ESNumber(val);\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult(this.a.value.toString());\n    }\n    compilePy(config) {\n        return new compileResult(this.a.value.toString());\n    }\n}\nexport class N_string extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        const res = new interpretResult();\n        res.val = new ESString(val);\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult(`'${this.a.value}'`);\n    }\n    compilePy(config) {\n        return new compileResult(`'${this.a.value}'`);\n    }\n}\nexport class N_variable extends Node {\n    constructor(a) {\n        super(a.pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        if (!context.has(this.a.value)) {\n            return new ReferenceError(this.a.pos, this.a.value);\n        }\n        let res = new interpretResult();\n        let symbol = context.getSymbol(this.a.value);\n        if (!symbol) {\n            return new ESUndefined();\n        }\n        if (symbol instanceof ESError) {\n            return symbol;\n        }\n        res.val = symbol.value;\n        return res;\n    }\n    compileJS(config) {\n        let val = this.a.value.toString();\n        if (val === 'import') {\n            val = 'import_';\n        }\n        return new compileResult(val);\n    }\n    compilePy(config) {\n        let val = this.a.value.toString();\n        if (val === 'import') {\n            val = 'import_';\n        }\n        return new compileResult(val);\n    }\n}\nexport class N_undefined extends Node {\n    constructor(pos = Position.unknown) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.val = new ESUndefined();\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('undefined');\n    }\n    compilePy(config) {\n        return new compileResult('None');\n    }\n}\nexport class N_break extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldBreak = true;\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('break');\n    }\n    compilePy(config) {\n        return new compileResult('break');\n    }\n}\nexport class N_continue extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldContinue = true;\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('continue');\n    }\n    compilePy(config) {\n        return new compileResult('continue');\n    }\n}\nexport class N_primitiveWrapper extends Node {\n    constructor(val, pos = Position.unknown) {\n        super(pos, true);\n        this.value = val;\n    }\n    interpret_(context) {\n        return this.value;\n    }\n    compileJS(config) {\n        return new compileResult(JSON.stringify(this.value.valueOf()));\n    }\n    compilePy(config) {\n        return new compileResult(JSON.stringify(this.value.valueOf()));\n    }\n}\n","import { Node } from \"../runtime/nodes\";\nimport { ESPrimitive } from '../runtime/primitiveTypes';\nexport function deepClone(obj, hash = new WeakMap()) {\n    let result;\n    if (Object(obj) !== obj || obj instanceof Function) {\n        return obj;\n    }\n    if (hash.has(obj)) {\n        return hash.get(obj);\n    }\n    try {\n        result = new obj.constructor();\n    }\n    catch (e) {\n        result = Object.create(Object.getPrototypeOf(obj));\n    }\n    if (obj instanceof Map) {\n        Array.from(obj, ([key, val]) => result.set(deepClone(key, hash), deepClone(val, hash)));\n    }\n    else if (obj instanceof Set) {\n        Array.from(obj, (key) => result.add(deepClone(key, hash)));\n    }\n    hash.set(obj, result);\n    return Object.assign(result, ...Object.keys(obj).map(key => ({ [key]: deepClone(obj[key], hash) })));\n}\nexport function str(val, depth = 0) {\n    if (typeof val === 'string') {\n        if (depth > 0) {\n            return `'${val}'`;\n        }\n        return val;\n    }\n    if (depth > 20) {\n        return '...';\n    }\n    let result = '';\n    if (typeof val === 'undefined') {\n        return 'undefined';\n    }\n    if (val instanceof ESPrimitive) {\n        return val.str().valueOf();\n    }\n    if (val instanceof Node) {\n        return `<RunTimeNode: ${val.constructor.name}>`;\n    }\n    switch (typeof val) {\n        case 'object':\n            if (Array.isArray(val)) {\n                result += '[';\n                for (let item of val) {\n                    try {\n                        result += str(item, depth + 1) + `, `;\n                    }\n                    catch (e) {\n                        result += '<large property>, ';\n                    }\n                }\n                if (val.length) {\n                    result = result.substring(0, result.length - 2);\n                }\n                result += ']';\n            }\n            else {\n                try {\n                    result += val.constructor.name;\n                }\n                catch (e) {\n                    result += 'UNKNOWN_CONSTRUCTOR';\n                }\n                result += ': {\\n';\n                let i = 0;\n                for (let item in val) {\n                    i++;\n                    if (!val.hasOwnProperty || !val.hasOwnProperty(item)) {\n                        continue;\n                    }\n                    result += `  ${item}: ${str(val[item], depth + 1) || ''}, \\n`;\n                }\n                if (i > 0) {\n                    result = result.substring(0, result.length - 3);\n                }\n                result += '\\n}\\n';\n            }\n            break;\n        case 'string':\n            result = `'${val}'`;\n            break;\n        case \"bigint\":\n        case \"number\":\n        case \"boolean\":\n            result = `${val}`;\n            break;\n        case \"undefined\":\n            result = '<NativeUndefined>';\n            break;\n        case \"function\":\n            result = `<NativeFunction ${val.name}>`;\n            break;\n    }\n    for (let i = 0; i < depth; i++)\n        result = indent(result);\n    return result;\n}\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms));\nexport function indent(str) {\n    return str.replace(/\\n/g, '\\n    ');\n}\nexport function generateRandomSymbol(symbols, length = 10) {\n    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_';\n    const gen = () => {\n        let result = '';\n        for (let i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * characters.length));\n        }\n        return result;\n    };\n    let symbol = gen();\n    while (symbols.indexOf(symbol) !== -1) {\n        symbol = gen();\n    }\n    return symbol;\n}\n","import { IS_NODE_INSTANCE } from './constants';\nimport { Position } from \"./position\";\nimport { str } from \"./util/util\";\nimport chalk from \"./util/colours\";\nexport class ESError {\n    constructor(pos, name, details) {\n        this.traceback = [];\n        this.pos = pos;\n        this.name = name;\n        this.details = details;\n    }\n    get colouredStr() {\n        let out = '';\n        if (this.traceback.length) {\n            out = chalk.yellow('Error Traceback (most recent call last):\\n');\n            for (let pos of [...this.traceback].reverse())\n                out += `    ${chalk.cyan(pos.position.str)}:\\n        ${pos.line}\\n`;\n        }\n        out += `${chalk.red(this.name)}: ${this.details} \\n at ${chalk.cyan(this.pos.str)}`;\n        return out;\n    }\n    get str() {\n        return `${this.name}: ${this.details} \\n at ${this.pos.str}`;\n    }\n}\nexport class IllegalCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'IllegalCharError', `'${char}'`);\n    }\n}\nexport class InvalidSyntaxError extends ESError {\n    constructor(pos, details) {\n        super(pos, 'InvalidSyntaxError', details);\n    }\n}\nexport class ExpectedCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'ExpectedCharError', `'${char}'`);\n    }\n}\nexport class TypeError extends ESError {\n    constructor(pos, expectedType, actualType, value = '', detail = '') {\n        super(pos, 'TypeError', `Expected type '${expectedType}', got type '${actualType}' ${typeof value === 'undefined' ? '' : ` on value '${str(value)}'`} ${!detail ? '' : detail}`);\n    }\n}\nexport class ImportError extends ESError {\n    constructor(pos, url, detail = '') {\n        super(pos, 'ImportError', `Could not import ${url}: ${detail}`);\n    }\n}\nexport class ReferenceError extends ESError {\n    constructor(pos, ref) {\n        super(pos, 'ReferenceError', `${ref} is not defined`);\n    }\n}\nexport class IndexError extends ESError {\n    constructor(pos, ref, object) {\n        var _a;\n        super(pos, 'IndexError', `'${ref}' is not a property of '${((_a = object === null || object === void 0 ? void 0 : object.info) === null || _a === void 0 ? void 0 : _a.name) || str(object)}'`);\n    }\n}\nexport class InvalidOperationError extends ESError {\n    constructor(op, value, detail = '', pos = Position.unknown) {\n        var _a;\n        super(pos, 'TypeError', `Cannot perform '${op}' on value ${((_a = value === null || value === void 0 ? void 0 : value.info) === null || _a === void 0 ? void 0 : _a.name) || str(value)}: ${detail}`);\n    }\n}\nexport class InvalidRuntimeError extends ESError {\n    constructor() {\n        super(Position.unknown, 'InvalidRuntimeError', `Required runtime of ${IS_NODE_INSTANCE ? 'browser' : 'node'}`);\n    }\n}\nexport class TestFailed extends ESError {\n    constructor(detail) {\n        super(Position.unknown, 'TestFailed', detail);\n    }\n}\nexport class PermissionRequiredError extends ESError {\n    constructor(detail) {\n        super(Position.unknown, 'PermissionRequiredError', detail);\n    }\n}\n","export class Token {\n    constructor(pos, type, value) {\n        this.type = type;\n        this.value = value;\n        this.pos = pos;\n    }\n    matches(type, val) {\n        return this.type === type && this.value === val;\n    }\n}\n","import { Position } from \"../position\";\nimport { digits, doubleCharTokens, identifierChars, KEYWORDS, multiLineCommentEnd, multiLineCommentStart, singleCharTokens, singleLineComment, stringSurrounds, tripleCharTokens, tt, } from '../constants';\nimport { IllegalCharError } from \"../errors\";\nimport { Token } from \"./tokens\";\nexport class Lexer {\n    constructor(program, fileName) {\n        this.text = program;\n        this.position = new Position(-1, 0, -1, fileName);\n        this.advance();\n    }\n    advance() {\n        this.position.advance(this.currentChar);\n        this.currentChar = this.text[this.position.idx];\n    }\n    generate() {\n        if (!this.text) {\n            return [new Token(this.position, tt.EOF, undefined)];\n        }\n        const tokens = [];\n        while (this.currentChar !== undefined) {\n            if (' \\t\\n'.includes(this.currentChar)) {\n                this.advance();\n            }\n            else if (digits.includes(this.currentChar)) {\n                tokens.push(this.makeNumber());\n            }\n            else if (this.currentChar === singleLineComment[0] &&\n                this.text[this.position.idx + 1] === singleLineComment[1]) {\n                this.singleLineComment();\n            }\n            else if (this.currentChar === multiLineCommentStart[0] &&\n                this.text[this.position.idx + 1] === multiLineCommentStart[1]) {\n                this.multiLineComment();\n            }\n            else if (identifierChars.includes(this.currentChar)) {\n                tokens.push(this.makeIdentifier());\n            }\n            else if (stringSurrounds.indexOf(this.currentChar) !== -1) {\n                tokens.push(this.makeString());\n            }\n            else {\n                const possibleAssignFirstChar = this.currentChar;\n                let token = this.unknownChar();\n                if (token) {\n                    if (token.type === tt.ASSIGN) {\n                        token.value = possibleAssignFirstChar;\n                    }\n                    tokens.push(token);\n                }\n                else {\n                    let pos = this.position.clone;\n                    let char = this.currentChar;\n                    this.advance();\n                    return new IllegalCharError(pos, char);\n                }\n            }\n        }\n        tokens.push(new Token(this.position, tt.EOF, undefined));\n        return tokens;\n    }\n    makeNumber() {\n        const pos = this.position.clone;\n        let numStr = '';\n        let dotCount = 0;\n        while (this.currentChar !== undefined && (digits + '._').includes(this.currentChar)) {\n            if (this.currentChar === '.') {\n                if (dotCount === 1) {\n                    break;\n                }\n                dotCount++;\n                numStr += '.';\n            }\n            else if (this.currentChar !== '_') {\n                numStr += this.currentChar;\n            }\n            this.advance();\n        }\n        return new Token(pos, tt.NUMBER, parseFloat(numStr));\n    }\n    makeString() {\n        const pos = this.position.clone;\n        let str = '';\n        let strClose = this.currentChar;\n        this.advance();\n        while (this.currentChar !== strClose && this.currentChar !== undefined) {\n            if (this.currentChar === '\\\\') {\n                this.advance();\n                if (this.currentChar === 'n') {\n                    str += '\\n';\n                    this.advance();\n                    continue;\n                }\n            }\n            str += this.currentChar;\n            this.advance();\n        }\n        this.advance();\n        return new Token(pos, tt.STRING, str);\n    }\n    makeIdentifier() {\n        let idStr = '';\n        const posStart = this.position.clone;\n        while (this.currentChar !== undefined && (identifierChars + digits).includes(this.currentChar)) {\n            idStr += this.currentChar;\n            this.advance();\n        }\n        let tokType = tt.IDENTIFIER;\n        if (KEYWORDS.indexOf(idStr) !== -1) {\n            tokType = tt.KEYWORD;\n        }\n        return new Token(posStart, tokType, idStr);\n    }\n    unknownChar() {\n        if (this.currentChar === undefined) {\n            return undefined;\n        }\n        for (let triple in tripleCharTokens) {\n            if (triple[0] === this.currentChar)\n                if (triple[1] === this.text[this.position.idx + 1])\n                    if (triple[2] === this.text[this.position.idx + 2]) {\n                        const pos = this.position.clone;\n                        this.advance();\n                        this.advance();\n                        this.advance();\n                        return new Token(pos, tripleCharTokens[triple], undefined);\n                    }\n        }\n        for (let double in doubleCharTokens) {\n            if (double[0] === this.currentChar)\n                if (double[1] === this.text[this.position.idx + 1]) {\n                    const pos = this.position.clone;\n                    this.advance();\n                    this.advance();\n                    return new Token(pos, doubleCharTokens[double], undefined);\n                }\n        }\n        if (singleCharTokens.hasOwnProperty(this.currentChar)) {\n            let pos = this.position.clone;\n            let val = singleCharTokens[this.currentChar];\n            this.advance();\n            return new Token(pos, val, undefined);\n        }\n        return undefined;\n    }\n    singleLineComment() {\n        this.advance();\n        while (this.currentChar !== '\\n' && this.currentChar !== undefined) {\n            this.advance();\n        }\n        this.advance();\n    }\n    multiLineComment() {\n        this.advance();\n        while (!(this.currentChar === multiLineCommentEnd[0] &&\n            this.text[this.position.idx + 1] === multiLineCommentEnd[1])) {\n            this.advance();\n        }\n        this.advance();\n        this.advance();\n    }\n}\n","import { tokenType, tokenTypeString, tt, VAR_DECLARE_KEYWORDS } from '../constants';\nimport { Token } from \"./tokens\";\nimport * as n from '../runtime/nodes';\nimport { N_functionDefinition, N_namespace, N_tryCatch, N_undefined } from '../runtime/nodes';\nimport { ESError, InvalidSyntaxError } from \"../errors\";\nimport { types } from \"../runtime/primitiveTypes\";\nexport class ParseResults {\n    constructor() {\n        this.advanceCount = 0;\n        this.lastRegisteredAdvanceCount = 0;\n        this.reverseCount = 0;\n    }\n    registerAdvance() {\n        this.advanceCount = 1;\n        this.lastRegisteredAdvanceCount++;\n    }\n    register(res) {\n        this.lastRegisteredAdvanceCount = res.advanceCount;\n        this.advanceCount += res.advanceCount;\n        if (res.error) {\n            this.error = res.error;\n        }\n        if (!res.node) {\n            return new N_undefined();\n        }\n        return res.node;\n    }\n    tryRegister(res) {\n        if (res.error) {\n            this.reverseCount += res.advanceCount;\n            return;\n        }\n        return this.register(res);\n    }\n    success(node) {\n        this.node = node;\n        return this;\n    }\n    failure(error) {\n        this.error = error;\n        return this;\n    }\n}\nexport class Parser {\n    constructor(tokens) {\n        this.tokens = tokens;\n        this.tokenIdx = -1;\n        this.currentToken = tokens[0];\n        this.advance();\n    }\n    parse() {\n        var _a;\n        if (!this.currentToken || !this.tokens || (this.tokens.length === 1 && this.tokens[0].type === tt.EOF)) {\n            return new ParseResults();\n        }\n        const res = this.statements(true);\n        if (!res.error && this.currentToken.type !== tokenType.EOF) {\n            return res.failure(new InvalidSyntaxError((_a = this.currentToken) === null || _a === void 0 ? void 0 : _a.pos, `Expected 'End of File', got token of type '${tokenTypeString[this.currentToken.type]}' of value ${this.currentToken.value}`));\n        }\n        return res;\n    }\n    advance(res) {\n        if (res)\n            res.registerAdvance();\n        this.tokenIdx++;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    reverse(amount = 1) {\n        this.tokenIdx -= amount;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    consume(res, type, errorMsg) {\n        if (this.currentToken.type !== type)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, errorMsg !== null && errorMsg !== void 0 ? errorMsg : `Expected '${tokenTypeString[type]}' but got '${tokenTypeString[this.currentToken.type]}'`));\n        this.advance(res);\n    }\n    clearEndStatements(res) {\n        while (this.currentToken.type === tt.ENDSTATEMENT) {\n            this.advance(res);\n        }\n    }\n    statements(topLevel = false) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let statements = [];\n        this.clearEndStatements(res);\n        const firstStatement = res.register(this.statement());\n        if (!firstStatement) {\n            return res;\n        }\n        statements.push(firstStatement);\n        if (res.error) {\n            return res;\n        }\n        let moreStatements = true;\n        while (true) {\n            let newLineCount = 0;\n            while (this.currentToken.type === tt.ENDSTATEMENT) {\n                this.advance(res);\n                newLineCount++;\n            }\n            if (newLineCount === 0) {\n                moreStatements = false;\n            }\n            if (!moreStatements) {\n                break;\n            }\n            const statement = res.tryRegister(this.statement());\n            if (!statement) {\n                this.reverse(res.reverseCount);\n                continue;\n            }\n            statements.push(statement);\n        }\n        this.clearEndStatements(res);\n        let node = new n.N_statements(pos, statements, topLevel);\n        return res.success(node);\n    }\n    statement() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        if (this.currentToken.matches(tt.KEYWORD, 'return')) {\n            return this.returnStatement(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'yield')) {\n            return this.returnStatement(res, true);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'break')) {\n            this.advance(res);\n            return res.success(new n.N_break(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'continue')) {\n            this.advance(res);\n            return res.success(new n.N_continue(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'try')) {\n            return this.tryCatch();\n        }\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    returnStatement(res, isYield = false) {\n        const pos = this.currentToken.pos;\n        this.advance(res);\n        let expr = new N_undefined(this.currentToken.pos);\n        if (this.currentToken.type !== tt.ENDSTATEMENT) {\n            let exprRes = res.register(this.expr());\n            if (!exprRes) {\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'Expected end of statement'));\n            }\n            expr = exprRes;\n        }\n        if (isYield) {\n            return res.success(new n.N_yield(pos, expr));\n        }\n        return res.success(new n.N_return(pos, expr));\n    }\n    atom() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        const pos = this.currentToken.pos;\n        switch (tok.type) {\n            case tt.NUMBER:\n                this.advance(res);\n                return res.success(new n.N_number(pos, tok));\n            case tt.STRING:\n                this.advance(res);\n                return res.success(new n.N_string(pos, tok));\n            case tt.IDENTIFIER:\n                return this.atomIdentifier(res, pos, tok);\n            case tt.OPAREN:\n                this.advance(res);\n                const expr = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type == tt.CPAREN) {\n                    this.advance(res);\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ')'\"));\n            case tt.OSQUARE:\n                let arrayExpr = res.register(this.array());\n                if (res.error)\n                    return res;\n                return res.success(arrayExpr);\n            case tt.OBRACES:\n                let objectExpr = res.register(this.object());\n                if (res.error)\n                    return res;\n                return res.success(objectExpr);\n            case tt.KEYWORD:\n                if (tok.value === 'if') {\n                    const expr = res.register(this.ifExpr());\n                    if (res.error)\n                        return res;\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Invalid Identifier ${tok.value}`));\n            default:\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected number, identifier, '(', '+' or '-'`));\n        }\n    }\n    atomIdentifier(res, pos, tok) {\n        this.advance(res);\n        let node = new n.N_variable(tok);\n        let prevNode = new n.N_undefined(pos);\n        let functionCall = false;\n        while ([tt.OPAREN, tt.OSQUARE, tt.DOT].indexOf(this.currentToken.type) !== -1) {\n            switch (this.currentToken.type) {\n                case tt.OPAREN:\n                    functionCall = true;\n                    const tempNode = node;\n                    node = res.register(this.makeFunctionCall(node));\n                    prevNode = tempNode;\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.OSQUARE:\n                    prevNode = node;\n                    node = res.register(this.makeIndex(node));\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.DOT:\n                    this.advance(res);\n                    if (this.currentToken.type !== tt.IDENTIFIER)\n                        return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected identifier after '.'`));\n                    prevNode = node;\n                    node = new n.N_indexed(this.currentToken.pos, node, new n.N_string(this.currentToken.pos, this.currentToken));\n                    this.advance(res);\n            }\n        }\n        if (this.currentToken.type === tt.ASSIGN) {\n            let assignType = this.currentToken.value;\n            if (functionCall) {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot assign to return value of function`));\n            }\n            this.advance(res);\n            const value = res.register(this.expr());\n            if (node instanceof n.N_variable) {\n                node = new n.N_varAssign(pos, node.a, value, assignType, false);\n            }\n            else if (node instanceof n.N_indexed) {\n                node.value = value;\n                node.assignType = assignType;\n            }\n            else {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot have node of type ${this.currentToken.constructor.name}.\n                            Expected either index or variable node.`));\n            }\n            if (res.error)\n                return res;\n        }\n        return res.success(node);\n    }\n    power() {\n        return this.binOp(() => this.atom(), [tt.POW, tt.MOD, tt.BITWISE_AND, tt.BITWISE_OR], () => this.factor());\n    }\n    factor() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        if (tok.type == tt.ADD || tok.type === tt.SUB) {\n            this.advance(res);\n            const factor = res.register(this.factor());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(tok.pos, factor, tok));\n        }\n        return this.power();\n    }\n    term() {\n        return this.binOp(() => this.factor(), [tt.MUL, tt.DIV]);\n    }\n    arithmeticExpr() {\n        return this.binOp(() => this.term(), [tt.ADD, tt.SUB]);\n    }\n    comparisonExpr() {\n        const res = new ParseResults();\n        if (this.currentToken.type === tt.NOT) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            let node = res.register(this.expr());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(opTok.pos, node, opTok));\n        }\n        let node = res.register(this.binOp(() => this.arithmeticExpr(), [tt.EQUALS, tt.NOTEQUALS, tt.GT, tt.GTE, tt.LTE, tt.LT]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    expr() {\n        const res = new ParseResults();\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.KEYWORD && VAR_DECLARE_KEYWORDS.indexOf(this.currentToken.value) !== -1) {\n            return this.initiateVar(res);\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'if')) {\n            return this.ifExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'while')) {\n            return this.whileExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'for')) {\n            return this.forExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'func')) {\n            return this.funcExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'class')) {\n            return this.classExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'namespace')) {\n            return this.namespace();\n        }\n        let node = res.register(this.binOp(() => this.comparisonExpr(), [tt.AND, tt.OR]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    binOp(func, ops, funcB = func) {\n        const res = new ParseResults();\n        let left = res.register(func());\n        if (res.error)\n            return res;\n        while (ops.indexOf(this.currentToken.type) !== -1\n            || ops.indexOf([this.currentToken.type, this.currentToken.value]) !== -1) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            const right = res.register(funcB());\n            if (res.error)\n                return res;\n            left = new n.N_binOp(left.pos, left, opTok, right);\n        }\n        return res.success(left);\n    }\n    makeFunctionCall(to) {\n        const res = new ParseResults();\n        let args = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OPAREN)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '['\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n            return res.success(new n.N_functionCall(pos, to, []));\n        }\n        args.push(res.register(this.expr()));\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid argument\"));\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            args.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CPAREN)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n        this.advance(res);\n        return res.success(new n.N_functionCall(pos, to, args));\n    }\n    makeIndex(to) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const base = to;\n        if (this.currentToken.type !== tt.OSQUARE)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, `Cannot index without expression`));\n        }\n        let index = res.register(this.expr());\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid index\"));\n        if (this.currentToken.type !== tt.CSQUARE)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ']'\"));\n        this.advance(res);\n        return res.success(new n.N_indexed(pos, base, index));\n    }\n    initiateVar(res) {\n        let pos = this.currentToken.pos;\n        let isConst = false;\n        let isLocal = false;\n        let isGlobal = false;\n        let isDeclaration = false;\n        if (this.currentToken.type === tt.KEYWORD && ['var', 'let'].indexOf(this.currentToken.value) !== -1) {\n            isDeclaration = true;\n            isLocal = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD && ['global', 'local'].indexOf(this.currentToken.value) !== -1) {\n            isDeclaration = true;\n            if (this.currentToken.value === 'global')\n                isGlobal = true;\n            else\n                isLocal = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD && ['const', 'mutable'].indexOf(this.currentToken.value) !== -1) {\n            isDeclaration = true;\n            if (this.currentToken.value === 'const')\n                isConst = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected Identifier 'var', 'let', 'const', 'mutable', 'local', or 'global', not ${this.currentToken.value}`));\n        }\n        if (this.currentToken.type !== tokenType.IDENTIFIER) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected Identifier or Keyword`));\n        }\n        const varName = this.currentToken;\n        this.advance(res);\n        let type = types.any;\n        if (this.currentToken.type === tt.COLON) {\n            isDeclaration = true;\n            this.consume(res, tt.COLON);\n            type = res.register(this.expr());\n        }\n        if (this.currentToken.type !== tt.ASSIGN) {\n            if (isConst)\n                return res.failure(new InvalidSyntaxError(pos, 'Cannot initialise constant to undefined'));\n            return res.success(new n.N_varAssign(pos, varName, new n.N_undefined(this.currentToken.pos), '=', isGlobal, isLocal, isConst, isDeclaration, type));\n        }\n        let assignType = this.currentToken.value;\n        this.advance(res);\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        if (expr instanceof n.N_class || expr instanceof n.N_functionDefinition) {\n            expr.name = varName.value;\n        }\n        if (expr instanceof N_namespace) {\n            expr.name = varName.value;\n            expr.mutable = !isConst;\n        }\n        return res.success(new n.N_varAssign(pos, varName, expr, assignType, isGlobal, isLocal, isConst, isDeclaration, type));\n    }\n    bracesExp() {\n        const res = new ParseResults();\n        this.consume(res, tt.OBRACES);\n        if (res.error) {\n            return res;\n        }\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_undefined(this.currentToken.pos));\n        }\n        const expr = res.register(this.statements());\n        if (res.error) {\n            return res;\n        }\n        this.consume(res, tt.CBRACES);\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    addEndStatement(res) {\n        this.tokens.splice(this.tokenIdx, 0, new Token(this.currentToken.pos, tt.ENDSTATEMENT, undefined));\n        this.reverse();\n        this.advance(res);\n    }\n    ifExpr() {\n        const res = new ParseResults();\n        let ifTrue;\n        let ifFalse;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'if'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'if'\"));\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        ifTrue = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.clearEndStatements(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'else')) {\n            this.advance(res);\n            if (this.currentToken.type == tt.OBRACES) {\n                ifFalse = res.register(this.bracesExp());\n                if (res.error)\n                    return res;\n            }\n            else {\n                ifFalse = res.register(this.statement());\n                if (res.error)\n                    return res;\n            }\n        }\n        this.addEndStatement(res);\n        return res.success(new n.N_if(pos, condition, ifTrue, ifFalse));\n    }\n    whileExpr() {\n        const res = new ParseResults();\n        let loop;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'while')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'while'\"));\n        }\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        loop = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        return res.success(new n.N_while(pos, condition, loop));\n    }\n    parameter(res) {\n        let name;\n        let type = new n.N_primitiveWrapper(types.any);\n        if (this.currentToken.type !== tt.IDENTIFIER)\n            return new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\");\n        name = this.currentToken.value;\n        this.advance(res);\n        if (this.currentToken.type === tt.COLON) {\n            this.consume(res, tt.COLON);\n            if (res.error)\n                return res.error;\n            type = res.register(this.expr());\n            if (res.error)\n                return res.error;\n        }\n        return { name, type };\n    }\n    funcCore() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, args = [], returnType = new n.N_primitiveWrapper(types.any);\n        this.consume(res, tt.OPAREN);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n        }\n        else {\n            let param = this.parameter(res);\n            if (param instanceof ESError)\n                return res.failure(param);\n            args.push(param);\n            while (this.currentToken.type === tt.COMMA) {\n                this.advance(res);\n                let param = this.parameter(res);\n                if (param instanceof ESError)\n                    return res.failure(param);\n                args.push(param);\n            }\n            if (this.currentToken.type !== tt.CPAREN)\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n            this.advance(res);\n        }\n        if (this.currentToken.type === tt.COLON) {\n            this.advance(res);\n            returnType = res.register(this.expr());\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.OBRACES) {\n            body = new n.N_return(this.currentToken.pos, res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        else {\n            this.consume(res, tt.OBRACES);\n            if (res.error)\n                return res;\n            if (this.currentToken.type !== tt.CBRACES)\n                body = res.register(this.statements());\n            else\n                body = new n.N_undefined(this.currentToken.pos);\n            this.consume(res, tt.CBRACES);\n            if (res.error)\n                return res;\n        }\n        return res.success(new n.N_functionDefinition(pos, body, args, returnType));\n    }\n    funcExpr() {\n        const res = new ParseResults();\n        if (!this.currentToken.matches(tt.KEYWORD, 'func'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'func'\"));\n        this.advance(res);\n        const func = res.register(this.funcCore());\n        if (res.error)\n            return res;\n        return res.success(func);\n    }\n    classExpr(name) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const methods = [];\n        let init;\n        let extends_;\n        if (!this.currentToken.matches(tt.KEYWORD, 'class'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'class'\"));\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'extends')) {\n            this.advance(res);\n            extends_ = res.register(this.expr());\n            if (res.error)\n                return res;\n        }\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_class(pos, [], undefined, undefined, name));\n        }\n        while (true) {\n            if (this.currentToken.type !== tt.IDENTIFIER) {\n                break;\n            }\n            let methodId = this.currentToken.value;\n            this.advance(res);\n            const func = res.register(this.funcCore());\n            if (res.error)\n                return res;\n            if (!(func instanceof N_functionDefinition)) {\n                return res.failure(new ESError(this.currentToken.pos, 'ParseError', `Tried to get function, but got ${func} instead`));\n            }\n            func.name = methodId;\n            if (methodId === 'init') {\n                init = func;\n            }\n            else {\n                methods.push(func);\n            }\n        }\n        this.consume(res, tt.CBRACES);\n        return res.success(new n.N_class(pos, methods, extends_, init, name));\n    }\n    forExpr() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, array, identifier, isGlobalIdentifier = false, isConstIdentifier = false;\n        if (!this.currentToken.matches(tt.KEYWORD, 'for'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'for'\"));\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'global')) {\n            isGlobalIdentifier = true;\n            this.advance(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'const')) {\n            isConstIdentifier = true;\n            this.advance(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'var') || this.currentToken.matches(tt.KEYWORD, 'let')) {\n            this.advance(res);\n        }\n        if (this.currentToken.type !== tt.IDENTIFIER)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\"));\n        identifier = this.currentToken;\n        this.advance(res);\n        if (!this.currentToken.matches(tt.KEYWORD, 'in'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected keyword 'in\"));\n        this.advance(res);\n        array = res.register(this.expr());\n        if (res.error)\n            return res;\n        body = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new n.N_for(pos, body, array, identifier, isGlobalIdentifier, isConstIdentifier));\n    }\n    array() {\n        const res = new ParseResults();\n        let elements = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            this.advance(res);\n            return res.success(new n.N_array(pos, []));\n        }\n        elements.push(res.register(this.expr()));\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ']', 'var', 'if', 'for', 'while', number, identifier, '+', '-', '(', '[' or '!' 2\"));\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            elements.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ']'\"));\n        }\n        this.advance(res);\n        return res.success(new n.N_array(pos, elements));\n    }\n    object() {\n        const res = new ParseResults();\n        let properties = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OBRACES) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '{\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_objectLiteral(pos, []));\n        }\n        while (true) {\n            let keyType, key, value;\n            if (this.currentToken.type === tt.IDENTIFIER) {\n                keyType = 'id';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.STRING) {\n                keyType = 'string';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.OSQUARE) {\n                keyType = 'value';\n                this.advance(res);\n                key = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.CSQUARE) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ']', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                this.advance(res);\n            }\n            else {\n                break;\n            }\n            if (this.currentToken.type === tt.COLON) {\n                this.advance(res);\n                value = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                if (this.currentToken.type === tt.COMMA) {\n                    this.advance(res);\n                }\n            }\n            else {\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                if (keyType !== 'id') {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `You must specify a value when initialising an object literal with a key that is not an identifier.\n                        Try using \\`key: value\\` syntax.`));\n                }\n                this.reverse();\n                value = new n.N_variable(this.currentToken);\n                this.advance(res);\n                if (this.currentToken.type === tt.COMMA) {\n                    this.advance(res);\n                }\n            }\n            properties.push([key, value]);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CBRACES)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier, ',' or '}'\"));\n        this.advance(res);\n        return res.success(new n.N_objectLiteral(pos, properties));\n    }\n    namespace() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_namespace(pos, new n.N_undefined()));\n        }\n        const statements = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        return res.success(new n.N_namespace(pos, statements));\n    }\n    tryCatch() {\n        const res = new ParseResults();\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'No empty try block'));\n        }\n        const body = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.value !== 'catch') {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'try block requires catch'));\n        }\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.success(new N_tryCatch(this.currentToken.pos, body, new N_undefined()));\n        }\n        const catchBlock = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new N_tryCatch(this.currentToken.pos, body, catchBlock));\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Lexer } from \"./parse/lexer\";\nimport { Parser } from \"./parse/parser\";\nimport { global, libs as allLibs, now, refreshPerformanceNow, runningInNode, setGlobalContext, VERSION } from \"./constants\";\nimport { initialise } from \"./init\";\nimport { ESError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { compileResult, interpretResult, Node } from \"./runtime/nodes\";\nimport { ESArray } from \"./runtime/primitiveTypes\";\nimport { Context } from \"./runtime/context\";\nimport addNodeLibs from \"./built-in/nodeLibs\";\nimport colours from './util/colours';\nimport JS_STD_TXT_RAW from 'raw-loader!./built-in/compiledSTD/std.txt.js';\nimport PY_STD_TXT_RAW from 'raw-loader!./built-in/compiledSTD/std.txt.py';\nexport { Context, colours };\nexport * from './runtime/primitiveTypes';\nexport * from './constants';\nexport * from './errors';\nexport * from './runtime/nodes';\nexport * from './util/util';\nexport * from './runtime/primitives/wrapStrip';\nexport * from './runtime/symbol';\nexport function init(printFunc = console.log, inputFunc, node = true, libs = { print: console.log }, context = new Context(), path = '') {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const res = initialise(context, printFunc, inputFunc);\n        if (res instanceof ESError) {\n            return res;\n        }\n        setGlobalContext(context);\n        (_a = libs['context']) !== null && _a !== void 0 ? _a : (libs['context'] = context);\n        if (path) {\n            context.path = path;\n        }\n        if (libs.print) {\n            allLibs.print = libs.print;\n        }\n        if (node) {\n            runningInNode();\n            yield refreshPerformanceNow(true);\n            addNodeLibs(libs, context);\n        }\n    });\n}\nexport function run(msg, { env = global, measurePerformance = false, fileName = '(unknown)', currentDir = '' } = {}) {\n    if (currentDir) {\n        env.path = currentDir;\n    }\n    Node.maxTime = 0;\n    Node.totalTime = 0;\n    Node.interprets = 0;\n    const timeData = {\n        total: 0,\n        lexerTotal: 0,\n        parserTotal: 0,\n        interpretTotal: 0,\n        nodeMax: 0,\n        nodeAvg: 0,\n        nodeTotal: 0,\n        interprets: 0,\n    };\n    let start = now();\n    if (!env.root.initialisedAsGlobal) {\n        const res = new interpretResult();\n        res.error = new ESError(Position.unknown, 'Uninitialised', 'Global context has not been initialised with global values');\n        return res;\n    }\n    const lexer = new Lexer(msg, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        const res_ = new interpretResult();\n        res_.error = lexerRes;\n        return res_;\n    }\n    timeData.lexerTotal = now() - start;\n    start = now();\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        const res_ = new interpretResult();\n        res_.error = res.error;\n        return res_;\n    }\n    timeData.parserTotal = now() - start;\n    start = now();\n    if (!res.node) {\n        const res = new interpretResult();\n        res.val = new ESArray([]);\n        return res;\n    }\n    const finalRes = res.node.interpret(env);\n    timeData.interpretTotal = now() - start;\n    timeData.total = now() - start;\n    timeData.nodeMax = Node.maxTime;\n    timeData.nodeTotal = Node.totalTime;\n    timeData.nodeAvg = Node.totalTime / Node.interprets;\n    timeData.interprets = Node.interprets;\n    if (measurePerformance) {\n        console.log(timeData);\n    }\n    return Object.assign(Object.assign({}, finalRes), { timeData });\n}\nexport function parse(code, { fileName = '(unknown)', currentDir = '' } = {}) {\n    const lexer = new Lexer(code, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        return {\n            error: lexerRes\n        };\n    }\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        return {\n            error: res.error\n        };\n    }\n    if (!res.node) {\n        return {\n            error: new ESError(Position.unknown, 'Error', 'no output')\n        };\n    }\n    return {\n        compileToJavaScript: (config) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            const comment = `// Generated by EntropyScript->JavaScript compiler v${VERSION}\\n`;\n            const stdStr = JS_STD_TXT_RAW.toString().replace(/(\\r\\n|\\n|\\r|\\t| )+/gm, ' ') + '\\n';\n            const out = res.node.compileJS(config);\n            if (out.error)\n                return out;\n            if (config.minify) {\n                out.val = out.val.replace(/(\\r\\n|\\n|\\r|\\t| )+/gm, ' ');\n            }\n            return new compileResult(comment + stdStr + out.val);\n        },\n        compileToPython: (config) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            const comment = `# Generated by EntropyScript->Python compiler v${VERSION}\\n\\n`;\n            const stdStr = PY_STD_TXT_RAW.toString() + '\\n';\n            const out = res.node.compilePy(config);\n            if (out.error)\n                return out;\n            return new compileResult(comment + stdStr + out.hoisted + '\\n' + out.val);\n        },\n        interpret: (env = global) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            if (currentDir) {\n                env.path = currentDir;\n            }\n            if (!env.root.initialisedAsGlobal) {\n                const res = new interpretResult();\n                res.error = new ESError(Position.unknown, 'Uninitialised', 'Global context has not been initialised with global values');\n                return res;\n            }\n            return res.node.interpret(env);\n        },\n    };\n}\n","import { Position } from \"../position\";\nimport { Context } from \"../runtime/context\";\nimport { ESError, ImportError, PermissionRequiredError } from '../errors';\nimport { ESFunction, ESNamespace, ESObject, ESString, types } from '../runtime/primitiveTypes';\nimport { str } from \"../util/util\";\nimport { permissions, run } from '../index';\nimport { addModuleFromObj, getModule, moduleExist } from './builtInModules';\nimport { global } from \"../constants\";\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nfunction addNodeLibs(options, context) {\n    const { fs, path } = options;\n    for (let libName in options) {\n        if (options.hasOwnProperty(libName)) {\n            addModuleFromObj(libName, new ESJSBinding(options[libName], libName));\n        }\n    }\n    context.set('import', new ESFunction(({ context }, rawPath) => {\n        if (!permissions.imports) {\n            return new PermissionRequiredError('Imports not allowed');\n        }\n        if (!permissions.imports) {\n            return new PermissionRequiredError('Imports not allowed');\n        }\n        let scriptPath = str(rawPath);\n        if (permissions.useSTD && moduleExist(scriptPath)) {\n            return getModule(scriptPath);\n        }\n        scriptPath = path.join(context.path, scriptPath);\n        try {\n            if (!fs.existsSync(scriptPath)) {\n                if (fs.existsSync('./particles/' + scriptPath)) {\n                    if (fs.existsSync('particles/' + scriptPath + '/main.es')) {\n                        scriptPath = 'particles/' + scriptPath + '/main.es';\n                    }\n                    else {\n                        return new ESError(Position.unknown, 'ImportError', `Module '${scriptPath}' has no entry point. Requires 'main.es'.`);\n                    }\n                }\n                else {\n                    return new ESError(Position.unknown, 'ImportError', `Can't find file '${scriptPath}' to import.`);\n                }\n            }\n            const exDir = path.dirname(scriptPath);\n            const code = fs.readFileSync(scriptPath, 'utf-8');\n            const env = new Context();\n            env.parent = global;\n            env.path = exDir;\n            const n = new ESNamespace(new ESString(scriptPath), {});\n            const res = run(code, {\n                env,\n                measurePerformance: false,\n                fileName: scriptPath,\n                currentDir: exDir,\n            });\n            n.__value__ = env.getSymbolTableAsDict();\n            if (res.error) {\n                return res.error;\n            }\n            return n;\n        }\n        catch (E) {\n            return new ESError(Position.unknown, 'ImportError', E.toString());\n        }\n    }, [{ name: 'path', type: types.string }], 'import', undefined, types.object), {\n        forceThroughConst: true,\n        isConstant: true\n    });\n    context.setOwn('open', new ESFunction(({ context }, path_, encoding_) => {\n        if (!permissions.fileSystem) {\n            return new PermissionRequiredError('No access to file system');\n        }\n        const path = str(path_);\n        const encoding = str(encoding_) || 'utf-8';\n        if (!fs.existsSync(path)) {\n            return new ImportError(Position.unknown, path);\n        }\n        return new ESObject({\n            str: new ESFunction(({ context }) => {\n                return new ESString(fs.readFileSync(context.path + path, encoding));\n            }, [], 'str', undefined, types.string),\n            write: new ESFunction(({ context }, data) => {\n                fs.writeFileSync(context.path + path, str(data));\n            }, [{ name: 'path', type: types.string }]),\n            append: new ESFunction(({ context }, data) => {\n                fs.appendFileSync(context.path + path, str(data));\n            }, [{ name: 'path', type: types.string }]),\n        });\n    }));\n}\nexport default addNodeLibs;\n","export default \"Array.prototype.contains = function (element) {\\n\\treturn this.indexOf(element) !== -1;\\n};\\n\\nfunction parseNum (str) {\\n\\treturn parseFloat(str);\\n}\\n\\nconst print = console.log;\\n\\nNumber.prototype[Symbol.iterator] = function () {\\n\\treturn {\\n\\t\\tcurrent: 0,\\n\\t\\tlast: this,\\n\\t\\tnext() {\\n\\t\\t\\tif (this.current <= this.last) {\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\tdone: false,\\n\\t\\t\\t\\t\\tvalue: this.current++\\n\\t\\t\\t\\t};\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn { done: true };\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n};\\n\\nconst __private__ = {\\n\\tbims: {\\n\\t\\tmath: Math,\\n\\t\\ttime: {\\n\\t\\t\\tdate: Date,\\n\\t\\t\\tnow: Date.now,\\n\\t\\t},\\n\\t},\\n};\\n\\nif (typeof performance !== 'undefined') {\\n\\t__private__.bims.time.now = performance.now;\\n}\\n\\nfunction import_ (path) {\\n\\tif (__private__.bims.hasOwnProperty(path)) {\\n\\t\\treturn __private__.bims[path];\\n\\t}\\n}\\n\\nfunction range (minP, maxP, stepP) {\\n\\tif (typeof minP !== 'number') {\\n\\t\\treturn [];\\n\\t}\\n\\n\\tconst min = minP.valueOf();\\n\\n\\tif (typeof maxP === 'undefined') {\\n\\t\\ttry {\\n\\t\\t\\treturn [...Array(min).keys()];\\n\\t\\t} catch (e) {\\n\\t\\t\\tthrow `RangeError: Cannot make range of length '${min}'`;\\n\\t\\t}\\n\\t}\\n\\n\\tlet step = 1;\\n\\n\\tif (typeof maxP !== 'number') {\\n\\t\\tthrow 'TypeError: Expected number';\\n\\t}\\n\\n\\tlet max = maxP.valueOf();\\n\\n\\tif (typeof stepP !== 'undefined') {\\n\\t\\tif (typeof stepP !== 'number') {\\n\\t\\t\\tthrow 'TypeError: Expected number';\\n\\t\\t}\\n\\t\\tstep = stepP.valueOf();\\n\\t}\\n\\n\\tlet arr = [];\\n\\n\\tlet i = min;\\n\\twhile (i < max) {\\n\\t\\tarr.push(i);\\n\\t\\ti += step;\\n\\t}\\n\\n\\treturn arr;\\n}\";","export default \"\\n###############################\\n# START OF ENTROPY SCRIPT STD #\\n###############################\\nimport time\\n\\nlog = print\\nparseNum = float\\n\\ndef help(thing):\\n    return 'Help is not available in ES compiled Python'\\n\\n\\ndef GENERATE_PRIVATE():\\n    return {\\n        'modules': {\\n            'ascii': {\\n\\n            },\\n            'time': {\\n                'now': lambda: time.time_ns() / (10 ** 6)\\n            }\\n        }\\n    }\\n\\nPRIVATE = GENERATE_PRIVATE()\\n\\ndef import_ (path):\\n    if path in PRIVATE['modules']:\\n        return PRIVATE['modules'][path]\\n\\n\\n#############################\\n# END OF ENTROPY SCRIPT STD #\\n#############################\";"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Position","constructor","idx","ln","col","file","advance","currentChar","clone","str","isUnknown","unknown","digits","identifierChars","singleLineComment","multiLineCommentStart","multiLineCommentEnd","global","setGlobalContext","c","stringSurrounds","IS_NODE_INSTANCE","window","runningInNode","VAR_DECLARE_KEYWORDS","VERSION","permissions","networking","imports","accessDOM","useSTD","fileSystem","updatePermissions","newPermissions","assign","print","console","log","catchBlockErrorSymbolName","KEYWORDS","now","refreshPerformanceNow","thisArg","_arguments","generator","Date","performance","e","P","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","tokenType","tt","tokenTypeString","NUMBER","STRING","ENDSTATEMENT","IDENTIFIER","KEYWORD","COMMA","OBRACES","CBRACES","OPAREN","CPAREN","OSQUARE","CSQUARE","ASSIGN","ADD","SUB","MUL","DIV","POW","MOD","EQUALS","NOTEQUALS","NOT","GT","LT","GTE","LTE","AND","OR","COLON","DOT","EOF","BITWISE_AND","BITWISE_OR","BITWISE_NOT","singleCharTokens","doubleCharTokens","tripleCharTokens","primitiveMethods","types","ESPrimitive","type","any","self","isa","props","ESBoolean","__type__","is","valueOf","__value__","typeName","__name__","hasProperty","describe","info","isBuiltIn","description","detail","res","strip","TypeError","__add__","n","InvalidOperationError","__subtract__","__multiply__","__divide__","__pow__","__mod__","__eq__","__gt__","__lt__","__and__","__or__","__bool__","__setProperty__","__call__","parameters","ESErrorPrimitive","error","ESError","super","__getProperty__","ESString","name","details","ESArray","traceback","map","s","position","line","wrap","IndexError","cast","bool","dealWithExtends","context","class_","instance","this_","callContext","ESType","superFunc","ESFunction","args","newContext","Context","parent","__extends__","_a","initFunc","__init__","__closure__","res_","undefined","setRes","setOwn","createInstance","params","runInit","on","_b","primitive","length","ESUndefined","ESNumber","ESObject","method","__methods__","methodClone","indexOf","__instances__","push","isPrimitive","t","_c","_d","_e","_f","val","number","string","array","object","boolean","substr","keys","k","thisElement","nElement","newOb","keysToRemove","Array","isArray","toClone","ESNamespace","mutable","slice","symbol","isAccessible","v","isConstant","ESJSBinding","functionsTakeProps","JSON","stringify","func","arguments_","returnType","closure","path","fn","max","Math","i","arg","forceThroughConst","generateESFunctionCallContext","Node","interpret","funcReturn","callNode","callNative","defaultValue","required","toString","pow","Boolean","helpLink","values","len","add","splice","contains","element","newArr","num","parseFloat","isNaN","split","repeat","strToInsert","firstPart","lastPart","ESSymbol","identifier","options","thing","Number","String","m","a","codes","red","yellow","green","cyan","blue","grey","code","builtInFunctions","minP","maxP","stepP","min","arr","returns","msgs","things","out","indent","total","filter","entries","contents","id","has","set","global_","time","cb","sleep","parse","json","modules","ascii","asciiToChar","fromCharCode","charToAscii","char","charCodeAt","processedModules","processRawModule","moduleDict","moduleRaw","moduleExist","getModule","processed","initialise","globalContext","printFunc","inputFunc","rawUrl","callback","url","fetch","text","env","run","ImportError","getSymbolTableAsDict","E","msg","cbRaw","builtIn","globalConstants","constant","load","initModRes","thens","resolved","catch_","catch","date","domRes","PermissionRequiredError","InvalidRuntimeError","w","$","document","ReferenceError","dom","initModules","initialisedAsGlobal","symbolTable","deleted","path_","parent_","hasOwn","getSymbol","getRawSymbolTableAsDict","symbols","remove","clear","resetAsGlobal","deepClone","interpretArgument","typeRes","defaultValRes","interpretResult","shouldBreak","shouldContinue","compileResult","hoisted","register","node","config","compilePy","pos","isTerminal","start","interpret_","interprets","totalTime","maxTime","N_binOp","left","opTok","right","l","r","lt","eq","gt","InvalidSyntaxError","compileJS","minify","switchers","op","N_unaryOp","numVal","abs","N_varAssign","varNameTok","assignType","isGlobal","isLocal","isDeclaration","N_primitiveWrapper","currentVal","newVal","assignVal","declaration","N_if","comparison","ifTrue","ifFalse","compRes","highIndent","statementRes","ifTrueRes","ifFalseRes","N_statements","N_while","loop","shouldLoop","potentialError","comparisonRes","bodyRes","N_for","body","isGlobalIdentifier","isConstIdentifier","isGlobalId","isConstId","_g","_h","iteration","iteratorRes","N_array","items","shouldClone","interpreted","item","itemRes","N_objectLiteral","properties","keyNode","valueNode","topLevel","last","N_functionCall","to","arguments","join","funcRes","argRes","N_functionDefinition","argNames","returnTypeRes","param","hoistedName","generateRandomSymbol","N_return","valRes","N_yield","N_indexed","base","index","baseRes","indexRes","objectRes","keyRes","N_class","methods","extends_","init","instances","extendsRes","initRes","N_namespace","statements","N_tryCatch","catchBlock","catchRes","N_number","N_string","N_variable","N_undefined","N_break","N_continue","hash","WeakMap","Function","create","getPrototypeOf","Map","from","Set","depth","substring","ms","setTimeout","replace","characters","gen","charAt","floor","random","colouredStr","reverse","IllegalCharError","ExpectedCharError","expectedType","actualType","ref","TestFailed","Token","matches","Lexer","program","fileName","generate","tokens","includes","makeNumber","multiLineComment","makeIdentifier","makeString","possibleAssignFirstChar","token","unknownChar","numStr","dotCount","strClose","idStr","posStart","tokType","triple","double","ParseResults","advanceCount","lastRegisteredAdvanceCount","reverseCount","registerAdvance","tryRegister","success","failure","Parser","tokenIdx","currentToken","amount","consume","errorMsg","clearEndStatements","firstStatement","statement","moreStatements","newLineCount","returnStatement","tryCatch","expr","isYield","exprRes","atom","tok","atomIdentifier","arrayExpr","objectExpr","ifExpr","prevNode","functionCall","tempNode","makeFunctionCall","makeIndex","power","binOp","factor","term","arithmeticExpr","comparisonExpr","initiateVar","whileExpr","forExpr","funcExpr","classExpr","namespace","ops","funcB","isConst","varName","bracesExp","addEndStatement","condition","parameter","funcCore","methodId","elements","keyType","libs","fs","libName","raw","addModule","rawPath","scriptPath","existsSync","exDir","dirname","readFileSync","measurePerformance","currentDir","encoding_","encoding","write","data","writeFileSync","append","appendFileSync","timeData","lexerTotal","parserTotal","interpretTotal","nodeMax","nodeAvg","nodeTotal","lexerRes","finalRes","compileToJavaScript","comment","stdStr","compileToPython"],"sourceRoot":""}