{"version":3,"file":"2.12.2.js","mappings":"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","sources":["webpack://es/webpack/universalModuleDefinition","webpack://es/webpack/bootstrap","webpack://es/webpack/runtime/define property getters","webpack://es/webpack/runtime/hasOwnProperty shorthand","webpack://es/webpack/runtime/make namespace object","webpack://es/./src/position.ts","webpack://es/./src/constants.ts","webpack://es/./src/runtime/primitives/esprimitive.ts","webpack://es/./src/runtime/primitives/esnumber.ts","webpack://es/./src/runtime/primitives/esboolean.ts","webpack://es/./src/runtime/primitives/eserrorprimitive.ts","webpack://es/./src/runtime/primitives/esobject.ts","webpack://es/./src/runtime/instantiator.ts","webpack://es/./src/runtime/primitives/estype.ts","webpack://es/./src/runtime/primitives/esnamespace.ts","webpack://es/./src/runtime/primitives/esjsbinding.ts","webpack://es/./src/runtime/primitiveTypes.ts","webpack://es/./src/runtime/primitives/esfunction.ts","webpack://es/./src/runtime/functionCaller.ts","webpack://es/./src/runtime/context.ts","webpack://es/./src/runtime/primitives/esundefined.ts","webpack://es/./src/runtime/primitives/esarray.ts","webpack://es/./src/runtime/primitives/esstring.ts","webpack://es/./src/runtime/symbol.ts","webpack://es/./src/runtime/primitives/wrapStrip.ts","webpack://es/./src/util/colours.ts","webpack://es/./src/built-in/builtInFunctions.ts","webpack://es/./src/built-in/built-in-modules/json.ts","webpack://es/./src/built-in/builtInModules.ts","webpack://es/./src/built-in/built-in-modules/ascii.ts","webpack://es/./src/init.ts","webpack://es/./src/built-in/globalConstants.ts","webpack://es/./src/built-in/built-in-modules/promise.ts","webpack://es/./src/built-in/built-in-modules/time.ts","webpack://es/./src/built-in/built-in-modules/dom.ts","webpack://es/./src/runtime/argument.ts","webpack://es/./src/runtime/nodes.ts","webpack://es/./src/util/util.ts","webpack://es/./src/errors.ts","webpack://es/./src/parse/tokens.ts","webpack://es/./src/parse/lexer.ts","webpack://es/./src/parse/parser.ts","webpack://es/./src/index.ts","webpack://es/./src/built-in/nodeLibs.ts","webpack://es/./src/built-in/compiledSTD/std.txt.js","webpack://es/./src/built-in/compiledSTD/std.txt.py"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"es\"] = factory();\n\telse\n\t\troot[\"es\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Position {\n    constructor(idx, ln, col, file = '(unknown)') {\n        this.idx = idx;\n        this.ln = ln;\n        this.col = col;\n        this.file = file;\n    }\n    advance(currentChar = '') {\n        this.idx++;\n        this.col++;\n        if (currentChar === '\\n') {\n            this.ln++;\n            this.col = 0;\n        }\n        return this;\n    }\n    get clone() {\n        return new Position(this.idx, this.ln, this.col, this.file);\n    }\n    get str() {\n        return `File ${this.file}, ${this.ln + 1}:${this.col + 1}`;\n    }\n    get isUnknown() {\n        return this.idx === -2;\n    }\n    static get void() {\n        return new Position(-2, -2, -2, '(unknown)');\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport PACKAGE_JSON from '../package.json';\nexport const digits = '0123456789';\nexport const identifierChars = '_$abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nexport const singleLineComment = '//';\nexport const multiLineCommentStart = '/*';\nexport const multiLineCommentEnd = '*/';\nexport let global;\nexport const setGlobalContext = (c) => void (global = c);\nexport const stringSurrounds = ['\\'', '`', '\"'];\nexport let IS_NODE_INSTANCE = typeof window === 'undefined';\nexport const runningInNode = () => void (IS_NODE_INSTANCE = true);\nexport const VAR_DECLARE_KEYWORDS = ['var', 'let', 'global'];\nexport const VERSION = PACKAGE_JSON['version'];\nexport let permissions = {\n    networking: false,\n    imports: true,\n    accessDOM: false,\n    useSTD: true,\n    fileSystem: false,\n};\nexport function updatePermissions(newPermissions) {\n    permissions = Object.assign(Object.assign({}, permissions), newPermissions);\n}\nexport const libs = {\n    print: console.log\n};\nexport const catchBlockErrorSymbolName = 'err';\nexport const KEYWORDS = [\n    'var',\n    'let',\n    'global',\n    'local',\n    'mutable',\n    'const',\n    'if',\n    'else',\n    'while',\n    'for',\n    'in',\n    'continue',\n    'break',\n    'func',\n    'return',\n    'yield',\n    'class',\n    'extends',\n    'namespace',\n    'export',\n    'try',\n    'catch'\n];\nexport let now = () => 0;\nexport function refreshPerformanceNow(IS_NODE_INSTANCE) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (IS_NODE_INSTANCE) {\n            now = () => Date.now();\n        }\n        else {\n            now = () => {\n                try {\n                    return performance === null || performance === void 0 ? void 0 : performance.now();\n                }\n                catch (e) {\n                    return 0;\n                }\n            };\n        }\n    });\n}\nrefreshPerformanceNow(IS_NODE_INSTANCE);\nexport var tokenType;\n(function (tokenType) {\n    tokenType[tokenType[\"NUMBER\"] = 0] = \"NUMBER\";\n    tokenType[tokenType[\"STRING\"] = 1] = \"STRING\";\n    tokenType[tokenType[\"ENDSTATEMENT\"] = 2] = \"ENDSTATEMENT\";\n    tokenType[tokenType[\"IDENTIFIER\"] = 3] = \"IDENTIFIER\";\n    tokenType[tokenType[\"KEYWORD\"] = 4] = \"KEYWORD\";\n    tokenType[tokenType[\"COMMA\"] = 5] = \"COMMA\";\n    tokenType[tokenType[\"ASSIGN\"] = 6] = \"ASSIGN\";\n    tokenType[tokenType[\"ADD\"] = 7] = \"ADD\";\n    tokenType[tokenType[\"SUB\"] = 8] = \"SUB\";\n    tokenType[tokenType[\"MUL\"] = 9] = \"MUL\";\n    tokenType[tokenType[\"DIV\"] = 10] = \"DIV\";\n    tokenType[tokenType[\"POW\"] = 11] = \"POW\";\n    tokenType[tokenType[\"MOD\"] = 12] = \"MOD\";\n    tokenType[tokenType[\"OPAREN\"] = 13] = \"OPAREN\";\n    tokenType[tokenType[\"CPAREN\"] = 14] = \"CPAREN\";\n    tokenType[tokenType[\"OBRACES\"] = 15] = \"OBRACES\";\n    tokenType[tokenType[\"CBRACES\"] = 16] = \"CBRACES\";\n    tokenType[tokenType[\"OSQUARE\"] = 17] = \"OSQUARE\";\n    tokenType[tokenType[\"CSQUARE\"] = 18] = \"CSQUARE\";\n    tokenType[tokenType[\"EQUALS\"] = 19] = \"EQUALS\";\n    tokenType[tokenType[\"NOTEQUALS\"] = 20] = \"NOTEQUALS\";\n    tokenType[tokenType[\"NOT\"] = 21] = \"NOT\";\n    tokenType[tokenType[\"GT\"] = 22] = \"GT\";\n    tokenType[tokenType[\"LT\"] = 23] = \"LT\";\n    tokenType[tokenType[\"GTE\"] = 24] = \"GTE\";\n    tokenType[tokenType[\"LTE\"] = 25] = \"LTE\";\n    tokenType[tokenType[\"AND\"] = 26] = \"AND\";\n    tokenType[tokenType[\"OR\"] = 27] = \"OR\";\n    tokenType[tokenType[\"COLON\"] = 28] = \"COLON\";\n    tokenType[tokenType[\"DOT\"] = 29] = \"DOT\";\n    tokenType[tokenType[\"EOF\"] = 30] = \"EOF\";\n    tokenType[tokenType[\"PIPE\"] = 31] = \"PIPE\";\n    tokenType[tokenType[\"APMERSAND\"] = 32] = \"APMERSAND\";\n    tokenType[tokenType[\"BITWISE_NOT\"] = 33] = \"BITWISE_NOT\";\n})(tokenType || (tokenType = {}));\nexport let tt = tokenType;\nexport const tokenTypeString = {\n    [tt.NUMBER]: 'Number',\n    [tt.STRING]: 'String',\n    [tt.ENDSTATEMENT]: ';',\n    [tt.IDENTIFIER]: 'Identifier',\n    [tt.KEYWORD]: 'Keyword',\n    [tt.COMMA]: ',',\n    [tt.OBRACES]: '{',\n    [tt.CBRACES]: '}',\n    [tt.OPAREN]: '(',\n    [tt.CPAREN]: ')',\n    [tt.OSQUARE]: '[',\n    [tt.CSQUARE]: ']',\n    [tt.ASSIGN]: '=',\n    [tt.ADD]: '+',\n    [tt.SUB]: '-',\n    [tt.MUL]: '*',\n    [tt.DIV]: '/',\n    [tt.POW]: '^',\n    [tt.MOD]: '%',\n    [tt.EQUALS]: '==',\n    [tt.NOTEQUALS]: '!=',\n    [tt.NOT]: '!',\n    [tt.GT]: '>',\n    [tt.LT]: '<',\n    [tt.GTE]: '>=',\n    [tt.LTE]: '<=',\n    [tt.AND]: '&&',\n    [tt.OR]: '||',\n    [tt.COLON]: ':',\n    [tt.DOT]: '.',\n    [tt.EOF]: 'End of File',\n    [tt.APMERSAND]: '&',\n    [tt.PIPE]: '|',\n    [tt.BITWISE_NOT]: '~',\n};\nexport const singleCharTokens = {\n    '*': tt.MUL,\n    '/': tt.DIV,\n    '+': tt.ADD,\n    '-': tt.SUB,\n    '(': tt.OPAREN,\n    ')': tt.CPAREN,\n    '^': tt.POW,\n    '%': tt.MOD,\n    '{': tt.OBRACES,\n    '}': tt.CBRACES,\n    ',': tt.COMMA,\n    '[': tt.OSQUARE,\n    ']': tt.CSQUARE,\n    ';': tt.ENDSTATEMENT,\n    ':': tt.COLON,\n    '.': tt.DOT,\n    '=': tt.ASSIGN,\n    '>': tt.GT,\n    '<': tt.LT,\n    '!': tt.NOT,\n    '|': tt.PIPE,\n    '&': tt.APMERSAND,\n    '~': tt.BITWISE_NOT\n};\nexport const doubleCharTokens = {\n    '==': tt.EQUALS,\n    '!=': tt.NOTEQUALS,\n    '>=': tt.GTE,\n    '<=': tt.LTE,\n    '+=': tt.ASSIGN,\n    '-=': tt.ASSIGN,\n    '*=': tt.ASSIGN,\n    '/=': tt.ASSIGN,\n    '&&': tt.AND,\n    '||': tt.OR\n};\nexport const tripleCharTokens = {};\nexport const primitiveMethods = [\n    '__add__',\n    '__subtract__',\n    '__multiply__',\n    '__divide__',\n    '__pow__',\n    '__eq__',\n    '__gt__',\n    '__lt__',\n    '__and__',\n    '__or__',\n    '__pipe__',\n    '__ampersand__',\n    '__bool__',\n    '__setProperty__',\n    '__getProperty__',\n    '__call__',\n];\nexport const types = {};\n","import { InvalidOperationError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { str } from '../../util/util';\nimport { strip } from './wrapStrip';\nimport { types } from \"../../constants\";\nexport class ESPrimitive {\n    constructor(value, type = types.any) {\n        this.self = this;\n        this.isa = (props, type) => {\n            return type.typeCheck(props, this);\n        };\n        this.is = (props, obj) => {\n            return new ESBoolean(obj === this);\n        };\n        this.valueOf = () => this.__value__;\n        this.typeName = () => str(this.__type__);\n        this.hasProperty = (props, key) => new ESBoolean(this.hasOwnProperty(str(key)));\n        this.describe = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            this.info.description = str(info);\n        };\n        this.detail = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            const res = strip(info, props);\n            if (typeof res !== 'object') {\n                return new TypeError(Position.void, 'object', this.typeName(), str(this));\n            }\n            this.info = Object.assign(Object.assign({}, this.info), res);\n            this.info.isBuiltIn = false;\n        };\n        this.__type__ = type || this;\n        this.__value__ = value;\n        this.info = {};\n    }\n    __add__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __subtract__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __multiply__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __divide__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __pow__(props, n) {\n        return new InvalidOperationError('__pow__', this);\n    }\n    __mod__(props, n) {\n        return new InvalidOperationError('__mod__', this);\n    }\n    __eq__(props, n) {\n        return new InvalidOperationError('__eq__', this);\n    }\n    __gt__(props, n) {\n        return new InvalidOperationError('__gt__', this);\n    }\n    __lt__(props, n) {\n        return new InvalidOperationError('__lt__', this);\n    }\n    __and__(props, n) {\n        return new InvalidOperationError('__and__', this);\n    }\n    __or__(props, n) {\n        return new InvalidOperationError('__or__', this);\n    }\n    __bool__(props) {\n        return new InvalidOperationError('__bool__', this);\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n    __setProperty__(props, key, value) {\n        return new InvalidOperationError('__setProperty__', this, `[${str(key)}] = ${str(value)}`);\n    }\n    __call__(props, ...parameters) {\n        return new InvalidOperationError('__call__', this);\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { wrap } from \"./wrapStrip\";\nimport { types } from \"../../constants\";\nexport class ESNumber extends ESPrimitive {\n    constructor(value = 0) {\n        super(value, types.number);\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return this;\n                case types.string:\n                    return this.str();\n                case types.array:\n                    return new ESArray(new Array(this.valueOf()));\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(this.valueOf().toString());\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() + n.valueOf());\n        };\n        this.__subtract__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() - n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() * n.valueOf());\n        };\n        this.__divide__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() / n.valueOf());\n        };\n        this.__pow__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESNumber(Math.pow(this.valueOf(), n.valueOf()));\n        };\n        this.__mod__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESNumber(this.valueOf() % n.valueOf());\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new ESBoolean(false);\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() > n.valueOf());\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() < n.valueOf());\n        };\n        this.__bool__ = () => {\n            return new ESBoolean(this.valueOf() > 0);\n        };\n        this.bool = this.__bool__;\n        this.clone = () => new ESNumber(this.valueOf());\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.typeCheck = this.__eq__;\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nimport { types } from \"../../constants\";\nexport class ESBoolean extends ESPrimitive {\n    constructor(val = false) {\n        super(Boolean(val), types.bool);\n        this.__getProperty__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESBoolean)) {\n                return new TypeError(Position.void, 'Boolean', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__bool__ = () => this;\n        this.__and__ = (props, n) => new ESBoolean(this.valueOf() && n.bool().valueOf());\n        this.__or__ = (props, n) => {\n            return new ESBoolean(this.valueOf() || n.bool().valueOf());\n        };\n        this.str = () => new ESString(this.valueOf() ? 'true' : 'false');\n        this.clone = () => new ESBoolean(this.valueOf());\n        this.bool = () => this;\n        this.typeCheck = this.__eq__;\n        this.info = {\n            name: str(val),\n            description: `Boolean global constant which evaluates to ${str(val)}, the opposite of ${str(!val)}`,\n            file: 'built-in',\n            isBuiltIn: true,\n            helpLink: 'https://en.wikipedia.org/wiki/Boolean_expression'\n        };\n    }\n}\n","import { ESPrimitive } from './esprimitive';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nimport { str } from \"../../util/util\";\nimport { ESArray } from \"./esarray\";\nimport { types } from \"../../constants\";\nexport class ESErrorPrimitive extends ESPrimitive {\n    constructor(error = new ESError(Position.void, 'Unknown', 'Error not specified')) {\n        super(error, types.error);\n        this.__getProperty__ = (props, key) => {\n            switch (str(key)) {\n                case 'name':\n                    return new ESString(this.valueOf().name);\n                case 'details':\n                    return new ESString(this.valueOf().details);\n                case 'traceback':\n                    return new ESArray(this.valueOf().traceback\n                        .map(s => new ESString(`${s.position.str} : ${s.line}`)));\n                default:\n                    if (this.self.hasOwnProperty(str(key))) {\n                        return wrap(this.self[str(key)], true);\n                    }\n                    return new IndexError(Position.void, key.valueOf(), this);\n            }\n        };\n        this.cast = () => new ESError(Position.void, 'TypeError', `Cannot cast type 'error'`);\n        this.str = () => new ESString(`<Error: ${this.valueOf().str}>`);\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(n instanceof ESErrorPrimitive &&\n                this.valueOf().constructor === n.valueOf().constructor);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.clone = () => new ESErrorPrimitive(this.valueOf());\n        this.typeCheck = this.__eq__;\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { strip, wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nexport class ESObject extends ESPrimitive {\n    constructor(val = {}) {\n        super(val, types.object);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => {\n            let val = str(this.valueOf());\n            if (val[val.length - 1] === '\\n') {\n                val = val.substr(0, val.length - 1);\n            }\n            return new ESString(`<ESObject ${val}>`);\n        };\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new ESBoolean();\n            }\n            if (n.keys.length !== this.keys.length) {\n                return new ESBoolean();\n            }\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const thisElement = this.valueOf()[key];\n                const nElement = n.valueOf()[key];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new TypeError(Position.void, 'object', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const res = this.__getProperty__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            for (let k of n.keys) {\n                const key = k.valueOf();\n                if (newOb.hasOwnProperty(key)) {\n                    continue;\n                }\n                const res = n.__getProperty__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            return new ESObject(newOb);\n        };\n        this.__subtract__ = (props, n) => {\n            let keysToRemove = [];\n            if (n instanceof ESString) {\n                keysToRemove = [str(n)];\n            }\n            else if (n instanceof ESArray) {\n                keysToRemove = strip(n, props);\n            }\n            else {\n                return new TypeError(Position.void, 'array | string', n.typeName().valueOf(), n);\n            }\n            if (!Array.isArray(keysToRemove)) {\n                return new TypeError(Position.void, 'array | string', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                if (keysToRemove.indexOf(key) === -1) {\n                    let res = this.__getProperty__(props, k);\n                    if (res instanceof ESError) {\n                        return res;\n                    }\n                    newOb[key] = res;\n                }\n            }\n            return new ESObject(newOb);\n        };\n        this.__getProperty__ = (props, k) => {\n            if (!(k instanceof ESString) && !(k instanceof ESNumber)) {\n                return new TypeError(Position.void, 'string | number', k.typeName(), str(k));\n            }\n            const key = k.valueOf();\n            if (this.valueOf().hasOwnProperty(key)) {\n                return this.valueOf()[key];\n            }\n            if (this.self.hasOwnProperty(key)) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new ESUndefined();\n        };\n        this.__setProperty__ = ({}, key, value) => {\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.void, 'string', key.typeName(), str(key));\n            }\n            this.__value__[key.valueOf()] = value;\n        };\n        this.hasProperty = (props, k) => {\n            const key = str(k);\n            if (this.valueOf().hasOwnProperty(str(key))) {\n                return new ESBoolean(true);\n            }\n            return new ESBoolean(this.hasOwnProperty(key));\n        };\n        this.clone = () => {\n            const res = new ESObject();\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            res.__value__ = obj;\n            return res;\n        };\n        this.typeCheck = (props, n) => {\n            if (!(n instanceof ESObject)) {\n                return new ESBoolean();\n            }\n            if (Object.keys(this.valueOf()).length !== Object.keys(n.valueOf()).length) {\n                return new ESBoolean();\n            }\n            for (let key of Object.keys(this.valueOf())) {\n                if (!n.valueOf().hasOwnProperty(key) || !this.valueOf().hasOwnProperty(key)) {\n                    return new ESBoolean();\n                }\n                const thisType = this.valueOf()[key];\n                const nValue = n.valueOf()[key];\n                if (!thisType.typeCheck(props, nValue).valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n    }\n    get keys() {\n        return Object.keys(this.valueOf()).map(s => new ESString(s));\n    }\n    set keys(val) { }\n}\n","import { primitiveMethods } from '../constants';\nimport { Context } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESFunction, ESNumber, ESObject, ESString, ESType, ESUndefined } from \"./primitiveTypes\";\nfunction dealWithExtends(context, class_, instance, this_, callContext) {\n    if (!(class_ instanceof ESType)) {\n        return new TypeError(Position.void, 'Type', typeof class_, class_);\n    }\n    const superFunc = new ESFunction(({ context }, ...args) => {\n        const newContext = new Context();\n        newContext.parent = context;\n        if (class_.__extends__) {\n            let _a = dealWithExtends(newContext, class_.__extends__, instance, this_, callContext);\n            if (_a instanceof ESError) {\n                return _a;\n            }\n        }\n        const initFunc = class_ === null || class_ === void 0 ? void 0 : class_.__init__;\n        if (!initFunc) {\n            return;\n        }\n        initFunc.this_ = this_;\n        initFunc.__closure__ = newContext;\n        const res_ = initFunc.__call__({ context: newContext }, ...args);\n        if (res_ instanceof ESError) {\n            return res_;\n        }\n    }, undefined, 'super', this_);\n    let setRes = context.setOwn('super', superFunc);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    const res = createInstance(class_, { context }, [], false, instance);\n    if (res instanceof ESError) {\n        return res;\n    }\n}\nexport function createInstance(type, { context }, params, runInit = true, on = {}) {\n    var _b;\n    if (type.primitive) {\n        if (params.length < 1) {\n            return new ESUndefined();\n        }\n        switch (type.__name__) {\n            case 'Undefined':\n            case 'Type':\n                if (params.length < 1) {\n                    return new ESType();\n                }\n                else {\n                    return new ESString(params[0].typeName());\n                }\n            case 'String':\n                return new ESString(params[0].str().valueOf());\n            case 'Array':\n                return new ESArray(params);\n            case 'Number':\n                return new ESNumber(params[0].valueOf());\n            case 'Function':\n                return new ESFunction(params[0].valueOf());\n            case 'Boolean':\n                return new ESBoolean(params[0].bool().valueOf());\n            default:\n                return wrap(params[0]);\n        }\n    }\n    const newContext = new Context();\n    newContext.parent = (_b = type.__init__) === null || _b === void 0 ? void 0 : _b.__closure__;\n    const instance = new ESObject();\n    if (type.__extends__) {\n        let res = dealWithExtends(newContext, type.__extends__, on, instance, context);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__value__ = on;\n    for (let method of type.__methods__) {\n        const methodClone = method.clone();\n        methodClone.this_ = instance;\n        on[method.name] = methodClone;\n        if (primitiveMethods.indexOf(method.name) !== -1) {\n            instance[method.name] = methodClone.__call__;\n        }\n    }\n    if (runInit && type.__init__) {\n        type.__init__.this_ = instance;\n        type.__init__.__closure__ = newContext;\n        const res = type.__init__.__call__({ context: newContext }, ...params);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__type__ = type;\n    type.__instances__.push(instance);\n    return instance;\n}\n","import { ESError, IndexError, InvalidOperationError, TypeError } from '../../errors';\nimport { createInstance } from '../instantiator';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { wrap } from \"./wrapStrip\";\nimport { Position } from \"../../position\";\nimport { str } from \"../../util/util\";\nimport { types } from \"../../constants\";\nexport class ESType extends ESPrimitive {\n    constructor(isPrimitive = false, name = '(anon)', __methods__ = [], __extends__, __init__) {\n        super(undefined, types === null || types === void 0 ? void 0 : types.type);\n        this.__instances__ = [];\n        this.clone = () => {\n            return new ESType(this.primitive, this.__name__, this.__methods__, this.__extends__, this.__init__);\n        };\n        this.isa = (props, type) => {\n            return new ESBoolean(type === types.type);\n        };\n        this.cast = (props, type) => {\n            return new InvalidOperationError('cast', this);\n        };\n        this.typeCheck = (props, n) => {\n            var _a, _b;\n            if (!n)\n                return new ESBoolean();\n            let t = n.__type__;\n            if (this === types.any ||\n                t === types.any ||\n                t === this ||\n                this.__extends__ === t ||\n                this.__extends__ === types.any ||\n                this.__extends__ === n ||\n                (((_a = this.__extends__) === null || _a === void 0 ? void 0 : _a.typeCheck(props, n).valueOf()) === true)) {\n                return new ESBoolean(true);\n            }\n            if (t instanceof ESType) {\n                if (t.__extends__ === this ||\n                    t.__extends__ === types.any ||\n                    (((_b = t.__extends__) === null || _b === void 0 ? void 0 : _b.typeCheck(props, this).valueOf()) === true)) {\n                    return new ESBoolean(true);\n                }\n            }\n            return new ESBoolean(this === t);\n        };\n        this.__eq__ = (props, t) => {\n            return new ESBoolean(t === this);\n        };\n        this.__call__ = (props, ...params) => {\n            return createInstance(this, props, params || []);\n        };\n        this.str = () => new ESString(this.__name__);\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, k) => {\n            if (!(k instanceof ESString)) {\n                return new TypeError(Position.void, 'string', k.typeName(), str(k));\n            }\n            const key = k.valueOf();\n            if (this.self.hasOwnProperty(key)) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key, this);\n        };\n        this.primitive = isPrimitive;\n        this.__name__ = name;\n        this.info.name = name;\n        this.__extends__ = __extends__;\n        this.__methods__ = __methods__;\n        if (__init__) {\n            __init__.name = name;\n            this.__init__ = __init__;\n        }\n        if (!types.type) {\n            this.__type__ = this;\n        }\n    }\n}\nexport class ESTypeUnion extends ESType {\n    constructor(left, right) {\n        super(false, `(${str(left)}) | (${str(right)})`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.typeCheck = (props, t) => {\n            const leftRes = this.__left__.typeCheck(props, t);\n            const rightRes = this.__right__.typeCheck(props, t);\n            if (leftRes instanceof ESError)\n                return leftRes;\n            if (rightRes instanceof ESError)\n                return rightRes;\n            return new ESBoolean(leftRes.valueOf() ||\n                rightRes.valueOf());\n        };\n        this.clone = () => {\n            return new ESTypeUnion(this.__left__, this.__right__);\n        };\n        this.__left__ = left;\n        this.__right__ = right;\n    }\n}\nexport class ESTypeIntersection extends ESType {\n    constructor(left, right) {\n        super(false, `(${str(left)}) & (${str(right)})`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.typeCheck = (props, t) => {\n            const leftRes = this.__left__.typeCheck(props, t);\n            const rightRes = this.__right__.typeCheck(props, t);\n            if (leftRes instanceof ESError)\n                return leftRes;\n            if (rightRes instanceof ESError)\n                return rightRes;\n            return new ESBoolean(leftRes.valueOf() &&\n                rightRes.valueOf());\n        };\n        this.clone = () => {\n            return new ESTypeIntersection(this.__left__, this.__right__);\n        };\n        this.__left__ = left;\n        this.__right__ = right;\n    }\n}\nexport class ESTypeNot extends ESType {\n    constructor(type) {\n        super(false, `~(${str(type)})`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.typeCheck = (props, t) => {\n            const res = this.__val__.typeCheck(props, t);\n            if (res instanceof ESError)\n                return res;\n            return new ESBoolean(!res.valueOf());\n        };\n        this.clone = () => {\n            return new ESTypeNot(this.__val__);\n        };\n        this.__val__ = type;\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nexport class ESNamespace extends ESPrimitive {\n    constructor(name, value, mutable = false) {\n        super(value, types.object);\n        this.cast = ({}) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast type 'namespace'`);\n        };\n        this.clone = () => {\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            return new ESNamespace(this.name, obj);\n        };\n        this.str = () => {\n            const keys = Object.keys(this.valueOf());\n            return new ESString(`<Namespace ${str(this.name)}${keys.length > 0 ? ': ' : ''}${keys.slice(0, 5)}${keys.length >= 5 ? '...' : ''}>`);\n        };\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.valueOf().hasOwnProperty(key.valueOf())) {\n                const symbol = this.valueOf()[key.valueOf()];\n                if (symbol.isAccessible) {\n                    return symbol.value;\n                }\n            }\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.void, 'string', key.typeName());\n            }\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this.self);\n        };\n        this.typeCheck = this.__eq__;\n        this.info.name = str(name);\n        this.mutable = mutable;\n    }\n    get name() {\n        return new ESString(this.info.name);\n    }\n    set name(v) {\n        this.info.name = v.valueOf();\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESString)) {\n            return new TypeError(Position.void, 'string', key.typeName().valueOf(), str(key));\n        }\n        let idx = str(key);\n        if (!this.mutable) {\n            return new TypeError(Position.void, 'mutable', 'immutable', `${str(this.name)}`);\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        const symbol = this.__value__[idx];\n        if (!symbol) {\n            return new ESError(Position.void, 'SymbolError', `Symbol ${idx} is not declared in namespace ${str(this.name)}.`);\n        }\n        if (symbol.isConstant) {\n            return new TypeError(Position.void, 'mutable', 'immutable', `${str(this.name)}[${idx}]`);\n        }\n        if (!symbol.isAccessible) {\n            return new TypeError(Position.void, 'accessible', 'inaccessible', `${str(this.name)}[${idx}]`);\n        }\n        symbol.value = value;\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { strip, wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nimport { types } from \"../../constants\";\nexport class ESJSBinding extends ESPrimitive {\n    constructor(value, name = '<AnonNative>', functionsTakeProps = false) {\n        super(value, types.object);\n        this.cast = (props) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast native object`);\n        };\n        this.clone = () => new ESJSBinding(this.__value__);\n        this.str = () => {\n            try {\n                return new ESString(JSON.stringify(this.__value__));\n            }\n            catch (e) {\n                return new ESString(`${this.__value__}`);\n            }\n        };\n        this.__eq__ = ({}, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, k) => {\n            const key = str(k);\n            const val = this.valueOf();\n            const res = val[key];\n            if (res === undefined) {\n                if (this.self.hasOwnProperty(key)) {\n                    return wrap(this.self[str(key)], true);\n                }\n                return new IndexError(Position.void, key, this);\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            if (typeof res === 'function') {\n                let fTakesProps = this.functionsTakeProps;\n                return new ESFunction((props, ...args) => {\n                    if (!fTakesProps) {\n                        args = args.map(o => strip(o, props));\n                        const res = val[key](...args);\n                        return wrap(res);\n                    }\n                    else {\n                        return val[key](props, ...args);\n                    }\n                });\n            }\n            return wrap(res);\n        };\n        this.__call__ = (props, ...args) => {\n            if (typeof this.__value__ !== 'function') {\n                return new TypeError(Position.void, 'function', typeof this.__value__, str(this));\n            }\n            let res;\n            if (this.functionsTakeProps) {\n                try {\n                    res = new this.__value__(props, ...args);\n                }\n                catch (_a) {\n                    res = this.__value__(props, ...args);\n                }\n            }\n            else {\n                try {\n                    res = new this.__value__(...args.map(o => strip(o, props)));\n                }\n                catch (_b) {\n                    res = this.__value__(...args.map(o => strip(o, props)));\n                }\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            return wrap(res);\n        };\n        this.hasProperty = (props, key) => {\n            return new ESBoolean(!(this.__getProperty__(props, key) instanceof ESError));\n        };\n        this.typeCheck = this.__eq__;\n        this.info.name = str(name);\n        this.functionsTakeProps = functionsTakeProps;\n    }\n}\n","import { ESPrimitive } from './primitives/esprimitive';\nimport { ESArray } from './primitives/esarray';\nimport { ESBoolean } from './primitives/esboolean';\nimport { ESErrorPrimitive } from './primitives/eserrorprimitive';\nimport { ESFunction } from './primitives/esfunction';\nimport { ESNumber } from './primitives/esnumber';\nimport { ESObject } from './primitives/esobject';\nimport { ESString } from './primitives/esstring';\nimport { ESType } from './primitives/estype';\nimport { ESUndefined } from './primitives/esundefined';\nimport { ESNamespace } from './primitives/esnamespace';\nimport { ESJSBinding } from \"./primitives/esjsbinding\";\nimport { types } from \"../constants\";\nexport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNumber, ESPrimitive, ESString, ESObject, ESType, ESUndefined, ESNamespace, ESJSBinding };\ntypes.type = new ESType(true, 'Type');\ntypes.undefined = new ESType(true, 'Undefined');\ntypes.string = new ESType(true, 'String');\ntypes.array = new ESType(true, 'Array');\ntypes.number = new ESType(true, 'Number');\ntypes.any = new ESType(true, 'Any');\ntypes.function = new ESType(true, 'Function');\ntypes.bool = new ESType(true, 'Boolean');\ntypes.object = new ESType(true, 'Object');\ntypes.error = new ESType(true, 'Error');\ntypes.any.info = {\n    name: 'any',\n    description: 'Matches any other type',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.number.info = {\n    name: 'any',\n    description: 'The ES Number type. Is a a double-precision 64-bit binary format IEEE 754 value, like double in Java and C#',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.string.info = {\n    name: 'string',\n    description: 'The ES String type. Holds an array of characters, and can be defined with any of \\', \" and `. Can be indexed like an array.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.bool.info = {\n    name: 'bool',\n    description: 'The ES Bool type. Exactly two instances exist, true and false.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.function.info = {\n    name: 'function',\n    description: 'The ES Function type. Is a block of code which executes when called and takes in 0+ parameters.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.array.info = {\n    name: 'array',\n    description: 'The ES Array type. Defines a set of items of any type which can be accessed by an index with [].',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.object.info = {\n    name: 'object',\n    description: 'The ES Object type. Similar to JS objects or python dictionaries.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.error.info = {\n    name: 'error',\n    description: 'The ES Error type. Call to throw an error.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.type.info = {\n    name: 'type',\n    description: 'The ES Type type. Call to get the type of a value at a string.',\n    file: 'built-in',\n    isBuiltIn: true\n};\n","import { ESPrimitive } from './esprimitive';\nimport { global, types } from '../../constants';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { Context } from '../context';\nimport { call } from '../functionCaller';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nexport class ESFunction extends ESPrimitive {\n    constructor(func = (() => { }), arguments_ = [], name = '(anon)', this_ = new ESObject(), returnType = types.any, closure) {\n        super(func, types.function);\n        this.cast = (props, type) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast type 'function'`);\n        };\n        this.clone = () => {\n            return new ESFunction(this.__value__, this.arguments_, this.name, this.this_, this.returnType, this.__closure__);\n        };\n        this.valueOf = () => this;\n        this.str = () => new ESString(`<Func: ${this.name}>`);\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESFunction))\n                return new ESBoolean(false);\n            return new ESBoolean(this.__value__ === n.__value__);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__call__ = ({ context }, ...params) => {\n            this.__closure__.path = context.path;\n            return call(this.__closure__, this, params);\n        };\n        this.__getProperty__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.typeCheck = this.__eq__;\n        this.arguments_ = arguments_;\n        this.info.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        if (closure) {\n            this.__closure__ = closure;\n        }\n        else {\n            this.__closure__ = new Context();\n            this.__closure__.parent = global;\n        }\n        this.info.returnType = str(returnType);\n        this.info.args = arguments_.map(arg => ({\n            name: arg.name,\n            defaultValue: str(arg.defaultValue),\n            type: arg.type.info.name,\n            required: true\n        }));\n    }\n    get name() {\n        var _a;\n        return (_a = this.info.name) !== null && _a !== void 0 ? _a : '(anonymous)';\n    }\n    set name(v) {\n        this.info.name = v;\n    }\n}\n","import { str } from '../util/util';\nimport { Node } from \"./nodes\";\nimport { generateESFunctionCallContext } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { ESObject, ESPrimitive, ESUndefined } from \"./primitiveTypes\";\nfunction callNode(self, context, params, fn) {\n    var _a, _b;\n    const res = fn.interpret(context);\n    if (res.error)\n        return res.error;\n    if (res.funcReturn !== undefined) {\n        res.val = res.funcReturn;\n        res.funcReturn = undefined;\n    }\n    if (self.returnType.typeCheck({ context }, res.val).valueOf() === false) {\n        return new TypeError(Position.void, str(self.returnType), ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || 'undefined', (_b = res.val) === null || _b === void 0 ? void 0 : _b.str().valueOf(), '(from function return)');\n    }\n    if (res.val) {\n        return res.val;\n    }\n    else {\n        return new ESUndefined();\n    }\n}\nfunction callNative(self, context, params, fn) {\n    for (let i = params.length; i < fn.length; i++)\n        params.push(new ESUndefined());\n    const res = fn({\n        context\n    }, ...params);\n    if (res instanceof ESError || res instanceof ESPrimitive) {\n        return res;\n    }\n    return new ESUndefined();\n}\nexport function call(context, self, params) {\n    var _a;\n    let callContext = context;\n    context = self.__closure__;\n    context.path = callContext.path;\n    const fn = self.__value__;\n    const newContext = generateESFunctionCallContext(params, self, context);\n    if (newContext instanceof ESError) {\n        return newContext;\n    }\n    let this_ = (_a = self.this_) !== null && _a !== void 0 ? _a : new ESObject();\n    if (!(this_ instanceof ESObject)) {\n        return new TypeError(Position.void, 'object', typeof this_, this_, '\\'this\\' must be an object');\n    }\n    let setRes = newContext.setOwn('this', this_);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    if (fn instanceof Node) {\n        return callNode(self, newContext, params, fn);\n    }\n    else if (typeof fn === 'function') {\n        return callNative(self, newContext, params, fn);\n    }\n    else {\n        return new TypeError(Position.void, 'function', typeof fn);\n    }\n}\n","import { initialise } from \"../init\";\nimport { ESError, TypeError, ReferenceError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESPrimitive, ESUndefined } from \"./primitiveTypes\";\nimport { str } from \"../util/util\";\nimport { ESSymbol } from './symbol';\nimport chalk from \"../util/colours\";\nimport { types } from \"../constants\";\nexport class Context {\n    constructor() {\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        this.deleted = false;\n        this.path_ = '';\n    }\n    get path() {\n        if (this.path_ || !this.parent) {\n            return this.path_;\n        }\n        return this.parent.path;\n    }\n    set path(val) {\n        this.path_ = val;\n    }\n    get parent() {\n        return this.parent_;\n    }\n    set parent(val) {\n        if (val == this) {\n            console.error(chalk.red(`Setting context parent to self`));\n            return;\n        }\n        this.parent_ = val;\n    }\n    has(identifier) {\n        if (!identifier)\n            return false;\n        return this.get(identifier) !== undefined;\n    }\n    hasOwn(identifier) {\n        return this.symbolTable[identifier] instanceof ESSymbol;\n    }\n    get(identifier) {\n        let symbol = this.getSymbol(identifier);\n        if (symbol instanceof ESError || symbol == undefined) {\n            return symbol;\n        }\n        return symbol.value;\n    }\n    getRawSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key].value;\n        return symbols;\n    }\n    getSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key];\n        return symbols;\n    }\n    getSymbol(identifier) {\n        let symbol = this.symbolTable[identifier];\n        if (symbol !== undefined && !symbol.isAccessible)\n            return new TypeError(Position.void, 'assessable', 'inaccessible', symbol.identifier);\n        if (symbol === undefined && this.parent) {\n            let res = this.parent.getSymbol(identifier);\n            if (res instanceof ESError)\n                return res;\n            if (!res)\n                return new ReferenceError(Position.void, identifier);\n            symbol = res;\n        }\n        return symbol;\n    }\n    set(identifier, value, options = {}) {\n        let context = this;\n        if (options.global) {\n            context = this.root;\n        }\n        else {\n            while (!context.hasOwn(identifier) && context.parent !== undefined) {\n                context = context.parent;\n            }\n            if (!context.hasOwn(identifier)) {\n                context = this;\n            }\n        }\n        return context.setOwn(identifier, value, options);\n    }\n    setOwn(identifier, value, options = {}) {\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        if (options.global && !this.initialisedAsGlobal) {\n            options.global = false;\n        }\n        if (!options.forceThroughConst) {\n            let symbol = this.symbolTable[identifier];\n            if (symbol === null || symbol === void 0 ? void 0 : symbol.isConstant)\n                return new TypeError(Position.void, 'dynamic', 'constant', identifier);\n        }\n        this.symbolTable[identifier] = new ESSymbol(value, identifier, options);\n    }\n    remove(identifier) {\n        delete this.symbolTable[identifier];\n    }\n    clear() {\n        for (let symbol in this.symbolTable) {\n            this.remove(symbol);\n        }\n        this.parent = undefined;\n        this.deleted = true;\n    }\n    get root() {\n        let parent = this;\n        while (parent.parent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    get keys() {\n        return Object.keys(this.symbolTable);\n    }\n    resetAsGlobal() {\n        var _a, _b;\n        if (!this.initialisedAsGlobal)\n            return;\n        const printFunc = this.root.get('print');\n        const inputFunc = this.root.get('input');\n        if (!(printFunc instanceof ESPrimitive) || !(inputFunc instanceof ESPrimitive)) {\n            console.error('Error with print and input functions.');\n            return;\n        }\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        initialise(this, ((_a = printFunc.valueOf()) === null || _a === void 0 ? void 0 : _a.func) || console.log, ((_b = inputFunc.valueOf()) === null || _b === void 0 ? void 0 : _b.func) || (() => { }));\n    }\n    clone() {\n        const newContext = new Context();\n        newContext.parent = this.parent;\n        newContext.deleted = this.deleted;\n        newContext.initialisedAsGlobal = this.initialisedAsGlobal;\n        newContext.symbolTable = Object.assign(Object.assign({}, newContext.symbolTable), this.symbolTable);\n        return newContext;\n    }\n    deepClone() {\n        var _a;\n        let clone = this.clone();\n        clone.parent = (_a = clone.parent) === null || _a === void 0 ? void 0 : _a.deepClone();\n        return clone;\n    }\n    log() {\n        console.log('---- CONTEXT ----');\n        for (let key in this.symbolTable) {\n            const symbol = this.symbolTable[key];\n            let out = key;\n            if (symbol.isConstant)\n                out += ' (CONST)';\n            if (!symbol.isAccessible)\n                out += ' (INACCESSIBLE)';\n            out += ': ';\n            out += str(this.symbolTable[key].value);\n            console.log(out);\n        }\n        console.log('-----------------');\n    }\n}\nexport function generateESFunctionCallContext(params, self, parent) {\n    const newContext = new Context();\n    newContext.parent = parent;\n    let max = Math.max(params.length, self.arguments_.length);\n    for (let i = 0; i < max; i++) {\n        let value = new ESUndefined();\n        let type = types.any;\n        if (!self.arguments_[i]) {\n            continue;\n        }\n        const arg = self.arguments_[i];\n        if (params[i] instanceof ESPrimitive) {\n            type = params[i].__type__;\n            value = params[i];\n        }\n        const typeIncludes = arg.type.typeCheck({ context: parent }, params[i]);\n        if (typeIncludes instanceof ESError)\n            return typeIncludes;\n        if (!typeIncludes.valueOf()) {\n            return new TypeError(Position.void, str(arg.type), str(type), str(value));\n        }\n        newContext.setOwn(arg.name, value, {\n            forceThroughConst: true\n        });\n    }\n    let setRes = newContext.setOwn('args', new ESArray(params), {\n        forceThroughConst: true\n    });\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    return newContext;\n}\n","import { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { wrap } from \"./wrapStrip\";\nimport { types } from \"../../constants\";\nexport class ESUndefined extends ESPrimitive {\n    constructor() {\n        super(undefined, types.undefined);\n        this.cast = ({ context }, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber();\n                case types.string:\n                    return new ESString();\n                case types.array:\n                    return new ESArray();\n                case types.undefined:\n                    return new ESUndefined();\n                case types.type:\n                    return new ESType();\n                case types.error:\n                    return new ESErrorPrimitive();\n                case types.object:\n                case types.any:\n                    return new ESObject();\n                case types.function:\n                    return new ESFunction(() => { });\n                case types.boolean:\n                    return new ESBoolean();\n                default:\n                    if (!(type instanceof ESType)) {\n                        return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n                    }\n                    return type.__call__({ context });\n            }\n        };\n        this.str = () => new ESString('<Undefined>');\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(n instanceof ESUndefined ||\n                typeof n === 'undefined' ||\n                typeof n.valueOf() === 'undefined');\n        };\n        this.__bool__ = () => new ESBoolean();\n        this.bool = this.__bool__;\n        this.clone = () => new ESUndefined();\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.typeCheck = this.__eq__;\n        this.info = {\n            name: 'undefined',\n            description: 'Not defined, not a value.',\n            file: 'built-in',\n            isBuiltIn: true\n        };\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nexport class ESArray extends ESPrimitive {\n    constructor(values = []) {\n        super(values, types.array);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.len);\n                case types.boolean:\n                    return this.bool();\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(str(this.valueOf()));\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESArray)) {\n                return new ESBoolean();\n            }\n            if (n.len !== this.len) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.len; i++) {\n                const thisElement = this.valueOf()[i];\n                const nElement = n.valueOf()[i];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESArray)) {\n                return new TypeError(Position.void, 'array', n.typeName().valueOf(), n);\n            }\n            return new ESArray([...this.valueOf(), ...n.valueOf()]);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESUndefined();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return this.valueOf()[idx];\n            }\n            return new ESUndefined();\n        };\n        this.contains = (props, val) => {\n            for (let element of this.__value__) {\n                if (val.__eq__(props, element)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        this.clone = () => {\n            const newArr = [];\n            for (let element of this.valueOf()) {\n                newArr.push(element);\n            }\n            return new ESArray(newArr);\n        };\n        this.typeCheck = (props, n) => {\n            if (!(n instanceof ESArray) || this.len !== n.len) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.__value__.length; i++) {\n                const res = this.__value__[i].typeCheck(props, n.__value__[i]);\n                if (res instanceof ESError)\n                    return res;\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.len = values.length;\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESNumber)) {\n            return;\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        let idx = key.valueOf();\n        while (idx < 0) {\n            idx = this.valueOf().length + idx;\n        }\n        this.__value__[idx] = value;\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESPrimitive } from './esprimitive';\nimport { wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nexport class ESString extends ESPrimitive {\n    constructor(value = '') {\n        super(value, types.string);\n        this.str = () => this;\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    const num = parseFloat(this.valueOf());\n                    if (isNaN(num)) {\n                        return new ESError(Position.void, 'TypeError', `This string is not a valid number`);\n                    }\n                    return new ESNumber(num);\n                case types.string:\n                    return this;\n                case types.array:\n                    return new ESArray(this.valueOf().split('').map(s => new ESString(s)));\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESString(this.valueOf() + n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESString(this.valueOf().repeat(n.valueOf()));\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new ESBoolean(false);\n            }\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf().length > n.valueOf().length);\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf().length < n.valueOf().length);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.len = () => {\n            return new ESNumber(this.valueOf().length);\n        };\n        this.clone = () => new ESString(this.valueOf());\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESString();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return new ESString(this.valueOf()[idx]);\n            }\n            return new ESString();\n        };\n        this.typeCheck = this.__eq__;\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESNumber))\n            return;\n        if (!(value instanceof ESString))\n            value = new ESString(str(value));\n        let idx = key.valueOf();\n        while (idx < 0)\n            idx = this.valueOf().length + idx;\n        const strToInsert = value.str().valueOf();\n        let firstPart = this.__value__.substr(0, idx);\n        let lastPart = this.__value__.substr(idx + strToInsert.length);\n        this.__value__ = firstPart + strToInsert + lastPart;\n    }\n}\n","import { ESString } from './primitives/esstring';\nimport { types } from \"../constants\";\nexport class ESSymbol {\n    constructor(value, identifier, options = {}) {\n        var _a, _b, _c;\n        this.clone = () => {\n            return new ESSymbol(this.value.clone(), this.identifier, {\n                isConstant: this.isConstant,\n                isAccessible: this.isAccessible\n            });\n        };\n        this.str = () => new ESString(`<Symbol: ${this.identifier}>`);\n        this.value = value;\n        this.identifier = identifier;\n        this.isConstant = (_a = options.isConstant) !== null && _a !== void 0 ? _a : false;\n        this.isAccessible = (_b = options.isAccessible) !== null && _b !== void 0 ? _b : true;\n        this.type = (_c = options.type) !== null && _c !== void 0 ? _c : types.any;\n    }\n}\n","import { ESError } from '../../errors';\nimport { ESSymbol } from '../symbol';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESPrimitive } from './esprimitive';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESUndefined } from './esundefined';\nimport { ESJSBinding } from \"./esjsbinding\";\nexport function wrap(thing, functionsTakeProps = false) {\n    if (thing instanceof ESPrimitive) {\n        return thing;\n    }\n    else if (thing === undefined || thing === null) {\n        return new ESUndefined();\n    }\n    else if (thing instanceof ESError) {\n        return new ESErrorPrimitive(thing);\n    }\n    else if (thing instanceof ESSymbol) {\n        return thing.value;\n    }\n    else if (typeof thing === 'number') {\n        return new ESNumber(thing);\n    }\n    else if (typeof thing === 'string') {\n        return new ESString(thing);\n    }\n    else if (typeof thing === 'boolean') {\n        return new ESBoolean(thing);\n    }\n    else if (typeof thing === 'bigint') {\n        return new ESNumber(Number(thing));\n    }\n    else if (typeof thing === 'symbol') {\n        return new ESString(String(thing));\n    }\n    return new ESJSBinding(thing, undefined, functionsTakeProps);\n}\nexport function strip(thing, props) {\n    if (thing == undefined) {\n        return undefined;\n    }\n    else if (!(thing instanceof ESPrimitive)) {\n        return thing;\n    }\n    else if (thing instanceof ESArray) {\n        return thing.valueOf().map(m => strip(m, props), props);\n    }\n    else if (thing instanceof ESObject) {\n        let val = {};\n        for (let key in thing.valueOf()) {\n            val[key] = strip(thing.valueOf()[key], props);\n        }\n        return val;\n    }\n    else if (thing instanceof ESUndefined) {\n        return undefined;\n    }\n    else if (thing instanceof ESFunction) {\n        return (...args) => {\n            const res = thing.__call__(props, ...args.map(a => wrap(a)));\n            if (res instanceof ESError) {\n                return res;\n            }\n            return strip(res, props);\n        };\n    }\n    else if (thing instanceof ESType) {\n        return thing;\n    }\n    return thing.valueOf();\n}\n","import { IS_NODE_INSTANCE } from \"../constants\";\nconst codes = {\n    red: 31,\n    yellow: 33,\n    green: 32,\n    cyan: 36,\n    blue: 34,\n    grey: 2\n};\nconst c = {};\nfor (let code of Object.keys(codes)) {\n    c[code] = (s) => {\n        s || (s = '');\n        if (IS_NODE_INSTANCE) {\n            return `\\x1b[${codes[code]}m` + s + '\\x1b[0m';\n        }\n        return `<span style=\"color: ${code}\">${s}</span>`;\n    };\n}\nexport default c;\n","import { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from '../runtime/primitives/wrapStrip';\nimport { ESArray, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESUndefined } from '../runtime/primitiveTypes';\nimport { indent, sleep, str } from '../util/util';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport chalk from \"../util/colours\";\nexport const builtInFunctions = {\n    'range': [({ context }, minP, maxP, stepP) => {\n            if (!(minP instanceof ESNumber)) {\n                return new ESArray();\n            }\n            const min = minP.valueOf();\n            if (maxP instanceof ESUndefined) {\n                try {\n                    return new ESArray([...Array(min).keys()].map(n => new ESNumber(n)));\n                }\n                catch (e) {\n                    return new ESError(Position.void, 'RangeError', `Cannot make range of length '${str(min)}'`);\n                }\n            }\n            let step = 1;\n            if (!(maxP instanceof ESNumber)) {\n                return new TypeError(Position.void, 'number', maxP.typeName(), str(maxP));\n            }\n            let max = maxP.valueOf();\n            if (!(stepP instanceof ESUndefined)) {\n                if (!(stepP instanceof ESNumber)) {\n                    return new TypeError(Position.void, 'number', stepP.typeName(), str(stepP));\n                }\n                step = stepP.valueOf();\n            }\n            let arr = [];\n            let i = min;\n            while (i < max) {\n                arr.push(new ESNumber(i));\n                i += step;\n            }\n            return new ESArray(arr);\n        }, {\n            args: [{\n                    name: 'N',\n                    type: 'Number',\n                }],\n            description: 'Generates an array of integers given N. Starts at 0 and goes to N-1. Can be used like for i in range(10) ..., similarly to python.',\n            returns: 'array of numbers from 0 to N-1',\n            returnType: 'number[] | RangeError'\n        }],\n    'log': [({ context }, ...msgs) => {\n            console.log(...msgs.map(m => str(m)));\n        }, {\n            args: [{\n                    name: '...values',\n                    type: 'any[]'\n                }],\n            description: 'Uses console.log to log all values',\n            returnType: 'void'\n        }],\n    'parseNum': [({ context }, num) => {\n            try {\n                const val = parseFloat(str(num));\n                if (isNaN(val)) {\n                    return new ESError(Position.void, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n                }\n                return new ESNumber(val);\n            }\n            catch (e) {\n                return new ESError(Position.void, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n            }\n        }, {\n            args: [{\n                    name: 'num',\n                    type: 'any'\n                }],\n            description: `Converts a string of digits into a number. Works with decimals and integers. Calls .str() on value before using native JS 'parseFloat' function. Returns TypeError if the string can't be converted into a number.`,\n            returnType: 'number | TypeError'\n        }],\n    'help': [({ context }, ...things) => {\n            if (!things.length) {\n                return new ESString('Visit https://entropygames.io/entropy-script for help with Entropy Script!\\n' +\n                    'Try \\'help(<anything>)\\' for help about a particular object.');\n            }\n            let out = '';\n            for (const thing of things) {\n                if (!(thing instanceof ESPrimitive)) {\n                    console.log('Invalid arg not primitive: ' + str(thing));\n                    return;\n                }\n                const info = thing.info;\n                out += `${chalk.yellow(`Help on '${info.name || '(anonymous)'}'`)}:\n    \n    ${chalk.yellow('Value')}: ${indent(indent(str(thing)))}\n    ${chalk.yellow('Type')}: '${str(thing.typeName())}'\n    ${chalk.yellow('Location')}: ${info.file || chalk.yellow('(unknown)')}\n    \n        ${chalk.green(info.description) || `No description.`}\n        \n    ${info.helpLink ? chalk.cyan(info.helpLink + '\\n\\n') : ''}\n`;\n                if (info.args && thing instanceof ESFunction) {\n                    const total = info.args.length;\n                    const required = info.args.filter(a => a.required).length;\n                    if (total == required)\n                        out += chalk.yellow(`    Arguments (${total}): \\n`);\n                    else\n                        out += chalk.yellow(`    Arguments (${required}-${total}): \\n`);\n                    for (const [idx, arg] of info.args.entries()) {\n                        if (typeof arg !== 'object')\n                            out += `        ${idx + 1}. INVALID ARG INFO`;\n                        else\n                            out += `        ${idx + 1}. ${arg.name}${arg.required === false ? chalk.yellow(' (optional) ') : ' '}{${arg.type}} ${arg.description || ''}\\n`;\n                    }\n                    out += `\\n\\n`;\n                    if (info.returns)\n                        out += `    Returns: ${info.returns}\\n\\n`;\n                    if (info.returnType)\n                        out += `    Return Type: ${info.returnType}\\n\\n`;\n                }\n                if (info.contents && (thing instanceof ESObject || thing instanceof ESNamespace)) {\n                    out += '    Properties: \\n      ';\n                    for (let contents of info.contents)\n                        out += contents.name + '\\n      ';\n                }\n            }\n            console.log(out);\n            if (things.length > 1) {\n                return new ESArray(things);\n            }\n            if (things) {\n                return things[0];\n            }\n        }, {\n            args: [{\n                    name: 'value',\n                    type: 'any'\n                }],\n            description: 'logs info on value',\n            returns: 'value passed in'\n        }],\n    'delete': [({ context }, name) => {\n            const id = str(name);\n            if (!context.has(id)) {\n                return new ESError(Position.void, 'DeleteError', `Identifier '${id}' not found in the current context`);\n            }\n            context.set(id, new ESUndefined());\n        }, {\n            name: 'delete',\n            args: [{ name: 'identifier', type: 'string' }],\n            description: 'Deletes a variable from the current context'\n        }],\n    '__path': [({ context }) => {\n            return new ESString(context.path);\n        }, {\n            name: '__path',\n            args: [],\n            description: 'Returns the current path'\n        }],\n    '__symbols': [({ context }) => {\n            return wrap(context.keys);\n        }, {\n            name: '__allSymbols',\n            args: [],\n            description: 'Returns an array of the names of all symbols in the current context'\n        }],\n    'using': [({ context }, module, global_) => {\n            if (!(module instanceof ESNamespace) && !(module instanceof ESJSBinding)) {\n                return new TypeError(Position.void, 'Namespace', str(module.typeName()));\n            }\n            let global = true;\n            if (global_) {\n                if (!global_.bool().valueOf()) {\n                    global = false;\n                }\n            }\n            const values = module.valueOf();\n            if (global) {\n                context = context.root;\n            }\n            else if (context.parent) {\n                context = context.parent;\n            }\n            for (const key of Object.keys(values)) {\n                context.setOwn(key, values[key].value, {\n                    isConstant: values[key].isConstant,\n                    isAccessible: values[key].isAccessible,\n                    forceThroughConst: true\n                });\n            }\n        }, {\n            name: 'using',\n            args: [\n                { name: 'module', type: 'namespace' },\n                { name: 'global', type: 'bool' }\n            ],\n            description: 'Adds contents of a namespace to the global context'\n        }],\n    'sleep': [({ context }, time, cb) => {\n            if (!(time instanceof ESNumber)) {\n                return new TypeError(Position.void, 'number', str(time.typeName()), str(time));\n            }\n            sleep(time.valueOf())\n                .then(() => {\n                const res = cb.__call__({ context });\n                if (res instanceof ESError) {\n                    console.log(res.str);\n                }\n            });\n        }, {\n            name: 'sleep',\n            args: [{ name: 'n', type: 'number' }, { name: 'callback', type: 'function' }],\n            description: 'Waits n milliseconds and then executes the callback'\n        }],\n    'throw': [({ context }, name, details) => {\n            return new ESError(Position.void, str(name), str(details));\n        }, {\n            name: 'throw',\n            args: [{ name: 'name', type: 'string' }, { name: 'details', type: 'string' }]\n        }],\n};\n","import { Position } from '../../position';\nimport { strip } from '../../runtime/primitives/wrapStrip';\nimport { ESObject, ESString } from '../../runtime/primitiveTypes';\nimport { str } from '../../util/util';\nimport { TypeError } from '../../errors';\nconst module = {\n    parse: (props, json) => {\n        return new ESObject(JSON.parse(str(json)));\n    },\n    stringify: (props, json) => {\n        if (!(json instanceof ESObject)) {\n            return new TypeError(Position.void, 'object', str(json.typeName()), str(json));\n        }\n        return new ESString(JSON.stringify(strip(json, props)));\n    }\n};\nexport default module;\n","import { IS_NODE_INSTANCE, libs } from '../constants';\nimport { ESError } from '../errors';\nimport { wrap } from '../runtime/primitives/wrapStrip';\nimport { ESSymbol } from '../runtime/symbol';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport ascii from './built-in-modules/ascii';\nimport json from './built-in-modules/json';\nimport dom from './built-in-modules/dom';\nimport Promise from './built-in-modules/promise';\nimport time from './built-in-modules/time';\nconst modules = {\n    ascii, json\n};\nconst processedModules = {};\nexport function initModules() {\n    processedModules['math'] = new ESJSBinding(Math);\n    processedModules['Promise'] = new ESJSBinding(Promise);\n    processedModules['time'] = new ESJSBinding(time(libs));\n    if (!IS_NODE_INSTANCE) {\n        const domRes = dom(libs);\n        if (!(domRes instanceof ESError)) {\n            modules['dom'] = domRes;\n        }\n        else {\n            return domRes;\n        }\n    }\n}\nexport function processRawModule(module, name) {\n    const moduleDict = {};\n    const moduleRaw = module.valueOf();\n    for (const key of Object.keys(moduleRaw)) {\n        moduleDict[key] = new ESSymbol(moduleRaw[key], key);\n    }\n    return new ESJSBinding(moduleDict, name);\n}\nexport function moduleExist(name) {\n    return name in modules || name in processedModules;\n}\nexport function addModule(name, body) {\n    modules[name] = {};\n    processedModules[name] = body;\n}\nexport function addModuleFromObj(name, raw) {\n    addModule(name, processRawModule(wrap(raw), name));\n}\nexport function getModule(name) {\n    if (name in processedModules) {\n        return processedModules[name];\n    }\n    if (name in modules) {\n        const res = new ESJSBinding(modules[name]);\n        const processed = processRawModule(res, name);\n        processedModules[name] = processed;\n        return processed;\n    }\n}\n","import { TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESNumber, ESString } from '../../runtime/primitiveTypes';\nimport { str } from '../../util/util';\nconst module = {\n    asciiToChar: (props, number) => {\n        if (!(number instanceof ESNumber)) {\n            return new TypeError(Position.void, 'number', str(number.typeName()), str(number));\n        }\n        return new ESString(String.fromCharCode(number.valueOf()));\n    },\n    charToAscii: (props, char) => {\n        if (!(char instanceof ESString)) {\n            return new TypeError(Position.void, 'string', str(char.typeName()), str(char));\n        }\n        return new ESNumber(str(char).charCodeAt(0));\n    },\n};\nexport default module;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { builtInFunctions } from \"./built-in/builtInFunctions\";\nimport { getModule, initModules, moduleExist } from './built-in/builtInModules';\nimport { Context } from \"./runtime/context\";\nimport { ESError, ImportError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { run } from \"./index\";\nimport { IS_NODE_INSTANCE } from \"./constants\";\nimport { str } from \"./util/util\";\nimport { ESFunction, ESNamespace, ESString } from './runtime/primitiveTypes';\nimport loadGlobalConstants from \"./built-in/globalConstants\";\nexport function initialise(globalContext, printFunc, inputFunc) {\n    builtInFunctions['import'] = [({ context }, rawUrl, callback) => {\n            if (IS_NODE_INSTANCE) {\n                return new ESError(Position.void, 'ImportError', 'Is running in node instance but trying to run browser import function');\n            }\n            const url = rawUrl.str();\n            if (moduleExist(str(url))) {\n                return getModule(str(url));\n            }\n            try {\n                fetch(str(url))\n                    .then(c => c.text())\n                    .then((code) => __awaiter(this, void 0, void 0, function* () {\n                    const env = new Context();\n                    env.parent = globalContext;\n                    const res = yield run(code);\n                    if (res.error) {\n                        printFunc(new ImportError(Position.void, str(url), res.error.str).str);\n                        return;\n                    }\n                    if (!(callback instanceof ESFunction))\n                        return;\n                    callback.__call__({ context }, new ESNamespace(url, env.getSymbolTableAsDict()));\n                }));\n            }\n            catch (E) {\n                return new ESError(Position.void, 'ImportError', E.toString());\n            }\n        }, {}];\n    builtInFunctions['print'] = [({ context }, ...args) => {\n            let out = ``;\n            for (let arg of args)\n                out += str(arg);\n            printFunc(out);\n        }, {}];\n    builtInFunctions['input'] = [({ context }, msg, cbRaw) => {\n            inputFunc(msg.valueOf(), (msg) => {\n                let cb = cbRaw === null || cbRaw === void 0 ? void 0 : cbRaw.valueOf();\n                if (cb instanceof ESFunction) {\n                    let res = cb.__call__({ context }, new ESString(msg));\n                    if (res instanceof ESError) {\n                        console.log(res.str);\n                    }\n                }\n                else if (typeof cb === 'function')\n                    cb(msg);\n                return new ESString('\\'input()\\' does not return anything. Pass in a function as the second argument, which will take the user input as an argument.');\n            });\n        }, {}];\n    for (let builtIn in builtInFunctions) {\n        const fn = new ESFunction(builtInFunctions[builtIn][0], [], builtIn, undefined, undefined, globalContext);\n        fn.info = builtInFunctions[builtIn][1];\n        fn.info.name = builtIn;\n        fn.info.isBuiltIn = true;\n        fn.info.file = 'built-in';\n        globalContext.set(builtIn, fn, {\n            global: true,\n            isConstant: true\n        });\n    }\n    loadGlobalConstants(globalContext);\n    const initModRes = initModules();\n    if (initModRes) {\n        return initModRes;\n    }\n    globalContext.initialisedAsGlobal = true;\n}\n","import { ESBoolean, ESUndefined } from '../runtime/primitiveTypes';\nimport { types } from \"../constants\";\nexport default function load(context) {\n    const globalConstants = {\n        'false': new ESBoolean(false),\n        'true': new ESBoolean(true),\n        'nil': new ESUndefined(),\n        'any': types.any,\n        'number': types.number,\n        'string': types.string,\n        'bool': types.bool,\n        'function': types.function,\n        'array': types.array,\n        'object': types.object,\n        'type': types.type,\n        'error': types.error,\n        'undefined': types.undefined\n    };\n    for (let constant in globalConstants) {\n        const value = globalConstants[constant];\n        context.set(constant, value, {\n            global: true,\n            isConstant: true\n        });\n    }\n}\n","export default class {\n    constructor(cb) {\n        this.thens = [];\n        this.resolved = false;\n        cb((value) => {\n            if (this.resolved) {\n                return;\n            }\n            this.resolved = true;\n            for (let then of this.thens) {\n                then(value);\n            }\n        }, (error) => {\n            if (this.resolved) {\n                return;\n            }\n            this.resolved = true;\n            if (this.catch_) {\n                this.catch_(error);\n            }\n        });\n    }\n    then(cb) {\n        if (this.resolved) {\n            return;\n        }\n        this.thens.push(cb);\n        return this;\n    }\n    catch(cb) {\n        if (this.resolved) {\n            return;\n        }\n        this.catch_ = cb;\n        return this;\n    }\n}\n;\n","import { now } from '../../constants';\nimport { ESFunction } from '../../runtime/primitives/esfunction';\nimport { ESJSBinding } from '../../runtime/primitives/esjsbinding';\nimport { ESNumber } from '../../runtime/primitives/esnumber';\nconst module = (config) => ({\n    now: new ESFunction(() => new ESNumber(now())),\n    date: new ESJSBinding(Date)\n});\nexport default module;\n","import { IS_NODE_INSTANCE, permissions } from '../../constants';\nimport { ReferenceError, InvalidRuntimeError, PermissionRequiredError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESJSBinding } from \"../../runtime/primitives/esjsbinding\";\nconst module = () => {\n    if (!permissions.accessDOM) {\n        return new PermissionRequiredError('No access to DOM');\n    }\n    if (IS_NODE_INSTANCE) {\n        return new InvalidRuntimeError();\n    }\n    const w = window;\n    if (typeof w === 'undefined' || !('$' in w)) {\n        return new ReferenceError(Position.void, '$ must be property of window to use dom library');\n    }\n    const $ = new ESJSBinding(w['$'], 'jquery');\n    return {\n        $,\n        window: new ESJSBinding(w, 'window'),\n        document: new ESJSBinding(w['document'], 'document'),\n    };\n};\nexport default module;\n","import { ESPrimitive } from \"./primitiveTypes\";\nexport function interpretArgument(arg, context) {\n    var _a;\n    const typeRes = arg.type.interpret(context);\n    if (typeRes.error) {\n        return typeRes.error;\n    }\n    let defaultValue;\n    if (arg.defaultValue) {\n        let defaultValRes = (_a = arg.defaultValue) === null || _a === void 0 ? void 0 : _a.interpret(context);\n        if (defaultValRes.error) {\n            return defaultValRes.error;\n        }\n        if (defaultValRes.val instanceof ESPrimitive) {\n            defaultValue = defaultValRes.val;\n        }\n    }\n    return {\n        name: arg.name,\n        type: typeRes.val,\n        defaultValue\n    };\n}\n","import { ESError, InvalidSyntaxError, ReferenceError, TypeError } from \"../errors\";\nimport { Context } from './context';\nimport { Position } from \"../position\";\nimport { catchBlockErrorSymbolName, now, tokenTypeString, tt, types } from \"../constants\";\nimport { interpretArgument } from \"./argument\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESType, ESUndefined } from \"./primitiveTypes\";\nimport { generateRandomSymbol, str } from '../util/util';\nimport { ESTypeNot } from \"./primitives/estype\";\nexport class interpretResult {\n    constructor() {\n        this.val = new ESUndefined();\n        this.shouldBreak = false;\n        this.shouldContinue = false;\n    }\n}\nexport class compileResult {\n    constructor(val) {\n        this.val = '';\n        this.hoisted = '';\n        if (typeof val === 'string') {\n            this.val = val;\n        }\n        else if (val) {\n            this.error = val;\n        }\n    }\n    register(node, config) {\n        const res = node.compilePy(config);\n        this.hoisted += res.hoisted;\n        if (res.error) {\n            this.error = res.error;\n            return '';\n        }\n        return res.val;\n    }\n}\nexport class Node {\n    constructor(pos, isTerminal = false) {\n        this.pos = pos;\n        this.isTerminal = isTerminal;\n    }\n    interpret(context) {\n        var _a;\n        const start = now();\n        const res = new interpretResult;\n        const val = this.interpret_(context);\n        if (val instanceof ESError) {\n            res.error = val;\n        }\n        else if (val instanceof interpretResult) {\n            res.val = val.val;\n            res.error = val.error;\n            res.funcReturn = val.funcReturn;\n            res.shouldBreak = val.shouldBreak;\n            res.shouldContinue = val.shouldContinue;\n        }\n        else {\n            res.val = val;\n        }\n        if (res.error && res.error.pos.isUnknown) {\n            res.error.pos = this.pos;\n        }\n        if (!(res.val instanceof ESPrimitive)) {\n            res.error = new TypeError(Position.void, 'Primitive', 'Native JS value', str(res.val));\n            res.val = new ESUndefined();\n        }\n        (_a = res.val.info).file || (_a.file = this.pos.file);\n        Node.interprets++;\n        let time = now() - start;\n        Node.totalTime += time;\n        if (time > Node.maxTime)\n            Node.maxTime = time;\n        return res;\n    }\n}\nNode.interprets = 0;\nNode.totalTime = 0;\nNode.maxTime = 0;\nexport class N_binOp extends Node {\n    constructor(pos, left, opTok, right) {\n        super(pos);\n        this.left = left;\n        this.opTok = opTok;\n        this.right = right;\n    }\n    interpret_(context) {\n        const left = this.left.interpret(context);\n        if (left.error)\n            return left.error;\n        const right = this.right.interpret(context);\n        if (right.error)\n            return right.error;\n        const l = left.val;\n        const r = right.val;\n        if (typeof l === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', l, 'N_binOp.interpret_');\n        }\n        if (typeof r === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', r, 'N_binOp.interpret_');\n        }\n        switch (this.opTok.type) {\n            case tt.LTE: {\n                const lt = l.__lt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (lt instanceof ESError)\n                    return lt;\n                if (eq instanceof ESError)\n                    return eq;\n                return lt.__or__({ context }, eq);\n            }\n            case tt.GTE: {\n                const gt = l.__gt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (gt instanceof ESError)\n                    return gt;\n                if (eq instanceof ESError)\n                    return eq;\n                return gt.__or__({ context }, eq);\n            }\n            case tt.NOTEQUALS: {\n                const res = l.__eq__({ context }, r);\n                if (res instanceof ESError)\n                    return res;\n                return new ESBoolean(!res.bool().valueOf());\n            }\n            case tt.ADD:\n                return l.__add__({ context }, r);\n            case tt.SUB:\n                return l.__subtract__({ context }, r);\n            case tt.MUL:\n                return l.__multiply__({ context }, r);\n            case tt.DIV:\n                return l.__divide__({ context }, r);\n            case tt.POW:\n                return l.__pow__({ context }, r);\n            case tt.MOD:\n                return l.__mod__({ context }, r);\n            case tt.EQUALS:\n                return l.__eq__({ context }, r);\n            case tt.LT:\n                return l.__lt__({ context }, r);\n            case tt.GT:\n                return l.__gt__({ context }, r);\n            case tt.AND:\n                return l.__and__({ context }, r);\n            case tt.OR:\n                return l.__or__({ context }, r);\n            case tt.APMERSAND:\n                return l.__ampersand__({ context }, r);\n            case tt.PIPE:\n                return l.__pipe__({ context }, r);\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid binary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(config) {\n        const left = this.left.compileJS(config);\n        if (left.error)\n            return left;\n        const right = this.right.compileJS(config);\n        if (right.error)\n            return right;\n        if (config.minify) {\n            return new compileResult(`${left.val}${tokenTypeString[this.opTok.type]}${right.val}`);\n        }\n        return new compileResult(`${left.val} ${tokenTypeString[this.opTok.type]} ${right.val}`);\n    }\n    compilePy(config) {\n        const left = this.left.compilePy(config);\n        if (left.error)\n            return left;\n        const right = this.right.compilePy(config);\n        if (right.error)\n            return right;\n        const switchers = {\n            '&&': 'and',\n            '||': 'or',\n            '^': '**',\n        };\n        let op = tokenTypeString[this.opTok.type];\n        if (op in switchers) {\n            op = switchers[op];\n        }\n        return new compileResult(`${left.val} ${op} ${right.val}`);\n    }\n}\nexport class N_unaryOp extends Node {\n    constructor(pos, a, opTok) {\n        super(pos);\n        this.a = a;\n        this.opTok = opTok;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const res = this.a.interpret(context);\n        if (res.error)\n            return res.error;\n        switch (this.opTok.type) {\n            case tt.SUB:\n            case tt.ADD:\n                if (!(res.val instanceof ESNumber)) {\n                    return new TypeError(this.pos, 'Number', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().toString()) || 'undefined_', (_b = res.val) === null || _b === void 0 ? void 0 : _b.valueOf());\n                }\n                const numVal = res.val.valueOf();\n                return new ESNumber(this.opTok.type === tt.SUB ? -numVal : Math.abs(numVal));\n            case tt.NOT:\n                return new ESBoolean(!((_c = res === null || res === void 0 ? void 0 : res.val) === null || _c === void 0 ? void 0 : _c.bool().valueOf()));\n            case tt.BITWISE_NOT:\n                return new ESTypeNot(res.val);\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid unary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(config) {\n        const val = this.a.compileJS(config);\n        if (val.error)\n            return val;\n        return new compileResult(`${tokenTypeString[this.opTok.type]}${val.val}`);\n    }\n    compilePy(config) {\n        const val = this.a.compilePy(config);\n        if (val.error)\n            return val;\n        return new compileResult(`${tokenTypeString[this.opTok.type]}${val.val}`);\n    }\n}\nexport class N_varAssign extends Node {\n    constructor(pos, varNameTok, value, assignType = '=', isGlobal = false, isConstant = false, isDeclaration = false, type = types.any) {\n        super(pos);\n        this.value = value;\n        this.varNameTok = varNameTok;\n        this.isGlobal = isGlobal;\n        this.assignType = assignType;\n        this.isConstant = isConstant;\n        this.isDeclaration = isDeclaration;\n        if (type instanceof ESPrimitive) {\n            this.type = new N_primitiveWrapper(type);\n        }\n        else {\n            this.type = type;\n        }\n    }\n    interpret_(context) {\n        var _a, _b;\n        if (this.isDeclaration && context.hasOwn(this.varNameTok.value)) {\n            return new InvalidSyntaxError(this.pos, `Symbol '${this.varNameTok.value}' already exists, and cannot be redeclared`);\n        }\n        const res = this.value.interpret(context);\n        const typeRes = this.type.interpret(context);\n        if (res.error)\n            return res.error;\n        if (typeRes.error)\n            return typeRes.error;\n        if (!typeRes.val) {\n            return new TypeError(this.varNameTok.pos, 'Type', 'undefined');\n        }\n        if (!res.val) {\n            return new TypeError(this.varNameTok.pos, '~undefined', 'undefined', 'N_varAssign.interpret_');\n        }\n        const typeCheckRes = typeRes.val.typeCheck({ context }, res.val);\n        if (typeCheckRes instanceof ESError)\n            return typeCheckRes;\n        if (!typeCheckRes.bool().valueOf()) {\n            return new TypeError(this.varNameTok.pos, str(typeRes.val), str((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName()), str(res.val));\n        }\n        if (this.isDeclaration) {\n            if (this.assignType !== '=') {\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            }\n            if (context.hasOwn(this.varNameTok.value)) {\n                return new InvalidSyntaxError(this.pos, `Cannot redeclare variable which exists in the current scope`);\n            }\n            context.setOwn(this.varNameTok.value, res.val, {\n                global: false,\n                isConstant: this.isConstant,\n                type: typeRes.val\n            });\n            return res.val;\n        }\n        if (context.has(this.varNameTok.value)) {\n            const symbol = context.getSymbol(this.varNameTok.value);\n            if (symbol instanceof ESError)\n                return symbol;\n            if (symbol) {\n                if (!symbol.type.typeCheck({ context }, res.val).valueOf()) {\n                    return new TypeError(this.varNameTok.pos, str(symbol.type), (_b = res.val) === null || _b === void 0 ? void 0 : _b.typeName(), str(res.val));\n                }\n            }\n        }\n        if (this.assignType === '=') {\n            let value = res.val;\n            if (value === undefined) {\n                value = new ESUndefined();\n            }\n            const type = context.getSymbol(this.varNameTok.value);\n            if (type instanceof ESError) {\n                return type;\n            }\n            if (!type) {\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable without keyword`);\n            }\n            const typeCheckRes = type.type.typeCheck({ context }, res.val);\n            if (typeCheckRes instanceof ESError)\n                return typeCheckRes;\n            if (!typeCheckRes.bool().valueOf()) {\n                return new TypeError(Position.void, str(type.type), str(res.val.__type__), str(res.val));\n            }\n            const setRes = context.set(this.varNameTok.value, value, {\n                global: this.isGlobal,\n                isConstant: this.isConstant,\n                type: res.val.__type__\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n        }\n        else {\n            const currentVal = context.get(this.varNameTok.value);\n            if (currentVal instanceof ESError)\n                return currentVal;\n            if (currentVal == undefined)\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            let newVal;\n            let assignVal = res.val;\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError) {\n                return newVal;\n            }\n            let setRes = context.set(this.varNameTok.value, newVal, {\n                global: this.isGlobal,\n                isConstant: this.isConstant,\n                type: newVal.__type__\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n            res.val = newVal;\n        }\n        if (res.val.info.name === '(anonymous)' || !res.val.info.name) {\n            res.val.info.name = this.varNameTok.value;\n        }\n        return res;\n    }\n    compileJS(config) {\n        const val = this.value.compileJS(config);\n        if (val.error)\n            return val;\n        let declaration = '';\n        if (this.isDeclaration) {\n            if (this.isGlobal) {\n                declaration = 'var';\n            }\n            else if (this.isConstant) {\n                declaration = 'const';\n            }\n            else {\n                declaration = 'let';\n            }\n        }\n        let assign = this.assignType;\n        if (assign !== '=') {\n            assign += '=';\n        }\n        if (config.minify) {\n            return new compileResult(`${declaration} ${this.varNameTok.value}${assign}${val.val}`);\n        }\n        return new compileResult(`${declaration} ${this.varNameTok.value} ${assign} ${val.val}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const val = this.value.compilePy(config);\n        if (val.error)\n            return val;\n        res.hoisted += val.hoisted;\n        let assign = this.assignType;\n        if (assign !== '=') {\n            assign += '=';\n        }\n        if (this.isGlobal) {\n            res.hoisted += `${this.varNameTok.value}=None`;\n        }\n        if (config.minify) {\n            res.val = `${this.varNameTok.value}${assign}${val.val}`;\n        }\n        else {\n            res.val = `${this.varNameTok.value} ${assign} ${val.val}`;\n        }\n        return res;\n    }\n}\nexport class N_if extends Node {\n    constructor(pos, comparison, ifTrue, ifFalse) {\n        super(pos);\n        this.comparison = comparison;\n        this.ifFalse = ifFalse;\n        this.ifTrue = ifTrue;\n    }\n    interpret_(context) {\n        var _a;\n        let newContext = new Context();\n        newContext.parent = context;\n        let res = new interpretResult();\n        let compRes = this.comparison.interpret(context);\n        if (compRes.error)\n            return compRes;\n        if ((_a = compRes.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            res = this.ifTrue.interpret(newContext);\n            res.val = new ESUndefined();\n            if (res.error)\n                return res;\n        }\n        else if (this.ifFalse) {\n            res = this.ifFalse.interpret(newContext);\n            res.val = new ESUndefined();\n            if (res.error)\n                return res;\n        }\n        return res;\n    }\n    compileJS(config) {\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 4);\n        config.indent += 4;\n        const statementRes = this.comparison.compileJS(config);\n        if (statementRes.error)\n            return statementRes;\n        const ifTrueRes = this.ifTrue.compileJS(config);\n        if (ifTrueRes.error)\n            return ifTrueRes;\n        if (!this.ifFalse) {\n            if (config.minify) {\n                return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}\\n}`);\n            }\n            return new compileResult(`if (${statementRes.val}) {\\n${ifTrueRes.val}\\n}`);\n        }\n        config.indent = highIndent.length;\n        let ifFalseRes = this.ifFalse.compileJS(config);\n        if (ifFalseRes.error)\n            return ifFalseRes;\n        if (!(this.ifFalse instanceof N_statements)) {\n            ifFalseRes.val = highIndent + ifFalseRes.val;\n        }\n        if (config.minify) {\n            return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}}else{${ifFalseRes.val}}`);\n        }\n        return new compileResult(`if (${statementRes.val}) {\\n${ifTrueRes.val}\\n${indent}} else {\\n${ifFalseRes.val}\\n${indent}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 4);\n        config.indent += 4;\n        const statementRes = this.comparison.compilePy(config);\n        if (statementRes.error)\n            return statementRes;\n        res.hoisted += statementRes.hoisted;\n        const ifTrueRes = this.ifTrue.compilePy(config);\n        if (ifTrueRes.error)\n            return ifTrueRes;\n        res.hoisted += ifTrueRes.hoisted;\n        if (!this.ifFalse) {\n            return new compileResult(`if ${statementRes.val}:\\n${highIndent}${ifTrueRes.val}`);\n        }\n        const ifFalseRes = this.ifFalse.compilePy(config);\n        if (ifFalseRes.error)\n            return ifFalseRes;\n        res.hoisted += ifFalseRes.hoisted;\n        if (!(this.ifFalse instanceof N_statements)) {\n            ifFalseRes.val = highIndent + ifFalseRes.val;\n        }\n        return new compileResult(`if ${statementRes.val}:\\n${ifTrueRes.val}\\n${indent}else:\\n${ifFalseRes.val}\\n${indent}`);\n    }\n}\nexport class N_while extends Node {\n    constructor(pos, comparison, loop) {\n        super(pos);\n        this.comparison = comparison;\n        this.loop = loop;\n    }\n    interpret_(context) {\n        var _a, _b;\n        let newContext = new Context();\n        newContext.parent = context;\n        while (true) {\n            let shouldLoop = this.comparison.interpret(context);\n            if (shouldLoop.error)\n                return shouldLoop;\n            if (!((_b = (_a = shouldLoop.val) === null || _a === void 0 ? void 0 : _a.bool()) === null || _b === void 0 ? void 0 : _b.valueOf()))\n                break;\n            let potentialError = this.loop.interpret(newContext);\n            if (potentialError.error)\n                return potentialError;\n            if (potentialError.shouldBreak)\n                break;\n        }\n        return new ESUndefined();\n    }\n    compileJS(config) {\n        config.indent += 4;\n        const comparisonRes = this.comparison.compileJS(config);\n        if (comparisonRes.error)\n            return comparisonRes;\n        const bodyRes = this.loop.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        if (config.minify) {\n            return new compileResult(`while(${comparisonRes.val}){${bodyRes.val}}`);\n        }\n        return new compileResult(`while (${comparisonRes.val}) {\\n${bodyRes.val}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const highIndent = ' '.repeat(config.indent || 0);\n        const comparisonRes = this.comparison.compilePy(config);\n        if (comparisonRes.error)\n            return comparisonRes;\n        res.hoisted += comparisonRes.hoisted;\n        const bodyRes = this.loop.compilePy(config);\n        if (bodyRes.error)\n            return bodyRes;\n        res.hoisted += bodyRes.hoisted;\n        return new compileResult(`while ${comparisonRes.val}:\\n${highIndent}${bodyRes.val}`);\n    }\n}\nexport class N_for extends Node {\n    constructor(pos, body, array, identifier, isGlobalIdentifier, isConstIdentifier) {\n        super(pos);\n        this.body = body;\n        this.array = array;\n        this.identifier = identifier;\n        this.isGlobalId = isGlobalIdentifier;\n        this.isConstId = isConstIdentifier;\n    }\n    interpret_(context) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        const array = this.array.interpret(context);\n        if (array.error)\n            return array;\n        if (['Array', 'Number', 'Object', 'String', 'Any'].indexOf(((_a = array.val) === null || _a === void 0 ? void 0 : _a.typeName()) || '') === -1) {\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val + ' | ' + ((_b = array.val) === null || _b === void 0 ? void 0 : _b.typeName()));\n        }\n        if (context.has(this.identifier.value) && this.isGlobalId) {\n            return new InvalidSyntaxError(this.identifier.pos, 'Cannot declare global variable which exists in the current scope');\n        }\n        function iteration(body, id, element, isGlobal, isConstant) {\n            let newContext = new Context();\n            newContext.parent = context;\n            newContext.set(id, element, {\n                global: isGlobal,\n                isConstant,\n                type: element.__type__\n            });\n            const res = body.interpret(newContext);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (res.shouldBreak) {\n                res.shouldBreak = false;\n                return 'break';\n            }\n            if (res.shouldContinue) {\n                res.shouldContinue = false;\n            }\n        }\n        if (array.val instanceof ESNumber || typeof ((_c = array.val) === null || _c === void 0 ? void 0 : _c.valueOf()) == 'number') {\n            for (let i = 0; i < array.val.valueOf(); i++) {\n                const res = iteration(this.body, this.identifier.value, new ESNumber(i), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESObject ||\n            (typeof ((_d = array.val) === null || _d === void 0 ? void 0 : _d.valueOf()) == 'number' && !Array.isArray((_e = array.val) === null || _e === void 0 ? void 0 : _e.valueOf()))) {\n            for (let element in (_f = array.val) === null || _f === void 0 ? void 0 : _f.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, new ESString(element), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESArray || Array.isArray((_g = array.val) === null || _g === void 0 ? void 0 : _g.valueOf())) {\n            for (let element of (_h = array.val) === null || _h === void 0 ? void 0 : _h.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, element, this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val);\n        return new ESUndefined();\n    }\n    compileJS(config) {\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const iteratorRes = this.array.compileJS(config);\n        if (iteratorRes.error)\n            return iteratorRes;\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        let declaration = 'let';\n        if (this.isGlobalId) {\n            declaration = 'var';\n        }\n        else if (this.isConstId) {\n            declaration = 'const';\n        }\n        if (config.minify) {\n            return new compileResult(`for(${declaration} ${this.identifier.value} of ${iteratorRes.val}){${bodyRes.val}\\n${indent}}`);\n        }\n        return new compileResult(`for (${declaration} ${this.identifier.value} of ${iteratorRes.val}) {\\n${bodyRes.val}\\n${indent}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        config.indent += 4;\n        const iteratorRes = res.register(this.array, config);\n        if (res.error)\n            return res;\n        const bodyRes = res.register(this.body, config);\n        if (res.error)\n            return res;\n        if (this.isGlobalId) {\n            res.hoisted += `${this.identifier.value}=None`;\n        }\n        res.val = `for ${this.identifier.value} in ${iteratorRes}:\\n${bodyRes}`;\n        return res;\n    }\n}\nexport class N_array extends Node {\n    constructor(pos, items, shouldClone = false) {\n        super(pos);\n        this.items = items;\n        this.shouldClone = shouldClone;\n    }\n    interpret_(context) {\n        let result = new interpretResult();\n        let interpreted = [];\n        for (let item of this.items) {\n            const res = item.interpret(context);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (!res.val)\n                continue;\n            let val = res.val;\n            if (this.shouldClone) {\n                val = val.clone();\n            }\n            interpreted.push(val);\n        }\n        result.val = new ESArray(interpreted);\n        return result;\n    }\n    compileJS(config) {\n        const res = new compileResult('[');\n        for (let item of this.items) {\n            const itemRes = item.compileJS(config);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ',';\n        }\n        res.val += ']';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult('[');\n        for (let item of this.items) {\n            const itemRes = res.register(item, config);\n            if (res.error)\n                return res;\n            res.val += itemRes + ',';\n        }\n        res.val += ']';\n        return res;\n    }\n}\nexport class N_objectLiteral extends Node {\n    constructor(pos, properties) {\n        super(pos);\n        this.properties = properties;\n    }\n    interpret_(context) {\n        let interpreted = {};\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.interpret(context);\n            if (value.error)\n                return value.error;\n            const key = keyNode.interpret(context);\n            if (key.error)\n                return key.error;\n            if (key.val && value.val) {\n                interpreted[key.val.valueOf()] = value.val;\n            }\n        }\n        return new ESObject(interpreted);\n    }\n    compileJS(config) {\n        const res = new compileResult('{');\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.compileJS(config);\n            if (value.error)\n                return value;\n            const key = keyNode.compileJS(config);\n            if (key.error)\n                return key;\n            if (key.val && value.val) {\n                res.val += `[${key.val}]: ${value.val},`;\n            }\n        }\n        res.val += '}';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult('{');\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = res.register(valueNode, config);\n            if (res.error)\n                return res;\n            const key = res.register(keyNode, config);\n            if (res.error)\n                return res;\n            if (key && value) {\n                res.val += `${key}: ${value},`;\n            }\n        }\n        res.val += '}';\n        return res;\n    }\n}\nexport class N_statements extends Node {\n    constructor(pos, items, topLevel = false) {\n        super(pos);\n        this.items = items;\n        this.topLevel = topLevel;\n    }\n    interpret_(context) {\n        if (!this.topLevel) {\n            let last;\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (typeof res.funcReturn !== 'undefined') || res.shouldBreak || res.shouldContinue)\n                    return res;\n                last = res.val;\n            }\n            if (last)\n                return last;\n            return new ESUndefined();\n        }\n        else {\n            let result = new interpretResult();\n            let interpreted = [];\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (res.funcReturn !== undefined))\n                    return res;\n                if (!res.val)\n                    continue;\n                let val = res.val.clone();\n                interpreted.push(val);\n            }\n            result.val = new ESArray(interpreted);\n            return result;\n        }\n    }\n    compileJS(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        res.val += indent;\n        for (let item of this.items) {\n            const itemRes = item.compileJS(config);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ';';\n            if (!config.minify) {\n                res.val += '\\n' + indent;\n            }\n        }\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        res.val += indent;\n        for (let item of this.items) {\n            const itemRes = res.register(item, config);\n            if (res.error)\n                return res;\n            res.val += itemRes;\n            res.val += '\\n' + indent;\n        }\n        return res;\n    }\n}\nexport class N_functionCall extends Node {\n    constructor(pos, to, args) {\n        super(pos);\n        this.arguments = args;\n        this.to = to;\n    }\n    interpret_(context) {\n        let { val, error } = this.to.interpret(context);\n        if (error) {\n            return error;\n        }\n        if (!val) {\n            return new TypeError(this.pos, 'any', 'undefined', undefined, 'On function call');\n        }\n        let params = [];\n        for (let arg of this.arguments) {\n            const res = arg.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (res.val) {\n                params.push(res.val);\n            }\n        }\n        const res = val.__call__({ context }, ...params);\n        if (res instanceof ESError) {\n            res.traceback.push({\n                position: this.pos,\n                line: `${val.info.name || '<AnonFunction>'}(${params.map(str).join(', ')})`\n            });\n        }\n        return res;\n    }\n    compileJS(config) {\n        const res = new compileResult;\n        const funcRes = this.to.compileJS(config);\n        if (funcRes.error)\n            return funcRes;\n        res.val = funcRes.val + '(';\n        for (let arg of this.arguments) {\n            const argRes = arg.compileJS(config);\n            if (argRes.error)\n                return argRes;\n            res.val += argRes.val;\n            if (arg !== this.arguments[this.arguments.length - 1]) {\n                res.val += ',';\n                if (!config.minify) {\n                    res.val += ' ';\n                }\n            }\n        }\n        res.val += ')';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const funcRes = res.register(this.to, config);\n        if (res.error)\n            return res;\n        res.val = funcRes + '(';\n        for (let arg of this.arguments) {\n            const argRes = res.register(arg, config);\n            if (res.error)\n                return res;\n            res.val += argRes;\n            if (arg !== this.arguments[this.arguments.length - 1]) {\n                res.val += ',';\n                if (!config.minify) {\n                    res.val += ' ';\n                }\n            }\n        }\n        res.val += ')';\n        return res;\n    }\n}\nexport class N_functionDefinition extends Node {\n    constructor(pos, body, argNames, returnType, name = '(anon)', this_ = new ESObject(), description = '') {\n        super(pos);\n        this.arguments = argNames;\n        this.body = body;\n        this.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        this.description = description;\n    }\n    interpret_(context) {\n        let args = [];\n        for (let arg of this.arguments) {\n            const res = interpretArgument(arg, context);\n            if (res instanceof ESError)\n                return res;\n            args.push(res);\n        }\n        const returnTypeRes = this.returnType.interpret(context);\n        if (returnTypeRes.error)\n            return returnTypeRes.error;\n        return new ESFunction(this.body, args, this.name, this.this_, returnTypeRes.val, context);\n    }\n    compileJS(config) {\n        const res = new compileResult('function(');\n        for (let param of this.arguments) {\n            res.val += param.name + ',';\n            if (!config.minify) {\n                res.val += ' ';\n            }\n        }\n        if (config.minify) {\n            res.val += '){';\n        }\n        else {\n            res.val += ') {\\n';\n        }\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        res.val += `${bodyRes.val}\\n${indent}}`;\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const hoistedName = generateRandomSymbol(config.symbols);\n        res.hoisted = `def ${hoistedName}(`;\n        for (let param of this.arguments) {\n            res.hoisted += param.name + ',';\n            if (!config.minify) {\n                res.hoisted += ' ';\n            }\n        }\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const body = this.body.compilePy(config);\n        if (body.error)\n            return body;\n        res.hoisted += `):\\n${indent}${body.val}`;\n        res.hoisted = body.hoisted + res.hoisted;\n        res.val = hoistedName;\n        return res;\n    }\n}\nexport class N_return extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        res.funcReturn = val.val;\n        return res;\n    }\n    compileJS(config) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(config);\n        if (valRes === null || valRes === void 0 ? void 0 : valRes.error)\n            return valRes;\n        return new compileResult(`return(${valRes === null || valRes === void 0 ? void 0 : valRes.val})`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        if (!this.value) {\n            return new compileResult('return');\n        }\n        const valRes = res.register(this.value, config);\n        if (res.error)\n            return res;\n        return new compileResult(`return ${valRes}`);\n    }\n}\nexport class N_yield extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        var _a;\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        if ((_a = val.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            res.funcReturn = val.val;\n        }\n        return res;\n    }\n    compileJS(config) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(config);\n        if (!valRes || !valRes.val) {\n            return new compileResult('');\n        }\n        return new compileResult(`if(_=${valRes.val}){return(_))`);\n    }\n    compilePy(config) {\n        if (!this.value) {\n            return new compileResult('');\n        }\n        const res = new compileResult;\n        const valRes = res.register(this.value, config);\n        if (!valRes) {\n            return new compileResult('');\n        }\n        return new compileResult(`if _ := ${valRes}: return _`);\n    }\n}\nexport class N_indexed extends Node {\n    constructor(pos, base, index) {\n        super(pos);\n        this.base = base;\n        this.index = index;\n    }\n    interpret_(context) {\n        var _a;\n        let baseRes = this.base.interpret(context);\n        if (baseRes.error)\n            return baseRes;\n        let indexRes = this.index.interpret(context);\n        if (indexRes.error)\n            return indexRes;\n        const index = indexRes.val;\n        const base = baseRes.val;\n        if (!base || !index)\n            return new ESUndefined();\n        if (this.value !== undefined) {\n            let valRes = this.value.interpret(context);\n            if (valRes.error)\n                return valRes;\n            const currentVal = wrap(base.__getProperty__({ context }, index));\n            let newVal;\n            let assignVal = valRes.val;\n            (_a = this.assignType) !== null && _a !== void 0 ? _a : (this.assignType = '=');\n            if (!assignVal) {\n                return new TypeError(this.pos, '~undefined', 'undefined', 'undefined', 'N_indexed.interpret_');\n            }\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                case '=':\n                    newVal = assignVal;\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError)\n                return newVal;\n            if (!base.__setProperty__)\n                return new TypeError(this.pos, 'mutable', 'immutable', base.valueOf());\n            const res = base.__setProperty__({ context }, index, newVal !== null && newVal !== void 0 ? newVal : new ESUndefined());\n            if (res instanceof ESError)\n                return res;\n        }\n        return base.__getProperty__({ context }, index);\n    }\n    compileJS(config) {\n        const objectRes = this.base.compileJS(config);\n        if (objectRes.error)\n            return objectRes;\n        const keyRes = this.index.compileJS(config);\n        if (keyRes.error)\n            return keyRes;\n        if (!this.value) {\n            return new compileResult(`${objectRes.val}[${keyRes.val}]`);\n        }\n        const valRes = this.value.compileJS(config);\n        if (valRes.error)\n            return valRes;\n        return new compileResult(`${objectRes.val}[${keyRes.val}]${this.assignType || '='}${valRes.val}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const objectRes = res.register(this.base, config);\n        if (res.error)\n            return res;\n        const keyRes = res.register(this.index, config);\n        if (res.error)\n            return res;\n        if (!this.value) {\n            res.val = `${objectRes}[${keyRes}]`;\n            return res;\n        }\n        const valRes = res.register(this.value, config);\n        if (res.error)\n            return res;\n        res.val = `${objectRes}[${keyRes}] ${this.assignType || '='} ${valRes}`;\n        return res;\n    }\n}\nexport class N_class extends Node {\n    constructor(pos, methods, extends_, init, name = '<anon class>') {\n        super(pos);\n        this.init = init;\n        this.methods = methods;\n        this.name = name;\n        this.extends_ = extends_;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const methods = [];\n        for (let method of this.methods) {\n            const res = method.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (!(res.val instanceof ESFunction)) {\n                return new TypeError(this.pos, 'Function', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            methods.push(res.val);\n        }\n        let extends_ = types.object;\n        if (this.extends_) {\n            const extendsRes = this.extends_.interpret(context);\n            if (extendsRes.error) {\n                return extendsRes.error;\n            }\n            if (!(extendsRes.val instanceof ESType)) {\n                return new TypeError(this.pos, 'Type', ((_b = extendsRes.val) === null || _b === void 0 ? void 0 : _b.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            extends_ = extendsRes.val;\n        }\n        let init;\n        if (this.init) {\n            const initRes = this.init.interpret(context);\n            if (initRes.error) {\n                return initRes.error;\n            }\n            if (!(initRes.val instanceof ESFunction)) {\n                return new TypeError(this.pos, 'Function', ((_c = initRes.val) === null || _c === void 0 ? void 0 : _c.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            init = initRes.val;\n        }\n        return new ESType(false, this.name, methods, extends_, init);\n    }\n    compileJS(config) {\n        return new compileResult('function(){return{};}');\n    }\n    compilePy(config) {\n        return new compileResult(`class ${this.name}:\\n${' '.repeat(config.indent)}pass`);\n    }\n}\nexport class N_namespace extends Node {\n    constructor(pos, statements, name = '(anon)', mutable = false) {\n        super(pos);\n        this.name = name;\n        this.statements = statements;\n        this.mutable = mutable;\n    }\n    interpret_(context) {\n        const newContext = new Context();\n        newContext.parent = context;\n        const res = this.statements.interpret(newContext);\n        if (res.error)\n            return res;\n        return new ESNamespace(new ESString(this.name), newContext.getSymbolTableAsDict(), this.mutable);\n    }\n    compileJS(config) {\n        const bodyRes = this.statements.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        return new compileResult(`(() => {${bodyRes.val}})()`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const bodyRes = res.register(this.statements, config);\n        if (res.error)\n            return res;\n        res.val = `'namespace'`;\n        return res;\n    }\n}\nexport class N_tryCatch extends Node {\n    constructor(pos, body, catchBlock) {\n        super(pos, true);\n        this.body = body;\n        this.catchBlock = catchBlock;\n    }\n    interpret_(context) {\n        const res = this.body.interpret(context);\n        if (res.error) {\n            const newContext = new Context();\n            newContext.parent = context;\n            newContext.setOwn(catchBlockErrorSymbolName, new ESErrorPrimitive(res.error), {\n                isConstant: true\n            });\n            const catchRes = this.catchBlock.interpret(newContext);\n            if (catchRes.error)\n                return catchRes.error;\n        }\n        return new interpretResult();\n    }\n    compileJS(config) {\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        const catchRes = this.catchBlock.compileJS(config);\n        if (catchRes.error)\n            return catchRes;\n        return new compileResult(`try{${bodyRes.val}}catch(${catchBlockErrorSymbolName}){${catchRes.val}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const bodyRes = res.register(this.body, config);\n        if (res.error)\n            return res;\n        const catchRes = res.register(this.catchBlock, config);\n        if (res.error)\n            return res;\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 1);\n        res.val = `try:\\n${highIndent}${bodyRes}\\n${indent}except:\\n${highIndent}${catchRes}`;\n        return res;\n    }\n}\nexport class N_number extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        const res = new interpretResult();\n        res.val = new ESNumber(val);\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult(this.a.value.toString());\n    }\n    compilePy(config) {\n        return new compileResult(this.a.value.toString());\n    }\n}\nexport class N_string extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        const res = new interpretResult();\n        res.val = new ESString(val);\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult(`'${this.a.value}'`);\n    }\n    compilePy(config) {\n        return new compileResult(`'${this.a.value}'`);\n    }\n}\nexport class N_variable extends Node {\n    constructor(a) {\n        super(a.pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        if (!context.has(this.a.value)) {\n            return new ReferenceError(this.a.pos, this.a.value);\n        }\n        let res = new interpretResult();\n        let symbol = context.getSymbol(this.a.value);\n        if (!symbol) {\n            return new ESUndefined();\n        }\n        if (symbol instanceof ESError) {\n            return symbol;\n        }\n        res.val = symbol.value;\n        return res;\n    }\n    compileJS(config) {\n        let val = this.a.value.toString();\n        if (val === 'import') {\n            val = 'import_';\n        }\n        return new compileResult(val);\n    }\n    compilePy(config) {\n        let val = this.a.value.toString();\n        if (val === 'import') {\n            val = 'import_';\n        }\n        return new compileResult(val);\n    }\n}\nexport class N_undefined extends Node {\n    constructor(pos = Position.void) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.val = new ESUndefined();\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('undefined');\n    }\n    compilePy(config) {\n        return new compileResult('None');\n    }\n}\nexport class N_break extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldBreak = true;\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('break');\n    }\n    compilePy(config) {\n        return new compileResult('break');\n    }\n}\nexport class N_continue extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldContinue = true;\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('continue');\n    }\n    compilePy(config) {\n        return new compileResult('continue');\n    }\n}\nexport class N_primitiveWrapper extends Node {\n    constructor(val, pos = Position.void) {\n        super(pos, true);\n        this.value = val;\n    }\n    interpret_(context) {\n        return this.value;\n    }\n    compileJS(config) {\n        return new compileResult(JSON.stringify(this.value.valueOf()));\n    }\n    compilePy(config) {\n        return new compileResult(JSON.stringify(this.value.valueOf()));\n    }\n}\n","import { Node } from \"../runtime/nodes\";\nimport { ESPrimitive } from '../runtime/primitiveTypes';\nexport function deepClone(obj, hash = new WeakMap()) {\n    let result;\n    if (Object(obj) !== obj || obj instanceof Function) {\n        return obj;\n    }\n    if (hash.has(obj)) {\n        return hash.get(obj);\n    }\n    try {\n        result = new obj.constructor();\n    }\n    catch (e) {\n        result = Object.create(Object.getPrototypeOf(obj));\n    }\n    if (obj instanceof Map) {\n        Array.from(obj, ([key, val]) => result.set(deepClone(key, hash), deepClone(val, hash)));\n    }\n    else if (obj instanceof Set) {\n        Array.from(obj, (key) => result.add(deepClone(key, hash)));\n    }\n    hash.set(obj, result);\n    return Object.assign(result, ...Object.keys(obj).map(key => ({ [key]: deepClone(obj[key], hash) })));\n}\nexport function str(val, depth = 0) {\n    if (typeof val === 'string') {\n        if (depth > 0) {\n            return `'${val}'`;\n        }\n        return val;\n    }\n    if (depth > 20) {\n        return '...';\n    }\n    let result = '';\n    if (typeof val === 'undefined') {\n        return 'undefined';\n    }\n    if (val instanceof ESPrimitive) {\n        return val.str().valueOf();\n    }\n    if (val instanceof Node) {\n        return `<RunTimeNode: ${val.constructor.name}>`;\n    }\n    switch (typeof val) {\n        case 'object':\n            if (Array.isArray(val)) {\n                result += '[';\n                for (let item of val) {\n                    try {\n                        result += str(item, depth + 1) + `, `;\n                    }\n                    catch (e) {\n                        result += '<large property>, ';\n                    }\n                }\n                if (val.length) {\n                    result = result.substring(0, result.length - 2);\n                }\n                result += ']';\n            }\n            else {\n                try {\n                    result += val.constructor.name;\n                }\n                catch (e) {\n                    result += 'UNKNOWN_CONSTRUCTOR';\n                }\n                result += ': {\\n';\n                let i = 0;\n                for (let item in val) {\n                    i++;\n                    if (!val.hasOwnProperty || !val.hasOwnProperty(item)) {\n                        continue;\n                    }\n                    result += `  ${item}: ${str(val[item], depth + 1) || ''}, \\n`;\n                }\n                if (i > 0) {\n                    result = result.substring(0, result.length - 3);\n                }\n                result += '\\n}\\n';\n            }\n            break;\n        case 'string':\n            result = `'${val}'`;\n            break;\n        case \"bigint\":\n        case \"number\":\n        case \"boolean\":\n            result = `${val}`;\n            break;\n        case \"undefined\":\n            result = '<NativeUndefined>';\n            break;\n        case \"function\":\n            result = `<NativeFunction ${val.name}>`;\n            break;\n    }\n    for (let i = 0; i < depth; i++)\n        result = indent(result);\n    return result;\n}\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms));\nexport function indent(str) {\n    return str.replace(/\\n/g, '\\n    ');\n}\nexport function generateRandomSymbol(symbols, length = 10) {\n    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_';\n    const gen = () => {\n        let result = '';\n        for (let i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * characters.length));\n        }\n        return result;\n    };\n    let symbol = gen();\n    while (symbols.indexOf(symbol) !== -1) {\n        symbol = gen();\n    }\n    return symbol;\n}\n","import { IS_NODE_INSTANCE } from './constants';\nimport { Position } from \"./position\";\nimport { str } from \"./util/util\";\nimport chalk from \"./util/colours\";\nexport class ESError {\n    constructor(pos, name, details) {\n        this.traceback = [];\n        this.pos = pos;\n        this.name = name;\n        this.details = details;\n    }\n    get colouredStr() {\n        let out = '';\n        if (this.traceback.length) {\n            out = chalk.yellow('Error Traceback (most recent call last):\\n');\n            for (let pos of [...this.traceback].reverse())\n                out += `    ${chalk.cyan(pos.position.str)}:\\n        ${pos.line}\\n`;\n        }\n        out += `${chalk.red(this.name)}: ${this.details} \\n at ${chalk.cyan(this.pos.str)}`;\n        return out;\n    }\n    get str() {\n        return `${this.name}: ${this.details} \\n at ${this.pos.str}`;\n    }\n}\nexport class IllegalCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'IllegalCharError', `'${char}'`);\n    }\n}\nexport class InvalidSyntaxError extends ESError {\n    constructor(pos, details) {\n        super(pos, 'InvalidSyntaxError', details);\n    }\n}\nexport class ExpectedCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'ExpectedCharError', `'${char}'`);\n    }\n}\nexport class TypeError extends ESError {\n    constructor(pos, expectedType, actualType, value = '', detail = '') {\n        super(pos, 'TypeError', `Expected type '${expectedType}', got type '${actualType}' ${typeof value === 'undefined' ? '' : ` on value '${str(value)}'`} ${!detail ? '' : detail}`);\n    }\n}\nexport class ImportError extends ESError {\n    constructor(pos, url, detail = '') {\n        super(pos, 'ImportError', `Could not import ${url}: ${detail}`);\n    }\n}\nexport class ReferenceError extends ESError {\n    constructor(pos, ref) {\n        super(pos, 'ReferenceError', `${ref} is not defined`);\n    }\n}\nexport class IndexError extends ESError {\n    constructor(pos, ref, object) {\n        var _a;\n        super(pos, 'IndexError', `'${ref}' is not a property of '${((_a = object === null || object === void 0 ? void 0 : object.info) === null || _a === void 0 ? void 0 : _a.name) || str(object)}'`);\n    }\n}\nexport class InvalidOperationError extends ESError {\n    constructor(op, value, detail = '', pos = Position.void) {\n        var _a;\n        super(pos, 'TypeError', `Cannot perform '${op}' on value ${((_a = value === null || value === void 0 ? void 0 : value.info) === null || _a === void 0 ? void 0 : _a.name) || str(value)}: ${detail}`);\n    }\n}\nexport class InvalidRuntimeError extends ESError {\n    constructor() {\n        super(Position.void, 'InvalidRuntimeError', `Required runtime of ${IS_NODE_INSTANCE ? 'browser' : 'node'}`);\n    }\n}\nexport class TestFailed extends ESError {\n    constructor(detail) {\n        super(Position.void, 'TestFailed', detail);\n    }\n}\nexport class PermissionRequiredError extends ESError {\n    constructor(detail) {\n        super(Position.void, 'PermissionRequiredError', detail);\n    }\n}\n","export class Token {\n    constructor(pos, type, value) {\n        this.type = type;\n        this.value = value;\n        this.pos = pos;\n    }\n    matches(type, val) {\n        return this.type === type && this.value === val;\n    }\n}\n","import { Position } from \"../position\";\nimport { digits, doubleCharTokens, identifierChars, KEYWORDS, multiLineCommentEnd, multiLineCommentStart, singleCharTokens, singleLineComment, stringSurrounds, tripleCharTokens, tt, } from '../constants';\nimport { IllegalCharError } from \"../errors\";\nimport { Token } from \"./tokens\";\nexport class Lexer {\n    constructor(program, fileName) {\n        this.text = program;\n        this.position = new Position(-1, 0, -1, fileName);\n        this.advance();\n    }\n    advance() {\n        this.position.advance(this.currentChar);\n        this.currentChar = this.text[this.position.idx];\n    }\n    generate() {\n        if (!this.text) {\n            return [new Token(this.position, tt.EOF, undefined)];\n        }\n        const tokens = [];\n        while (this.currentChar !== undefined) {\n            if (' \\t\\n'.includes(this.currentChar)) {\n                this.advance();\n            }\n            else if (digits.includes(this.currentChar)) {\n                tokens.push(this.makeNumber());\n            }\n            else if (this.currentChar === singleLineComment[0] &&\n                this.text[this.position.idx + 1] === singleLineComment[1]) {\n                this.singleLineComment();\n            }\n            else if (this.currentChar === multiLineCommentStart[0] &&\n                this.text[this.position.idx + 1] === multiLineCommentStart[1]) {\n                this.multiLineComment();\n            }\n            else if (identifierChars.includes(this.currentChar)) {\n                tokens.push(this.makeIdentifier());\n            }\n            else if (stringSurrounds.indexOf(this.currentChar) !== -1) {\n                tokens.push(this.makeString());\n            }\n            else {\n                const possibleAssignFirstChar = this.currentChar;\n                let token = this.unknownChar();\n                if (token) {\n                    if (token.type === tt.ASSIGN) {\n                        token.value = possibleAssignFirstChar;\n                    }\n                    tokens.push(token);\n                }\n                else {\n                    let pos = this.position.clone;\n                    let char = this.currentChar;\n                    this.advance();\n                    return new IllegalCharError(pos, char);\n                }\n            }\n        }\n        tokens.push(new Token(this.position, tt.EOF, undefined));\n        return tokens;\n    }\n    makeNumber() {\n        const pos = this.position.clone;\n        let numStr = '';\n        let dotCount = 0;\n        while (this.currentChar !== undefined && (digits + '._').includes(this.currentChar)) {\n            if (this.currentChar === '.') {\n                if (dotCount === 1) {\n                    break;\n                }\n                dotCount++;\n                numStr += '.';\n            }\n            else if (this.currentChar !== '_') {\n                numStr += this.currentChar;\n            }\n            this.advance();\n        }\n        return new Token(pos, tt.NUMBER, parseFloat(numStr));\n    }\n    makeString() {\n        const pos = this.position.clone;\n        let str = '';\n        let strClose = this.currentChar;\n        this.advance();\n        while (this.currentChar !== strClose && this.currentChar !== undefined) {\n            if (this.currentChar === '\\\\') {\n                this.advance();\n                if (this.currentChar === 'n') {\n                    str += '\\n';\n                    this.advance();\n                    continue;\n                }\n            }\n            str += this.currentChar;\n            this.advance();\n        }\n        this.advance();\n        return new Token(pos, tt.STRING, str);\n    }\n    makeIdentifier() {\n        let idStr = '';\n        const posStart = this.position.clone;\n        while (this.currentChar !== undefined && (identifierChars + digits).includes(this.currentChar)) {\n            idStr += this.currentChar;\n            this.advance();\n        }\n        let tokType = tt.IDENTIFIER;\n        if (KEYWORDS.indexOf(idStr) !== -1) {\n            tokType = tt.KEYWORD;\n        }\n        return new Token(posStart, tokType, idStr);\n    }\n    unknownChar() {\n        if (this.currentChar === undefined) {\n            return undefined;\n        }\n        for (let triple in tripleCharTokens) {\n            if (triple[0] === this.currentChar)\n                if (triple[1] === this.text[this.position.idx + 1])\n                    if (triple[2] === this.text[this.position.idx + 2]) {\n                        const pos = this.position.clone;\n                        this.advance();\n                        this.advance();\n                        this.advance();\n                        return new Token(pos, tripleCharTokens[triple], undefined);\n                    }\n        }\n        for (let double in doubleCharTokens) {\n            if (double[0] === this.currentChar)\n                if (double[1] === this.text[this.position.idx + 1]) {\n                    const pos = this.position.clone;\n                    this.advance();\n                    this.advance();\n                    return new Token(pos, doubleCharTokens[double], undefined);\n                }\n        }\n        if (singleCharTokens.hasOwnProperty(this.currentChar)) {\n            let pos = this.position.clone;\n            let val = singleCharTokens[this.currentChar];\n            this.advance();\n            return new Token(pos, val, undefined);\n        }\n        return undefined;\n    }\n    singleLineComment() {\n        this.advance();\n        while (this.currentChar !== '\\n' && this.currentChar !== undefined) {\n            this.advance();\n        }\n        this.advance();\n    }\n    multiLineComment() {\n        this.advance();\n        while (!(this.currentChar === multiLineCommentEnd[0] &&\n            this.text[this.position.idx + 1] === multiLineCommentEnd[1])) {\n            this.advance();\n        }\n        this.advance();\n        this.advance();\n    }\n}\n","import { tokenType, tokenTypeString, tt, types, VAR_DECLARE_KEYWORDS } from '../constants';\nimport { Token } from \"./tokens\";\nimport * as n from '../runtime/nodes';\nimport { N_functionDefinition, N_namespace, N_primitiveWrapper, N_tryCatch, N_undefined, N_variable, } from '../runtime/nodes';\nimport { ESError, InvalidSyntaxError } from \"../errors\";\nexport class ParseResults {\n    constructor() {\n        this.advanceCount = 0;\n        this.lastRegisteredAdvanceCount = 0;\n        this.reverseCount = 0;\n    }\n    registerAdvance() {\n        this.advanceCount = 1;\n        this.lastRegisteredAdvanceCount++;\n    }\n    register(res) {\n        this.lastRegisteredAdvanceCount = res.advanceCount;\n        this.advanceCount += res.advanceCount;\n        if (res.error) {\n            this.error = res.error;\n        }\n        if (!res.node) {\n            return new N_undefined();\n        }\n        return res.node;\n    }\n    tryRegister(res) {\n        if (res.error) {\n            this.reverseCount += res.advanceCount;\n            return;\n        }\n        return this.register(res);\n    }\n    success(node) {\n        this.node = node;\n        return this;\n    }\n    failure(error) {\n        this.error = error;\n        return this;\n    }\n}\nexport class Parser {\n    constructor(tokens) {\n        this.tokens = tokens;\n        this.tokenIdx = -1;\n        this.currentToken = tokens[0];\n        this.advance();\n    }\n    parse() {\n        var _a;\n        if (!this.currentToken || !this.tokens || (this.tokens.length === 1 && this.tokens[0].type === tt.EOF)) {\n            return new ParseResults();\n        }\n        const res = this.statements(true);\n        if (!res.error && this.currentToken.type !== tokenType.EOF) {\n            return res.failure(new InvalidSyntaxError((_a = this.currentToken) === null || _a === void 0 ? void 0 : _a.pos, `Expected 'End of File', got token of type '${tokenTypeString[this.currentToken.type]}'`));\n        }\n        return res;\n    }\n    advance(res) {\n        if (res)\n            res.registerAdvance();\n        this.tokenIdx++;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    reverse(amount = 1) {\n        this.tokenIdx -= amount;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    consume(res, type, errorMsg) {\n        if (this.currentToken.type !== type)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, errorMsg !== null && errorMsg !== void 0 ? errorMsg : `Expected '${tokenTypeString[type]}' but got '${tokenTypeString[this.currentToken.type]}'`));\n        this.advance(res);\n    }\n    clearEndStatements(res) {\n        while (this.currentToken.type === tt.ENDSTATEMENT) {\n            this.advance(res);\n        }\n    }\n    statements(topLevel = false) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let statements = [];\n        this.clearEndStatements(res);\n        const firstStatement = res.register(this.statement());\n        if (!firstStatement) {\n            return res;\n        }\n        statements.push(firstStatement);\n        if (res.error) {\n            return res;\n        }\n        let moreStatements = true;\n        while (true) {\n            let newLineCount = 0;\n            while (this.currentToken.type === tt.ENDSTATEMENT) {\n                this.advance(res);\n                newLineCount++;\n            }\n            if (newLineCount === 0) {\n                moreStatements = false;\n            }\n            if (!moreStatements) {\n                break;\n            }\n            const statement = res.tryRegister(this.statement());\n            if (!statement) {\n                this.reverse(res.reverseCount);\n                continue;\n            }\n            statements.push(statement);\n        }\n        this.clearEndStatements(res);\n        let node = new n.N_statements(pos, statements, topLevel);\n        return res.success(node);\n    }\n    statement() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        if (this.currentToken.matches(tt.KEYWORD, 'return')) {\n            return this.returnStatement(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'yield')) {\n            return this.returnStatement(res, true);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'break')) {\n            this.advance(res);\n            return res.success(new n.N_break(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'continue')) {\n            this.advance(res);\n            return res.success(new n.N_continue(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'try')) {\n            return this.tryCatch();\n        }\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    returnStatement(res, isYield = false) {\n        const pos = this.currentToken.pos;\n        this.advance(res);\n        let expr = new N_undefined(this.currentToken.pos);\n        if (this.currentToken.type !== tt.ENDSTATEMENT) {\n            let exprRes = res.register(this.expr());\n            if (!exprRes) {\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'Expected end of statement'));\n            }\n            expr = exprRes;\n        }\n        if (isYield) {\n            return res.success(new n.N_yield(pos, expr));\n        }\n        return res.success(new n.N_return(pos, expr));\n    }\n    atom() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        const pos = this.currentToken.pos;\n        switch (tok.type) {\n            case tt.NUMBER:\n                this.advance(res);\n                return res.success(new n.N_number(pos, tok));\n            case tt.STRING:\n                this.advance(res);\n                return res.success(new n.N_string(pos, tok));\n            case tt.IDENTIFIER:\n                return this.atomIdentifier(res, pos, tok);\n            case tt.OPAREN:\n                this.advance(res);\n                const expr = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type === tt.CPAREN) {\n                    this.advance(res);\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ')'\"));\n            case tt.OSQUARE:\n                let arrayExpr = res.register(this.array());\n                if (res.error)\n                    return res;\n                return res.success(arrayExpr);\n            case tt.OBRACES:\n                let objectExpr = res.register(this.object());\n                if (res.error)\n                    return res;\n                return res.success(objectExpr);\n            case tt.KEYWORD:\n                if (tok.value === 'if') {\n                    const expr = res.register(this.ifExpr());\n                    if (res.error)\n                        return res;\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Invalid Identifier ${tok.value}`));\n            default:\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected number, identifier, '(', '+' or '-'`));\n        }\n    }\n    atomIdentifier(res, pos, tok) {\n        this.advance(res);\n        let node = new n.N_variable(tok);\n        let prevNode = new n.N_undefined(pos);\n        let functionCall = false;\n        while ([tt.OPAREN, tt.OSQUARE, tt.DOT].indexOf(this.currentToken.type) !== -1) {\n            switch (this.currentToken.type) {\n                case tt.OPAREN:\n                    functionCall = true;\n                    const tempNode = node;\n                    node = res.register(this.makeFunctionCall(node));\n                    prevNode = tempNode;\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.OSQUARE:\n                    prevNode = node;\n                    node = res.register(this.makeIndex(node));\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.DOT:\n                    this.advance(res);\n                    if (this.currentToken.type !== tt.IDENTIFIER) {\n                        return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected identifier after '.'`));\n                    }\n                    prevNode = node;\n                    node = new n.N_indexed(this.currentToken.pos, node, new n.N_string(this.currentToken.pos, this.currentToken));\n                    this.advance(res);\n            }\n        }\n        if (this.currentToken.type === tt.ASSIGN) {\n            let assignType = this.currentToken.value;\n            if (functionCall) {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot assign to return value of function`));\n            }\n            this.advance(res);\n            const value = res.register(this.expr());\n            if (node instanceof n.N_variable) {\n                node = new n.N_varAssign(pos, node.a, value, assignType, false);\n            }\n            else if (node instanceof n.N_indexed) {\n                node.value = value;\n                node.assignType = assignType;\n            }\n            else {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot have node of type ${this.currentToken.constructor.name}.\n                            Expected either index or variable node.`));\n            }\n            if (res.error)\n                return res;\n        }\n        return res.success(node);\n    }\n    power() {\n        return this.binOp(() => this.atom(), [tt.POW, tt.MOD, tt.APMERSAND, tt.PIPE], () => this.factor());\n    }\n    factor() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        if (tok.type == tt.ADD || tok.type === tt.SUB) {\n            this.advance(res);\n            const factor = res.register(this.factor());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(tok.pos, factor, tok));\n        }\n        return this.power();\n    }\n    term() {\n        return this.binOp(() => this.factor(), [tt.MUL, tt.DIV]);\n    }\n    arithmeticExpr() {\n        return this.binOp(() => this.term(), [tt.ADD, tt.SUB]);\n    }\n    comparisonExpr() {\n        const res = new ParseResults();\n        if (this.currentToken.type === tt.NOT) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            let node = res.register(this.expr());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(opTok.pos, node, opTok));\n        }\n        if (this.currentToken.type === tt.BITWISE_NOT) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            let node = res.register(this.expr());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(opTok.pos, node, opTok));\n        }\n        let node = res.register(this.binOp(() => this.arithmeticExpr(), [tt.EQUALS, tt.NOTEQUALS, tt.GT, tt.GTE, tt.LTE, tt.LT]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    expr() {\n        const res = new ParseResults();\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.KEYWORD && VAR_DECLARE_KEYWORDS.indexOf(this.currentToken.value) !== -1) {\n            return this.initiateVar(res);\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'if')) {\n            return this.ifExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'while')) {\n            return this.whileExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'for')) {\n            return this.forExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'func')) {\n            return this.funcExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'class')) {\n            return this.classExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'namespace')) {\n            return this.namespace();\n        }\n        let node = res.register(this.binOp(() => this.comparisonExpr(), [tt.AND, tt.OR]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    binOp(func, ops, funcB = func) {\n        const res = new ParseResults();\n        let left = res.register(func());\n        if (res.error)\n            return res;\n        while (ops.indexOf(this.currentToken.type) !== -1\n            || ops.indexOf([this.currentToken.type, this.currentToken.value]) !== -1) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            const right = res.register(funcB());\n            if (res.error)\n                return res;\n            left = new n.N_binOp(left.pos, left, opTok, right);\n        }\n        return res.success(left);\n    }\n    makeFunctionCall(to) {\n        const res = new ParseResults();\n        let args = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OPAREN) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '['\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n            return res.success(new n.N_functionCall(pos, to, []));\n        }\n        args.push(res.register(this.expr()));\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid argument\"));\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            args.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CPAREN)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n        this.advance(res);\n        return res.success(new n.N_functionCall(pos, to, args));\n    }\n    makeIndex(to) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const base = to;\n        if (this.currentToken.type !== tt.OSQUARE)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, `Cannot index without expression`));\n        }\n        let index = res.register(this.expr());\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid index\"));\n        if (this.currentToken.type !== tt.CSQUARE)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ']'\"));\n        this.advance(res);\n        return res.success(new n.N_indexed(pos, base, index));\n    }\n    typeExpr(res) {\n        if (this.currentToken.type === tt.IDENTIFIER) {\n            const tok = this.currentToken;\n            this.advance(res);\n            return res.success(new N_variable(tok));\n        }\n        return this.expr();\n    }\n    initiateVar(res) {\n        let pos = this.currentToken.pos;\n        let isConst = true;\n        let isGlobal = false;\n        let isDeclaration = false;\n        if (this.currentToken.type === tt.KEYWORD &&\n            this.currentToken.value === 'global') {\n            isDeclaration = true;\n            isGlobal = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD &&\n            this.currentToken.value === 'let') {\n            isDeclaration = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        else if (this.currentToken.type === tt.KEYWORD &&\n            this.currentToken.value === 'var') {\n            isDeclaration = true;\n            isConst = false;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected variable declaration keyword, not ${this.currentToken.value}`));\n        }\n        if (this.currentToken.type !== tokenType.IDENTIFIER) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected Identifier or Keyword`));\n        }\n        const varName = this.currentToken;\n        this.advance(res);\n        let type = types.any;\n        if (this.currentToken.type === tt.COLON) {\n            isDeclaration = true;\n            this.consume(res, tt.COLON);\n            type = res.register(this.typeExpr(res));\n        }\n        if (this.currentToken.type !== tt.ASSIGN) {\n            if (isConst)\n                return res.failure(new InvalidSyntaxError(pos, 'Cannot initialise constant to undefined'));\n            return res.success(new n.N_varAssign(pos, varName, new n.N_undefined(this.currentToken.pos), '=', isGlobal, isConst, isDeclaration, type));\n        }\n        let assignType = this.currentToken.value;\n        this.advance(res);\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        if (expr instanceof n.N_class || expr instanceof n.N_functionDefinition) {\n            expr.name = varName.value;\n        }\n        if (expr instanceof N_namespace) {\n            expr.name = varName.value;\n            expr.mutable = !isConst;\n        }\n        return res.success(new n.N_varAssign(pos, varName, expr, assignType, isGlobal, isConst, isDeclaration, type));\n    }\n    bracesExp() {\n        const res = new ParseResults();\n        this.consume(res, tt.OBRACES);\n        if (res.error) {\n            return res;\n        }\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_undefined(this.currentToken.pos));\n        }\n        const expr = res.register(this.statements());\n        if (res.error) {\n            return res;\n        }\n        this.consume(res, tt.CBRACES);\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    addEndStatement(res) {\n        this.tokens.splice(this.tokenIdx, 0, new Token(this.currentToken.pos, tt.ENDSTATEMENT, undefined));\n        this.reverse();\n        this.advance(res);\n    }\n    ifExpr() {\n        const res = new ParseResults();\n        let ifTrue;\n        let ifFalse;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'if'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'if'\"));\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        ifTrue = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.clearEndStatements(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'else')) {\n            this.advance(res);\n            if (this.currentToken.type == tt.OBRACES) {\n                ifFalse = res.register(this.bracesExp());\n                if (res.error)\n                    return res;\n            }\n            else {\n                ifFalse = res.register(this.statement());\n                if (res.error)\n                    return res;\n            }\n        }\n        this.addEndStatement(res);\n        return res.success(new n.N_if(pos, condition, ifTrue, ifFalse));\n    }\n    whileExpr() {\n        const res = new ParseResults();\n        let loop;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'while')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'while'\"));\n        }\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        loop = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        return res.success(new n.N_while(pos, condition, loop));\n    }\n    parameter(res) {\n        let name;\n        let type = new n.N_primitiveWrapper(types.any);\n        if (this.currentToken.type !== tt.IDENTIFIER) {\n            return new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\");\n        }\n        name = this.currentToken.value;\n        this.advance(res);\n        if (this.currentToken.type === tt.COLON) {\n            this.consume(res, tt.COLON);\n            if (res.error)\n                return res.error;\n            type = res.register(this.typeExpr(res));\n            if (res.error)\n                return res.error;\n        }\n        return { name, type };\n    }\n    funcCore() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, args = [], returnType = new n.N_primitiveWrapper(types.any);\n        this.consume(res, tt.OPAREN);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n        }\n        else {\n            let param = this.parameter(res);\n            if (param instanceof ESError) {\n                return res.failure(param);\n            }\n            args.push(param);\n            while (this.currentToken.type === tt.COMMA) {\n                this.advance(res);\n                let param = this.parameter(res);\n                if (param instanceof ESError)\n                    return res.failure(param);\n                args.push(param);\n            }\n            if (this.currentToken.type !== tt.CPAREN)\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n            this.advance(res);\n        }\n        if (this.currentToken.type === tt.COLON) {\n            this.advance(res);\n            returnType = res.register(this.typeExpr(res));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.OBRACES) {\n            body = new n.N_return(this.currentToken.pos, res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        else {\n            this.consume(res, tt.OBRACES);\n            if (res.error)\n                return res;\n            if (this.currentToken.type !== tt.CBRACES)\n                body = res.register(this.statements());\n            else\n                body = new n.N_undefined(this.currentToken.pos);\n            this.consume(res, tt.CBRACES);\n            if (res.error)\n                return res;\n        }\n        return res.success(new n.N_functionDefinition(pos, body, args, returnType));\n    }\n    funcExpr() {\n        const res = new ParseResults();\n        if (!this.currentToken.matches(tt.KEYWORD, 'func'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'func'\"));\n        this.advance(res);\n        const func = res.register(this.funcCore());\n        if (res.error)\n            return res;\n        return res.success(func);\n    }\n    classExpr(name) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const methods = [];\n        let init;\n        let extends_ = new N_primitiveWrapper(types.object);\n        if (!this.currentToken.matches(tt.KEYWORD, 'class')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'class'\"));\n        }\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'extends')) {\n            this.advance(res);\n            extends_ = res.register(this.expr());\n            if (res.error)\n                return res;\n        }\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_class(pos, [], extends_, undefined, name));\n        }\n        while (true) {\n            if (this.currentToken.type !== tt.IDENTIFIER) {\n                break;\n            }\n            let methodId = this.currentToken.value;\n            this.advance(res);\n            const func = res.register(this.funcCore());\n            if (res.error)\n                return res;\n            if (!(func instanceof N_functionDefinition)) {\n                return res.failure(new ESError(this.currentToken.pos, 'ParseError', `Tried to get function, but got ${func} instead`));\n            }\n            func.name = methodId;\n            if (methodId === 'init') {\n                init = func;\n            }\n            else {\n                methods.push(func);\n            }\n        }\n        this.consume(res, tt.CBRACES);\n        return res.success(new n.N_class(pos, methods, extends_, init, name));\n    }\n    forExpr() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, array, identifier, isConst = true;\n        if (!this.currentToken.matches(tt.KEYWORD, 'for')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'for'\"));\n        }\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'var')) {\n            isConst = false;\n            this.advance(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'let')) {\n            this.advance(res);\n        }\n        if (res.error)\n            return res;\n        if (this.currentToken.type !== tt.IDENTIFIER) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\"));\n        }\n        identifier = this.currentToken;\n        this.advance(res);\n        if (!this.currentToken.matches(tt.KEYWORD, 'in')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected keyword 'in\"));\n        }\n        this.advance(res);\n        array = res.register(this.expr());\n        if (res.error)\n            return res;\n        body = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new n.N_for(pos, body, array, identifier, false, isConst));\n    }\n    array() {\n        const res = new ParseResults();\n        let elements = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            this.advance(res);\n            return res.success(new n.N_array(pos, []));\n        }\n        elements.push(res.register(this.expr()));\n        if (res.error) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Unexpected token\"));\n        }\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            elements.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ']'\"));\n        }\n        this.advance(res);\n        return res.success(new n.N_array(pos, elements));\n    }\n    object() {\n        const res = new ParseResults();\n        let properties = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OBRACES) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '{\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_objectLiteral(pos, []));\n        }\n        while (true) {\n            let keyType, key, value;\n            if (this.currentToken.type === tt.IDENTIFIER) {\n                keyType = 'id';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.STRING) {\n                keyType = 'string';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.OSQUARE) {\n                keyType = 'value';\n                this.advance(res);\n                key = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.CSQUARE) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ']', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                this.advance(res);\n            }\n            else {\n                break;\n            }\n            if (this.currentToken.type === tt.COLON) {\n                this.advance(res);\n                value = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                if (this.currentToken.type === tt.COMMA) {\n                    this.advance(res);\n                }\n            }\n            else {\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                if (keyType !== 'id') {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `You must specify a value when initialising an object literal with a key that is not an identifier.\n                        Try using \\`key: value\\` syntax.`));\n                }\n                this.reverse();\n                value = new n.N_variable(this.currentToken);\n                this.advance(res);\n                if (this.currentToken.type === tt.COMMA) {\n                    this.advance(res);\n                }\n            }\n            properties.push([key, value]);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CBRACES)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier, ',' or '}'\"));\n        this.advance(res);\n        return res.success(new n.N_objectLiteral(pos, properties));\n    }\n    namespace() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_namespace(pos, new n.N_undefined()));\n        }\n        const statements = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        return res.success(new n.N_namespace(pos, statements));\n    }\n    tryCatch() {\n        const res = new ParseResults();\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'No empty try block'));\n        }\n        const body = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.value !== 'catch') {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'try block requires catch'));\n        }\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.success(new N_tryCatch(this.currentToken.pos, body, new N_undefined()));\n        }\n        const catchBlock = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new N_tryCatch(this.currentToken.pos, body, catchBlock));\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Lexer } from \"./parse/lexer\";\nimport { Parser } from \"./parse/parser\";\nimport { global, libs as allLibs, now, refreshPerformanceNow, runningInNode, setGlobalContext, VERSION } from \"./constants\";\nimport { initialise } from \"./init\";\nimport { ESError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { compileResult, interpretResult, Node } from \"./runtime/nodes\";\nimport { ESArray } from \"./runtime/primitiveTypes\";\nimport { Context } from \"./runtime/context\";\nimport addNodeLibs from \"./built-in/nodeLibs\";\nimport colours from './util/colours';\nimport JS_STD_TXT_RAW from 'raw-loader!./built-in/compiledSTD/std.txt.js';\nimport PY_STD_TXT_RAW from 'raw-loader!./built-in/compiledSTD/std.txt.py';\nexport { Context, colours };\nexport * from './runtime/primitiveTypes';\nexport { VERSION, global, setGlobalContext, IS_NODE_INSTANCE, runningInNode, permissions, updatePermissions, libs, now, refreshPerformanceNow } from './constants';\nexport * from './errors';\nexport * from './runtime/nodes';\nexport * from './util/util';\nexport * from './runtime/primitives/wrapStrip';\nexport * from './runtime/symbol';\nexport function init(printFunc = console.log, inputFunc, node = true, libs = { print: console.log }, context = new Context(), path = '') {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const res = initialise(context, printFunc, inputFunc);\n        if (res instanceof ESError) {\n            return res;\n        }\n        setGlobalContext(context);\n        (_a = libs['context']) !== null && _a !== void 0 ? _a : (libs['context'] = context);\n        if (path) {\n            context.path = path;\n        }\n        if (libs.print) {\n            allLibs.print = libs.print;\n        }\n        if (node) {\n            runningInNode();\n            yield refreshPerformanceNow(true);\n            addNodeLibs(libs, context);\n        }\n    });\n}\nexport function run(msg, { env = global, measurePerformance = false, fileName = '(unknown)', currentDir = '' } = {}) {\n    if (currentDir) {\n        env.path = currentDir;\n    }\n    Node.maxTime = 0;\n    Node.totalTime = 0;\n    Node.interprets = 0;\n    const timeData = {\n        total: 0,\n        lexerTotal: 0,\n        parserTotal: 0,\n        interpretTotal: 0,\n        nodeMax: 0,\n        nodeAvg: 0,\n        nodeTotal: 0,\n        interprets: 0,\n    };\n    let start = now();\n    if (!env.root.initialisedAsGlobal) {\n        const res = new interpretResult();\n        res.error = new ESError(Position.void, 'Uninitialised', 'Global context has not been initialised with global values');\n        return res;\n    }\n    const lexer = new Lexer(msg, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        const res_ = new interpretResult();\n        res_.error = lexerRes;\n        return res_;\n    }\n    timeData.lexerTotal = now() - start;\n    start = now();\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        const res_ = new interpretResult();\n        res_.error = res.error;\n        return res_;\n    }\n    timeData.parserTotal = now() - start;\n    start = now();\n    if (!res.node) {\n        const res = new interpretResult();\n        res.val = new ESArray([]);\n        return res;\n    }\n    const finalRes = res.node.interpret(env);\n    timeData.interpretTotal = now() - start;\n    timeData.total = now() - start;\n    timeData.nodeMax = Node.maxTime;\n    timeData.nodeTotal = Node.totalTime;\n    timeData.nodeAvg = Node.totalTime / Node.interprets;\n    timeData.interprets = Node.interprets;\n    if (measurePerformance) {\n        console.log(timeData);\n    }\n    return Object.assign(Object.assign({}, finalRes), { timeData });\n}\nexport function parse(code, { fileName = '(unknown)', currentDir = '' } = {}) {\n    const lexer = new Lexer(code, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        return {\n            error: lexerRes\n        };\n    }\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        return {\n            error: res.error\n        };\n    }\n    if (!res.node) {\n        return {\n            error: new ESError(Position.void, 'Error', 'no output')\n        };\n    }\n    return {\n        compileToJavaScript: (config) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            const comment = `// Generated by EntropyScript->JavaScript compiler v${VERSION}\\n`;\n            const stdStr = JS_STD_TXT_RAW.toString().replace(/(\\r\\n|\\n|\\r|\\t| )+/gm, ' ') + '\\n';\n            const out = res.node.compileJS(config);\n            if (out.error)\n                return out;\n            if (config.minify) {\n                out.val = out.val.replace(/(\\r\\n|\\n|\\r|\\t| )+/gm, ' ');\n            }\n            return new compileResult(comment + stdStr + out.val);\n        },\n        compileToPython: (config) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            const comment = `# Generated by EntropyScript->Python compiler v${VERSION}\\n\\n`;\n            const stdStr = PY_STD_TXT_RAW.toString() + '\\n';\n            const out = res.node.compilePy(config);\n            if (out.error)\n                return out;\n            return new compileResult(comment + stdStr + out.hoisted + '\\n' + out.val);\n        },\n        interpret: (env = global) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            if (currentDir) {\n                env.path = currentDir;\n            }\n            if (!env.root.initialisedAsGlobal) {\n                const res = new interpretResult();\n                res.error = new ESError(Position.void, 'Uninitialised', 'Global context has not been initialised with global values');\n                return res;\n            }\n            return res.node.interpret(env);\n        },\n    };\n}\n","import { Position } from \"../position\";\nimport { Context } from \"../runtime/context\";\nimport { ESError, ImportError, PermissionRequiredError } from '../errors';\nimport { ESFunction, ESNamespace, ESObject, ESString } from '../runtime/primitiveTypes';\nimport { str } from \"../util/util\";\nimport { permissions, run } from '../index';\nimport { addModuleFromObj, getModule, moduleExist } from './builtInModules';\nimport { global, types } from \"../constants\";\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nfunction addNodeLibs(options, context) {\n    const { fs, path } = options;\n    for (let libName in options) {\n        if (options.hasOwnProperty(libName)) {\n            addModuleFromObj(libName, new ESJSBinding(options[libName], libName));\n        }\n    }\n    context.set('import', new ESFunction(({ context }, rawPath) => {\n        if (!permissions.imports) {\n            return new PermissionRequiredError('Imports not allowed');\n        }\n        if (!permissions.imports) {\n            return new PermissionRequiredError('Imports not allowed');\n        }\n        let scriptPath = str(rawPath);\n        if (permissions.useSTD && moduleExist(scriptPath)) {\n            return getModule(scriptPath);\n        }\n        scriptPath = path.join(context.path, scriptPath);\n        try {\n            if (!fs.existsSync(scriptPath)) {\n                if (fs.existsSync('./particles/' + scriptPath)) {\n                    if (fs.existsSync('particles/' + scriptPath + '/main.es')) {\n                        scriptPath = 'particles/' + scriptPath + '/main.es';\n                    }\n                    else {\n                        return new ESError(Position.void, 'ImportError', `Module '${scriptPath}' has no entry point. Requires 'main.es'.`);\n                    }\n                }\n                else {\n                    return new ESError(Position.void, 'ImportError', `Can't find file '${scriptPath}' to import.`);\n                }\n            }\n            const exDir = path.dirname(scriptPath);\n            const code = fs.readFileSync(scriptPath, 'utf-8');\n            const env = new Context();\n            env.parent = global;\n            env.path = exDir;\n            const n = new ESNamespace(new ESString(scriptPath), {});\n            const res = run(code, {\n                env,\n                measurePerformance: false,\n                fileName: scriptPath,\n                currentDir: exDir,\n            });\n            n.__value__ = env.getSymbolTableAsDict();\n            if (res.error) {\n                return res.error;\n            }\n            return n;\n        }\n        catch (E) {\n            return new ESError(Position.void, 'ImportError', E.toString());\n        }\n    }, [{ name: 'path', type: types.string }], 'import', undefined, types.object), {\n        forceThroughConst: true,\n        isConstant: true\n    });\n    context.setOwn('open', new ESFunction(({ context }, path_, encoding_) => {\n        if (!permissions.fileSystem) {\n            return new PermissionRequiredError('No access to file system');\n        }\n        const path = str(path_);\n        const encoding = str(encoding_) || 'utf-8';\n        if (!fs.existsSync(path)) {\n            return new ImportError(Position.void, path);\n        }\n        return new ESObject({\n            str: new ESFunction(({ context }) => {\n                return new ESString(fs.readFileSync(context.path + path, encoding));\n            }, [], 'str', undefined, types.string),\n            write: new ESFunction(({ context }, data) => {\n                fs.writeFileSync(context.path + path, str(data));\n            }, [{ name: 'path', type: types.string }]),\n            append: new ESFunction(({ context }, data) => {\n                fs.appendFileSync(context.path + path, str(data));\n            }, [{ name: 'path', type: types.string }]),\n        });\n    }));\n}\nexport default addNodeLibs;\n","export default \"Array.prototype.contains = function (element) {\\n\\treturn this.indexOf(element) !== -1;\\n};\\n\\nfunction parseNum (str) {\\n\\treturn parseFloat(str);\\n}\\n\\nconst print = console.log;\\n\\nNumber.prototype[Symbol.iterator] = function () {\\n\\treturn {\\n\\t\\tcurrent: 0,\\n\\t\\tlast: this,\\n\\t\\tnext() {\\n\\t\\t\\tif (this.current <= this.last) {\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\tdone: false,\\n\\t\\t\\t\\t\\tvalue: this.current++\\n\\t\\t\\t\\t};\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn { done: true };\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n};\\n\\nconst __private__ = {\\n\\tbims: {\\n\\t\\tmath: Math,\\n\\t\\ttime: {\\n\\t\\t\\tdate: Date,\\n\\t\\t\\tnow: Date.now,\\n\\t\\t},\\n\\t},\\n};\\n\\nif (typeof performance !== 'undefined') {\\n\\t__private__.bims.time.now = performance.now;\\n}\\n\\nfunction import_ (path) {\\n\\tif (__private__.bims.hasOwnProperty(path)) {\\n\\t\\treturn __private__.bims[path];\\n\\t}\\n}\\n\\nfunction range (minP, maxP, stepP) {\\n\\tif (typeof minP !== 'number') {\\n\\t\\treturn [];\\n\\t}\\n\\n\\tconst min = minP.valueOf();\\n\\n\\tif (typeof maxP === 'undefined') {\\n\\t\\ttry {\\n\\t\\t\\treturn [...Array(min).keys()];\\n\\t\\t} catch (e) {\\n\\t\\t\\tthrow `RangeError: Cannot make range of length '${min}'`;\\n\\t\\t}\\n\\t}\\n\\n\\tlet step = 1;\\n\\n\\tif (typeof maxP !== 'number') {\\n\\t\\tthrow 'TypeError: Expected number';\\n\\t}\\n\\n\\tlet max = maxP.valueOf();\\n\\n\\tif (typeof stepP !== 'undefined') {\\n\\t\\tif (typeof stepP !== 'number') {\\n\\t\\t\\tthrow 'TypeError: Expected number';\\n\\t\\t}\\n\\t\\tstep = stepP.valueOf();\\n\\t}\\n\\n\\tlet arr = [];\\n\\n\\tlet i = min;\\n\\twhile (i < max) {\\n\\t\\tarr.push(i);\\n\\t\\ti += step;\\n\\t}\\n\\n\\treturn arr;\\n}\";","export default \"\\n###############################\\n# START OF ENTROPY SCRIPT STD #\\n###############################\\nimport time\\n\\nlog = print\\nparseNum = float\\n\\ndef help(thing):\\n    return 'Help is not available in ES compiled Python'\\n\\n\\ndef GENERATE_PRIVATE():\\n    return {\\n        'modules': {\\n            'ascii': {\\n\\n            },\\n            'time': {\\n                'now': lambda: time.time_ns() / (10 ** 6)\\n            }\\n        }\\n    }\\n\\nPRIVATE = GENERATE_PRIVATE()\\n\\ndef import_ (path):\\n    if path in PRIVATE['modules']:\\n        return PRIVATE['modules'][path]\\n\\n\\n#############################\\n# END OF ENTROPY SCRIPT STD #\\n#############################\";"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Position","constructor","idx","ln","col","file","advance","currentChar","clone","str","isUnknown","void","digits","identifierChars","global","setGlobalContext","c","stringSurrounds","IS_NODE_INSTANCE","window","runningInNode","VAR_DECLARE_KEYWORDS","VERSION","permissions","networking","imports","accessDOM","useSTD","fileSystem","updatePermissions","newPermissions","assign","print","console","log","KEYWORDS","now","refreshPerformanceNow","thisArg","_arguments","generator","Date","performance","e","P","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","tokenType","tt","tokenTypeString","NUMBER","STRING","ENDSTATEMENT","IDENTIFIER","KEYWORD","COMMA","OBRACES","CBRACES","OPAREN","CPAREN","OSQUARE","CSQUARE","ASSIGN","ADD","SUB","MUL","DIV","POW","MOD","EQUALS","NOTEQUALS","NOT","GT","LT","GTE","LTE","AND","OR","COLON","DOT","EOF","APMERSAND","PIPE","BITWISE_NOT","singleCharTokens","doubleCharTokens","tripleCharTokens","primitiveMethods","types","ESPrimitive","type","any","self","isa","props","typeCheck","is","valueOf","__value__","typeName","__type__","hasProperty","describe","info","isBuiltIn","description","detail","res","strip","TypeError","__add__","n","__subtract__","__multiply__","__divide__","__pow__","__mod__","__eq__","__gt__","__lt__","__and__","__or__","__bool__","__pipe__","ESTypeUnion","__ampersand__","ESTypeIntersection","__setProperty__","__call__","parameters","ESNumber","super","number","cast","string","array","ESArray","Array","ESString","toString","Math","pow","bool","__getProperty__","wrap","IndexError","val","Boolean","name","helpLink","ESErrorPrimitive","error","details","traceback","map","s","position","line","ESObject","object","length","substr","context","keys","k","thisElement","nElement","newOb","keysToRemove","isArray","indexOf","ESUndefined","toClone","thisType","nValue","dealWithExtends","class_","instance","this_","callContext","ESType","superFunc","ESFunction","args","newContext","Context","parent","__extends__","_a","initFunc","__init__","__closure__","res_","undefined","setRes","setOwn","createInstance","params","runInit","on","_b","primitive","__name__","method","__methods__","methodClone","__instances__","push","isPrimitive","t","ESTypeNot","__val__","ESNamespace","mutable","slice","symbol","isAccessible","v","isConstant","ESJSBinding","functionsTakeProps","JSON","stringify","fTakesProps","func","arguments_","returnType","closure","path","fn","max","i","arg","typeIncludes","forceThroughConst","generateESFunctionCallContext","Node","interpret","funcReturn","callNode","callNative","defaultValue","required","boolean","values","len","contains","element","newArr","num","parseFloat","isNaN","split","repeat","strToInsert","firstPart","lastPart","ESSymbol","identifier","options","_c","thing","Number","String","m","a","codes","red","yellow","green","cyan","blue","grey","code","builtInFunctions","minP","maxP","stepP","min","arr","returns","msgs","things","out","indent","total","filter","entries","contents","id","has","set","global_","time","cb","sleep","parse","json","modules","ascii","asciiToChar","fromCharCode","charToAscii","char","charCodeAt","processedModules","processRawModule","moduleDict","moduleRaw","moduleExist","getModule","processed","initialise","globalContext","printFunc","inputFunc","rawUrl","callback","url","fetch","text","env","run","ImportError","getSymbolTableAsDict","E","msg","cbRaw","builtIn","globalConstants","constant","load","initModRes","thens","resolved","catch_","catch","date","domRes","PermissionRequiredError","InvalidRuntimeError","w","$","document","ReferenceError","dom","initModules","initialisedAsGlobal","symbolTable","deleted","path_","parent_","hasOwn","getSymbol","getRawSymbolTableAsDict","symbols","remove","clear","resetAsGlobal","deepClone","interpretArgument","typeRes","defaultValRes","interpretResult","shouldBreak","shouldContinue","compileResult","hoisted","register","node","config","compilePy","pos","isTerminal","start","interpret_","interprets","totalTime","maxTime","N_binOp","left","opTok","right","l","r","lt","eq","gt","InvalidSyntaxError","compileJS","minify","switchers","op","N_unaryOp","numVal","abs","N_varAssign","varNameTok","assignType","isGlobal","isDeclaration","N_primitiveWrapper","typeCheckRes","currentVal","newVal","assignVal","declaration","N_if","comparison","ifTrue","ifFalse","compRes","highIndent","statementRes","ifTrueRes","ifFalseRes","N_statements","N_while","loop","shouldLoop","potentialError","comparisonRes","bodyRes","N_for","body","isGlobalIdentifier","isConstIdentifier","isGlobalId","isConstId","_d","_e","_f","_g","_h","iteration","iteratorRes","N_array","items","shouldClone","interpreted","item","itemRes","N_objectLiteral","properties","keyNode","valueNode","topLevel","last","N_functionCall","to","arguments","join","funcRes","argRes","N_functionDefinition","argNames","returnTypeRes","param","hoistedName","generateRandomSymbol","N_return","valRes","N_yield","N_indexed","base","index","baseRes","indexRes","objectRes","keyRes","N_class","methods","extends_","init","extendsRes","initRes","N_namespace","statements","N_tryCatch","catchBlock","catchRes","N_number","N_string","N_variable","N_undefined","N_break","N_continue","hash","WeakMap","Function","create","getPrototypeOf","Map","from","Set","add","depth","substring","ms","setTimeout","replace","characters","gen","charAt","floor","random","colouredStr","reverse","IllegalCharError","ExpectedCharError","expectedType","actualType","ref","TestFailed","Token","matches","Lexer","program","fileName","generate","tokens","includes","makeNumber","singleLineComment","multiLineComment","makeIdentifier","makeString","possibleAssignFirstChar","token","unknownChar","numStr","dotCount","strClose","idStr","posStart","tokType","triple","double","ParseResults","advanceCount","lastRegisteredAdvanceCount","reverseCount","registerAdvance","tryRegister","success","failure","Parser","tokenIdx","currentToken","amount","consume","errorMsg","clearEndStatements","firstStatement","statement","moreStatements","newLineCount","returnStatement","tryCatch","expr","isYield","exprRes","atom","tok","atomIdentifier","arrayExpr","objectExpr","ifExpr","prevNode","functionCall","tempNode","makeFunctionCall","makeIndex","power","binOp","factor","term","arithmeticExpr","comparisonExpr","initiateVar","whileExpr","forExpr","funcExpr","classExpr","namespace","ops","funcB","typeExpr","isConst","varName","bracesExp","addEndStatement","splice","condition","parameter","funcCore","methodId","elements","keyType","libs","fs","libName","raw","addModule","rawPath","scriptPath","existsSync","exDir","dirname","readFileSync","measurePerformance","currentDir","encoding_","encoding","write","data","writeFileSync","append","appendFileSync","timeData","lexerTotal","parserTotal","interpretTotal","nodeMax","nodeAvg","nodeTotal","lexerRes","finalRes","compileToJavaScript","comment","stdStr","compileToPython"],"sourceRoot":""}