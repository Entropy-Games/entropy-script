{"version":3,"file":"2.20.1.js","mappings":"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","sources":["webpack://es/webpack/universalModuleDefinition","webpack://es/webpack/bootstrap","webpack://es/webpack/runtime/define property getters","webpack://es/webpack/runtime/hasOwnProperty shorthand","webpack://es/webpack/runtime/make namespace object","webpack://es/./src/position.ts","webpack://es/./src/constants.ts","webpack://es/./src/runtime/primitives/esprimitive.ts","webpack://es/./src/runtime/primitives/eserrorprimitive.ts","webpack://es/./src/runtime/primitives/esobject.ts","webpack://es/./src/runtime/primitives/esfunction.ts","webpack://es/./src/runtime/functionCaller.ts","webpack://es/./src/runtime/context.ts","webpack://es/./src/runtime/primitives/esundefined.ts","webpack://es/./src/runtime/primitives/esnamespace.ts","webpack://es/./src/runtime/primitives/esjsbinding.ts","webpack://es/./src/runtime/primitiveTypes.ts","webpack://es/./src/runtime/instantiator.ts","webpack://es/./src/runtime/primitives/estype.ts","webpack://es/./src/runtime/primitives/esnumber.ts","webpack://es/./src/runtime/primitives/esboolean.ts","webpack://es/./src/runtime/primitives/esarray.ts","webpack://es/./src/runtime/primitives/esstring.ts","webpack://es/./src/runtime/symbol.ts","webpack://es/./src/runtime/primitives/wrapStrip.ts","webpack://es/./src/util/colours.ts","webpack://es/./src/config.ts","webpack://es/./src/runtime/argument.ts","webpack://es/./src/runtime/nodes.ts","webpack://es/./src/util/util.ts","webpack://es/./src/errors.ts","webpack://es/./src/parse/tokens.ts","webpack://es/./src/parse/lexer.ts","webpack://es/./src/parse/parseResults.ts","webpack://es/./src/parse/parser.ts","webpack://es/./src/built-in/compiledSTD/std.txt.js","webpack://es/./src/built-in/built-in-modules/dom.ts","webpack://es/./src/built-in/builtInModules.ts","webpack://es/./src/built-in/built-in-modules/ascii.ts","webpack://es/./src/built-in/built-in-modules/json.ts","webpack://es/./src/built-in/built-in-modules/time.ts","webpack://es/./src/built-in/builtInFunctions.ts","webpack://es/./src/built-in/module.ts","webpack://es/./src/built-in/nodeLibs.ts","webpack://es/./src/init.ts","webpack://es/./src/built-in/globalConstants.ts","webpack://es/./src/index.ts","webpack://es/./src/built-in/compiledSTD/std.txt.py"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"es\"] = factory();\n\telse\n\t\troot[\"es\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default class Position {\n    constructor(idx, ln, col, file = '(unknown)') {\n        this.idx = idx;\n        this.ln = ln;\n        this.col = col;\n        this.file = file;\n    }\n    advance(currentChar = '') {\n        this.idx++;\n        this.col++;\n        if (currentChar === '\\n') {\n            this.ln++;\n            this.col = 0;\n        }\n        return this;\n    }\n    get clone() {\n        return new Position(this.idx, this.ln, this.col, this.file);\n    }\n    get str() {\n        return `File ${this.file}, ${this.ln + 1}:${this.col + 1}`;\n    }\n    get isUnknown() {\n        return this.idx === -2;\n    }\n    static get void() {\n        return new Position(-2, -2, -2, '(unknown)');\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport PACKAGE_JSON from '../package.json';\nexport const digits = '0123456789';\nexport const identifierChars = '_$abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nexport const singleLineComment = '//';\nexport const multiLineCommentStart = '/*';\nexport const multiLineCommentEnd = '*/';\nexport let global;\nexport const setGlobalContext = (c) => {\n    global = c;\n};\nexport const stringSurrounds = ['\\'', '`', '\"'];\nexport let IS_NODE_INSTANCE = typeof window === 'undefined';\nexport const runningInNode = () => void (IS_NODE_INSTANCE = true);\nexport const VAR_DECLARE_KEYWORDS = ['var', 'let', 'global'];\nexport const VERSION = PACKAGE_JSON['version'];\nexport const configFileName = 'esconfig.json';\nexport const VALID_FILE_ENCODINGS = [\n    'utf8', 'ucs2', 'utf16le', 'latin1',\n    'ascii', 'base64', 'base64url', 'hex'\n];\nexport const types = {};\nexport const libs = {};\nexport const catchBlockErrorSymbolName = 'err';\nexport const KEYWORDS = [\n    'var',\n    'let',\n    'global',\n    'if',\n    'else',\n    'while',\n    'for',\n    'in',\n    'continue',\n    'break',\n    'func',\n    'return',\n    'yield',\n    'class',\n    'extends',\n    'namespace',\n    'try',\n    'catch'\n];\nexport let now = () => 0;\nexport function refreshPerformanceNow(IS_NODE_INSTANCE) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (IS_NODE_INSTANCE) {\n            now = () => Date.now();\n        }\n        else {\n            now = () => {\n                try {\n                    return performance === null || performance === void 0 ? void 0 : performance.now();\n                }\n                catch (e) {\n                    return Date.now();\n                }\n            };\n        }\n    });\n}\nrefreshPerformanceNow(IS_NODE_INSTANCE);\nexport var tokenType;\n(function (tokenType) {\n    tokenType[tokenType[\"NUMBER\"] = 0] = \"NUMBER\";\n    tokenType[tokenType[\"STRING\"] = 1] = \"STRING\";\n    tokenType[tokenType[\"ENDSTATEMENT\"] = 2] = \"ENDSTATEMENT\";\n    tokenType[tokenType[\"IDENTIFIER\"] = 3] = \"IDENTIFIER\";\n    tokenType[tokenType[\"KEYWORD\"] = 4] = \"KEYWORD\";\n    tokenType[tokenType[\"COMMA\"] = 5] = \"COMMA\";\n    tokenType[tokenType[\"ASSIGN\"] = 6] = \"ASSIGN\";\n    tokenType[tokenType[\"ADD\"] = 7] = \"ADD\";\n    tokenType[tokenType[\"SUB\"] = 8] = \"SUB\";\n    tokenType[tokenType[\"MUL\"] = 9] = \"MUL\";\n    tokenType[tokenType[\"DIV\"] = 10] = \"DIV\";\n    tokenType[tokenType[\"POW\"] = 11] = \"POW\";\n    tokenType[tokenType[\"MOD\"] = 12] = \"MOD\";\n    tokenType[tokenType[\"OPAREN\"] = 13] = \"OPAREN\";\n    tokenType[tokenType[\"CPAREN\"] = 14] = \"CPAREN\";\n    tokenType[tokenType[\"OBRACES\"] = 15] = \"OBRACES\";\n    tokenType[tokenType[\"CBRACES\"] = 16] = \"CBRACES\";\n    tokenType[tokenType[\"OSQUARE\"] = 17] = \"OSQUARE\";\n    tokenType[tokenType[\"CSQUARE\"] = 18] = \"CSQUARE\";\n    tokenType[tokenType[\"EQUALS\"] = 19] = \"EQUALS\";\n    tokenType[tokenType[\"NOTEQUALS\"] = 20] = \"NOTEQUALS\";\n    tokenType[tokenType[\"NOT\"] = 21] = \"NOT\";\n    tokenType[tokenType[\"GT\"] = 22] = \"GT\";\n    tokenType[tokenType[\"LT\"] = 23] = \"LT\";\n    tokenType[tokenType[\"GTE\"] = 24] = \"GTE\";\n    tokenType[tokenType[\"LTE\"] = 25] = \"LTE\";\n    tokenType[tokenType[\"AND\"] = 26] = \"AND\";\n    tokenType[tokenType[\"OR\"] = 27] = \"OR\";\n    tokenType[tokenType[\"COLON\"] = 28] = \"COLON\";\n    tokenType[tokenType[\"DOT\"] = 29] = \"DOT\";\n    tokenType[tokenType[\"EOF\"] = 30] = \"EOF\";\n    tokenType[tokenType[\"PIPE\"] = 31] = \"PIPE\";\n    tokenType[tokenType[\"APMERSAND\"] = 32] = \"APMERSAND\";\n    tokenType[tokenType[\"BITWISE_NOT\"] = 33] = \"BITWISE_NOT\";\n    tokenType[tokenType[\"QM\"] = 34] = \"QM\";\n})(tokenType || (tokenType = {}));\nexport let tt = tokenType;\nexport const tokenTypeString = {\n    [tt.NUMBER]: 'Number',\n    [tt.STRING]: 'String',\n    [tt.ENDSTATEMENT]: ';',\n    [tt.IDENTIFIER]: 'Identifier',\n    [tt.KEYWORD]: 'Keyword',\n    [tt.COMMA]: ',',\n    [tt.OBRACES]: '{',\n    [tt.CBRACES]: '}',\n    [tt.OPAREN]: '(',\n    [tt.CPAREN]: ')',\n    [tt.OSQUARE]: '[',\n    [tt.CSQUARE]: ']',\n    [tt.ASSIGN]: '=',\n    [tt.ADD]: '+',\n    [tt.SUB]: '-',\n    [tt.MUL]: '*',\n    [tt.DIV]: '/',\n    [tt.POW]: '^',\n    [tt.MOD]: '%',\n    [tt.EQUALS]: '==',\n    [tt.NOTEQUALS]: '!=',\n    [tt.NOT]: '!',\n    [tt.GT]: '>',\n    [tt.LT]: '<',\n    [tt.GTE]: '>=',\n    [tt.LTE]: '<=',\n    [tt.AND]: '&&',\n    [tt.OR]: '||',\n    [tt.COLON]: ':',\n    [tt.DOT]: '.',\n    [tt.EOF]: 'End of File',\n    [tt.APMERSAND]: '&',\n    [tt.PIPE]: '|',\n    [tt.BITWISE_NOT]: '~',\n    [tt.QM]: '?',\n};\nexport const singleCharTokens = {\n    '*': tt.MUL,\n    '/': tt.DIV,\n    '+': tt.ADD,\n    '-': tt.SUB,\n    '(': tt.OPAREN,\n    ')': tt.CPAREN,\n    '^': tt.POW,\n    '%': tt.MOD,\n    '{': tt.OBRACES,\n    '}': tt.CBRACES,\n    ',': tt.COMMA,\n    '[': tt.OSQUARE,\n    ']': tt.CSQUARE,\n    ';': tt.ENDSTATEMENT,\n    ':': tt.COLON,\n    '.': tt.DOT,\n    '=': tt.ASSIGN,\n    '>': tt.GT,\n    '<': tt.LT,\n    '!': tt.NOT,\n    '|': tt.PIPE,\n    '&': tt.APMERSAND,\n    '~': tt.BITWISE_NOT,\n    '?': tt.QM\n};\nexport const doubleCharTokens = {\n    '==': tt.EQUALS,\n    '!=': tt.NOTEQUALS,\n    '>=': tt.GTE,\n    '<=': tt.LTE,\n    '+=': tt.ASSIGN,\n    '-=': tt.ASSIGN,\n    '*=': tt.ASSIGN,\n    '/=': tt.ASSIGN,\n    '&&': tt.AND,\n    '||': tt.OR\n};\nexport const tripleCharTokens = {};\nexport const primitiveMethods = [\n    '__add__',\n    '__subtract__',\n    '__multiply__',\n    '__divide__',\n    '__pow__',\n    '__eq__',\n    '__gt__',\n    '__lt__',\n    '__and__',\n    '__or__',\n    '__pipe__',\n    '__ampersand__',\n    '__bool__',\n    '__set_property__',\n    '__get_property__',\n    '__call__',\n];\n","import { InvalidOperationError, TypeError } from '../../errors';\nimport Position from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { str } from '../../util/util';\nimport { strip } from './wrapStrip';\nimport { types } from \"../../constants\";\nexport class ESPrimitive {\n    constructor(value, type = types.any) {\n        this.self = this;\n        this.isa = (props, type) => {\n            return type.type_check(props, this);\n        };\n        this.is = (props, obj) => {\n            return new ESBoolean(obj === this);\n        };\n        this.valueOf = () => this.__value__;\n        this.typeName = () => str(this.__type__);\n        this.has_property = (props, key) => new ESBoolean(this.hasOwnProperty(str(key)));\n        this.describe = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            this.info.description = str(info);\n        };\n        this.detail = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            const res = strip(info, props);\n            if (typeof res !== 'object') {\n                return new TypeError(Position.void, 'object', this.typeName(), str(this));\n            }\n            this.info = Object.assign(Object.assign({}, this.info), res);\n            this.info.isBuiltIn = false;\n        };\n        this.__type__ = type || this;\n        this.__value__ = value;\n        this.info = {};\n    }\n    __add__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __subtract__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __multiply__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __divide__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __pow__(props, n) {\n        return new InvalidOperationError('__pow__', this);\n    }\n    __mod__(props, n) {\n        return new InvalidOperationError('__mod__', this);\n    }\n    __eq__(props, n) {\n        return new InvalidOperationError('__eq__', this);\n    }\n    __gt__(props, n) {\n        return new InvalidOperationError('__gt__', this);\n    }\n    __lt__(props, n) {\n        return new InvalidOperationError('__lt__', this);\n    }\n    __and__(props, n) {\n        return new InvalidOperationError('__and__', this);\n    }\n    __or__(props, n) {\n        return new InvalidOperationError('__or__', this);\n    }\n    __bool__(props) {\n        return new InvalidOperationError('__bool__', this);\n    }\n    __pipe__(props, n) {\n        return new InvalidOperationError('__pipe__', this);\n    }\n    __ampersand__(props, n) {\n        return new InvalidOperationError('__ampersand__', this);\n    }\n    __set_property__(props, key, value) {\n        return new InvalidOperationError('__set_property__', this, `[${str(key)}] = ${str(value)}`);\n    }\n    __call__(props, ...parameters) {\n        return new InvalidOperationError('__call__', this);\n    }\n}\n","import { ESPrimitive } from './esprimitive';\nimport { ESError, IndexError } from '../../errors';\nimport Position from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nimport { str } from \"../../util/util\";\nimport { ESArray } from \"./esarray\";\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESErrorPrimitive extends ESPrimitive {\n    constructor(error = new ESError(Position.void, 'Unknown', 'Error not specified')) {\n        super(error, types.error);\n        this.__get_property__ = (props, key) => {\n            switch (str(key)) {\n                case 'name':\n                    return new ESString(this.valueOf().name);\n                case 'details':\n                    return new ESString(this.valueOf().details);\n                case 'traceback':\n                    return new ESArray(this.valueOf().traceback\n                        .map(s => new ESString(`${s.position.str} : ${s.line}`)));\n                default:\n                    if (this.self.hasOwnProperty(str(key))) {\n                        return wrap(this.self[str(key)], true);\n                    }\n                    return new IndexError(Position.void, key.valueOf(), this);\n            }\n        };\n        this.cast = () => new ESError(Position.void, 'TypeError', `Cannot cast type 'error'`);\n        this.str = () => new ESString(`<Error: ${this.valueOf().str}>`);\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(n instanceof ESErrorPrimitive &&\n                this.valueOf().constructor === n.valueOf().constructor);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.clone = () => new ESErrorPrimitive(this.valueOf());\n        this.type_check = this.__eq__;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport Position from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { strip, wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESObject extends ESPrimitive {\n    constructor(val = {}) {\n        super(val, types.object);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => {\n            let val = str(this.valueOf());\n            if (val[val.length - 1] === '\\n') {\n                val = val.substr(0, val.length - 1);\n            }\n            return new ESString(val);\n        };\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new ESBoolean();\n            }\n            if (n.keys.length !== this.keys.length) {\n                return new ESBoolean();\n            }\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const thisElement = this.valueOf()[key];\n                const nElement = n.valueOf()[key];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new TypeError(Position.void, 'Object', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const res = this.__get_property__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            for (let k of n.keys) {\n                const key = k.valueOf();\n                if (newOb.hasOwnProperty(key)) {\n                    continue;\n                }\n                const res = n.__get_property__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            return new ESObject(newOb);\n        };\n        this.__subtract__ = (props, n) => {\n            let keysToRemove = [];\n            if (n instanceof ESString) {\n                keysToRemove = [str(n)];\n            }\n            else if (n instanceof ESArray) {\n                keysToRemove = strip(n, props);\n            }\n            else {\n                return new TypeError(Position.void, 'Array | String', n.typeName().valueOf(), n);\n            }\n            if (!Array.isArray(keysToRemove)) {\n                return new TypeError(Position.void, 'Array | String', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                if (keysToRemove.indexOf(key) === -1) {\n                    let res = this.__get_property__(props, k);\n                    if (res instanceof ESError) {\n                        return res;\n                    }\n                    newOb[key] = res;\n                }\n            }\n            return new ESObject(newOb);\n        };\n        this.__get_property__ = (props, k) => {\n            if (!(k instanceof ESString) && !(k instanceof ESNumber)) {\n                return new TypeError(Position.void, 'String | Number', k.typeName(), str(k));\n            }\n            const key = k.valueOf();\n            if (this.valueOf().hasOwnProperty(key)) {\n                return this.valueOf()[key];\n            }\n            if (this.self.hasOwnProperty(key)) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, str(key), this);\n        };\n        this.__set_property__ = ({}, key, value) => {\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.void, 'String', key.typeName(), str(key));\n            }\n            this.__value__[key.valueOf()] = value;\n        };\n        this.has_property = (props, k) => {\n            const key = str(k);\n            if (this.valueOf().hasOwnProperty(str(key))) {\n                return new ESBoolean(true);\n            }\n            return new ESBoolean(this.hasOwnProperty(key));\n        };\n        this.clone = () => {\n            const res = new ESObject();\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            res.__value__ = obj;\n            return res;\n        };\n        this.type_check = (props, n) => {\n            if (!(n instanceof ESObject)) {\n                return new ESBoolean();\n            }\n            if (Object.keys(this.valueOf()).length !== Object.keys(n.valueOf()).length) {\n                return new ESBoolean();\n            }\n            for (let key of Object.keys(this.valueOf())) {\n                if (!n.valueOf().hasOwnProperty(key) || !this.valueOf().hasOwnProperty(key)) {\n                    return new ESBoolean();\n                }\n                const thisType = this.valueOf()[key];\n                const nValue = n.valueOf()[key];\n                if (!thisType.type_check(props, nValue).valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n    }\n    get keys() {\n        return Object.keys(this.valueOf()).map(s => new ESString(s));\n    }\n    set keys(val) { }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESPrimitive } from './esprimitive';\nimport { global, types } from '../../constants';\nimport { ESError, IndexError } from '../../errors';\nimport Position from '../../position';\nimport { Context } from '../context';\nimport { call } from '../functionCaller';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESFunction extends ESPrimitive {\n    constructor(func = (() => { }), arguments_ = [], name = '(anon)', this_ = new ESObject(), returnType = types.any, closure, takeCallContextAsClosure = false) {\n        super(func, types.function);\n        this.cast = (props, type) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast type 'function'`);\n        };\n        this.clone = () => {\n            return new ESFunction(this.__value__, this.arguments_, this.name, this.this_, this.returnType, this.__closure__);\n        };\n        this.valueOf = () => this;\n        this.str = () => new ESString(`<Func: ${this.name}>`);\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESFunction))\n                return new ESBoolean(false);\n            return new ESBoolean(this.__value__ === n.__value__);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__call__ = ({ context }, ...params) => {\n            let ctx = context;\n            if (!this.takeCallContextAsClosure) {\n                ctx = this.__closure__;\n                ctx.path = context.path;\n            }\n            return call(ctx, this, params);\n        };\n        this.__get_property__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.type_check = (props, n) => {\n            if (!(n instanceof ESFunction)) {\n                return new ESBoolean();\n            }\n            if (this.arguments_.length !== n.arguments_.length) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.arguments_.length; i++) {\n                if (!this.arguments_[i].type.type_check(props, n.arguments_[i].type).valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            const thisReturnVal = this.__call__(props);\n            if (thisReturnVal instanceof ESError) {\n                return thisReturnVal;\n            }\n            if (!thisReturnVal.__eq__(props, n.returnType).valueOf()) {\n                return new ESBoolean();\n            }\n            return new ESBoolean(true);\n        };\n        this.arguments_ = arguments_;\n        this.info.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        if (closure) {\n            this.__closure__ = closure;\n        }\n        else {\n            this.__closure__ = new Context();\n            this.__closure__.parent = global;\n        }\n        this.takeCallContextAsClosure = takeCallContextAsClosure;\n        this.info.returnType = str(returnType);\n        this.info.args = arguments_.map(arg => ({\n            name: arg.name,\n            defaultValue: str(arg.defaultValue),\n            type: arg.type.info.name,\n            required: true\n        }));\n    }\n    get name() {\n        var _a;\n        return (_a = this.info.name) !== null && _a !== void 0 ? _a : '(anonymous)';\n    }\n    set name(v) {\n        this.info.name = v;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { str } from '../util/util';\nimport { Node } from \"./nodes\";\nimport { generateESFunctionCallContext } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport Position from \"../position\";\nimport { ESObject, ESPrimitive, ESUndefined } from \"./primitiveTypes\";\nfunction callNode(self, context, params, fn) {\n    var _a, _b;\n    const res = fn.interpret(context);\n    if (res.error)\n        return res.error;\n    if (res.funcReturn !== undefined) {\n        res.val = res.funcReturn;\n        res.funcReturn = undefined;\n    }\n    if (self.returnType.type_check({ context }, res.val).valueOf() === false) {\n        return new TypeError(Position.void, str(self.returnType), ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || 'undefined', (_b = res.val) === null || _b === void 0 ? void 0 : _b.str().valueOf(), '(from function return)');\n    }\n    if (res.val) {\n        return res.val;\n    }\n    else {\n        return new ESUndefined();\n    }\n}\nfunction callNative(self, context, params, fn) {\n    for (let i = params.length; i < fn.length; i++)\n        params.push(new ESUndefined());\n    const res = fn({\n        context\n    }, ...params);\n    if (res instanceof ESError || res instanceof ESPrimitive) {\n        return res;\n    }\n    return new ESUndefined();\n}\nexport function call(context, self, params) {\n    var _a;\n    let callContext = context;\n    if (!self.takeCallContextAsClosure) {\n        context = self.__closure__;\n    }\n    context.path = callContext.path;\n    const fn = self.__value__;\n    const newContext = generateESFunctionCallContext(params, self, context);\n    if (newContext instanceof ESError) {\n        return newContext;\n    }\n    let this_ = (_a = self.this_) !== null && _a !== void 0 ? _a : new ESObject();\n    if (!(this_ instanceof ESObject)) {\n        return new TypeError(Position.void, 'object', typeof this_, this_, '\\'this\\' must be an object');\n    }\n    let setRes = newContext.setOwn('this', this_);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    if (fn instanceof Node) {\n        return callNode(self, newContext, params, fn);\n    }\n    else if (typeof fn === 'function') {\n        return callNative(self, newContext, params, fn);\n    }\n    else {\n        return new TypeError(Position.void, 'function', typeof fn);\n    }\n}\n","import { ESError, TypeError } from \"../errors\";\nimport Position from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESPrimitive, ESUndefined } from \"./primitiveTypes\";\nimport { str } from \"../util/util\";\nimport { ESSymbol } from './symbol';\nimport chalk from \"../util/colours\";\nimport { types } from \"../constants\";\nimport { defaultPermissions } from \"../config\";\nexport class Context {\n    constructor() {\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        this.deleted = false;\n        this.path_ = '';\n    }\n    get path() {\n        if (this.path_ || !this.parent) {\n            return this.path_;\n        }\n        return this.parent.path;\n    }\n    set path(val) {\n        this.path_ = val;\n    }\n    get parent() {\n        return this.parent_;\n    }\n    set parent(val) {\n        if (val == this) {\n            console.error(chalk.red(`Setting context parent to self`));\n            return;\n        }\n        this.parent_ = val;\n    }\n    get permissions() {\n        if (this.permissions_) {\n            return this.permissions_;\n        }\n        if (this.parent) {\n            return this.parent.permissions;\n        }\n        return defaultPermissions();\n    }\n    set permissions(val) {\n        this.permissions_ = val;\n    }\n    has(identifier) {\n        if (!identifier)\n            return false;\n        return this.get(identifier) !== undefined;\n    }\n    hasOwn(identifier) {\n        return this.symbolTable[identifier] instanceof ESSymbol;\n    }\n    get(identifier) {\n        let symbol = this.getSymbol(identifier);\n        if (symbol instanceof ESError || symbol == undefined) {\n            return symbol;\n        }\n        return symbol.value;\n    }\n    getRawSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key].value;\n        return symbols;\n    }\n    getSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key];\n        return symbols;\n    }\n    getSymbol(identifier) {\n        let symbol = this.symbolTable[identifier];\n        if (symbol && !symbol.isAccessible) {\n            return new TypeError(Position.void, 'assessable', 'inaccessible', symbol.identifier);\n        }\n        if (!symbol && this.parent) {\n            let res = this.parent.getSymbol(identifier);\n            if (res instanceof ESError) {\n                return res;\n            }\n            symbol = res;\n        }\n        return symbol;\n    }\n    set(identifier, value, options = {}) {\n        let context = this;\n        if (options.global) {\n            context = this.root;\n        }\n        else {\n            while (!context.hasOwn(identifier) && context.parent !== undefined) {\n                context = context.parent;\n            }\n            if (!context.hasOwn(identifier)) {\n                context = this;\n            }\n        }\n        return context.setOwn(identifier, value, options);\n    }\n    setOwn(identifier, value, options = {}) {\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        if (options.global && !this.initialisedAsGlobal) {\n            options.global = false;\n        }\n        if (!options.forceThroughConst) {\n            let symbol = this.symbolTable[identifier];\n            if (symbol === null || symbol === void 0 ? void 0 : symbol.isConstant)\n                return new TypeError(Position.void, 'dynamic', 'constant', identifier);\n        }\n        this.symbolTable[identifier] = new ESSymbol(value, identifier, options);\n    }\n    remove(identifier) {\n        delete this.symbolTable[identifier];\n    }\n    clear() {\n        for (let symbol in this.symbolTable) {\n            this.remove(symbol);\n        }\n        this.parent = undefined;\n        this.deleted = true;\n    }\n    get root() {\n        let parent = this;\n        while (parent.parent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    get keys() {\n        return Object.keys(this.symbolTable);\n    }\n    clone() {\n        const newContext = new Context();\n        newContext.parent = this.parent;\n        newContext.deleted = this.deleted;\n        newContext.initialisedAsGlobal = this.initialisedAsGlobal;\n        newContext.symbolTable = Object.assign(Object.assign({}, newContext.symbolTable), this.symbolTable);\n        return newContext;\n    }\n    deepClone() {\n        var _a;\n        let clone = this.clone();\n        clone.parent = (_a = clone.parent) === null || _a === void 0 ? void 0 : _a.deepClone();\n        return clone;\n    }\n    log() {\n        console.log('---- CONTEXT ----');\n        for (let key in this.symbolTable) {\n            const symbol = this.symbolTable[key];\n            let out = key;\n            if (symbol.isConstant) {\n                out += ' (CONST)';\n            }\n            if (!symbol.isAccessible) {\n                out += ' (INACCESSIBLE)';\n            }\n            out += ': ';\n            out += str(this.symbolTable[key].value);\n            console.log(out);\n        }\n        console.log('-----------------');\n    }\n}\nexport function generateESFunctionCallContext(params, self, parent) {\n    const newContext = new Context();\n    newContext.parent = parent;\n    let max = Math.max(params.length, self.arguments_.length);\n    for (let i = 0; i < max; i++) {\n        let value = new ESUndefined();\n        let type = types.any;\n        if (!self.arguments_[i]) {\n            continue;\n        }\n        const arg = self.arguments_[i];\n        if (params[i] instanceof ESPrimitive) {\n            type = params[i].__type__;\n            value = params[i];\n        }\n        if (arg.defaultValue && params.length <= i) {\n            newContext.setOwn(arg.name, arg.defaultValue, {\n                forceThroughConst: true\n            });\n            continue;\n        }\n        const typeIncludes = arg.type.type_check({ context: parent }, params[i]);\n        if (typeIncludes instanceof ESError)\n            return typeIncludes;\n        if (!typeIncludes.valueOf()) {\n            return new TypeError(Position.void, str(arg.type), str(type), str(value));\n        }\n        newContext.setOwn(arg.name, value, {\n            forceThroughConst: true\n        });\n    }\n    let setRes = newContext.setOwn('args', new ESArray(params), {\n        forceThroughConst: true\n    });\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    return newContext;\n}\n","import { ESError, IndexError } from '../../errors';\nimport Position from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { ESType, ESTypeIntersection, ESTypeUnion } from './estype';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { wrap } from \"./wrapStrip\";\nimport { types } from \"../../constants\";\nexport class ESUndefined extends ESPrimitive {\n    constructor() {\n        super(undefined, types.undefined);\n        this.cast = ({ context }, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber();\n                case types.string:\n                    return new ESString();\n                case types.array:\n                    return new ESArray();\n                case types.undefined:\n                    return new ESUndefined();\n                case types.type:\n                    return new ESType();\n                case types.error:\n                    return new ESErrorPrimitive();\n                case types.object:\n                case types.any:\n                    return new ESObject();\n                case types.function:\n                    return new ESFunction(() => { });\n                case types.boolean:\n                    return new ESBoolean();\n                default:\n                    if (!(type instanceof ESType)) {\n                        return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n                    }\n                    return type.__call__({ context });\n            }\n        };\n        this.str = () => new ESString('<Undefined>');\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(n instanceof ESUndefined ||\n                typeof n === 'undefined' ||\n                typeof n.valueOf() === 'undefined');\n        };\n        this.__bool__ = () => new ESBoolean();\n        this.bool = this.__bool__;\n        this.clone = () => new ESUndefined();\n        this.__get_property__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.type_check = this.__eq__;\n        this.info = {\n            name: 'undefined',\n            description: 'Not defined, not a value.',\n            file: 'built-in',\n            isBuiltIn: true\n        };\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport Position from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESNamespace extends ESPrimitive {\n    constructor(name, value, mutable = false) {\n        super(value, types.object);\n        this.cast = (props) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast type 'namespace'`);\n        };\n        this.clone = () => {\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            return new ESNamespace(this.name, obj);\n        };\n        this.str = () => {\n            const keys = Object.keys(this.valueOf());\n            return new ESString(`<Namespace ${str(this.name)}${keys.length > 0 ? ': ' : ''}${keys.slice(0, 5)}${keys.length >= 5 ? '...' : ''}>`);\n        };\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__get_property__ = (props, key) => {\n            if (key instanceof ESString && this.valueOf().hasOwnProperty(key.valueOf())) {\n                const symbol = this.valueOf()[key.valueOf()];\n                if (symbol.isAccessible) {\n                    return symbol.value;\n                }\n            }\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.void, 'string', key.typeName());\n            }\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this.self);\n        };\n        this.type_check = this.__eq__;\n        this.info.name = str(name);\n        this.mutable = mutable;\n    }\n    get name() {\n        return new ESString(this.info.name);\n    }\n    set name(v) {\n        this.info.name = v.valueOf();\n    }\n    __set_property__(props, key, value) {\n        if (!(key instanceof ESString)) {\n            return new TypeError(Position.void, 'string', key.typeName().valueOf(), str(key));\n        }\n        let idx = str(key);\n        if (!this.mutable) {\n            return new TypeError(Position.void, 'mutable', 'immutable', `${str(this.name)}`);\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        const symbol = this.__value__[idx];\n        if (!symbol) {\n            return new ESError(Position.void, 'SymbolError', `Symbol ${idx} is not declared in namespace ${str(this.name)}.`);\n        }\n        if (symbol.isConstant) {\n            return new TypeError(Position.void, 'mutable', 'immutable', `${str(this.name)}[${idx}]`);\n        }\n        if (!symbol.isAccessible) {\n            return new TypeError(Position.void, 'accessible', 'inaccessible', `${str(this.name)}[${idx}]`);\n        }\n        symbol.value = value;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport Position from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { strip, wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nfunction callBack(fTakesProps, val, key, props, args) {\n    let res;\n    if (fTakesProps) {\n        try {\n            res = new val[key](props, ...args);\n        }\n        catch (_a) {\n            try {\n                res = val[key](props, ...args);\n            }\n            catch (e) {\n                return new ESError(Position.void, e.name, e.toString());\n            }\n        }\n    }\n    else {\n        try {\n            res = new val[key](...args.map(o => strip(o, props)));\n        }\n        catch (_b) {\n            try {\n                res = val[key](...args.map(o => strip(o, props)));\n            }\n            catch (e) {\n                return new ESError(Position.void, e.name, e.toString());\n            }\n        }\n    }\n    return wrap(res);\n}\nexport class ESJSBinding extends ESPrimitive {\n    constructor(value, name = '<AnonNative>', functionsTakeProps = false) {\n        super(value, types.object);\n        this.cast = (props) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast native object`);\n        };\n        this.clone = () => new ESJSBinding(this.__value__);\n        this.str = () => {\n            return new ESString(str(this.__value__));\n        };\n        this.__eq__ = ({}, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__get_property__ = (props, k) => {\n            const key = str(k);\n            const val = this.__value__;\n            const res = val[key];\n            if (res === undefined) {\n                if (this.self.hasOwnProperty(key)) {\n                    return wrap(this.self[str(key)], true);\n                }\n                return new IndexError(Position.void, key, this);\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            if (typeof res === 'function') {\n                const fTakesProps = this.functionsTakeProps;\n                return new ESFunction((props, ...args) => {\n                    return callBack(fTakesProps, val, key, props, args);\n                });\n            }\n            return wrap(res);\n        };\n        this.__call__ = (props, ...args) => {\n            if (typeof this.__value__ !== 'function') {\n                return new TypeError(Position.void, 'function', typeof this.__value__, str(this));\n            }\n            return callBack(this.functionsTakeProps, this, '__value__', props, args);\n        };\n        this.has_property = (props, key) => {\n            return new ESBoolean(!(this.__get_property__(props, key) instanceof ESError));\n        };\n        this.type_check = this.__eq__;\n        this.info.name = str(name);\n        this.functionsTakeProps = functionsTakeProps;\n    }\n    __set_property__(props, k, value) {\n        const key = str(k);\n        const val = this.__value__;\n        if (this.self.hasOwnProperty(key)) {\n            this.self[str(key)] = value;\n            return;\n        }\n        val[key] = strip(value, props);\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESPrimitive } from './primitives/esprimitive';\nimport { ESArray } from './primitives/esarray';\nimport { ESBoolean } from './primitives/esboolean';\nimport { ESErrorPrimitive } from './primitives/eserrorprimitive';\nimport { ESFunction } from './primitives/esfunction';\nimport { ESNumber } from './primitives/esnumber';\nimport { ESObject } from './primitives/esobject';\nimport { ESString } from './primitives/esstring';\nimport { ESType } from './primitives/estype';\nimport { ESUndefined } from './primitives/esundefined';\nimport { ESNamespace } from './primitives/esnamespace';\nimport { ESJSBinding } from \"./primitives/esjsbinding\";\nimport { types } from \"../constants\";\nexport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNumber, ESPrimitive, ESString, ESObject, ESType, ESUndefined, ESNamespace, ESJSBinding };\nexport function initPrimitiveTypes() {\n    types.type = new ESType(true, 'Type');\n    types.undefined = new ESType(true, 'Undefined');\n    types.string = new ESType(true, 'String');\n    types.array = new ESType(true, 'Array');\n    types.number = new ESType(true, 'Number');\n    types.any = new ESType(true, 'Any');\n    types.function = new ESType(true, 'Function');\n    types.bool = new ESType(true, 'Boolean');\n    types.object = new ESType(true, 'Object');\n    types.error = new ESType(true, 'Error');\n    types.any.info = {\n        name: 'Any',\n        description: 'Matches any other type',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.number.info = {\n        name: 'Number',\n        description: 'The ES Number type. Is a a double-precision 64-bit binary format IEEE 754 value, like double in Java and C#',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.string.info = {\n        name: 'string',\n        description: 'The ES String type. Holds an array of characters, and can be defined with any of \\', \" and `. Can be indexed like an array.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.bool.info = {\n        name: 'Bool',\n        description: 'The ES Bool type. Exactly two instances exist, true and false.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.function.info = {\n        name: 'Func',\n        description: 'The ES Function type. Is a block of code which executes when called and takes in 0+ parameters.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.array.info = {\n        name: 'Array',\n        description: 'The ES Array type. Defines a set of items of any type which can be accessed by an index with [].',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.object.info = {\n        name: 'object',\n        description: 'The ES Object type. Similar to JS objects or python dictionaries.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.error.info = {\n        name: 'Error',\n        description: 'The ES Error type. Call to throw an error.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.type.info = {\n        name: 'Type',\n        description: 'The ES Type type. Call to get the type of a value at a string.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n}\n","import { primitiveMethods } from '../constants';\nimport { Context } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport Position from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESFunction, ESNumber, ESObject, ESString, ESType, ESUndefined } from \"./primitiveTypes\";\nfunction dealWithExtends(context, class_, instance, this_, callContext) {\n    if (!(class_ instanceof ESType)) {\n        return new TypeError(Position.void, 'Type', typeof class_, class_);\n    }\n    const superFunc = new ESFunction(({ context }, ...args) => {\n        const newContext = new Context();\n        newContext.parent = context;\n        if (class_.__extends__) {\n            let _a = dealWithExtends(newContext, class_.__extends__, instance, this_, callContext);\n            if (_a instanceof ESError) {\n                return _a;\n            }\n        }\n        const initFunc = class_ === null || class_ === void 0 ? void 0 : class_.__init__;\n        if (!initFunc) {\n            return;\n        }\n        initFunc.this_ = this_;\n        initFunc.__closure__ = newContext;\n        const res_ = initFunc.__call__({ context: newContext }, ...args);\n        if (res_ instanceof ESError) {\n            return res_;\n        }\n    }, undefined, 'super', this_);\n    let setRes = context.setOwn('super', superFunc);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    const res = createInstance(class_, { context }, [], false, instance);\n    if (res instanceof ESError) {\n        return res;\n    }\n}\nexport function createInstance(type, { context }, params, runInit = true, on = {}) {\n    var _b;\n    if (type.primitive) {\n        if (params.length < 1) {\n            return new ESUndefined();\n        }\n        switch (type.__name__) {\n            case 'Undefined':\n            case 'Type':\n                if (params.length < 1) {\n                    return new ESType();\n                }\n                else {\n                    return new ESString(params[0].typeName());\n                }\n            case 'String':\n                return new ESString(params[0].str().valueOf());\n            case 'Array':\n                return new ESArray(params);\n            case 'Number':\n                return new ESNumber(params[0].valueOf());\n            case 'Function':\n                return new ESFunction(params[0].valueOf());\n            case 'Boolean':\n                return new ESBoolean(params[0].bool().valueOf());\n            default:\n                return wrap(params[0]);\n        }\n    }\n    const newContext = new Context();\n    newContext.parent = (_b = type.__init__) === null || _b === void 0 ? void 0 : _b.__closure__;\n    const instance = new ESObject();\n    if (type.__extends__) {\n        let res = dealWithExtends(newContext, type.__extends__, on, instance, context);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__value__ = on;\n    for (let method of type.__methods__) {\n        const methodClone = method.clone();\n        methodClone.this_ = instance;\n        on[method.name] = methodClone;\n        if (primitiveMethods.indexOf(method.name) !== -1) {\n            instance[method.name] = methodClone.__call__;\n        }\n    }\n    if (runInit && type.__init__) {\n        type.__init__.this_ = instance;\n        type.__init__.__closure__ = newContext;\n        const res = type.__init__.__call__({ context: newContext }, ...params);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__type__ = type;\n    type.__instances__.push(instance);\n    return instance;\n}\n","import { ESPrimitive } from './esprimitive';\nimport { ESError, InvalidOperationError, TypeError } from '../../errors';\nimport { createInstance } from '../instantiator';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nimport Position from \"../../position\";\nimport { str } from \"../../util/util\";\nimport { types } from \"../../constants\";\nimport { ESTypeArray } from \"./esarray\";\nexport class ESType extends ESPrimitive {\n    constructor(isPrimitive = false, name = '(anon)', __methods__ = [], __extends__, __init__) {\n        super(undefined, types === null || types === void 0 ? void 0 : types.type);\n        this.__instances__ = [];\n        this.clone = () => {\n            return new ESType(this.primitive, this.__name__, this.__methods__, this.__extends__, this.__init__);\n        };\n        this.isa = (props, type) => {\n            return new ESBoolean(type === types.type);\n        };\n        this.cast = (props, type) => {\n            return new InvalidOperationError('cast', this);\n        };\n        this.type_check = (props, n) => {\n            var _a;\n            if (!n)\n                return new ESBoolean();\n            let t = n.__type__;\n            if (this === types.any ||\n                t === types.any ||\n                this === t) {\n                return new ESBoolean(true);\n            }\n            while (t instanceof ESType) {\n                if (((_a = t.__extends__) === null || _a === void 0 ? void 0 : _a.__eq__(props, this).valueOf()) === true) {\n                    return new ESBoolean(true);\n                }\n                if (!t.__extends__) {\n                    break;\n                }\n                t = t.__extends__;\n            }\n            return new ESBoolean();\n        };\n        this.__eq__ = (props, t) => {\n            return new ESBoolean(t === this);\n        };\n        this.__call__ = (props, ...params) => {\n            return createInstance(this, props, params || []);\n        };\n        this.str = () => new ESString(this.__name__);\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__get_property__ = (props, k) => {\n            if (!(k instanceof ESString)) {\n                if (this === types.array) {\n                    return new ESTypeArray(k);\n                }\n                return new TypeError(Position.void, 'string', k.typeName(), str(k));\n            }\n            const key = k.valueOf();\n            if (this.self.hasOwnProperty(key)) {\n                return wrap(this.self[key], true);\n            }\n            return new ESTypeArray(k);\n        };\n        this.primitive = isPrimitive;\n        this.__name__ = name;\n        this.info.name = name;\n        this.__extends__ = __extends__;\n        this.__methods__ = __methods__;\n        if (__init__) {\n            __init__.name = name;\n            this.__init__ = __init__;\n        }\n        if (!types.type) {\n            this.__type__ = this;\n        }\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\nexport class ESTypeUnion extends ESType {\n    constructor(left, right) {\n        super(false, `(${str(left)}) | (${str(right)})`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.type_check = (props, t) => {\n            const leftRes = this.__left__.type_check(props, t);\n            const rightRes = this.__right__.type_check(props, t);\n            if (leftRes instanceof ESError)\n                return leftRes;\n            if (rightRes instanceof ESError)\n                return rightRes;\n            return new ESBoolean(leftRes.valueOf() ||\n                rightRes.valueOf());\n        };\n        this.clone = () => {\n            return new ESTypeUnion(this.__left__, this.__right__);\n        };\n        this.__eq__ = (props, t) => {\n            return new ESBoolean(t instanceof ESTypeUnion &&\n                this.__left__.__eq__(props, t.__left__).valueOf() === true &&\n                this.__right__.__eq__(props, t.__right__).valueOf() === true);\n        };\n        this.__left__ = left;\n        this.__right__ = right;\n    }\n}\nexport class ESTypeIntersection extends ESType {\n    constructor(left, right) {\n        super(false, `(${str(left)}) & (${str(right)})`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.type_check = (props, t) => {\n            const leftRes = this.__left__.type_check(props, t);\n            const rightRes = this.__right__.type_check(props, t);\n            if (leftRes instanceof ESError)\n                return leftRes;\n            if (rightRes instanceof ESError)\n                return rightRes;\n            return new ESBoolean(leftRes.valueOf() &&\n                rightRes.valueOf());\n        };\n        this.clone = () => {\n            return new ESTypeIntersection(this.__left__, this.__right__);\n        };\n        this.__eq__ = (props, t) => {\n            return new ESBoolean(t instanceof ESTypeIntersection &&\n                this.__left__.__eq__(props, t.__left__).valueOf() === true &&\n                this.__right__.__eq__(props, t.__right__).valueOf() === true);\n        };\n        this.__left__ = left;\n        this.__right__ = right;\n    }\n}\nexport class ESTypeNot extends ESType {\n    constructor(type) {\n        super(false, `~(${str(type)})`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.type_check = (props, t) => {\n            const res = this.__val__.type_check(props, t);\n            if (res instanceof ESError)\n                return res;\n            return new ESBoolean(!res.valueOf());\n        };\n        this.clone = () => {\n            return new ESTypeNot(this.__val__);\n        };\n        this.__eq__ = (props, t) => {\n            return new ESBoolean(t instanceof ESTypeNot &&\n                this.__val__.__eq__(props, t.__val__).valueOf() === true);\n        };\n        this.__val__ = type;\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport Position from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { wrap } from \"./wrapStrip\";\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESNumber extends ESPrimitive {\n    constructor(value = 0) {\n        super(value, types.number);\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return this;\n                case types.string:\n                    return this.str();\n                case types.array:\n                    return new ESArray(new Array(this.valueOf()));\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(this.valueOf().toString());\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() + n.valueOf());\n        };\n        this.__subtract__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() - n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() * n.valueOf());\n        };\n        this.__divide__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() / n.valueOf());\n        };\n        this.__pow__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESNumber(Math.pow(this.valueOf(), n.valueOf()));\n        };\n        this.__mod__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESNumber(this.valueOf() % n.valueOf());\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new ESBoolean(false);\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() > n.valueOf());\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() < n.valueOf());\n        };\n        this.__bool__ = () => {\n            return new ESBoolean(this.valueOf() > 0);\n        };\n        this.bool = this.__bool__;\n        this.clone = () => new ESNumber(this.valueOf());\n        this.__get_property__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.type_check = this.__eq__;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport Position from '../../position';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESBoolean extends ESPrimitive {\n    constructor(val = false) {\n        super(Boolean(val), types.bool);\n        this.__get_property__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESBoolean)) {\n                return new TypeError(Position.void, 'Boolean', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__bool__ = () => this;\n        this.__and__ = (props, n) => new ESBoolean(this.valueOf() && n.bool().valueOf());\n        this.__or__ = (props, n) => {\n            return new ESBoolean(this.valueOf() || n.bool().valueOf());\n        };\n        this.str = () => new ESString(this.valueOf() ? 'true' : 'false');\n        this.clone = () => new ESBoolean(this.valueOf());\n        this.bool = () => this;\n        this.type_check = this.__eq__;\n        this.info = {\n            name: str(val),\n            description: `Boolean global constant which evaluates to ${str(val)}, the opposite of ${str(!val)}`,\n            file: 'built-in',\n            isBuiltIn: true,\n            helpLink: 'https://en.wikipedia.org/wiki/Boolean_expression'\n        };\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, InvalidOperationError, TypeError } from '../../errors';\nimport Position from '../../position';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nimport { ESType, ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESArray extends ESPrimitive {\n    constructor(values = []) {\n        super(values, types.array);\n        this.len = (props) => {\n            return new ESNumber(this.valueOf().length);\n        };\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.len(props).valueOf());\n                case types.boolean:\n                    return this.bool();\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(str(this.valueOf()));\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESArray)) {\n                return new ESBoolean();\n            }\n            if (n.len(props).valueOf() !== this.len(props).valueOf()) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.len(props).valueOf(); i++) {\n                const thisElement = this.valueOf()[i];\n                const nElement = n.valueOf()[i];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__(props, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESArray)) {\n                return new TypeError(Position.void, 'array', n.typeName().valueOf(), n);\n            }\n            return new ESArray([...this.valueOf(), ...n.valueOf()]);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.__get_property__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESUndefined();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return this.valueOf()[idx];\n            }\n            return new ESUndefined();\n        };\n        this.contains = (props, val) => {\n            for (let element of this.__value__) {\n                if (val.__eq__(props, element)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        this.clone = () => {\n            const newArr = [];\n            for (let element of this.valueOf()) {\n                newArr.push(element);\n            }\n            return new ESArray(newArr);\n        };\n        this.type_check = (props, n) => {\n            if (!(n instanceof ESArray) || this.len(props).valueOf() !== n.len(props).valueOf()) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.__value__.length; i++) {\n                const res = this.__value__[i].type_check(props, n.__value__[i]);\n                if (res instanceof ESError)\n                    return res;\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n    }\n    __set_property__(props, key, value) {\n        if (!(key instanceof ESNumber)) {\n            return;\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        let idx = key.valueOf();\n        while (idx < 0) {\n            idx = this.valueOf().length + idx;\n        }\n        this.__value__[idx] = value;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\nexport class ESTypeArray extends ESType {\n    constructor(type) {\n        super(false, `Array[${str(type)}]`);\n        this.numElements = -1;\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.type_check = (props, t) => {\n            if (!(t instanceof ESArray)) {\n                return new ESBoolean();\n            }\n            if (this.numElements >= 0) {\n                if (t.valueOf().length !== this.numElements) {\n                    return new TypeError(Position.void, `Array[${str(this.type)}][${this.numElements}]`, `Array[Any][${t.valueOf().length}]`);\n                }\n            }\n            for (const element of t.valueOf()) {\n                if (!this.type.type_check(props, element).valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.clone = () => {\n            return new ESTypeArray(this.type);\n        };\n        this.__get_property__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', key.typeName(), str(key));\n            }\n            this.numElements = key.valueOf();\n            return this;\n        };\n        this.type = type;\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport Position from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESPrimitive } from './esprimitive';\nimport { wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESString extends ESPrimitive {\n    constructor(value = '') {\n        super(value, types.string);\n        this.str = () => this;\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    const num = parseFloat(this.valueOf());\n                    if (isNaN(num)) {\n                        return new ESError(Position.void, 'TypeError', `This string is not a valid number`);\n                    }\n                    return new ESNumber(num);\n                case types.string:\n                    return this;\n                case types.array:\n                    return new ESArray(this.valueOf().split('').map(s => new ESString(s)));\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESString(this.valueOf() + n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESString(this.valueOf().repeat(n.valueOf()));\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new ESBoolean(false);\n            }\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf().length > n.valueOf().length);\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf().length < n.valueOf().length);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.len = () => {\n            return new ESNumber(this.valueOf().length);\n        };\n        this.clone = () => new ESString(this.valueOf());\n        this.__get_property__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESString();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return new ESString(this.valueOf()[idx]);\n            }\n            return new ESString();\n        };\n        this.type_check = this.__eq__;\n    }\n    __set_property__(props, key, value) {\n        if (!(key instanceof ESNumber))\n            return;\n        if (!(value instanceof ESString))\n            value = new ESString(str(value));\n        let idx = key.valueOf();\n        while (idx < 0)\n            idx = this.valueOf().length + idx;\n        const strToInsert = value.str().valueOf();\n        let firstPart = this.__value__.substr(0, idx);\n        let lastPart = this.__value__.substr(idx + strToInsert.length);\n        this.__value__ = firstPart + strToInsert + lastPart;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESString } from './primitives/esstring';\nexport class ESSymbol {\n    constructor(value, identifier, options = {}) {\n        var _a, _b, _c;\n        this.clone = () => {\n            return new ESSymbol(this.value.clone(), this.identifier, {\n                isConstant: this.isConstant,\n                isAccessible: this.isAccessible\n            });\n        };\n        this.str = () => new ESString(`<Symbol: ${this.identifier}>`);\n        this.value = value;\n        this.identifier = identifier;\n        this.isConstant = (_a = options.isConstant) !== null && _a !== void 0 ? _a : false;\n        this.isAccessible = (_b = options.isAccessible) !== null && _b !== void 0 ? _b : true;\n        this.type = (_c = options.type) !== null && _c !== void 0 ? _c : value.__type__;\n    }\n}\n","import { ESError } from '../../errors';\nimport { ESSymbol } from '../symbol';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESPrimitive } from './esprimitive';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESUndefined } from './esundefined';\nimport { ESJSBinding } from \"./esjsbinding\";\nexport function wrap(thing, functionsTakeProps = false) {\n    if (thing instanceof ESPrimitive) {\n        return thing;\n    }\n    else if (thing === undefined || thing === null) {\n        return new ESUndefined();\n    }\n    else if (thing instanceof ESError) {\n        return new ESErrorPrimitive(thing);\n    }\n    else if (thing instanceof ESSymbol) {\n        return thing.value;\n    }\n    else if (typeof thing === 'number') {\n        return new ESNumber(thing);\n    }\n    else if (typeof thing === 'string') {\n        return new ESString(thing);\n    }\n    else if (typeof thing === 'boolean') {\n        return new ESBoolean(thing);\n    }\n    else if (typeof thing === 'bigint') {\n        return new ESNumber(Number(thing));\n    }\n    else if (typeof thing === 'symbol') {\n        return new ESString(String(thing));\n    }\n    else if (Array.isArray(thing)) {\n        return new ESArray(thing.map(o => wrap(o, functionsTakeProps)));\n    }\n    return new ESJSBinding(thing, undefined, functionsTakeProps);\n}\nexport function strip(thing, props) {\n    if (!(thing instanceof ESPrimitive)) {\n        return thing;\n    }\n    else if (thing instanceof ESArray) {\n        return thing.valueOf().map(m => strip(m, props), props);\n    }\n    else if (thing instanceof ESObject) {\n        let val = {};\n        for (let key in thing.valueOf()) {\n            val[key] = strip(thing.valueOf()[key], props);\n        }\n        return val;\n    }\n    else if (thing instanceof ESUndefined) {\n        return undefined;\n    }\n    else if (thing instanceof ESFunction) {\n        return (...args) => {\n            const res = thing.__call__(props, ...args.map(a => wrap(a)));\n            if (res instanceof ESError) {\n                console.error(res.str);\n                return res;\n            }\n            return strip(res, props);\n        };\n    }\n    else if (thing instanceof ESType) {\n        return thing;\n    }\n    return thing.valueOf();\n}\n","import { IS_NODE_INSTANCE } from \"../constants\";\nconst codes = {\n    red: 31,\n    yellow: 33,\n    green: 32,\n    cyan: 36,\n    blue: 34,\n    grey: 2\n};\nconst c = {};\nfor (let code of Object.keys(codes)) {\n    c[code] = (s) => {\n        s || (s = '');\n        if (IS_NODE_INSTANCE) {\n            return `\\x1b[${codes[code]}m` + s + '\\x1b[0m';\n        }\n        return `<span style=\"color: ${code}\">${s}</span>`;\n    };\n}\nexport default c;\n","let AllowAny = Symbol('AllowAny');\nexport function defaultPermissions() {\n    return {\n        networking: false,\n        imports: true,\n        accessDOM: false,\n        useSTD: true,\n        fileSystem: false,\n    };\n}\nexport const config = {\n    permissions: defaultPermissions(),\n    modules: {\n        [AllowAny]: 'y'\n    },\n};\nfunction pathAsString(path) {\n    let res = '[';\n    for (let p of path) {\n        res += p + '][';\n    }\n    return res.substring(0, res.length - 1);\n}\nfunction parsePartOfConfig(config, configJSON, path = []) {\n    if (!config[AllowAny]) {\n        const unknownProps = Object.keys(configJSON).filter(x => !(x in config));\n        for (const k of unknownProps) {\n            console.error(`Cannot parse config`, ` - unknown property config${pathAsString([...path, k])}`);\n        }\n    }\n    for (const key of Object.keys(configJSON)) {\n        if (typeof config[key] !== typeof configJSON[key] && !config[AllowAny]) {\n            console.error(`Cannot parse config`, ` - config${pathAsString([...path, key])} should be of type '${typeof config[key]}'`);\n            return;\n        }\n        if (typeof config[key] === 'object') {\n            parsePartOfConfig(config[key], configJSON[key], [...path, key]);\n            continue;\n        }\n        config[key] = configJSON[key];\n    }\n}\nexport function parseConfig(configJSON) {\n    parsePartOfConfig(config, configJSON);\n}\n","import { ESPrimitive } from \"./primitiveTypes\";\nexport function interpretArgument(arg, context) {\n    var _a;\n    const typeRes = arg.type.interpret(context);\n    if (typeRes.error) {\n        return typeRes.error;\n    }\n    let defaultValue;\n    if (arg.defaultValue) {\n        let defaultValRes = (_a = arg.defaultValue) === null || _a === void 0 ? void 0 : _a.interpret(context);\n        if (defaultValRes.error) {\n            return defaultValRes.error;\n        }\n        if (defaultValRes.val instanceof ESPrimitive) {\n            defaultValue = defaultValRes.val;\n        }\n    }\n    return {\n        name: arg.name,\n        type: typeRes.val,\n        defaultValue\n    };\n}\n","import { ESError, InvalidSyntaxError, ReferenceError, TypeError } from \"../errors\";\nimport { Context } from './context';\nimport Position from \"../position\";\nimport { catchBlockErrorSymbolName, now, tokenTypeString, tt, types } from \"../constants\";\nimport { interpretArgument } from \"./argument\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESJSBinding, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESType, ESUndefined } from \"./primitiveTypes\";\nimport { generateRandomSymbol, str } from '../util/util';\nimport { ESTypeNot, ESTypeUnion } from \"./primitives/estype\";\nexport class interpretResult {\n    constructor(val) {\n        this.val = new ESUndefined();\n        this.shouldBreak = false;\n        this.shouldContinue = false;\n        if (val instanceof ESError) {\n            this.error = val;\n        }\n        else if (val) {\n            this.val = val;\n        }\n    }\n}\nexport class compileResult {\n    constructor(val) {\n        this.val = '';\n        this.hoisted = '';\n        if (typeof val === 'string') {\n            this.val = val;\n        }\n        else if (val) {\n            this.error = val;\n        }\n    }\n    register(node, config) {\n        const res = node.compilePy(config);\n        this.hoisted += res.hoisted;\n        if (res.error) {\n            this.error = res.error;\n            return '';\n        }\n        return res.val;\n    }\n}\nexport class Node {\n    constructor(pos, isTerminal = false) {\n        this.pos = pos;\n        this.isTerminal = isTerminal;\n    }\n    interpret(context) {\n        var _a;\n        const start = now();\n        const res = new interpretResult;\n        const val = this.interpret_(context);\n        if (val instanceof ESError) {\n            res.error = val;\n        }\n        else if (val instanceof interpretResult) {\n            res.val = val.val;\n            res.error = val.error;\n            res.funcReturn = val.funcReturn;\n            res.shouldBreak = val.shouldBreak;\n            res.shouldContinue = val.shouldContinue;\n        }\n        else {\n            res.val = val;\n        }\n        if (res.error && res.error.pos.isUnknown) {\n            res.error.pos = this.pos;\n        }\n        if (!(res.val instanceof ESPrimitive)) {\n            res.error = new TypeError(Position.void, 'Primitive', 'Native JS value', str(res.val));\n            res.val = new ESUndefined();\n        }\n        (_a = res.val.info).file || (_a.file = this.pos.file);\n        Node.interprets++;\n        let time = now() - start;\n        Node.totalTime += time;\n        if (time > Node.maxTime)\n            Node.maxTime = time;\n        return res;\n    }\n}\nNode.interprets = 0;\nNode.totalTime = 0;\nNode.maxTime = 0;\nexport class N_binOp extends Node {\n    constructor(pos, left, opTok, right) {\n        super(pos);\n        this.left = left;\n        this.opTok = opTok;\n        this.right = right;\n    }\n    interpret_(context) {\n        const left = this.left.interpret(context);\n        if (left.error)\n            return left.error;\n        const right = this.right.interpret(context);\n        if (right.error)\n            return right.error;\n        const l = left.val;\n        const r = right.val;\n        if (typeof l === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', l, 'N_binOp.interpret_');\n        }\n        if (typeof r === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', r, 'N_binOp.interpret_');\n        }\n        switch (this.opTok.type) {\n            case tt.LTE: {\n                const lt = l.__lt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (lt instanceof ESError)\n                    return lt;\n                if (eq instanceof ESError)\n                    return eq;\n                return new interpretResult(lt.__or__({ context }, eq));\n            }\n            case tt.GTE: {\n                const gt = l.__gt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (gt instanceof ESError)\n                    return gt;\n                if (eq instanceof ESError)\n                    return eq;\n                return new interpretResult(gt.__or__({ context }, eq));\n            }\n            case tt.NOTEQUALS: {\n                const res = l.__eq__({ context }, r);\n                if (res instanceof ESError)\n                    return res;\n                return new interpretResult(new ESBoolean(!res.bool().valueOf()));\n            }\n            case tt.ADD:\n                return new interpretResult(l.__add__({ context }, r));\n            case tt.SUB:\n                return new interpretResult(l.__subtract__({ context }, r));\n            case tt.MUL:\n                return new interpretResult(l.__multiply__({ context }, r));\n            case tt.DIV:\n                return new interpretResult(l.__divide__({ context }, r));\n            case tt.POW:\n                return new interpretResult(l.__pow__({ context }, r));\n            case tt.MOD:\n                return new interpretResult(l.__mod__({ context }, r));\n            case tt.EQUALS:\n                return new interpretResult(l.__eq__({ context }, r));\n            case tt.LT:\n                return new interpretResult(l.__lt__({ context }, r));\n            case tt.GT:\n                return new interpretResult(l.__gt__({ context }, r));\n            case tt.AND:\n                return new interpretResult(l.__and__({ context }, r));\n            case tt.OR:\n                return new interpretResult(l.__or__({ context }, r));\n            case tt.APMERSAND:\n                return new interpretResult(l.__ampersand__({ context }, r));\n            case tt.PIPE:\n                return new interpretResult(l.__pipe__({ context }, r));\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid binary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(config) {\n        const left = this.left.compileJS(config);\n        if (left.error)\n            return left;\n        const right = this.right.compileJS(config);\n        if (right.error)\n            return right;\n        if (config.minify) {\n            return new compileResult(`${left.val}${tokenTypeString[this.opTok.type]}${right.val}`);\n        }\n        return new compileResult(`${left.val} ${tokenTypeString[this.opTok.type]} ${right.val}`);\n    }\n    compilePy(config) {\n        const left = this.left.compilePy(config);\n        if (left.error)\n            return left;\n        const right = this.right.compilePy(config);\n        if (right.error)\n            return right;\n        const switchers = {\n            '&&': 'and',\n            '||': 'or',\n            '^': '**',\n        };\n        let op = tokenTypeString[this.opTok.type];\n        if (op in switchers) {\n            op = switchers[op];\n        }\n        return new compileResult(`${left.val} ${op} ${right.val}`);\n    }\n}\nexport class N_unaryOp extends Node {\n    constructor(pos, a, opTok) {\n        super(pos);\n        this.a = a;\n        this.opTok = opTok;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const res = this.a.interpret(context);\n        if (res.error)\n            return res.error;\n        switch (this.opTok.type) {\n            case tt.SUB:\n            case tt.ADD:\n                if (!(res.val instanceof ESNumber)) {\n                    return new TypeError(this.pos, 'Number', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().toString()) || 'undefined_', (_b = res.val) === null || _b === void 0 ? void 0 : _b.valueOf());\n                }\n                const numVal = res.val.valueOf();\n                return new interpretResult(new ESNumber(this.opTok.type === tt.SUB ? -numVal : Math.abs(numVal)));\n            case tt.NOT:\n                return new interpretResult(new ESBoolean(!((_c = res === null || res === void 0 ? void 0 : res.val) === null || _c === void 0 ? void 0 : _c.bool().valueOf())));\n            case tt.BITWISE_NOT:\n                return new interpretResult(new ESTypeNot(res.val));\n            case tt.QM:\n                return new interpretResult(new ESTypeUnion(types.undefined, res.val));\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid unary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(config) {\n        const val = this.a.compileJS(config);\n        if (val.error)\n            return val;\n        return new compileResult(`${tokenTypeString[this.opTok.type]}${val.val}`);\n    }\n    compilePy(config) {\n        const val = this.a.compilePy(config);\n        if (val.error)\n            return val;\n        return new compileResult(`${tokenTypeString[this.opTok.type]}${val.val}`);\n    }\n}\nexport class N_varAssign extends Node {\n    constructor(pos, varNameTok, value, assignType = '=', isGlobal = false, isConstant = false, isDeclaration = false, type = types.any) {\n        super(pos);\n        this.value = value;\n        this.varNameTok = varNameTok;\n        this.isGlobal = isGlobal;\n        this.assignType = assignType;\n        this.isConstant = isConstant;\n        this.isDeclaration = isDeclaration;\n        if (type instanceof ESPrimitive) {\n            this.type = new N_primitiveWrapper(type);\n        }\n        else {\n            this.type = type;\n        }\n    }\n    interpret_(context) {\n        var _a, _b;\n        if (this.isDeclaration) {\n            if (context.hasOwn(this.varNameTok.value)) {\n                return new InvalidSyntaxError(this.pos, `Symbol '${this.varNameTok.value}' already exists, and cannot be redeclared`);\n            }\n            if (this.assignType !== '=') {\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            }\n        }\n        const res = this.value.interpret(context);\n        const typeRes = this.type.interpret(context);\n        if (res.error)\n            return res.error;\n        if (typeRes.error)\n            return typeRes.error;\n        if (!typeRes.val) {\n            return new TypeError(this.varNameTok.pos, 'Type', 'undefined');\n        }\n        if (!res.val) {\n            return new TypeError(this.varNameTok.pos, '~undefined', 'undefined', 'N_varAssign.interpret_');\n        }\n        const typeCheckRes = typeRes.val.type_check({ context }, res.val);\n        if (typeCheckRes instanceof ESError)\n            return typeCheckRes;\n        if (!typeCheckRes.bool().valueOf()) {\n            return new TypeError(this.varNameTok.pos, str(typeRes.val), str((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName()), str(res.val));\n        }\n        if (this.isDeclaration) {\n            context.setOwn(this.varNameTok.value, res.val, {\n                global: false,\n                isConstant: this.isConstant,\n                type: typeRes.val\n            });\n            return new interpretResult(res.val);\n        }\n        if (context.has(this.varNameTok.value)) {\n            const symbol = context.getSymbol(this.varNameTok.value);\n            if (symbol instanceof ESError) {\n                return symbol;\n            }\n            if (symbol) {\n                if (!symbol.type.type_check({ context }, res.val).valueOf()) {\n                    return new TypeError(this.varNameTok.pos, str(symbol.type), (_b = res.val) === null || _b === void 0 ? void 0 : _b.typeName(), str(res.val));\n                }\n            }\n        }\n        if (this.assignType === '=') {\n            let value = res.val;\n            if (value === undefined) {\n                value = new ESUndefined();\n            }\n            const type = context.getSymbol(this.varNameTok.value);\n            if (type instanceof ESError) {\n                return type;\n            }\n            if (!type) {\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable without keyword`);\n            }\n            const typeCheckRes = type.type.type_check({ context }, res.val);\n            if (typeCheckRes instanceof ESError)\n                return typeCheckRes;\n            if (!typeCheckRes.bool().valueOf()) {\n                return new TypeError(Position.void, str(type.type), str(res.val.__type__), str(res.val));\n            }\n            const setRes = context.set(this.varNameTok.value, value, {\n                global: this.isGlobal,\n                isConstant: this.isConstant,\n                type: type.type\n            });\n            if (setRes instanceof ESError) {\n                return setRes;\n            }\n        }\n        else {\n            const currentVal = context.get(this.varNameTok.value);\n            if (currentVal instanceof ESError)\n                return currentVal;\n            if (currentVal == undefined)\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            let newVal;\n            let assignVal = res.val;\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError) {\n                return newVal;\n            }\n            let setRes = context.set(this.varNameTok.value, newVal, {\n                global: this.isGlobal,\n                isConstant: this.isConstant,\n                type: newVal.__type__\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n            res.val = newVal;\n        }\n        if (res.val.info.name === '(anonymous)' || !res.val.info.name) {\n            res.val.info.name = this.varNameTok.value;\n        }\n        return res;\n    }\n    compileJS(config) {\n        const val = this.value.compileJS(config);\n        if (val.error)\n            return val;\n        let declaration = '';\n        if (this.isDeclaration) {\n            if (this.isGlobal) {\n                declaration = 'var';\n            }\n            else if (this.isConstant) {\n                declaration = 'const';\n            }\n            else {\n                declaration = 'let';\n            }\n        }\n        let assign = this.assignType;\n        if (assign !== '=') {\n            assign += '=';\n        }\n        if (config.minify) {\n            return new compileResult(`${declaration} ${this.varNameTok.value}${assign}${val.val}`);\n        }\n        return new compileResult(`${declaration} ${this.varNameTok.value} ${assign} ${val.val}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const val = this.value.compilePy(config);\n        if (val.error)\n            return val;\n        res.hoisted += val.hoisted;\n        let assign = this.assignType;\n        if (assign !== '=') {\n            assign += '=';\n        }\n        if (this.isGlobal) {\n            res.hoisted += `${this.varNameTok.value}=None`;\n        }\n        if (config.minify) {\n            res.val = `${this.varNameTok.value}${assign}${val.val}`;\n        }\n        else {\n            res.val = `${this.varNameTok.value} ${assign} ${val.val}`;\n        }\n        return res;\n    }\n}\nexport class N_arrayDestructAssign extends Node {\n    constructor(pos, varNames, types, value, isGlobal = false, isConstant = false) {\n        super(pos);\n        this.value = value;\n        this.varNames = varNames;\n        this.types = types;\n        this.isGlobal = isGlobal;\n        this.isConstant = isConstant;\n    }\n    interpret_(context) {\n        for (let varName of this.varNames) {\n            if (context.hasOwn(varName)) {\n                return new InvalidSyntaxError(this.pos, `Symbol '${varName}' already exists, and cannot be redeclared`);\n            }\n        }\n        const res = this.value.interpret(context);\n        if (res.error)\n            return res.error;\n        if (res.val instanceof ESArray || res.val instanceof ESString) {\n            if (this.varNames.length > res.val.valueOf().length) {\n                return new TypeError(Position.void, `[Any * >=${this.varNames.length}]`, `[Any * <${this.varNames.length}]`, str(res.val));\n            }\n            let i = 0;\n            for (let varName of this.varNames) {\n                let val = res.val.valueOf()[i];\n                if (typeof val === 'string') {\n                    val = new ESString(val);\n                }\n                let typeRes = this.types[i].interpret(context);\n                if (typeRes.error)\n                    return typeRes;\n                let typeCheckRes = typeRes.val.type_check({ context }, val);\n                if (typeCheckRes instanceof ESError)\n                    return typeCheckRes;\n                if (!typeCheckRes.bool().valueOf()) {\n                    return new TypeError(Position.void, str(typeRes.val), val.typeName(), str(val));\n                }\n                context.setOwn(varName, val, {\n                    global: this.isGlobal,\n                    isConstant: this.isConstant,\n                    type: res.val.__type__\n                });\n                i++;\n            }\n            return new interpretResult(res.val);\n        }\n        let i = 0;\n        for (let varName of this.varNames) {\n            let objPropRes = res.val.__get_property__({ context }, new ESString(varName));\n            if (objPropRes instanceof ESError)\n                return objPropRes;\n            let typeRes = this.types[i].interpret(context);\n            if (typeRes.error)\n                return typeRes;\n            let typeCheckRes = typeRes.val.type_check({ context }, objPropRes);\n            if (typeCheckRes instanceof ESError)\n                return typeCheckRes;\n            if (!typeCheckRes.bool().valueOf()) {\n                return new TypeError(Position.void, str(typeRes.val), objPropRes.typeName(), str(objPropRes));\n            }\n            context.setOwn(varName, objPropRes, {\n                global: this.isGlobal,\n                isConstant: this.isConstant,\n                type: res.val.__type__\n            });\n            i++;\n        }\n        return new interpretResult(res.val);\n    }\n    compileJS(config) {\n        const val = this.value.compileJS(config);\n        if (val.error)\n            return val;\n        let declaration = '';\n        if (this.isGlobal) {\n            declaration = 'var';\n        }\n        else if (this.isConstant) {\n            declaration = 'const';\n        }\n        else {\n            declaration = 'let';\n        }\n        if (config.minify) {\n            return new compileResult(`${declaration}[${this.varNames.join(',')}]=${val.val}`);\n        }\n        return new compileResult(`${declaration} [${this.varNames.join(', ')}] = ${val.val}`);\n    }\n    compilePy(config) {\n        const val = this.value.compileJS(config);\n        if (val.error)\n            return val;\n        return new compileResult(`${this.varNames.join(', ')} = ${val.val}`);\n    }\n}\nexport class N_if extends Node {\n    constructor(pos, comparison, ifTrue, ifFalse) {\n        super(pos);\n        this.comparison = comparison;\n        this.ifFalse = ifFalse;\n        this.ifTrue = ifTrue;\n    }\n    interpret_(context) {\n        var _a;\n        let newContext = new Context();\n        newContext.parent = context;\n        let res = new interpretResult();\n        let compRes = this.comparison.interpret(context);\n        if (compRes.error)\n            return compRes;\n        if ((_a = compRes.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            return this.ifTrue.interpret(newContext);\n        }\n        else if (this.ifFalse) {\n            return this.ifFalse.interpret(newContext);\n        }\n        return res;\n    }\n    compileJS(config) {\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 4);\n        config.indent += 4;\n        const statementRes = this.comparison.compileJS(config);\n        if (statementRes.error)\n            return statementRes;\n        const ifTrueRes = this.ifTrue.compileJS(config);\n        if (ifTrueRes.error)\n            return ifTrueRes;\n        if (!this.ifFalse) {\n            if (config.minify) {\n                return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}\\n}`);\n            }\n            return new compileResult(`if (${statementRes.val}) {\\n${ifTrueRes.val}\\n}`);\n        }\n        config.indent = highIndent.length;\n        let ifFalseRes = this.ifFalse.compileJS(config);\n        if (ifFalseRes.error)\n            return ifFalseRes;\n        if (!(this.ifFalse instanceof N_statements)) {\n            ifFalseRes.val = highIndent + ifFalseRes.val;\n        }\n        if (config.minify) {\n            return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}}else{${ifFalseRes.val}}`);\n        }\n        return new compileResult(`if (${statementRes.val}) {\\n${ifTrueRes.val}\\n${indent}} else {\\n${ifFalseRes.val}\\n${indent}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 4);\n        config.indent += 4;\n        const statementRes = this.comparison.compilePy(config);\n        if (statementRes.error)\n            return statementRes;\n        res.hoisted += statementRes.hoisted;\n        const ifTrueRes = this.ifTrue.compilePy(config);\n        if (ifTrueRes.error)\n            return ifTrueRes;\n        res.hoisted += ifTrueRes.hoisted;\n        if (!this.ifFalse) {\n            return new compileResult(`if ${statementRes.val}:\\n${highIndent}${ifTrueRes.val}`);\n        }\n        const ifFalseRes = this.ifFalse.compilePy(config);\n        if (ifFalseRes.error)\n            return ifFalseRes;\n        res.hoisted += ifFalseRes.hoisted;\n        if (!(this.ifFalse instanceof N_statements)) {\n            ifFalseRes.val = highIndent + ifFalseRes.val;\n        }\n        return new compileResult(`if ${statementRes.val}:\\n${ifTrueRes.val}\\n${indent}else:\\n${ifFalseRes.val}\\n${indent}`);\n    }\n}\nexport class N_while extends Node {\n    constructor(pos, comparison, loop) {\n        super(pos);\n        this.comparison = comparison;\n        this.loop = loop;\n    }\n    interpret_(context) {\n        var _a, _b;\n        while (true) {\n            let newContext = new Context();\n            newContext.parent = context;\n            let shouldLoop = this.comparison.interpret(context);\n            if (shouldLoop.error)\n                return shouldLoop;\n            if (!((_b = (_a = shouldLoop.val) === null || _a === void 0 ? void 0 : _a.bool()) === null || _b === void 0 ? void 0 : _b.valueOf()))\n                break;\n            let potentialError = this.loop.interpret(newContext);\n            if (potentialError.error)\n                return potentialError;\n            if (potentialError.shouldBreak)\n                break;\n        }\n        return new interpretResult(new ESUndefined());\n    }\n    compileJS(config) {\n        config.indent += 4;\n        const comparisonRes = this.comparison.compileJS(config);\n        if (comparisonRes.error)\n            return comparisonRes;\n        const bodyRes = this.loop.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        if (config.minify) {\n            return new compileResult(`while(${comparisonRes.val}){${bodyRes.val}}`);\n        }\n        return new compileResult(`while (${comparisonRes.val}) {\\n${bodyRes.val}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const highIndent = ' '.repeat(config.indent || 0);\n        const comparisonRes = this.comparison.compilePy(config);\n        if (comparisonRes.error)\n            return comparisonRes;\n        res.hoisted += comparisonRes.hoisted;\n        const bodyRes = this.loop.compilePy(config);\n        if (bodyRes.error)\n            return bodyRes;\n        res.hoisted += bodyRes.hoisted;\n        return new compileResult(`while ${comparisonRes.val}:\\n${highIndent}${bodyRes.val}`);\n    }\n}\nexport class N_for extends Node {\n    constructor(pos, body, array, identifier, isGlobalIdentifier, isConstIdentifier) {\n        super(pos);\n        this.body = body;\n        this.array = array;\n        this.identifier = identifier;\n        this.isGlobalId = isGlobalIdentifier;\n        this.isConstId = isConstIdentifier;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const array = this.array.interpret(context);\n        if (array.error)\n            return array;\n        if (context.has(this.identifier.value) && this.isGlobalId) {\n            return new InvalidSyntaxError(this.identifier.pos, 'Cannot declare global variable which exists in the current scope');\n        }\n        function iteration(body, id, element, isGlobal, isConstant) {\n            let newContext = new Context();\n            newContext.parent = context;\n            newContext.set(id, element, {\n                global: isGlobal,\n                isConstant,\n                type: element.__type__\n            });\n            const res = body.interpret(newContext);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (res.shouldBreak) {\n                res.shouldBreak = false;\n                return 'break';\n            }\n            if (res.shouldContinue) {\n                res.shouldContinue = false;\n            }\n        }\n        if (array.val instanceof ESNumber) {\n            for (let i = 0; i < array.val.valueOf(); i++) {\n                const res = iteration(this.body, this.identifier.value, new ESNumber(i), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESObject || array.val instanceof ESJSBinding) {\n            for (let element in (_a = array.val) === null || _a === void 0 ? void 0 : _a.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, new ESString(element), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESArray) {\n            for (let element of (_b = array.val) === null || _b === void 0 ? void 0 : _b.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, element, this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESString) {\n            for (let element of (_c = array.val) === null || _c === void 0 ? void 0 : _c.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, new ESString(element), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val);\n        return new interpretResult(new ESUndefined());\n    }\n    compileJS(config) {\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const iteratorRes = this.array.compileJS(config);\n        if (iteratorRes.error)\n            return iteratorRes;\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        let declaration = 'let';\n        if (this.isGlobalId) {\n            declaration = 'var';\n        }\n        else if (this.isConstId) {\n            declaration = 'const';\n        }\n        if (config.minify) {\n            return new compileResult(`for(${declaration} ${this.identifier.value} of ${iteratorRes.val}){${bodyRes.val}\\n${indent}}`);\n        }\n        return new compileResult(`for (${declaration} ${this.identifier.value} of ${iteratorRes.val}) {\\n${bodyRes.val}\\n${indent}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        config.indent += 4;\n        const iteratorRes = res.register(this.array, config);\n        if (res.error)\n            return res;\n        const bodyRes = res.register(this.body, config);\n        if (res.error)\n            return res;\n        if (this.isGlobalId) {\n            res.hoisted += `${this.identifier.value}=None`;\n        }\n        res.val = `for ${this.identifier.value} in ${iteratorRes}:\\n${bodyRes}`;\n        return res;\n    }\n}\nexport class N_array extends Node {\n    constructor(pos, items, shouldClone = false) {\n        super(pos);\n        this.items = items;\n        this.shouldClone = shouldClone;\n    }\n    interpret_(context) {\n        let result = new interpretResult();\n        let interpreted = [];\n        for (let item of this.items) {\n            const res = item.interpret(context);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (!res.val)\n                continue;\n            let val = res.val;\n            if (this.shouldClone) {\n                val = val.clone();\n            }\n            interpreted.push(val);\n        }\n        result.val = new ESArray(interpreted);\n        return result;\n    }\n    compileJS(config) {\n        const res = new compileResult('[');\n        for (let item of this.items) {\n            const itemRes = item.compileJS(config);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ',';\n        }\n        res.val += ']';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult('[');\n        for (let item of this.items) {\n            const itemRes = res.register(item, config);\n            if (res.error)\n                return res;\n            res.val += itemRes + ',';\n        }\n        res.val += ']';\n        return res;\n    }\n}\nexport class N_objectLiteral extends Node {\n    constructor(pos, properties) {\n        super(pos);\n        this.properties = properties;\n    }\n    interpret_(context) {\n        let interpreted = {};\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.interpret(context);\n            if (value.error)\n                return value.error;\n            const key = keyNode.interpret(context);\n            if (key.error)\n                return key.error;\n            if (key.val && value.val) {\n                interpreted[key.val.valueOf()] = value.val;\n            }\n        }\n        return new interpretResult(new ESObject(interpreted));\n    }\n    compileJS(config) {\n        const res = new compileResult('{');\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.compileJS(config);\n            if (value.error)\n                return value;\n            const key = keyNode.compileJS(config);\n            if (key.error)\n                return key;\n            if (key.val && value.val) {\n                res.val += `[${key.val}]: ${value.val},`;\n            }\n        }\n        res.val += '}';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult('{');\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = res.register(valueNode, config);\n            if (res.error)\n                return res;\n            const key = res.register(keyNode, config);\n            if (res.error)\n                return res;\n            if (key && value) {\n                res.val += `${key}: ${value},`;\n            }\n        }\n        res.val += '}';\n        return res;\n    }\n}\nexport class N_statements extends Node {\n    constructor(pos, items, topLevel = false) {\n        super(pos);\n        this.items = items;\n        this.topLevel = topLevel;\n    }\n    interpret_(context) {\n        if (!this.topLevel) {\n            let last;\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (typeof res.funcReturn !== 'undefined') || res.shouldBreak || res.shouldContinue)\n                    return res;\n                last = res.val;\n            }\n            return new interpretResult(last || new ESUndefined());\n        }\n        else {\n            let result = new interpretResult();\n            let interpreted = [];\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (res.funcReturn !== undefined))\n                    return res;\n                if (!res.val)\n                    continue;\n                let val = res.val.clone();\n                interpreted.push(val);\n            }\n            result.val = new ESArray(interpreted);\n            return result;\n        }\n    }\n    compileJS(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        res.val += indent;\n        for (let item of this.items) {\n            const itemRes = item.compileJS(config);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ';';\n            if (!config.minify) {\n                res.val += '\\n' + indent;\n            }\n        }\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        res.val += indent;\n        for (let item of this.items) {\n            const itemRes = res.register(item, config);\n            if (res.error)\n                return res;\n            res.val += itemRes;\n            res.val += '\\n' + indent;\n        }\n        return res;\n    }\n}\nexport class N_functionCall extends Node {\n    constructor(pos, to, args) {\n        super(pos);\n        this.arguments = args;\n        this.to = to;\n    }\n    interpret_(context) {\n        let { val, error } = this.to.interpret(context);\n        if (error) {\n            return error;\n        }\n        if (!val) {\n            return new TypeError(this.pos, 'any', 'undefined', undefined, 'On function call');\n        }\n        let params = [];\n        for (let arg of this.arguments) {\n            const res = arg.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (res.val) {\n                params.push(res.val);\n            }\n        }\n        const res = val.__call__({ context }, ...params);\n        if (res instanceof ESError) {\n            res.traceback.push({\n                position: this.pos,\n                line: `${val.info.name || '<AnonFunction>'}(${params.map(str).join(', ')})`\n            });\n        }\n        return new interpretResult(res);\n    }\n    compileJS(config) {\n        const res = new compileResult;\n        const funcRes = this.to.compileJS(config);\n        if (funcRes.error)\n            return funcRes;\n        res.val = funcRes.val + '(';\n        for (let arg of this.arguments) {\n            const argRes = arg.compileJS(config);\n            if (argRes.error)\n                return argRes;\n            res.val += argRes.val;\n            if (arg !== this.arguments[this.arguments.length - 1]) {\n                res.val += ',';\n                if (!config.minify) {\n                    res.val += ' ';\n                }\n            }\n        }\n        res.val += ')';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const funcRes = res.register(this.to, config);\n        if (res.error)\n            return res;\n        res.val = funcRes + '(';\n        for (let arg of this.arguments) {\n            const argRes = res.register(arg, config);\n            if (res.error)\n                return res;\n            res.val += argRes;\n            if (arg !== this.arguments[this.arguments.length - 1]) {\n                res.val += ',';\n                if (!config.minify) {\n                    res.val += ' ';\n                }\n            }\n        }\n        res.val += ')';\n        return res;\n    }\n}\nexport class N_functionDefinition extends Node {\n    constructor(pos, body, argNames, returnType, name = '(anon)', this_ = new ESObject(), description = '') {\n        super(pos);\n        this.isDeclaration = false;\n        this.arguments = argNames;\n        this.body = body;\n        this.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        this.description = description;\n    }\n    interpret_(context) {\n        let args = [];\n        for (let arg of this.arguments) {\n            const res = interpretArgument(arg, context);\n            if (res instanceof ESError)\n                return res;\n            args.push(res);\n        }\n        const returnTypeRes = this.returnType.interpret(context);\n        if (returnTypeRes.error)\n            return returnTypeRes.error;\n        let funcPrim = new ESFunction(this.body, args, this.name, this.this_, returnTypeRes.val, context);\n        if (this.isDeclaration) {\n            if (context.hasOwn(this.name)) {\n                return new InvalidSyntaxError(Position.void, `Cannot redeclare symbol '${this.name}'`);\n            }\n            context.setOwn(this.name, funcPrim, {\n                isConstant: true,\n                type: types.function\n            });\n        }\n        return new interpretResult(funcPrim);\n    }\n    compileJS(config) {\n        const res = new compileResult('function(');\n        for (let param of this.arguments) {\n            res.val += param.name + ',';\n            if (!config.minify) {\n                res.val += ' ';\n            }\n        }\n        if (config.minify) {\n            res.val += '){';\n        }\n        else {\n            res.val += ') {\\n';\n        }\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        res.val += `${bodyRes.val}\\n${indent}}`;\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const hoistedName = generateRandomSymbol(config.symbols);\n        res.hoisted = `def ${hoistedName}(`;\n        for (let param of this.arguments) {\n            res.hoisted += param.name + ',';\n            if (!config.minify) {\n                res.hoisted += ' ';\n            }\n        }\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const body = this.body.compilePy(config);\n        if (body.error)\n            return body;\n        res.hoisted += `):\\n${indent}${body.val}`;\n        res.hoisted = body.hoisted + res.hoisted;\n        res.val = hoistedName;\n        return res;\n    }\n}\nexport class N_return extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        res.funcReturn = val.val;\n        return res;\n    }\n    compileJS(config) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(config);\n        if (valRes === null || valRes === void 0 ? void 0 : valRes.error)\n            return valRes;\n        return new compileResult(`return(${valRes === null || valRes === void 0 ? void 0 : valRes.val})`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        if (!this.value) {\n            return new compileResult('return');\n        }\n        const valRes = res.register(this.value, config);\n        if (res.error)\n            return res;\n        return new compileResult(`return ${valRes}`);\n    }\n}\nexport class N_yield extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        var _a;\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        if ((_a = val.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            res.funcReturn = val.val;\n        }\n        return res;\n    }\n    compileJS(config) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(config);\n        if (!valRes || !valRes.val) {\n            return new compileResult('');\n        }\n        return new compileResult(`if(_=${valRes.val}){return(_))`);\n    }\n    compilePy(config) {\n        if (!this.value) {\n            return new compileResult('');\n        }\n        const res = new compileResult;\n        const valRes = res.register(this.value, config);\n        if (!valRes) {\n            return new compileResult('');\n        }\n        return new compileResult(`if _ := ${valRes}: return _`);\n    }\n}\nexport class N_indexed extends Node {\n    constructor(pos, base, index) {\n        super(pos);\n        this.base = base;\n        this.index = index;\n    }\n    interpret_(context) {\n        var _a;\n        let baseRes = this.base.interpret(context);\n        if (baseRes.error)\n            return baseRes;\n        let indexRes = this.index.interpret(context);\n        if (indexRes.error)\n            return indexRes;\n        const index = indexRes.val;\n        const base = baseRes.val;\n        if (!base || !index) {\n            return new interpretResult(new ESUndefined());\n        }\n        if (this.value !== undefined) {\n            let valRes = this.value.interpret(context);\n            if (valRes.error)\n                return valRes;\n            const currentVal = wrap(base.__get_property__({ context }, index));\n            let newVal;\n            let assignVal = valRes.val;\n            (_a = this.assignType) !== null && _a !== void 0 ? _a : (this.assignType = '=');\n            if (!assignVal) {\n                return new TypeError(this.pos, '~undefined', 'undefined', 'undefined', 'N_indexed.interpret_');\n            }\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                case '=':\n                    newVal = assignVal;\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError)\n                return newVal;\n            if (!base.__set_property__)\n                return new TypeError(this.pos, 'mutable', 'immutable', base.valueOf());\n            const res = base.__set_property__({ context }, index, newVal !== null && newVal !== void 0 ? newVal : new ESUndefined());\n            if (res instanceof ESError)\n                return res;\n        }\n        return new interpretResult(base.__get_property__({ context }, index));\n    }\n    compileJS(config) {\n        const objectRes = this.base.compileJS(config);\n        if (objectRes.error)\n            return objectRes;\n        const keyRes = this.index.compileJS(config);\n        if (keyRes.error)\n            return keyRes;\n        if (!this.value) {\n            return new compileResult(`${objectRes.val}[${keyRes.val}]`);\n        }\n        const valRes = this.value.compileJS(config);\n        if (valRes.error)\n            return valRes;\n        return new compileResult(`${objectRes.val}[${keyRes.val}]${this.assignType || '='}${valRes.val}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const objectRes = res.register(this.base, config);\n        if (res.error)\n            return res;\n        const keyRes = res.register(this.index, config);\n        if (res.error)\n            return res;\n        if (!this.value) {\n            res.val = `${objectRes}[${keyRes}]`;\n            return res;\n        }\n        const valRes = res.register(this.value, config);\n        if (res.error)\n            return res;\n        res.val = `${objectRes}[${keyRes}] ${this.assignType || '='} ${valRes}`;\n        return res;\n    }\n}\nexport class N_class extends Node {\n    constructor(pos, methods, extends_, init, name = '<anon class>', isDeclaration = false) {\n        super(pos);\n        this.init = init;\n        this.methods = methods;\n        this.name = name;\n        this.extends_ = extends_;\n        this.isDeclaration = isDeclaration;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const methods = [];\n        for (let method of this.methods) {\n            const res = method.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (!(res.val instanceof ESFunction)) {\n                return new TypeError(this.pos, 'Function', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            methods.push(res.val);\n        }\n        let extends_ = types.object;\n        if (this.extends_) {\n            const extendsRes = this.extends_.interpret(context);\n            if (extendsRes.error) {\n                return extendsRes.error;\n            }\n            if (!(extendsRes.val instanceof ESType)) {\n                return new TypeError(this.pos, 'Type', ((_b = extendsRes.val) === null || _b === void 0 ? void 0 : _b.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            extends_ = extendsRes.val;\n        }\n        let init;\n        if (this.init) {\n            const initRes = this.init.interpret(context);\n            if (initRes.error) {\n                return initRes.error;\n            }\n            if (!(initRes.val instanceof ESFunction)) {\n                return new TypeError(this.pos, 'Function', ((_c = initRes.val) === null || _c === void 0 ? void 0 : _c.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            init = initRes.val;\n        }\n        let typePrim = new ESType(false, this.name, methods, extends_, init);\n        if (this.isDeclaration) {\n            if (context.hasOwn(this.name)) {\n                return new InvalidSyntaxError(Position.void, `Cannot redeclare symbol '${this.name}'`);\n            }\n            context.setOwn(this.name, typePrim, {\n                isConstant: true,\n                type: types.type\n            });\n        }\n        return new interpretResult(typePrim);\n    }\n    compileJS(config) {\n        return new compileResult('function(){return{};}');\n    }\n    compilePy(config) {\n        return new compileResult(`class ${this.name}:\\n${' '.repeat(config.indent)}pass`);\n    }\n}\nexport class N_namespace extends Node {\n    constructor(pos, statements, name = '(anon)', mutable = false) {\n        super(pos);\n        this.name = name;\n        this.statements = statements;\n        this.mutable = mutable;\n    }\n    interpret_(context) {\n        const newContext = new Context();\n        newContext.parent = context;\n        const res = this.statements.interpret(newContext);\n        if (res.error)\n            return res;\n        return new interpretResult(new ESNamespace(new ESString(this.name), newContext.getSymbolTableAsDict(), this.mutable));\n    }\n    compileJS(config) {\n        const bodyRes = this.statements.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        return new compileResult(`(() => {${bodyRes.val}})()`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const bodyRes = res.register(this.statements, config);\n        if (res.error)\n            return res;\n        res.val = `'namespace'`;\n        return res;\n    }\n}\nexport class N_tryCatch extends Node {\n    constructor(pos, body, catchBlock) {\n        super(pos, true);\n        this.body = body;\n        this.catchBlock = catchBlock;\n    }\n    interpret_(context) {\n        const res = this.body.interpret(context);\n        if (res.error) {\n            const newContext = new Context();\n            newContext.parent = context;\n            newContext.setOwn(catchBlockErrorSymbolName, new ESErrorPrimitive(res.error), {\n                isConstant: true\n            });\n            const catchRes = this.catchBlock.interpret(newContext);\n            if (catchRes.error)\n                return catchRes.error;\n        }\n        return new interpretResult();\n    }\n    compileJS(config) {\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        const catchRes = this.catchBlock.compileJS(config);\n        if (catchRes.error)\n            return catchRes;\n        return new compileResult(`try{${bodyRes.val}}catch(${catchBlockErrorSymbolName}){${catchRes.val}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const bodyRes = res.register(this.body, config);\n        if (res.error)\n            return res;\n        const catchRes = res.register(this.catchBlock, config);\n        if (res.error)\n            return res;\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 1);\n        res.val = `try:\\n${highIndent}${bodyRes}\\n${indent}except:\\n${highIndent}${catchRes}`;\n        return res;\n    }\n}\nexport class N_number extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        const res = new interpretResult();\n        res.val = new ESNumber(val);\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult(this.a.value.toString());\n    }\n    compilePy(config) {\n        return new compileResult(this.a.value.toString());\n    }\n}\nexport class N_string extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        const res = new interpretResult();\n        res.val = new ESString(val);\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult(`'${this.a.value}'`);\n    }\n    compilePy(config) {\n        return new compileResult(`'${this.a.value}'`);\n    }\n}\nexport class N_variable extends Node {\n    constructor(a) {\n        super(a.pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        if (!context.has(this.a.value)) {\n            return new ReferenceError(this.a.pos, this.a.value);\n        }\n        let res = new interpretResult();\n        let symbol = context.getSymbol(this.a.value);\n        if (!symbol) {\n            return new ReferenceError(this.pos, `No access to undeclared variable ${this.a.value}`);\n        }\n        if (symbol instanceof ESError) {\n            return symbol;\n        }\n        res.val = symbol.value;\n        return res;\n    }\n    compileJS(config) {\n        let val = this.a.value.toString();\n        if (val === 'import') {\n            val = 'import_';\n        }\n        return new compileResult(val);\n    }\n    compilePy(config) {\n        let val = this.a.value.toString();\n        if (val === 'import') {\n            val = 'import_';\n        }\n        return new compileResult(val);\n    }\n}\nexport class N_undefined extends Node {\n    constructor(pos = Position.void) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.val = new ESUndefined();\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('undefined');\n    }\n    compilePy(config) {\n        return new compileResult('None');\n    }\n}\nexport class N_break extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldBreak = true;\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('break');\n    }\n    compilePy(config) {\n        return new compileResult('break');\n    }\n}\nexport class N_continue extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldContinue = true;\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('continue');\n    }\n    compilePy(config) {\n        return new compileResult('continue');\n    }\n}\nexport class N_primitiveWrapper extends Node {\n    constructor(val, pos = Position.void) {\n        super(pos, true);\n        this.value = val;\n    }\n    interpret_(context) {\n        return new interpretResult(this.value);\n    }\n    compileJS(config) {\n        return new compileResult(JSON.stringify(this.value.valueOf()));\n    }\n    compilePy(config) {\n        return new compileResult(JSON.stringify(this.value.valueOf()));\n    }\n}\n","import { Node } from \"../runtime/nodes\";\nimport { ESPrimitive } from '../runtime/primitiveTypes';\nexport function deepClone(obj, hash = new WeakMap()) {\n    let result;\n    if (Object(obj) !== obj || obj instanceof Function) {\n        return obj;\n    }\n    if (hash.has(obj)) {\n        return hash.get(obj);\n    }\n    try {\n        result = new obj.constructor();\n    }\n    catch (e) {\n        result = Object.create(Object.getPrototypeOf(obj));\n    }\n    if (obj instanceof Map) {\n        Array.from(obj, ([key, val]) => result.set(deepClone(key, hash), deepClone(val, hash)));\n    }\n    else if (obj instanceof Set) {\n        Array.from(obj, (key) => result.add(deepClone(key, hash)));\n    }\n    hash.set(obj, result);\n    return Object.assign(result, ...Object.keys(obj).map(key => ({ [key]: deepClone(obj[key], hash) })));\n}\nexport function str(val, depth = 0) {\n    if (typeof val === 'string') {\n        if (depth > 0) {\n            return `'${val}'`;\n        }\n        return val;\n    }\n    if (depth > 20) {\n        return '...';\n    }\n    let result = '';\n    if (typeof val === 'undefined') {\n        return 'undefined';\n    }\n    if (val instanceof ESPrimitive) {\n        return val.str().valueOf();\n    }\n    if (val instanceof Node) {\n        return `<RunTimeNode: ${val.constructor.name}>`;\n    }\n    switch (typeof val) {\n        case 'object':\n            if (Array.isArray(val)) {\n                result += '[';\n                for (let item of val) {\n                    try {\n                        result += str(item, depth + 1) + `, `;\n                    }\n                    catch (e) {\n                        result += '<large property>, ';\n                    }\n                }\n                if (val.length) {\n                    result = result.substring(0, result.length - 2);\n                }\n                result += ']';\n            }\n            else {\n                result += '{\\n';\n                let i = 0;\n                for (let item in val) {\n                    i++;\n                    if (!val.hasOwnProperty || !val.hasOwnProperty(item)) {\n                        continue;\n                    }\n                    result += `  ${item}: ${str(val[item], depth + 1) || ''}, \\n`;\n                }\n                if (i > 0) {\n                    result = result.substring(0, result.length - 3);\n                }\n                result += '\\n}\\n';\n            }\n            break;\n        case \"bigint\":\n        case \"number\":\n        case \"boolean\":\n            result = `${val}`;\n            break;\n        case \"function\":\n            result = `<NativeFunction ${val.name}>`;\n            break;\n    }\n    for (let i = 0; i < depth; i++) {\n        result = indent(result);\n    }\n    return result;\n}\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms));\nexport function indent(str) {\n    return str.replace(/\\n/g, '\\n    ');\n}\nexport function generateRandomSymbol(symbols, length = 10) {\n    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_';\n    const gen = () => {\n        let result = '';\n        for (let i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * characters.length));\n        }\n        return result;\n    };\n    let symbol = gen();\n    while (symbols.indexOf(symbol) !== -1) {\n        symbol = gen();\n    }\n    return symbol;\n}\n","import { IS_NODE_INSTANCE } from './constants';\nimport Position from \"./position\";\nimport { str } from \"./util/util\";\nimport chalk from \"./util/colours\";\nexport class ESError {\n    constructor(pos, name, details) {\n        this.traceback = [];\n        this.pos = pos;\n        this.name = name;\n        this.details = details;\n    }\n    get colouredStr() {\n        let out = '';\n        if (this.traceback.length) {\n            out = chalk.yellow('Error Traceback (most recent call last):\\n');\n            for (let pos of [...this.traceback].reverse())\n                out += `    ${chalk.cyan(pos.position.str)}:\\n        ${pos.line}\\n`;\n        }\n        out += `${chalk.red(this.name)}: ${this.details} \\n at ${chalk.cyan(this.pos.str)}`;\n        return out;\n    }\n    get str() {\n        return `${this.name}: ${this.details} \\n at ${this.pos.str}`;\n    }\n}\nexport class IllegalCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'IllegalCharError', `'${char}'`);\n    }\n}\nexport class InvalidSyntaxError extends ESError {\n    constructor(pos, details) {\n        super(pos, 'InvalidSyntaxError', details);\n    }\n}\nexport class ExpectedCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'ExpectedCharError', `'${char}'`);\n    }\n}\nexport class TypeError extends ESError {\n    constructor(pos, expectedType, actualType, value = '', detail = '') {\n        super(pos, 'TypeError', `Expected type '${expectedType}', got type '${actualType}' ${typeof value === 'undefined' ? '' : ` on value '${str(value)}'`} ${!detail ? '' : detail}`);\n    }\n}\nexport class ImportError extends ESError {\n    constructor(pos, url, detail = '') {\n        super(pos, 'ImportError', `Could not import ${url}: ${detail}`);\n    }\n}\nexport class ReferenceError extends ESError {\n    constructor(pos, ref) {\n        super(pos, 'ReferenceError', `${ref} is not defined`);\n    }\n}\nexport class IndexError extends ESError {\n    constructor(pos, ref, object) {\n        var _a;\n        super(pos, 'IndexError', `'${ref}' is not a property of '${((_a = object === null || object === void 0 ? void 0 : object.info) === null || _a === void 0 ? void 0 : _a.name) || str(object)}'`);\n    }\n}\nexport class InvalidOperationError extends ESError {\n    constructor(op, value, detail = '', pos = Position.void) {\n        var _a;\n        super(pos, 'TypeError', `Cannot perform '${op}' on value ${((_a = value === null || value === void 0 ? void 0 : value.info) === null || _a === void 0 ? void 0 : _a.name) || str(value)}: ${detail}`);\n    }\n}\nexport class InvalidRuntimeError extends ESError {\n    constructor() {\n        super(Position.void, 'InvalidRuntimeError', `Required runtime of ${IS_NODE_INSTANCE ? 'browser' : 'node'}`);\n    }\n}\nexport class TestFailed extends ESError {\n    constructor(detail) {\n        super(Position.void, 'TestFailed', detail);\n    }\n}\nexport class PermissionRequiredError extends ESError {\n    constructor(detail) {\n        super(Position.void, 'PermissionRequiredError', detail);\n    }\n}\nexport class MissingNativeDependencyError extends ESError {\n    constructor(name) {\n        super(Position.void, 'MissingNativeDependencyError', `Missing required native dependency '${name}'. This is probably an issue with the EntropyScript provider, not your code.`);\n    }\n}\n","export class Token {\n    constructor(pos, type, value) {\n        this.type = type;\n        this.value = value;\n        this.pos = pos;\n    }\n    matches(type, val) {\n        return this.type === type && this.value === val;\n    }\n}\n","import Position from \"../position\";\nimport { digits, doubleCharTokens, identifierChars, KEYWORDS, multiLineCommentEnd, multiLineCommentStart, singleCharTokens, singleLineComment, stringSurrounds, tripleCharTokens, tt, } from '../constants';\nimport { IllegalCharError } from \"../errors\";\nimport { Token } from \"./tokens\";\nexport class Lexer {\n    constructor(program, fileName) {\n        this.text = program;\n        this.position = new Position(-1, 0, -1, fileName);\n        this.advance();\n    }\n    advance() {\n        this.position.advance(this.currentChar);\n        this.currentChar = this.text[this.position.idx];\n    }\n    generate() {\n        if (!this.text) {\n            return [new Token(this.position, tt.EOF, undefined)];\n        }\n        const tokens = [];\n        while (this.currentChar !== undefined) {\n            if (' \\t\\n'.includes(this.currentChar)) {\n                this.advance();\n            }\n            else if (digits.includes(this.currentChar)) {\n                tokens.push(this.makeNumber());\n            }\n            else if (this.currentChar === singleLineComment[0] &&\n                this.text[this.position.idx + 1] === singleLineComment[1]) {\n                this.singleLineComment();\n            }\n            else if (this.currentChar === multiLineCommentStart[0] &&\n                this.text[this.position.idx + 1] === multiLineCommentStart[1]) {\n                this.multiLineComment();\n            }\n            else if (identifierChars.includes(this.currentChar)) {\n                tokens.push(this.makeIdentifier());\n            }\n            else if (stringSurrounds.indexOf(this.currentChar) !== -1) {\n                tokens.push(this.makeString());\n            }\n            else {\n                const possibleAssignFirstChar = this.currentChar;\n                let token = this.unknownChar();\n                if (token) {\n                    if (token.type === tt.ASSIGN) {\n                        token.value = possibleAssignFirstChar;\n                    }\n                    tokens.push(token);\n                }\n                else {\n                    let pos = this.position.clone;\n                    let char = this.currentChar;\n                    this.advance();\n                    return new IllegalCharError(pos, char);\n                }\n            }\n        }\n        tokens.push(new Token(this.position, tt.EOF, undefined));\n        return tokens;\n    }\n    makeNumber() {\n        const pos = this.position.clone;\n        let numStr = '';\n        let dotCount = 0;\n        while (this.currentChar !== undefined && (digits + '._').includes(this.currentChar)) {\n            if (this.currentChar === '.') {\n                if (dotCount === 1) {\n                    break;\n                }\n                dotCount++;\n                numStr += '.';\n            }\n            else if (this.currentChar !== '_') {\n                numStr += this.currentChar;\n            }\n            this.advance();\n        }\n        return new Token(pos, tt.NUMBER, parseFloat(numStr));\n    }\n    makeString() {\n        const pos = this.position.clone;\n        let str = '';\n        let strClose = this.currentChar;\n        this.advance();\n        while (this.currentChar !== strClose && this.currentChar !== undefined) {\n            if (this.currentChar === '\\\\') {\n                this.advance();\n                if (this.currentChar === 'n') {\n                    str += '\\n';\n                    this.advance();\n                    continue;\n                }\n            }\n            str += this.currentChar;\n            this.advance();\n        }\n        this.advance();\n        return new Token(pos, tt.STRING, str);\n    }\n    makeIdentifier() {\n        let idStr = '';\n        const posStart = this.position.clone;\n        while (this.currentChar !== undefined && (identifierChars + digits).includes(this.currentChar)) {\n            idStr += this.currentChar;\n            this.advance();\n        }\n        let tokType = tt.IDENTIFIER;\n        if (KEYWORDS.indexOf(idStr) !== -1) {\n            tokType = tt.KEYWORD;\n        }\n        return new Token(posStart, tokType, idStr);\n    }\n    unknownChar() {\n        if (this.currentChar === undefined) {\n            return undefined;\n        }\n        for (let triple in tripleCharTokens) {\n            if (triple[0] === this.currentChar)\n                if (triple[1] === this.text[this.position.idx + 1])\n                    if (triple[2] === this.text[this.position.idx + 2]) {\n                        const pos = this.position.clone;\n                        this.advance();\n                        this.advance();\n                        this.advance();\n                        return new Token(pos, tripleCharTokens[triple], undefined);\n                    }\n        }\n        for (let double in doubleCharTokens) {\n            if (double[0] === this.currentChar)\n                if (double[1] === this.text[this.position.idx + 1]) {\n                    const pos = this.position.clone;\n                    this.advance();\n                    this.advance();\n                    return new Token(pos, doubleCharTokens[double], undefined);\n                }\n        }\n        if (singleCharTokens.hasOwnProperty(this.currentChar)) {\n            let pos = this.position.clone;\n            let val = singleCharTokens[this.currentChar];\n            this.advance();\n            return new Token(pos, val, undefined);\n        }\n        return undefined;\n    }\n    singleLineComment() {\n        this.advance();\n        while (this.currentChar !== '\\n' && this.currentChar !== undefined) {\n            this.advance();\n        }\n        this.advance();\n    }\n    multiLineComment() {\n        this.advance();\n        while (!(this.currentChar === multiLineCommentEnd[0] &&\n            this.text[this.position.idx + 1] === multiLineCommentEnd[1])) {\n            this.advance();\n        }\n        this.advance();\n        this.advance();\n    }\n}\n","import { N_undefined } from \"../runtime/nodes\";\nexport class ParseResults {\n    constructor() {\n        this.advanceCount = 0;\n        this.lastRegisteredAdvanceCount = 0;\n        this.reverseCount = 0;\n    }\n    registerAdvance() {\n        this.advanceCount = 1;\n        this.lastRegisteredAdvanceCount++;\n    }\n    register(res) {\n        this.lastRegisteredAdvanceCount = res.advanceCount;\n        this.advanceCount += res.advanceCount;\n        if (res.error) {\n            this.error = res.error;\n        }\n        if (!res.node) {\n            return new N_undefined();\n        }\n        return res.node;\n    }\n    tryRegister(res) {\n        if (res.error) {\n            this.reverseCount += res.advanceCount;\n            return;\n        }\n        return this.register(res);\n    }\n    success(node) {\n        this.node = node;\n        return this;\n    }\n    failure(error) {\n        this.error = error;\n        return this;\n    }\n}\n","import { tokenType, tokenTypeString, tt, types, VAR_DECLARE_KEYWORDS } from '../constants';\nimport { ParseResults } from './parseResults';\nimport { Token } from \"./tokens\";\nimport * as n from '../runtime/nodes';\nimport { N_functionDefinition, N_namespace, N_primitiveWrapper, N_tryCatch, N_undefined, N_variable, } from '../runtime/nodes';\nimport { ESError, InvalidSyntaxError } from \"../errors\";\nexport class Parser {\n    constructor(tokens) {\n        this.tokens = tokens;\n        this.tokenIdx = -1;\n        this.currentToken = tokens[0];\n        this.advance();\n    }\n    parse() {\n        var _a;\n        if (!this.currentToken || !this.tokens || (this.tokens.length === 1 && this.tokens[0].type === tt.EOF)) {\n            return new ParseResults();\n        }\n        const res = this.statements(true);\n        if (!res.error && this.currentToken.type !== tokenType.EOF) {\n            return res.failure(new InvalidSyntaxError((_a = this.currentToken) === null || _a === void 0 ? void 0 : _a.pos, `Expected 'End of File', got token of type '${tokenTypeString[this.currentToken.type]}'`));\n        }\n        return res;\n    }\n    advance(res) {\n        if (res)\n            res.registerAdvance();\n        this.tokenIdx++;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    reverse(amount = 1) {\n        this.tokenIdx -= amount;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    consume(res, type, errorMsg) {\n        if (this.currentToken.type !== type)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, errorMsg !== null && errorMsg !== void 0 ? errorMsg : `Expected '${tokenTypeString[type]}' but got '${tokenTypeString[this.currentToken.type]}'`));\n        this.advance(res);\n    }\n    clearEndStatements(res) {\n        while (this.currentToken.type === tt.ENDSTATEMENT) {\n            this.advance(res);\n        }\n    }\n    statements(topLevel = false) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let statements = [];\n        this.clearEndStatements(res);\n        const firstStatement = res.register(this.statement());\n        if (res.error) {\n            return res;\n        }\n        if (!firstStatement) {\n            return res;\n        }\n        statements.push(firstStatement);\n        let moreStatements = true;\n        while (true) {\n            let newLineCount = 0;\n            while (this.currentToken.type === tt.ENDSTATEMENT) {\n                this.advance(res);\n                newLineCount++;\n            }\n            if (newLineCount === 0) {\n                moreStatements = false;\n            }\n            if (!moreStatements) {\n                break;\n            }\n            const statement = res.tryRegister(this.statement());\n            if (res.error)\n                return res;\n            if (!statement) {\n                this.reverse(res.reverseCount);\n                continue;\n            }\n            statements.push(statement);\n        }\n        this.clearEndStatements(res);\n        let node = new n.N_statements(pos, statements, topLevel);\n        return res.success(node);\n    }\n    statement() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        if (this.currentToken.matches(tt.KEYWORD, 'return')) {\n            return this.returnStatement(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'yield')) {\n            return this.returnStatement(res, true);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'break')) {\n            this.advance(res);\n            return res.success(new n.N_break(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'continue')) {\n            this.advance(res);\n            return res.success(new n.N_continue(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'try')) {\n            return this.tryCatch();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'while')) {\n            return this.whileExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'for')) {\n            return this.forExpr();\n        }\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    returnStatement(res, isYield = false) {\n        const pos = this.currentToken.pos;\n        this.advance(res);\n        let expr = new N_undefined(this.currentToken.pos);\n        if (this.currentToken.type !== tt.ENDSTATEMENT) {\n            let exprRes = res.register(this.expr());\n            if (!exprRes) {\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'Expected end of statement'));\n            }\n            expr = exprRes;\n        }\n        if (isYield) {\n            return res.success(new n.N_yield(pos, expr));\n        }\n        return res.success(new n.N_return(pos, expr));\n    }\n    atom() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        const pos = this.currentToken.pos;\n        switch (tok.type) {\n            case tt.NUMBER:\n                this.advance(res);\n                return res.success(new n.N_number(pos, tok));\n            case tt.STRING:\n                this.advance(res);\n                return res.success(new n.N_string(pos, tok));\n            case tt.IDENTIFIER:\n                return this.atomIdentifier(res, pos, tok);\n            case tt.OPAREN:\n                this.advance(res);\n                const expr = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type === tt.CPAREN) {\n                    this.advance(res);\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ')'\"));\n            case tt.OSQUARE:\n                let arrayExpr = res.register(this.array());\n                if (res.error)\n                    return res;\n                return res.success(arrayExpr);\n            case tt.OBRACES:\n                let objectExpr = res.register(this.object());\n                if (res.error)\n                    return res;\n                return res.success(objectExpr);\n            case tt.KEYWORD:\n                if (tok.value === 'if') {\n                    const expr = res.register(this.ifExpr());\n                    if (res.error)\n                        return res;\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Invalid Identifier ${tok.value}`));\n            default:\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected number, identifier, '(', '+' or '-'`));\n        }\n    }\n    atomIdentifier(res, pos, tok) {\n        this.advance(res);\n        let node = new n.N_variable(tok);\n        let prevNode = new n.N_undefined(pos);\n        let functionCall = false;\n        while ([tt.OPAREN, tt.OSQUARE, tt.DOT].indexOf(this.currentToken.type) !== -1) {\n            switch (this.currentToken.type) {\n                case tt.OPAREN:\n                    functionCall = true;\n                    const tempNode = node;\n                    node = res.register(this.makeFunctionCall(node));\n                    prevNode = tempNode;\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.OSQUARE:\n                    prevNode = node;\n                    node = res.register(this.makeIndex(node));\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.DOT:\n                    this.advance(res);\n                    if (this.currentToken.type !== tt.IDENTIFIER) {\n                        return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected identifier after '.'`));\n                    }\n                    prevNode = node;\n                    node = new n.N_indexed(this.currentToken.pos, node, new n.N_string(this.currentToken.pos, this.currentToken));\n                    this.advance(res);\n            }\n        }\n        if (this.currentToken.type === tt.ASSIGN) {\n            let assignType = this.currentToken.value;\n            if (functionCall) {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot assign to return value of function`));\n            }\n            this.advance(res);\n            const value = res.register(this.expr());\n            if (node instanceof n.N_variable) {\n                node = new n.N_varAssign(pos, node.a, value, assignType, false);\n            }\n            else if (node instanceof n.N_indexed) {\n                node.value = value;\n                node.assignType = assignType;\n            }\n            else {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot have node of type ${this.currentToken.constructor.name}.\n                            Expected either index or variable node.`));\n            }\n            if (res.error)\n                return res;\n        }\n        return res.success(node);\n    }\n    power() {\n        return this.binOp(() => this.atom(), [tt.POW, tt.MOD, tt.APMERSAND, tt.PIPE], () => this.factor());\n    }\n    factor() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        if (tok.type === tt.ADD || tok.type === tt.SUB || tok.type === tt.BITWISE_NOT || tok.type === tt.QM) {\n            this.advance(res);\n            const factor = res.register(this.factor());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(tok.pos, factor, tok));\n        }\n        return this.power();\n    }\n    term() {\n        return this.binOp(() => this.factor(), [tt.MUL, tt.DIV]);\n    }\n    arithmeticExpr() {\n        return this.binOp(() => this.term(), [tt.ADD, tt.SUB]);\n    }\n    comparisonExpr() {\n        const res = new ParseResults();\n        if (this.currentToken.type === tt.NOT) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            let node = res.register(this.expr());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(opTok.pos, node, opTok));\n        }\n        if (this.currentToken.type === tt.BITWISE_NOT) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            let node = res.register(this.expr());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(opTok.pos, node, opTok));\n        }\n        let node = res.register(this.binOp(() => this.arithmeticExpr(), [tt.EQUALS, tt.NOTEQUALS, tt.GT, tt.GTE, tt.LTE, tt.LT]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    expr() {\n        const res = new ParseResults();\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.KEYWORD && VAR_DECLARE_KEYWORDS.indexOf(this.currentToken.value) !== -1) {\n            return this.initiateVar(res);\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'func')) {\n            return this.funcExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'class')) {\n            return this.classExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'namespace')) {\n            return this.namespace();\n        }\n        let node = res.register(this.binOp(() => this.comparisonExpr(), [tt.AND, tt.OR]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    binOp(func, ops, funcB = func) {\n        const res = new ParseResults();\n        let left = res.register(func());\n        if (res.error)\n            return res;\n        while (ops.indexOf(this.currentToken.type) !== -1\n            || ops.indexOf([this.currentToken.type, this.currentToken.value]) !== -1) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            const right = res.register(funcB());\n            if (res.error)\n                return res;\n            left = new n.N_binOp(left.pos, left, opTok, right);\n        }\n        return res.success(left);\n    }\n    makeFunctionCall(to) {\n        const res = new ParseResults();\n        let args = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OPAREN) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '['\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n            return res.success(new n.N_functionCall(pos, to, []));\n        }\n        args.push(res.register(this.expr()));\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid argument\"));\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            args.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CPAREN)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n        this.advance(res);\n        return res.success(new n.N_functionCall(pos, to, args));\n    }\n    makeIndex(to) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const base = to;\n        if (this.currentToken.type !== tt.OSQUARE)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, `Cannot index without expression`));\n        }\n        let index = res.register(this.expr());\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid index\"));\n        if (this.currentToken.type !== tt.CSQUARE)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ']'\"));\n        this.advance(res);\n        return res.success(new n.N_indexed(pos, base, index));\n    }\n    typeExpr(res) {\n        if (this.currentToken.type === tt.IDENTIFIER) {\n            const tok = this.currentToken;\n            this.advance(res);\n            return res.success(new N_variable(tok));\n        }\n        return this.expr();\n    }\n    destructuring(pos, isConst, isGlobal) {\n        const res = new ParseResults();\n        this.advance(res);\n        if (res.error)\n            return res;\n        let identifiers = [];\n        let typeNodes = [];\n        if (this.currentToken.type === tt.CSQUARE) {\n            this.consume(res, tt.CSQUARE);\n            if (!this.currentToken.matches(tt.ASSIGN, '=')) {\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected '='`));\n            }\n            this.consume(res, tt.ASSIGN);\n            let expr = res.register(this.expr());\n            if (res.error)\n                return res;\n            return res.success(new n.N_arrayDestructAssign(pos, [], [], expr, isGlobal, isConst));\n        }\n        while (true) {\n            if (this.currentToken.type !== tt.IDENTIFIER) {\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected identifier`));\n            }\n            identifiers.push(this.currentToken);\n            this.advance(res);\n            if (this.currentToken.type === tt.COLON) {\n                this.consume(res, tt.COLON);\n                let tRes = res.register(this.typeExpr(res));\n                if (res.error)\n                    return res;\n                typeNodes.push(tRes);\n            }\n            else {\n                typeNodes.push(new N_primitiveWrapper(types.any));\n            }\n            if (this.currentToken.type === tt.CSQUARE) {\n                this.consume(res, tt.CSQUARE);\n                break;\n            }\n            this.consume(res, tt.COMMA);\n            if (res.error)\n                return res;\n        }\n        if (!this.currentToken.matches(tt.ASSIGN, '=')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected '='`));\n        }\n        this.consume(res, tt.ASSIGN);\n        let expr = res.register(this.expr());\n        if (res.error)\n            return res;\n        return res.success(new n.N_arrayDestructAssign(pos, identifiers.map(i => i.value), typeNodes, expr, isGlobal, isConst));\n    }\n    initiateVar(res) {\n        let pos = this.currentToken.pos;\n        let isConst = true;\n        let isGlobal = false;\n        let isDeclaration = false;\n        if (this.currentToken.type === tt.KEYWORD &&\n            this.currentToken.value === 'let') {\n            isDeclaration = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n            if (this.currentToken.type === tt.KEYWORD &&\n                this.currentToken.value === 'global') {\n                isDeclaration = true;\n                isGlobal = true;\n                this.advance(res);\n                if (res.error)\n                    return res;\n            }\n            if (this.currentToken.type === tt.KEYWORD &&\n                this.currentToken.value === 'var') {\n                isDeclaration = true;\n                isConst = false;\n                this.advance(res);\n                if (res.error)\n                    return res;\n            }\n        }\n        if (this.currentToken.type === tt.KEYWORD) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected variable declaration keyword, not ${this.currentToken.value}`));\n        }\n        if (this.currentToken.type === tt.OSQUARE) {\n            return this.destructuring(pos, isConst, isGlobal);\n        }\n        if (this.currentToken.type !== tokenType.IDENTIFIER) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected Identifier, '[' or '{'`));\n        }\n        const varName = this.currentToken;\n        this.advance(res);\n        let type = types.any;\n        if (this.currentToken.type === tt.COLON) {\n            isDeclaration = true;\n            this.consume(res, tt.COLON);\n            type = res.register(this.typeExpr(res));\n        }\n        if (this.currentToken.type !== tt.ASSIGN) {\n            if (isConst)\n                return res.failure(new InvalidSyntaxError(pos, 'Cannot initialise constant to undefined'));\n            return res.success(new n.N_varAssign(pos, varName, new n.N_undefined(this.currentToken.pos), '=', isGlobal, isConst, isDeclaration, type));\n        }\n        let assignType = this.currentToken.value;\n        this.advance(res);\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        if (expr instanceof n.N_class || expr instanceof n.N_functionDefinition) {\n            expr.name = varName.value;\n        }\n        if (expr instanceof N_namespace) {\n            expr.name = varName.value;\n            expr.mutable = !isConst;\n        }\n        return res.success(new n.N_varAssign(pos, varName, expr, assignType, isGlobal, isConst, isDeclaration, type));\n    }\n    bracesExp() {\n        const res = new ParseResults();\n        this.consume(res, tt.OBRACES);\n        if (res.error) {\n            return res;\n        }\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_undefined(this.currentToken.pos));\n        }\n        const expr = res.register(this.statements());\n        if (res.error) {\n            return res;\n        }\n        this.consume(res, tt.CBRACES);\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    addEndStatement(res) {\n        this.tokens.splice(this.tokenIdx, 0, new Token(this.currentToken.pos, tt.ENDSTATEMENT, undefined));\n        this.reverse();\n        this.advance(res);\n    }\n    ifExpr() {\n        const res = new ParseResults();\n        let ifTrue;\n        let ifFalse;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'if'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'if'\"));\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        ifTrue = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.clearEndStatements(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'else')) {\n            this.advance(res);\n            if (this.currentToken.type == tt.OBRACES) {\n                ifFalse = res.register(this.bracesExp());\n                if (res.error)\n                    return res;\n            }\n            else {\n                ifFalse = res.register(this.statement());\n                if (res.error)\n                    return res;\n            }\n        }\n        this.addEndStatement(res);\n        return res.success(new n.N_if(pos, condition, ifTrue, ifFalse));\n    }\n    whileExpr() {\n        const res = new ParseResults();\n        let loop;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'while')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'while'\"));\n        }\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        loop = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        return res.success(new n.N_while(pos, condition, loop));\n    }\n    parameter(res) {\n        let name;\n        let type = new n.N_primitiveWrapper(types.any);\n        let defaultValue;\n        if (this.currentToken.type !== tt.IDENTIFIER) {\n            return new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\");\n        }\n        name = this.currentToken.value;\n        this.advance(res);\n        if (this.currentToken.type === tt.COLON) {\n            this.consume(res, tt.COLON);\n            if (res.error)\n                return res.error;\n            type = res.register(this.typeExpr(res));\n            if (res.error)\n                return res.error;\n        }\n        if (this.currentToken.matches(tt.ASSIGN, '=')) {\n            this.consume(res, tt.ASSIGN);\n            if (res.error)\n                return res.error;\n            defaultValue = res.register(this.expr());\n            if (res.error)\n                return res.error;\n        }\n        return {\n            name,\n            type,\n            defaultValue\n        };\n    }\n    funcCore() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, args = [], returnType = new n.N_primitiveWrapper(types.any);\n        this.consume(res, tt.OPAREN);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n        }\n        else {\n            let param = this.parameter(res);\n            if (param instanceof ESError) {\n                return res.failure(param);\n            }\n            args.push(param);\n            let usingDefault = args[0].defaultValue !== undefined;\n            while (this.currentToken.type === tt.COMMA) {\n                this.advance(res);\n                let paramStart = this.currentToken.pos;\n                let param = this.parameter(res);\n                if (param instanceof ESError) {\n                    return res.failure(param);\n                }\n                if (args.filter(a => a.name === param.name).length) {\n                    return res.failure(new InvalidSyntaxError(paramStart, `Cannot have two parameters with the same name`));\n                }\n                if (usingDefault && !param.defaultValue) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'Must use default parameter here'));\n                }\n                if (!usingDefault && param.defaultValue) {\n                    usingDefault = true;\n                }\n                args.push(param);\n            }\n            if (this.currentToken.type !== tt.CPAREN)\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n            this.advance(res);\n        }\n        if (this.currentToken.type === tt.COLON) {\n            this.advance(res);\n            returnType = res.register(this.typeExpr(res));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.OBRACES) {\n            body = new n.N_return(this.currentToken.pos, res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        else {\n            this.consume(res, tt.OBRACES);\n            if (res.error)\n                return res;\n            if (this.currentToken.type !== tt.CBRACES)\n                body = res.register(this.statements());\n            else\n                body = new n.N_undefined(this.currentToken.pos);\n            this.consume(res, tt.CBRACES);\n            if (res.error)\n                return res;\n        }\n        return res.success(new n.N_functionDefinition(pos, body, args, returnType));\n    }\n    funcExpr() {\n        const res = new ParseResults();\n        let name;\n        if (!this.currentToken.matches(tt.KEYWORD, 'func')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'func'\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.IDENTIFIER) {\n            name = this.currentToken.value;\n            this.advance(res);\n        }\n        const func = res.register(this.funcCore());\n        if (res.error)\n            return res;\n        if (name !== undefined) {\n            if (!(func instanceof N_functionDefinition)) {\n                console.error('expected function');\n                throw 'expected function';\n            }\n            func.name = name;\n            func.isDeclaration = true;\n        }\n        return res.success(func);\n    }\n    classExpr(name) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const methods = [];\n        let init;\n        let extends_ = new N_primitiveWrapper(types.object);\n        let identifier;\n        if (!this.currentToken.matches(tt.KEYWORD, 'class')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'class'\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.IDENTIFIER) {\n            identifier = this.currentToken.value;\n            name = identifier;\n            this.advance(res);\n        }\n        if (this.currentToken.matches(tt.KEYWORD, 'extends')) {\n            this.advance(res);\n            extends_ = res.register(this.expr());\n            if (res.error)\n                return res;\n        }\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_class(pos, [], extends_, undefined, name, identifier !== undefined));\n        }\n        while (this.currentToken.type === tt.IDENTIFIER) {\n            let methodId = this.currentToken.value;\n            this.advance(res);\n            const func = res.register(this.funcCore());\n            if (res.error)\n                return res;\n            if (!(func instanceof N_functionDefinition)) {\n                return res.failure(new ESError(this.currentToken.pos, 'ParseError', `Tried to get function, but got ${func} instead`));\n            }\n            func.name = methodId;\n            if (methodId === 'init') {\n                init = func;\n            }\n            else {\n                methods.push(func);\n            }\n        }\n        this.consume(res, tt.CBRACES);\n        return res.success(new n.N_class(pos, methods, extends_, init, name));\n    }\n    forExpr() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, array, identifier, isConst = true;\n        if (!this.currentToken.matches(tt.KEYWORD, 'for')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'for'\"));\n        }\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'var')) {\n            isConst = false;\n            this.advance(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'let')) {\n            this.advance(res);\n        }\n        if (res.error)\n            return res;\n        if (this.currentToken.type !== tt.IDENTIFIER) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\"));\n        }\n        identifier = this.currentToken;\n        this.advance(res);\n        if (!this.currentToken.matches(tt.KEYWORD, 'in')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected keyword 'in\"));\n        }\n        this.advance(res);\n        array = res.register(this.expr());\n        if (res.error)\n            return res;\n        body = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new n.N_for(pos, body, array, identifier, false, isConst));\n    }\n    array() {\n        const res = new ParseResults();\n        let elements = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            this.advance(res);\n            return res.success(new n.N_array(pos, []));\n        }\n        elements.push(res.register(this.expr()));\n        if (res.error) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Unexpected token\"));\n        }\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            elements.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ']'\"));\n        }\n        this.advance(res);\n        return res.success(new n.N_array(pos, elements));\n    }\n    object() {\n        const res = new ParseResults();\n        let properties = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OBRACES) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '{\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_objectLiteral(pos, []));\n        }\n        while (true) {\n            let keyType, key, value;\n            if (this.currentToken.type === tt.IDENTIFIER) {\n                keyType = 'id';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.STRING) {\n                keyType = 'string';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.OSQUARE) {\n                keyType = 'value';\n                this.advance(res);\n                key = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.CSQUARE) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ']', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                this.advance(res);\n            }\n            else {\n                break;\n            }\n            if (this.currentToken.type === tt.COLON) {\n                this.advance(res);\n                value = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                if (this.currentToken.type === tt.COMMA) {\n                    this.advance(res);\n                }\n            }\n            else {\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                if (keyType !== 'id') {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `You must specify a value when initialising an object literal with a key that is not an identifier.\n                        Try using \\`key: value\\` syntax.`));\n                }\n                this.reverse();\n                value = new n.N_variable(this.currentToken);\n                this.advance(res);\n                if (this.currentToken.type === tt.COMMA) {\n                    this.advance(res);\n                }\n            }\n            properties.push([key, value]);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CBRACES)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier, ',' or '}'\"));\n        this.advance(res);\n        return res.success(new n.N_objectLiteral(pos, properties));\n    }\n    namespace() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_namespace(pos, new n.N_undefined()));\n        }\n        const statements = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        return res.success(new n.N_namespace(pos, statements));\n    }\n    tryCatch() {\n        const res = new ParseResults();\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'No empty try block'));\n        }\n        const body = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.value !== 'catch') {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'try block requires catch'));\n        }\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.success(new N_tryCatch(this.currentToken.pos, body, new N_undefined()));\n        }\n        const catchBlock = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new N_tryCatch(this.currentToken.pos, body, catchBlock));\n    }\n}\n","export default \"Array.prototype.contains = function (element) {\\n\\treturn this.indexOf(element) !== -1;\\n};\\n\\nfunction parseNum (str) {\\n\\treturn parseFloat(str);\\n}\\n\\nconst print = console.log;\\n\\nNumber.prototype[Symbol.iterator] = function () {\\n\\treturn {\\n\\t\\tcurrent: 0,\\n\\t\\tlast: this,\\n\\t\\tnext() {\\n\\t\\t\\tif (this.current <= this.last) {\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\tdone: false,\\n\\t\\t\\t\\t\\tvalue: this.current++\\n\\t\\t\\t\\t};\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn { done: true };\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n};\\n\\nconst __private__ = {\\n\\tbims: {\\n\\t\\tmath: Math,\\n\\t\\ttime: {\\n\\t\\t\\tdate: Date,\\n\\t\\t\\tnow: Date.now,\\n\\t\\t},\\n\\t},\\n};\\n\\nif (typeof performance !== 'undefined') {\\n\\t__private__.bims.time.now = performance.now;\\n}\\n\\nfunction import_ (path) {\\n\\tif (__private__.bims.hasOwnProperty(path)) {\\n\\t\\treturn __private__.bims[path];\\n\\t}\\n}\\n\\nfunction range (minP, maxP, stepP) {\\n\\tif (typeof minP !== 'number') {\\n\\t\\treturn [];\\n\\t}\\n\\n\\tconst min = minP.valueOf();\\n\\n\\tif (typeof maxP === 'undefined') {\\n\\t\\ttry {\\n\\t\\t\\treturn [...Array(min).keys()];\\n\\t\\t} catch (e) {\\n\\t\\t\\tthrow `RangeError: Cannot make range of length '${min}'`;\\n\\t\\t}\\n\\t}\\n\\n\\tlet step = 1;\\n\\n\\tif (typeof maxP !== 'number') {\\n\\t\\tthrow 'TypeError: Expected number';\\n\\t}\\n\\n\\tlet max = maxP.valueOf();\\n\\n\\tif (typeof stepP !== 'undefined') {\\n\\t\\tif (typeof stepP !== 'number') {\\n\\t\\t\\tthrow 'TypeError: Expected number';\\n\\t\\t}\\n\\t\\tstep = stepP.valueOf();\\n\\t}\\n\\n\\tlet arr = [];\\n\\n\\tlet i = min;\\n\\twhile (i < max) {\\n\\t\\tarr.push(i);\\n\\t\\ti += step;\\n\\t}\\n\\n\\treturn arr;\\n}\";","import { IS_NODE_INSTANCE } from '../../constants';\nimport { InvalidRuntimeError, PermissionRequiredError, TypeError } from '../../errors';\nimport { ESJSBinding } from \"../../runtime/primitives/esjsbinding\";\nimport { config } from \"../../config\";\nimport Position from \"../../position\";\nconst module = () => {\n    if (!config.permissions.accessDOM) {\n        return new PermissionRequiredError('No access to DOM');\n    }\n    if (IS_NODE_INSTANCE) {\n        return new InvalidRuntimeError();\n    }\n    const w = window;\n    if (typeof w === 'undefined') {\n        return new TypeError(Position.void, 'Object', 'undefined', 'window', 'Window is undefined! ES expected to be in a browser.');\n    }\n    if (!('$' in w)) {\n        return {\n            window: new ESJSBinding(w, 'window'),\n            document: new ESJSBinding(w['document'], 'document'),\n        };\n    }\n    const $ = new ESJSBinding(w['$'], 'jquery');\n    return {\n        $,\n        window: new ESJSBinding(w, 'window'),\n        document: new ESJSBinding(w['document'], 'document'),\n    };\n};\nexport default module;\n","import { IS_NODE_INSTANCE, libs } from '../constants';\nimport { ESError } from '../errors';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport ascii from './built-in-modules/ascii';\nimport json from './built-in-modules/json';\nimport dom from './built-in-modules/dom';\nimport time from './built-in-modules/time';\nconst BIMs = {\n    ascii,\n    json,\n    time,\n};\nconst initialisedModules = {};\nexport function initModules() {\n    if (!IS_NODE_INSTANCE) {\n        BIMs['dom'] = dom;\n    }\n}\nexport function moduleExist(name) {\n    return name in BIMs || name in initialisedModules;\n}\nexport function addModule(name, body) {\n    initialisedModules[name] = body;\n}\nexport function getModule(name) {\n    if (name in initialisedModules) {\n        return initialisedModules[name];\n    }\n    if (name in BIMs) {\n        const res = BIMs[name](libs);\n        if (res instanceof ESError)\n            return res;\n        const processed = new ESJSBinding(res, name);\n        initialisedModules[name] = processed;\n        return processed;\n    }\n}\n","import { str } from '../../util/util';\nconst module = () => ({\n    asciiToChar: (num) => {\n        if (typeof num !== 'number') {\n            throw new TypeError(`number`);\n        }\n        return String.fromCharCode(num);\n    },\n    charToAscii: (char) => {\n        if (typeof char !== 'number') {\n            throw new TypeError(`number`);\n        }\n        return str(char).charCodeAt(0);\n    },\n});\nexport default module;\n","import { str } from '../../util/util';\nconst module = () => ({\n    parse: (json) => {\n        return JSON.parse(str(json));\n    },\n    stringify: JSON.stringify\n});\nexport default module;\n","import { now } from '../../constants';\nconst module = () => ({\n    now,\n    date: Date\n});\nexport default module;\n","import { ESError, ImportError, TypeError, ReferenceError } from \"../errors\";\nimport Position from \"../position\";\nimport { strip, wrap } from '../runtime/primitives/wrapStrip';\nimport { ESArray, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESUndefined } from '../runtime/primitiveTypes';\nimport { indent, sleep, str } from '../util/util';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport chalk from \"../util/colours\";\nimport { IS_NODE_INSTANCE } from \"../constants\";\nimport { getModule, moduleExist } from \"./builtInModules\";\nexport const builtInFunctions = {\n    'range': [({ context }, minP, maxP, stepP) => {\n            if (!(minP instanceof ESNumber)) {\n                return new ESArray();\n            }\n            const min = minP.valueOf();\n            if (maxP instanceof ESUndefined) {\n                try {\n                    return new ESArray([...Array(min).keys()].map(n => new ESNumber(n)));\n                }\n                catch (e) {\n                    return new ESError(Position.void, 'RangeError', `Cannot make range of length '${str(min)}'`);\n                }\n            }\n            let step = 1;\n            if (!(maxP instanceof ESNumber)) {\n                return new TypeError(Position.void, 'number', maxP.typeName(), str(maxP));\n            }\n            let max = maxP.valueOf();\n            if (!(stepP instanceof ESUndefined)) {\n                if (!(stepP instanceof ESNumber)) {\n                    return new TypeError(Position.void, 'number', stepP.typeName(), str(stepP));\n                }\n                step = stepP.valueOf();\n            }\n            let arr = [];\n            let i = min;\n            while (i < max) {\n                arr.push(new ESNumber(i));\n                i += step;\n            }\n            return new ESArray(arr);\n        }, {\n            args: [{\n                    name: 'N',\n                    type: 'Number',\n                }],\n            description: 'Generates an array of integers given N. Starts at 0 and goes to N-1. Can be used like for i in range(10) ..., similarly to python.',\n            returns: 'array of numbers from 0 to N-1',\n            returnType: 'number[] | RangeError'\n        }],\n    'log': [({ context }, ...msgs) => {\n            console.log(...msgs.map(m => str(m)));\n        }, {\n            args: [{\n                    name: '...values',\n                    type: 'any[]'\n                }],\n            description: 'Uses console.log to log all values',\n            returnType: 'void'\n        }],\n    'parse_num': [({ context }, num) => {\n            try {\n                const val = parseFloat(str(num));\n                if (isNaN(val)) {\n                    return new ESError(Position.void, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n                }\n                return new ESNumber(val);\n            }\n            catch (e) {\n                return new ESError(Position.void, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n            }\n        }, {\n            args: [{\n                    name: 'num',\n                    type: 'any'\n                }],\n            description: `Converts a string of digits into a number. Works with decimals and integers. Calls .str() on value before using native JS 'parseFloat' function. Returns TypeError if the string can't be converted into a number.`,\n            returnType: 'number | TypeError'\n        }],\n    'help': [({ context }, ...things) => {\n            if (!things.length) {\n                return new ESString('Visit https://entropygames.io/entropy-script for help with Entropy Script!\\n' +\n                    'Try \\'help(<anything>)\\' for help about a particular object.');\n            }\n            let out = '';\n            for (const thing of things) {\n                if (!(thing instanceof ESPrimitive)) {\n                    console.log('Invalid arg not primitive: ' + str(thing));\n                    return;\n                }\n                const info = thing.info;\n                out += `${chalk.yellow(`Help on '${info.name || '(anonymous)'}'`)}:\n    \n    ${chalk.yellow('Value')}: ${indent(indent(str(thing)))}\n    ${chalk.yellow('Type')}: '${str(thing.typeName())}'\n    ${chalk.yellow('Location')}: ${info.file || chalk.yellow('(unknown)')}\n    \n        ${chalk.green(info.description) || `No description.`}\n        \n    ${info.helpLink ? chalk.cyan(info.helpLink + '\\n\\n') : ''}\n`;\n                if (info.args && thing instanceof ESFunction) {\n                    const total = info.args.length;\n                    const required = info.args.filter(a => a.required).length;\n                    if (total == required)\n                        out += chalk.yellow(`    Arguments (${total}): \\n`);\n                    else\n                        out += chalk.yellow(`    Arguments (${required}-${total}): \\n`);\n                    for (const [idx, arg] of info.args.entries()) {\n                        if (typeof arg !== 'object')\n                            out += `        ${idx + 1}. INVALID ARG INFO`;\n                        else\n                            out += `        ${idx + 1}. ${arg.name}${arg.required === false ? chalk.yellow(' (optional) ') : ' '}{${arg.type}} ${arg.description || ''}\\n`;\n                    }\n                    out += `\\n\\n`;\n                    if (info.returns)\n                        out += `    Returns: ${info.returns}\\n\\n`;\n                    if (info.returnType)\n                        out += `    Return Type: ${info.returnType}\\n\\n`;\n                }\n                if (info.contents && (thing instanceof ESObject || thing instanceof ESNamespace)) {\n                    out += '    Properties: \\n      ';\n                    for (let contents of info.contents)\n                        out += contents.name + '\\n      ';\n                }\n            }\n            console.log(out);\n            if (things.length > 1) {\n                return new ESArray(things);\n            }\n            if (things) {\n                return things[0];\n            }\n        }, {\n            args: [{\n                    name: 'value',\n                    type: 'any'\n                }],\n            description: 'logs info on value',\n            returns: 'value passed in'\n        }],\n    'delete': [({ context }, name) => {\n            const id = str(name);\n            if (!context.has(id)) {\n                return new ESError(Position.void, 'DeleteError', `Identifier '${id}' not found in the current context`);\n            }\n            context.set(id, new ESUndefined());\n        }, {\n            name: 'delete',\n            args: [{ name: 'identifier', type: 'string' }],\n            description: 'Deletes a variable from the current context'\n        }],\n    '__path__': [({ context }) => {\n            return new ESString(context.path);\n        }, {\n            name: '__path__',\n            args: [],\n            description: 'Returns the current path'\n        }],\n    '__symbols__': [({ context }, recursive) => {\n            if (recursive.bool().valueOf()) {\n                let keys = context.keys;\n                while (context.parent) {\n                    keys = context.parent.keys;\n                    context = context.parent;\n                }\n                return wrap(keys);\n            }\n            return wrap(context.keys);\n        }, {\n            name: '__symbols',\n            args: [{\n                    name: 'recursive',\n                    type: 'Bool',\n                    description: 'if true, returns the names of all symbols available in the current scope, if false, just the symbols declared in the current scope.'\n                }],\n            description: 'Returns an array of the names of all symbols in the current context'\n        }],\n    'using': [(props, module, global_) => {\n            if (!(module instanceof ESNamespace) && !(module instanceof ESJSBinding) && !(module instanceof ESObject)) {\n                return new TypeError(Position.void, 'Namespace', str(module.typeName()));\n            }\n            let { context } = props;\n            let global = !(global_ && !global_.bool().valueOf());\n            let value = strip(module, props);\n            if (global) {\n                context = context.root;\n            }\n            else if (context.parent) {\n                context = context.parent;\n            }\n            for (const key of Object.keys(value)) {\n                let res = context.setOwn(key, wrap(value[key]));\n                if (res)\n                    return res;\n            }\n        }, {\n            name: 'using',\n            args: [\n                { name: 'module', type: 'namespace' },\n                { name: 'global', type: 'bool' }\n            ],\n            description: 'Adds contents of a namespace to the current or global context'\n        }],\n    'sleep': [({ context }, time, cb) => {\n            if (!(time instanceof ESNumber)) {\n                return new TypeError(Position.void, 'number', str(time.typeName()), str(time));\n            }\n            sleep(time.valueOf())\n                .then(() => {\n                const res = cb.__call__({ context });\n                if (res instanceof ESError) {\n                    console.log(res.str);\n                }\n            });\n        }, {\n            name: 'sleep',\n            args: [{ name: 'n', type: 'number' }, { name: 'callback', type: 'function' }],\n            description: 'Waits n milliseconds and then executes the callback'\n        }],\n    'throw': [({ context }, name, details) => {\n            return new ESError(Position.void, str(name), str(details));\n        }, {\n            name: 'throw',\n            args: [{ name: 'name', type: 'String' }, { name: 'details', type: 'String' }]\n        }],\n    'typeof': [({ context }, symbolPrim) => {\n            if (!(symbolPrim instanceof ESString)) {\n                return new TypeError(Position.void, 'String', symbolPrim.typeName(), str(symbolPrim));\n            }\n            let symbol = str(symbolPrim);\n            if (!context.has(symbol)) {\n                return new ReferenceError(Position.void, symbol);\n            }\n            let res = context.getSymbol(symbol);\n            if (!res) {\n                return new ReferenceError(Position.void, symbol);\n            }\n            if (res instanceof ESError) {\n                return res;\n            }\n            return res.type;\n        }, {\n            name: 'typeof',\n            args: [\n                { name: 'identifier', type: 'String' }\n            ]\n        }]\n};\nexport function addDependencyInjectedBIFs(printFunc, inputFunc) {\n    builtInFunctions['import'] = [(props, rawUrl) => {\n            if (IS_NODE_INSTANCE) {\n                return new ESError(Position.void, 'ImportError', 'Is running in node instance but trying to run browser import function');\n            }\n            if (!(rawUrl instanceof ESString)) {\n                return new TypeError(Position.void, 'String', rawUrl.typeName(), str(rawUrl));\n            }\n            const url = str(rawUrl);\n            if (moduleExist(url)) {\n                return getModule(url);\n            }\n            return new ImportError(Position.void, url, 'Module not found. Try adding it to the pre-loaded modules.');\n        }, {\n            description: 'Loads a module. Cannot be used asynchronously, so add any modules to pre-load in the esconfig.json file.'\n        }];\n    builtInFunctions['print'] = [({ context }, ...args) => {\n            let out = ``;\n            for (let arg of args) {\n                out += str(arg);\n            }\n            printFunc(out);\n        }, {}];\n    builtInFunctions['input'] = [({ context }, msg, cbRaw) => {\n            inputFunc(msg.valueOf(), (msg) => {\n                let cb = cbRaw === null || cbRaw === void 0 ? void 0 : cbRaw.valueOf();\n                if (cb instanceof ESFunction) {\n                    let res = cb.__call__({ context }, new ESString(msg));\n                    if (res instanceof ESError) {\n                        console.log(res.str);\n                    }\n                }\n                else if (typeof cb === 'function') {\n                    cb(msg);\n                }\n                return new ESString('\\'input()\\' does not return anything. Pass in a function as the second argument, which will take the user input as an argument.');\n            });\n        }, {}];\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { global } from '../constants';\nimport { run } from '../index';\nimport Position from '../position';\nimport { Context } from '../runtime/context';\nimport { ESNamespace } from '../runtime/primitives/esnamespace';\nimport { ESString } from '../runtime/primitives/esstring';\nimport { ESError } from \"../errors\";\nimport { addModule } from './builtInModules';\nlet loadedURls = {};\nexport function preloadModules(urls) {\n    return __awaiter(this, void 0, void 0, function* () {\n        for (const name of Object.keys(urls)) {\n            let url = urls[name];\n            if (url in loadedURls) {\n                addModule(name, loadedURls[url]);\n            }\n            if (url.substring(url.length - 3) !== '.es') {\n                url = url + '.es';\n            }\n            try {\n                let data = yield (yield fetch(url)).text();\n                const env = new Context();\n                env.parent = global;\n                let splitUrl = url.split(\"/\");\n                let scriptName = splitUrl.pop();\n                let exDir = splitUrl.join(\"/\");\n                const n = new ESNamespace(new ESString(scriptName), {});\n                loadedURls[url] = n;\n                const res = run(data, {\n                    env,\n                    fileName: name,\n                    currentDir: exDir,\n                });\n                n.__value__ = env.getSymbolTableAsDict();\n                if (res.error) {\n                    return res.error;\n                }\n                addModule(name, n);\n            }\n            catch (E) {\n                return new ESError(Position.void, 'ImportError', E.toString());\n            }\n        }\n    });\n}\n","import Position from \"../position\";\nimport { Context } from \"../runtime/context\";\nimport { ESError, ImportError, MissingNativeDependencyError, PermissionRequiredError } from '../errors';\nimport { ESFunction, ESNamespace, ESObject, ESString } from '../runtime/primitiveTypes';\nimport { str } from \"../util/util\";\nimport { config, libs, run } from '../index';\nimport { getModule, moduleExist } from './builtInModules';\nimport { global, types, VALID_FILE_ENCODINGS } from \"../constants\";\nconst open = (props, path_, encoding_) => {\n    if (!config.permissions.fileSystem) {\n        return new PermissionRequiredError('No access to file system');\n    }\n    if (!('path' in libs)) {\n        return new MissingNativeDependencyError('path');\n    }\n    if (!('fs' in libs)) {\n        return new MissingNativeDependencyError('fs');\n    }\n    const { path, fs } = libs;\n    const filePath = str(path_);\n    let encoding = str(encoding_);\n    if (VALID_FILE_ENCODINGS.indexOf(encoding) === -1) {\n        encoding = 'utf-8';\n    }\n    if (!fs.existsSync(filePath)) {\n        return new ImportError(Position.void, filePath);\n    }\n    return new ESObject({\n        str: new ESFunction(({ context }) => {\n            return new ESString(fs.readFileSync(path.join(context.path, filePath), encoding).toString());\n        }, [], 'str', undefined, types.string),\n        write: new ESFunction(({ context }, data) => {\n            fs.writeFileSync(context.path + filePath, str(data));\n        }, [{ name: 'path', type: types.string }]),\n        append: new ESFunction(({ context }, data) => {\n            fs.appendFileSync(context.path + filePath, str(data));\n        }, [{ name: 'path', type: types.string }]),\n    });\n};\nconst import_ = (props, rawPath) => {\n    if (!config.permissions.imports) {\n        return new PermissionRequiredError('Imports not allowed');\n    }\n    let scriptPath = str(rawPath);\n    if (config.permissions.useSTD && moduleExist(scriptPath)) {\n        return getModule(scriptPath);\n    }\n    if (!('path' in libs)) {\n        return new MissingNativeDependencyError('path');\n    }\n    if (!('fs' in libs)) {\n        return new MissingNativeDependencyError('fs');\n    }\n    const { path, fs } = libs;\n    scriptPath = path.join(props.context.path, scriptPath);\n    try {\n        if (!fs.existsSync(scriptPath)) {\n            if (fs.existsSync('./particles/' + scriptPath)) {\n                if (fs.existsSync('particles/' + scriptPath + '/main.es')) {\n                    scriptPath = 'particles/' + scriptPath + '/main.es';\n                }\n                else {\n                    return new ESError(Position.void, 'ImportError', `Module '${scriptPath}' has no entry point. Requires 'main.es'.`);\n                }\n            }\n            else {\n                return new ESError(Position.void, 'ImportError', `Can't find file '${scriptPath}' to import.`);\n            }\n        }\n        const exDir = path.dirname(scriptPath);\n        const code = fs.readFileSync(scriptPath, 'utf-8');\n        const env = new Context();\n        env.parent = global;\n        env.path = exDir;\n        const n = new ESNamespace(new ESString(scriptPath), {});\n        const res = run(code, {\n            env,\n            fileName: scriptPath,\n            currentDir: exDir,\n        });\n        n.__value__ = env.getSymbolTableAsDict();\n        if (res.error) {\n            return res.error;\n        }\n        return n;\n    }\n    catch (E) {\n        return new ESError(Position.void, 'ImportError', E.toString());\n    }\n};\nfunction addNodeBIFs(context) {\n    context.set('import', new ESFunction(import_, [{ name: 'path', type: types.string }], 'import', undefined, types.object), {\n        forceThroughConst: true,\n        isConstant: true\n    });\n    context.set('open', new ESFunction(open, [\n        { name: 'path', type: types.string },\n        { name: 'encoding', type: types.string }\n    ], 'open', undefined, types.object), {\n        forceThroughConst: true,\n        isConstant: true\n    });\n}\nexport default addNodeBIFs;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addDependencyInjectedBIFs, builtInFunctions } from \"./built-in/builtInFunctions\";\nimport { addModule, initModules } from './built-in/builtInModules';\nimport { preloadModules } from './built-in/module';\nimport addNodeBIFs from './built-in/nodeLibs';\nimport { config } from './config';\nimport { Context } from \"./runtime/context\";\nimport { ESError } from \"./errors\";\nimport { ESFunction, ESJSBinding, initPrimitiveTypes } from './runtime/primitiveTypes';\nimport loadGlobalConstants from \"./built-in/globalConstants\";\nimport { global, refreshPerformanceNow, runningInNode, setGlobalContext, types } from './constants';\nimport { libs as globalLibs } from \"./constants\";\nexport default function init({ print = console.log, input = () => { }, node = true, context = new Context(), path = '', libs = {} } = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        setGlobalContext(context);\n        initPrimitiveTypes();\n        for (let k of Object.keys(libs)) {\n            let [lib, exposed] = libs[k];\n            if (exposed) {\n                addModule(k, new ESJSBinding(lib));\n            }\n            globalLibs[k] = lib;\n        }\n        addDependencyInjectedBIFs(print, input);\n        for (let builtIn in builtInFunctions) {\n            const fn = new ESFunction(builtInFunctions[builtIn][0], [], builtIn, undefined, undefined, context, true);\n            fn.info = builtInFunctions[builtIn][1];\n            fn.info.name = builtIn;\n            fn.info.isBuiltIn = true;\n            fn.info.file = 'builtin';\n            context.set(builtIn, fn, {\n                global: true,\n                isConstant: true,\n                type: types.function\n            });\n        }\n        loadGlobalConstants(context);\n        const initModRes = initModules();\n        if (initModRes) {\n            return initModRes;\n        }\n        context.initialisedAsGlobal = true;\n        if (path) {\n            context.path = path;\n        }\n        if (node) {\n            runningInNode();\n            yield refreshPerformanceNow(true);\n            addNodeBIFs(context);\n        }\n        let modulePreloadRes = yield preloadModules(config.modules);\n        if (modulePreloadRes instanceof ESError) {\n            return modulePreloadRes;\n        }\n        return global;\n    });\n}\n","import { ESBoolean, ESUndefined } from '../runtime/primitiveTypes';\nimport { types } from \"../constants\";\nexport default function load(context) {\n    const globalConstants = {\n        'false': new ESBoolean(false),\n        'true': new ESBoolean(true),\n        'nil': new ESUndefined(),\n        'Any': types.any,\n        'Number': types.number,\n        'String': types.string,\n        'Bool': types.bool,\n        'Func': types.function,\n        'Array': types.array,\n        'Object': types.object,\n        'Type': types.type,\n        'Error': types.error,\n        'Undefined': types.undefined\n    };\n    for (let constant in globalConstants) {\n        const value = globalConstants[constant];\n        context.set(constant, value, {\n            global: true,\n            isConstant: true\n        });\n    }\n}\n","import { Lexer } from \"./parse/lexer\";\nimport { Parser } from \"./parse/parser\";\nimport { global, now, VERSION } from \"./constants\";\nimport { ESError } from \"./errors\";\nimport Position from \"./position\";\nimport { compileResult, interpretResult, Node } from \"./runtime/nodes\";\nimport { ESArray } from \"./runtime/primitiveTypes\";\nimport { Context } from \"./runtime/context\";\nimport colours from './util/colours';\nimport JS_STD_TXT_RAW from 'raw-loader!./built-in/compiledSTD/std.txt.js';\nimport PY_STD_TXT_RAW from 'raw-loader!./built-in/compiledSTD/std.txt.py';\nexport { Context, colours, Position, };\nexport * from './runtime/primitiveTypes';\nexport { VERSION, global, setGlobalContext, IS_NODE_INSTANCE, runningInNode, libs, now, refreshPerformanceNow, configFileName } from './constants';\nexport * from './errors';\nexport * from './runtime/nodes';\nexport * from './util/util';\nexport { strip, wrap } from './runtime/primitives/wrapStrip';\nexport { ESSymbol } from './runtime/symbol';\nexport { parseConfig, config } from './config';\nimport init from './init';\nexport { init };\nexport function run(msg, { env = global, measurePerformance = false, fileName = '(unknown)', currentDir = '' } = {}) {\n    if (currentDir) {\n        env.path = currentDir;\n    }\n    Node.maxTime = 0;\n    Node.totalTime = 0;\n    Node.interprets = 0;\n    const timeData = {\n        total: 0,\n        lexerTotal: 0,\n        parserTotal: 0,\n        interpretTotal: 0,\n        nodeMax: 0,\n        nodeAvg: 0,\n        nodeTotal: 0,\n        interprets: 0,\n    };\n    let start = now();\n    if (!env.root.initialisedAsGlobal) {\n        const res = new interpretResult();\n        res.error = new ESError(Position.void, 'Uninitialised', 'Global context has not been initialised with global values');\n        return res;\n    }\n    const lexer = new Lexer(msg, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        const res_ = new interpretResult();\n        res_.error = lexerRes;\n        return res_;\n    }\n    timeData.lexerTotal = now() - start;\n    start = now();\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        const res_ = new interpretResult();\n        res_.error = res.error;\n        return res_;\n    }\n    timeData.parserTotal = now() - start;\n    start = now();\n    if (!res.node) {\n        const res = new interpretResult();\n        res.val = new ESArray([]);\n        return res;\n    }\n    const finalRes = res.node.interpret(env);\n    timeData.interpretTotal = now() - start;\n    timeData.total = now() - start;\n    timeData.nodeMax = Node.maxTime;\n    timeData.nodeTotal = Node.totalTime;\n    timeData.nodeAvg = Node.totalTime / Node.interprets;\n    timeData.interprets = Node.interprets;\n    if (measurePerformance) {\n        console.log(timeData);\n    }\n    return Object.assign(Object.assign({}, finalRes), { timeData });\n}\nexport function parse(code, { fileName = '(unknown)', currentDir = '' } = {}) {\n    const lexer = new Lexer(code, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        return {\n            error: lexerRes\n        };\n    }\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        return {\n            error: res.error\n        };\n    }\n    if (!res.node) {\n        return {\n            error: new ESError(Position.void, 'Error', 'no output')\n        };\n    }\n    return {\n        compileToJavaScript: (config) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            const comment = `// Generated by EntropyScript->JavaScript compiler v${VERSION}\\n`;\n            const stdStr = JS_STD_TXT_RAW.toString().replace(/(\\r\\n|\\n|\\r|\\t| )+/gm, ' ') + '\\n';\n            const out = res.node.compileJS(config);\n            if (out.error)\n                return out;\n            if (config.minify) {\n                out.val = out.val.replace(/(\\r\\n|\\n|\\r|\\t| )+/gm, ' ');\n            }\n            return new compileResult(comment + stdStr + out.val);\n        },\n        compileToPython: (config) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            const comment = `# Generated by EntropyScript->Python compiler v${VERSION}\\n\\n`;\n            const stdStr = PY_STD_TXT_RAW.toString() + '\\n';\n            const out = res.node.compilePy(config);\n            if (out.error)\n                return out;\n            return new compileResult(comment + stdStr + out.hoisted + '\\n' + out.val);\n        },\n        interpret: (env = global) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            if (currentDir) {\n                env.path = currentDir;\n            }\n            if (!env.root.initialisedAsGlobal) {\n                const res = new interpretResult();\n                res.error = new ESError(Position.void, 'Uninitialised', 'Global context has not been initialised with global values');\n                return res;\n            }\n            return res.node.interpret(env);\n        },\n    };\n}\n","export default \"\\n###############################\\n# START OF ENTROPY SCRIPT STD #\\n###############################\\nimport time\\n\\nlog = print\\nparseNum = float\\n\\ndef help(thing):\\n    return 'Help is not available in ES compiled Python'\\n\\n\\ndef GENERATE_PRIVATE():\\n    return {\\n        'modules': {\\n            'ascii': {\\n\\n            },\\n            'time': {\\n                'now': lambda: time.time_ns() / (10 ** 6)\\n            }\\n        }\\n    }\\n\\nPRIVATE = GENERATE_PRIVATE()\\n\\ndef import_ (path):\\n    if path in PRIVATE['modules']:\\n        return PRIVATE['modules'][path]\\n\\n\\n#############################\\n# END OF ENTROPY SCRIPT STD #\\n#############################\";"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Position","constructor","idx","ln","col","file","advance","currentChar","clone","str","isUnknown","void","digits","identifierChars","global","setGlobalContext","c","stringSurrounds","IS_NODE_INSTANCE","window","runningInNode","VAR_DECLARE_KEYWORDS","VERSION","configFileName","VALID_FILE_ENCODINGS","types","KEYWORDS","now","refreshPerformanceNow","thisArg","_arguments","generator","Date","performance","e","P","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","tokenType","tt","tokenTypeString","NUMBER","STRING","ENDSTATEMENT","IDENTIFIER","KEYWORD","COMMA","OBRACES","CBRACES","OPAREN","CPAREN","OSQUARE","CSQUARE","ASSIGN","ADD","SUB","MUL","DIV","POW","MOD","EQUALS","NOTEQUALS","NOT","GT","LT","GTE","LTE","AND","OR","COLON","DOT","EOF","APMERSAND","PIPE","BITWISE_NOT","QM","singleCharTokens","doubleCharTokens","tripleCharTokens","primitiveMethods","ESPrimitive","type","any","self","isa","props","type_check","is","ESBoolean","valueOf","__value__","typeName","__type__","has_property","describe","info","isBuiltIn","description","detail","res","strip","assign","__add__","n","InvalidOperationError","__subtract__","__multiply__","__divide__","__pow__","__mod__","__eq__","__gt__","__lt__","__and__","__or__","__bool__","__pipe__","__ampersand__","__set_property__","__call__","parameters","ESErrorPrimitive","error","ESError","super","__get_property__","ESString","name","details","ESArray","traceback","map","s","position","line","wrap","IndexError","cast","bool","ESTypeUnion","ESTypeIntersection","ESObject","val","object","number","ESNumber","length","substr","context","keys","k","thisElement","nElement","newOb","keysToRemove","Array","isArray","indexOf","toClone","thisType","nValue","ESFunction","func","arguments_","this_","returnType","closure","takeCallContextAsClosure","__closure__","params","ctx","path","_a","callContext","fn","newContext","parent","Context","max","Math","i","ESUndefined","arg","defaultValue","setOwn","forceThroughConst","typeIncludes","setRes","generateESFunctionCallContext","Node","_b","interpret","undefined","funcReturn","callNode","push","callNative","thisReturnVal","args","required","v","string","array","ESType","boolean","ESNamespace","mutable","slice","symbol","isAccessible","isConstant","callBack","fTakesProps","toString","ESJSBinding","functionsTakeProps","initPrimitiveTypes","dealWithExtends","class_","instance","superFunc","__extends__","initFunc","__init__","res_","createInstance","runInit","on","primitive","__name__","method","__methods__","methodClone","__instances__","isPrimitive","t","ESTypeArray","left","right","leftRes","__left__","rightRes","__right__","ESTypeNot","__val__","pow","Boolean","helpLink","values","len","contains","element","newArr","numElements","num","parseFloat","isNaN","split","repeat","strToInsert","firstPart","lastPart","ESSymbol","identifier","options","_c","thing","Number","String","m","a","console","codes","red","yellow","green","cyan","blue","grey","code","AllowAny","config","permissions","networking","imports","accessDOM","useSTD","fileSystem","modules","pathAsString","p","substring","parsePartOfConfig","configJSON","unknownProps","filter","x","parseConfig","symbolTable","initialisedAsGlobal","deleted","path_","parent_","permissions_","has","hasOwn","getSymbol","getRawSymbolTableAsDict","symbols","getSymbolTableAsDict","set","remove","clear","deepClone","log","out","interpretArgument","typeRes","defaultValRes","interpretResult","shouldBreak","shouldContinue","compileResult","hoisted","register","node","compilePy","pos","isTerminal","start","interpret_","interprets","time","totalTime","maxTime","N_binOp","opTok","l","r","lt","eq","gt","InvalidSyntaxError","compileJS","minify","switchers","op","N_unaryOp","numVal","abs","N_varAssign","varNameTok","assignType","isGlobal","isDeclaration","N_primitiveWrapper","typeCheckRes","currentVal","newVal","assignVal","declaration","N_arrayDestructAssign","varNames","varName","objPropRes","join","N_if","comparison","ifTrue","ifFalse","compRes","indent","highIndent","statementRes","ifTrueRes","ifFalseRes","N_statements","N_while","loop","shouldLoop","potentialError","comparisonRes","bodyRes","N_for","body","isGlobalIdentifier","isConstIdentifier","isGlobalId","isConstId","iteration","id","iteratorRes","N_array","items","shouldClone","interpreted","item","itemRes","N_objectLiteral","properties","keyNode","valueNode","topLevel","last","N_functionCall","to","arguments","funcRes","argRes","N_functionDefinition","argNames","returnTypeRes","funcPrim","param","hoistedName","generateRandomSymbol","N_return","valRes","N_yield","N_indexed","base","index","baseRes","indexRes","objectRes","keyRes","N_class","methods","extends_","init","extendsRes","initRes","typePrim","N_namespace","statements","N_tryCatch","catchBlock","catchRes","N_number","N_string","N_variable","ReferenceError","N_undefined","N_break","N_continue","JSON","stringify","hash","WeakMap","Function","create","getPrototypeOf","Map","from","Set","add","depth","sleep","ms","setTimeout","replace","characters","gen","charAt","floor","random","colouredStr","reverse","IllegalCharError","char","ExpectedCharError","expectedType","actualType","ImportError","url","ref","InvalidRuntimeError","TestFailed","PermissionRequiredError","MissingNativeDependencyError","Token","matches","Lexer","program","fileName","text","generate","tokens","includes","makeNumber","singleLineComment","multiLineComment","makeIdentifier","makeString","possibleAssignFirstChar","token","unknownChar","numStr","dotCount","strClose","idStr","posStart","tokType","triple","double","ParseResults","advanceCount","lastRegisteredAdvanceCount","reverseCount","registerAdvance","tryRegister","success","failure","Parser","tokenIdx","currentToken","parse","amount","consume","errorMsg","clearEndStatements","firstStatement","statement","moreStatements","newLineCount","returnStatement","tryCatch","whileExpr","forExpr","expr","isYield","exprRes","atom","tok","atomIdentifier","arrayExpr","objectExpr","ifExpr","prevNode","functionCall","tempNode","makeFunctionCall","makeIndex","power","binOp","factor","term","arithmeticExpr","comparisonExpr","initiateVar","funcExpr","classExpr","namespace","ops","funcB","typeExpr","destructuring","isConst","identifiers","typeNodes","tRes","bracesExp","addEndStatement","splice","condition","parameter","funcCore","usingDefault","paramStart","methodId","elements","keyType","w","$","document","BIMs","ascii","asciiToChar","TypeError","fromCharCode","charToAscii","charCodeAt","json","date","initialisedModules","moduleExist","addModule","getModule","processed","builtInFunctions","minP","maxP","stepP","min","arr","returns","msgs","things","total","entries","contents","recursive","global_","cb","symbolPrim","loadedURls","encoding_","fs","filePath","encoding","existsSync","readFileSync","write","data","writeFileSync","append","appendFileSync","import_","rawPath","scriptPath","exDir","dirname","env","run","currentDir","E","print","input","libs","lib","exposed","printFunc","inputFunc","rawUrl","msg","cbRaw","builtIn","globalConstants","constant","load","initModRes","dom","modulePreloadRes","urls","fetch","splitUrl","scriptName","pop","preloadModules","measurePerformance","timeData","lexerTotal","parserTotal","interpretTotal","nodeMax","nodeAvg","nodeTotal","lexerRes","finalRes","compileToJavaScript","comment","stdStr","compileToPython"],"sourceRoot":""}