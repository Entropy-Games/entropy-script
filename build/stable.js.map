{"version":3,"file":"2.19.2.js","mappings":"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","sources":["webpack://es/webpack/universalModuleDefinition","webpack://es/webpack/bootstrap","webpack://es/webpack/runtime/define property getters","webpack://es/webpack/runtime/hasOwnProperty shorthand","webpack://es/webpack/runtime/make namespace object","webpack://es/./src/position.ts","webpack://es/./src/constants.ts","webpack://es/./src/runtime/primitives/esprimitive.ts","webpack://es/./src/runtime/primitives/eserrorprimitive.ts","webpack://es/./src/runtime/primitives/esobject.ts","webpack://es/./src/runtime/primitives/esfunction.ts","webpack://es/./src/runtime/functionCaller.ts","webpack://es/./src/runtime/context.ts","webpack://es/./src/runtime/primitives/esundefined.ts","webpack://es/./src/runtime/primitives/esnamespace.ts","webpack://es/./src/runtime/primitives/esjsbinding.ts","webpack://es/./src/runtime/primitiveTypes.ts","webpack://es/./src/runtime/instantiator.ts","webpack://es/./src/runtime/primitives/estype.ts","webpack://es/./src/runtime/primitives/esnumber.ts","webpack://es/./src/runtime/primitives/esboolean.ts","webpack://es/./src/runtime/primitives/esarray.ts","webpack://es/./src/runtime/primitives/esstring.ts","webpack://es/./src/runtime/symbol.ts","webpack://es/./src/runtime/primitives/wrapStrip.ts","webpack://es/./src/util/colours.ts","webpack://es/./src/built-in/built-in-modules/ascii.ts","webpack://es/./src/built-in/built-in-modules/json.ts","webpack://es/./src/config.ts","webpack://es/./src/built-in/builtInModules.ts","webpack://es/./src/built-in/builtInFunctions.ts","webpack://es/./src/init.ts","webpack://es/./src/built-in/globalConstants.ts","webpack://es/./src/built-in/built-in-modules/time.ts","webpack://es/./src/built-in/built-in-modules/dom.ts","webpack://es/./src/runtime/argument.ts","webpack://es/./src/runtime/nodes.ts","webpack://es/./src/util/util.ts","webpack://es/./src/errors.ts","webpack://es/./src/parse/tokens.ts","webpack://es/./src/parse/lexer.ts","webpack://es/./src/parse/parser.ts","webpack://es/./src/index.ts","webpack://es/./src/built-in/nodeLibs.ts","webpack://es/./src/built-in/compiledSTD/std.txt.js","webpack://es/./src/built-in/compiledSTD/std.txt.py"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"es\"] = factory();\n\telse\n\t\troot[\"es\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Position {\n    constructor(idx, ln, col, file = '(unknown)') {\n        this.idx = idx;\n        this.ln = ln;\n        this.col = col;\n        this.file = file;\n    }\n    advance(currentChar = '') {\n        this.idx++;\n        this.col++;\n        if (currentChar === '\\n') {\n            this.ln++;\n            this.col = 0;\n        }\n        return this;\n    }\n    get clone() {\n        return new Position(this.idx, this.ln, this.col, this.file);\n    }\n    get str() {\n        return `File ${this.file}, ${this.ln + 1}:${this.col + 1}`;\n    }\n    get isUnknown() {\n        return this.idx === -2;\n    }\n    static get void() {\n        return new Position(-2, -2, -2, '(unknown)');\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport PACKAGE_JSON from '../package.json';\nexport const digits = '0123456789';\nexport const identifierChars = '_$abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nexport const singleLineComment = '//';\nexport const multiLineCommentStart = '/*';\nexport const multiLineCommentEnd = '*/';\nexport let global;\nexport const setGlobalContext = (c) => void (global = c);\nexport const stringSurrounds = ['\\'', '`', '\"'];\nexport let IS_NODE_INSTANCE = typeof window === 'undefined';\nexport const runningInNode = () => void (IS_NODE_INSTANCE = true);\nexport const VAR_DECLARE_KEYWORDS = ['var', 'let', 'global'];\nexport const VERSION = PACKAGE_JSON['version'];\nexport const configFileName = 'esconfig.json';\nexport const VALID_FILE_ENCODINGS = [\n    'utf8', 'ucs2', 'utf16le', 'latin1',\n    'ascii', 'base64', 'base64url', 'hex'\n];\nexport const libs = {\n    print: console.log\n};\nexport const catchBlockErrorSymbolName = 'err';\nexport const KEYWORDS = [\n    'var',\n    'let',\n    'global',\n    'local',\n    'mutable',\n    'const',\n    'if',\n    'else',\n    'while',\n    'for',\n    'in',\n    'continue',\n    'break',\n    'func',\n    'return',\n    'yield',\n    'class',\n    'extends',\n    'namespace',\n    'export',\n    'try',\n    'catch'\n];\nexport let now = () => 0;\nexport function refreshPerformanceNow(IS_NODE_INSTANCE) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (IS_NODE_INSTANCE) {\n            now = () => Date.now();\n        }\n        else {\n            now = () => {\n                try {\n                    return performance === null || performance === void 0 ? void 0 : performance.now();\n                }\n                catch (e) {\n                    return 0;\n                }\n            };\n        }\n    });\n}\nrefreshPerformanceNow(IS_NODE_INSTANCE);\nexport var tokenType;\n(function (tokenType) {\n    tokenType[tokenType[\"NUMBER\"] = 0] = \"NUMBER\";\n    tokenType[tokenType[\"STRING\"] = 1] = \"STRING\";\n    tokenType[tokenType[\"ENDSTATEMENT\"] = 2] = \"ENDSTATEMENT\";\n    tokenType[tokenType[\"IDENTIFIER\"] = 3] = \"IDENTIFIER\";\n    tokenType[tokenType[\"KEYWORD\"] = 4] = \"KEYWORD\";\n    tokenType[tokenType[\"COMMA\"] = 5] = \"COMMA\";\n    tokenType[tokenType[\"ASSIGN\"] = 6] = \"ASSIGN\";\n    tokenType[tokenType[\"ADD\"] = 7] = \"ADD\";\n    tokenType[tokenType[\"SUB\"] = 8] = \"SUB\";\n    tokenType[tokenType[\"MUL\"] = 9] = \"MUL\";\n    tokenType[tokenType[\"DIV\"] = 10] = \"DIV\";\n    tokenType[tokenType[\"POW\"] = 11] = \"POW\";\n    tokenType[tokenType[\"MOD\"] = 12] = \"MOD\";\n    tokenType[tokenType[\"OPAREN\"] = 13] = \"OPAREN\";\n    tokenType[tokenType[\"CPAREN\"] = 14] = \"CPAREN\";\n    tokenType[tokenType[\"OBRACES\"] = 15] = \"OBRACES\";\n    tokenType[tokenType[\"CBRACES\"] = 16] = \"CBRACES\";\n    tokenType[tokenType[\"OSQUARE\"] = 17] = \"OSQUARE\";\n    tokenType[tokenType[\"CSQUARE\"] = 18] = \"CSQUARE\";\n    tokenType[tokenType[\"EQUALS\"] = 19] = \"EQUALS\";\n    tokenType[tokenType[\"NOTEQUALS\"] = 20] = \"NOTEQUALS\";\n    tokenType[tokenType[\"NOT\"] = 21] = \"NOT\";\n    tokenType[tokenType[\"GT\"] = 22] = \"GT\";\n    tokenType[tokenType[\"LT\"] = 23] = \"LT\";\n    tokenType[tokenType[\"GTE\"] = 24] = \"GTE\";\n    tokenType[tokenType[\"LTE\"] = 25] = \"LTE\";\n    tokenType[tokenType[\"AND\"] = 26] = \"AND\";\n    tokenType[tokenType[\"OR\"] = 27] = \"OR\";\n    tokenType[tokenType[\"COLON\"] = 28] = \"COLON\";\n    tokenType[tokenType[\"DOT\"] = 29] = \"DOT\";\n    tokenType[tokenType[\"EOF\"] = 30] = \"EOF\";\n    tokenType[tokenType[\"PIPE\"] = 31] = \"PIPE\";\n    tokenType[tokenType[\"APMERSAND\"] = 32] = \"APMERSAND\";\n    tokenType[tokenType[\"BITWISE_NOT\"] = 33] = \"BITWISE_NOT\";\n    tokenType[tokenType[\"QM\"] = 34] = \"QM\";\n})(tokenType || (tokenType = {}));\nexport let tt = tokenType;\nexport const tokenTypeString = {\n    [tt.NUMBER]: 'Number',\n    [tt.STRING]: 'String',\n    [tt.ENDSTATEMENT]: ';',\n    [tt.IDENTIFIER]: 'Identifier',\n    [tt.KEYWORD]: 'Keyword',\n    [tt.COMMA]: ',',\n    [tt.OBRACES]: '{',\n    [tt.CBRACES]: '}',\n    [tt.OPAREN]: '(',\n    [tt.CPAREN]: ')',\n    [tt.OSQUARE]: '[',\n    [tt.CSQUARE]: ']',\n    [tt.ASSIGN]: '=',\n    [tt.ADD]: '+',\n    [tt.SUB]: '-',\n    [tt.MUL]: '*',\n    [tt.DIV]: '/',\n    [tt.POW]: '^',\n    [tt.MOD]: '%',\n    [tt.EQUALS]: '==',\n    [tt.NOTEQUALS]: '!=',\n    [tt.NOT]: '!',\n    [tt.GT]: '>',\n    [tt.LT]: '<',\n    [tt.GTE]: '>=',\n    [tt.LTE]: '<=',\n    [tt.AND]: '&&',\n    [tt.OR]: '||',\n    [tt.COLON]: ':',\n    [tt.DOT]: '.',\n    [tt.EOF]: 'End of File',\n    [tt.APMERSAND]: '&',\n    [tt.PIPE]: '|',\n    [tt.BITWISE_NOT]: '~',\n    [tt.QM]: '?',\n};\nexport const singleCharTokens = {\n    '*': tt.MUL,\n    '/': tt.DIV,\n    '+': tt.ADD,\n    '-': tt.SUB,\n    '(': tt.OPAREN,\n    ')': tt.CPAREN,\n    '^': tt.POW,\n    '%': tt.MOD,\n    '{': tt.OBRACES,\n    '}': tt.CBRACES,\n    ',': tt.COMMA,\n    '[': tt.OSQUARE,\n    ']': tt.CSQUARE,\n    ';': tt.ENDSTATEMENT,\n    ':': tt.COLON,\n    '.': tt.DOT,\n    '=': tt.ASSIGN,\n    '>': tt.GT,\n    '<': tt.LT,\n    '!': tt.NOT,\n    '|': tt.PIPE,\n    '&': tt.APMERSAND,\n    '~': tt.BITWISE_NOT,\n    '?': tt.QM\n};\nexport const doubleCharTokens = {\n    '==': tt.EQUALS,\n    '!=': tt.NOTEQUALS,\n    '>=': tt.GTE,\n    '<=': tt.LTE,\n    '+=': tt.ASSIGN,\n    '-=': tt.ASSIGN,\n    '*=': tt.ASSIGN,\n    '/=': tt.ASSIGN,\n    '&&': tt.AND,\n    '||': tt.OR\n};\nexport const tripleCharTokens = {};\nexport const primitiveMethods = [\n    '__add__',\n    '__subtract__',\n    '__multiply__',\n    '__divide__',\n    '__pow__',\n    '__eq__',\n    '__gt__',\n    '__lt__',\n    '__and__',\n    '__or__',\n    '__pipe__',\n    '__ampersand__',\n    '__bool__',\n    '__set_property__',\n    '__get_property__',\n    '__call__',\n];\nexport const types = {};\n","import { InvalidOperationError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { str } from '../../util/util';\nimport { strip } from './wrapStrip';\nimport { types } from \"../../constants\";\nexport class ESPrimitive {\n    constructor(value, type = types.any) {\n        this.self = this;\n        this.isa = (props, type) => {\n            return type.type_check(props, this);\n        };\n        this.is = (props, obj) => {\n            return new ESBoolean(obj === this);\n        };\n        this.valueOf = () => this.__value__;\n        this.typeName = () => str(this.__type__);\n        this.has_property = (props, key) => new ESBoolean(this.hasOwnProperty(str(key)));\n        this.describe = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            this.info.description = str(info);\n        };\n        this.detail = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            const res = strip(info, props);\n            if (typeof res !== 'object') {\n                return new TypeError(Position.void, 'object', this.typeName(), str(this));\n            }\n            this.info = Object.assign(Object.assign({}, this.info), res);\n            this.info.isBuiltIn = false;\n        };\n        this.__type__ = type || this;\n        this.__value__ = value;\n        this.info = {};\n    }\n    __add__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __subtract__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __multiply__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __divide__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __pow__(props, n) {\n        return new InvalidOperationError('__pow__', this);\n    }\n    __mod__(props, n) {\n        return new InvalidOperationError('__mod__', this);\n    }\n    __eq__(props, n) {\n        return new InvalidOperationError('__eq__', this);\n    }\n    __gt__(props, n) {\n        return new InvalidOperationError('__gt__', this);\n    }\n    __lt__(props, n) {\n        return new InvalidOperationError('__lt__', this);\n    }\n    __and__(props, n) {\n        return new InvalidOperationError('__and__', this);\n    }\n    __or__(props, n) {\n        return new InvalidOperationError('__or__', this);\n    }\n    __bool__(props) {\n        return new InvalidOperationError('__bool__', this);\n    }\n    __pipe__(props, n) {\n        return new InvalidOperationError('__pipe__', this);\n    }\n    __ampersand__(props, n) {\n        return new InvalidOperationError('__ampersand__', this);\n    }\n    __set_property__(props, key, value) {\n        return new InvalidOperationError('__set_property__', this, `[${str(key)}] = ${str(value)}`);\n    }\n    __call__(props, ...parameters) {\n        return new InvalidOperationError('__call__', this);\n    }\n}\n","import { ESPrimitive } from './esprimitive';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nimport { str } from \"../../util/util\";\nimport { ESArray } from \"./esarray\";\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESErrorPrimitive extends ESPrimitive {\n    constructor(error = new ESError(Position.void, 'Unknown', 'Error not specified')) {\n        super(error, types.error);\n        this.__get_property__ = (props, key) => {\n            switch (str(key)) {\n                case 'name':\n                    return new ESString(this.valueOf().name);\n                case 'details':\n                    return new ESString(this.valueOf().details);\n                case 'traceback':\n                    return new ESArray(this.valueOf().traceback\n                        .map(s => new ESString(`${s.position.str} : ${s.line}`)));\n                default:\n                    if (this.self.hasOwnProperty(str(key))) {\n                        return wrap(this.self[str(key)], true);\n                    }\n                    return new IndexError(Position.void, key.valueOf(), this);\n            }\n        };\n        this.cast = () => new ESError(Position.void, 'TypeError', `Cannot cast type 'error'`);\n        this.str = () => new ESString(`<Error: ${this.valueOf().str}>`);\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(n instanceof ESErrorPrimitive &&\n                this.valueOf().constructor === n.valueOf().constructor);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.clone = () => new ESErrorPrimitive(this.valueOf());\n        this.type_check = this.__eq__;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { strip, wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESObject extends ESPrimitive {\n    constructor(val = {}) {\n        super(val, types.object);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => {\n            let val = str(this.valueOf());\n            if (val[val.length - 1] === '\\n') {\n                val = val.substr(0, val.length - 1);\n            }\n            return new ESString(val);\n        };\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new ESBoolean();\n            }\n            if (n.keys.length !== this.keys.length) {\n                return new ESBoolean();\n            }\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const thisElement = this.valueOf()[key];\n                const nElement = n.valueOf()[key];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new TypeError(Position.void, 'Object', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const res = this.__get_property__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            for (let k of n.keys) {\n                const key = k.valueOf();\n                if (newOb.hasOwnProperty(key)) {\n                    continue;\n                }\n                const res = n.__get_property__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            return new ESObject(newOb);\n        };\n        this.__subtract__ = (props, n) => {\n            let keysToRemove = [];\n            if (n instanceof ESString) {\n                keysToRemove = [str(n)];\n            }\n            else if (n instanceof ESArray) {\n                keysToRemove = strip(n, props);\n            }\n            else {\n                return new TypeError(Position.void, 'Array | String', n.typeName().valueOf(), n);\n            }\n            if (!Array.isArray(keysToRemove)) {\n                return new TypeError(Position.void, 'Array | String', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                if (keysToRemove.indexOf(key) === -1) {\n                    let res = this.__get_property__(props, k);\n                    if (res instanceof ESError) {\n                        return res;\n                    }\n                    newOb[key] = res;\n                }\n            }\n            return new ESObject(newOb);\n        };\n        this.__get_property__ = (props, k) => {\n            if (!(k instanceof ESString) && !(k instanceof ESNumber)) {\n                return new TypeError(Position.void, 'String | Number', k.typeName(), str(k));\n            }\n            const key = k.valueOf();\n            if (this.valueOf().hasOwnProperty(key)) {\n                return this.valueOf()[key];\n            }\n            if (this.self.hasOwnProperty(key)) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, str(key), this);\n        };\n        this.__set_property__ = ({}, key, value) => {\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.void, 'String', key.typeName(), str(key));\n            }\n            this.__value__[key.valueOf()] = value;\n        };\n        this.has_property = (props, k) => {\n            const key = str(k);\n            if (this.valueOf().hasOwnProperty(str(key))) {\n                return new ESBoolean(true);\n            }\n            return new ESBoolean(this.hasOwnProperty(key));\n        };\n        this.clone = () => {\n            const res = new ESObject();\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            res.__value__ = obj;\n            return res;\n        };\n        this.type_check = (props, n) => {\n            if (!(n instanceof ESObject)) {\n                return new ESBoolean();\n            }\n            if (Object.keys(this.valueOf()).length !== Object.keys(n.valueOf()).length) {\n                return new ESBoolean();\n            }\n            for (let key of Object.keys(this.valueOf())) {\n                if (!n.valueOf().hasOwnProperty(key) || !this.valueOf().hasOwnProperty(key)) {\n                    return new ESBoolean();\n                }\n                const thisType = this.valueOf()[key];\n                const nValue = n.valueOf()[key];\n                if (!thisType.type_check(props, nValue).valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n    }\n    get keys() {\n        return Object.keys(this.valueOf()).map(s => new ESString(s));\n    }\n    set keys(val) { }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESPrimitive } from './esprimitive';\nimport { global, types } from '../../constants';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { Context } from '../context';\nimport { call } from '../functionCaller';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESFunction extends ESPrimitive {\n    constructor(func = (() => { }), arguments_ = [], name = '(anon)', this_ = new ESObject(), returnType = types.any, closure, takeCallContextAsClosure = false) {\n        super(func, types.function);\n        this.cast = (props, type) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast type 'function'`);\n        };\n        this.clone = () => {\n            return new ESFunction(this.__value__, this.arguments_, this.name, this.this_, this.returnType, this.__closure__);\n        };\n        this.valueOf = () => this;\n        this.str = () => new ESString(`<Func: ${this.name}>`);\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESFunction))\n                return new ESBoolean(false);\n            return new ESBoolean(this.__value__ === n.__value__);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__call__ = ({ context }, ...params) => {\n            let ctx = context;\n            if (!this.takeCallContextAsClosure) {\n                ctx = this.__closure__;\n                ctx.path = context.path;\n            }\n            return call(ctx, this, params);\n        };\n        this.__get_property__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.type_check = (props, n) => {\n            if (!(n instanceof ESFunction)) {\n                return new ESBoolean();\n            }\n            if (this.arguments_.length !== n.arguments_.length) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.arguments_.length; i++) {\n                if (!this.arguments_[i].type.type_check(props, n.arguments_[i].type).valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            const thisReturnVal = this.__call__(props);\n            if (thisReturnVal instanceof ESError) {\n                return thisReturnVal;\n            }\n            if (!thisReturnVal.__eq__(props, n.returnType).valueOf()) {\n                return new ESBoolean();\n            }\n            return new ESBoolean(true);\n        };\n        this.arguments_ = arguments_;\n        this.info.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        if (closure) {\n            this.__closure__ = closure;\n        }\n        else {\n            this.__closure__ = new Context();\n            this.__closure__.parent = global;\n        }\n        this.takeCallContextAsClosure = takeCallContextAsClosure;\n        this.info.returnType = str(returnType);\n        this.info.args = arguments_.map(arg => ({\n            name: arg.name,\n            defaultValue: str(arg.defaultValue),\n            type: arg.type.info.name,\n            required: true\n        }));\n    }\n    get name() {\n        var _a;\n        return (_a = this.info.name) !== null && _a !== void 0 ? _a : '(anonymous)';\n    }\n    set name(v) {\n        this.info.name = v;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { str } from '../util/util';\nimport { Node } from \"./nodes\";\nimport { generateESFunctionCallContext } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { ESObject, ESPrimitive, ESUndefined } from \"./primitiveTypes\";\nfunction callNode(self, context, params, fn) {\n    var _a, _b;\n    const res = fn.interpret(context);\n    if (res.error)\n        return res.error;\n    if (res.funcReturn !== undefined) {\n        res.val = res.funcReturn;\n        res.funcReturn = undefined;\n    }\n    if (self.returnType.type_check({ context }, res.val).valueOf() === false) {\n        return new TypeError(Position.void, str(self.returnType), ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || 'undefined', (_b = res.val) === null || _b === void 0 ? void 0 : _b.str().valueOf(), '(from function return)');\n    }\n    if (res.val) {\n        return res.val;\n    }\n    else {\n        return new ESUndefined();\n    }\n}\nfunction callNative(self, context, params, fn) {\n    for (let i = params.length; i < fn.length; i++)\n        params.push(new ESUndefined());\n    const res = fn({\n        context\n    }, ...params);\n    if (res instanceof ESError || res instanceof ESPrimitive) {\n        return res;\n    }\n    return new ESUndefined();\n}\nexport function call(context, self, params) {\n    var _a;\n    let callContext = context;\n    if (!self.takeCallContextAsClosure) {\n        context = self.__closure__;\n    }\n    context.path = callContext.path;\n    const fn = self.__value__;\n    const newContext = generateESFunctionCallContext(params, self, context);\n    if (newContext instanceof ESError) {\n        return newContext;\n    }\n    let this_ = (_a = self.this_) !== null && _a !== void 0 ? _a : new ESObject();\n    if (!(this_ instanceof ESObject)) {\n        return new TypeError(Position.void, 'object', typeof this_, this_, '\\'this\\' must be an object');\n    }\n    let setRes = newContext.setOwn('this', this_);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    if (fn instanceof Node) {\n        return callNode(self, newContext, params, fn);\n    }\n    else if (typeof fn === 'function') {\n        return callNative(self, newContext, params, fn);\n    }\n    else {\n        return new TypeError(Position.void, 'function', typeof fn);\n    }\n}\n","import { initialise } from \"../init\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESPrimitive, ESUndefined } from \"./primitiveTypes\";\nimport { str } from \"../util/util\";\nimport { ESSymbol } from './symbol';\nimport chalk from \"../util/colours\";\nimport { types } from \"../constants\";\nimport { defaultPermissions } from \"../config\";\nexport class Context {\n    constructor() {\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        this.deleted = false;\n        this.path_ = '';\n    }\n    get path() {\n        if (this.path_ || !this.parent) {\n            return this.path_;\n        }\n        return this.parent.path;\n    }\n    set path(val) {\n        this.path_ = val;\n    }\n    get parent() {\n        return this.parent_;\n    }\n    set parent(val) {\n        if (val == this) {\n            console.error(chalk.red(`Setting context parent to self`));\n            return;\n        }\n        this.parent_ = val;\n    }\n    get permissions() {\n        if (this.permissions_) {\n            return this.permissions_;\n        }\n        if (this.parent) {\n            return this.parent.permissions;\n        }\n        return defaultPermissions();\n    }\n    set permissions(val) {\n        this.permissions_ = val;\n    }\n    has(identifier) {\n        if (!identifier)\n            return false;\n        return this.get(identifier) !== undefined;\n    }\n    hasOwn(identifier) {\n        return this.symbolTable[identifier] instanceof ESSymbol;\n    }\n    get(identifier) {\n        let symbol = this.getSymbol(identifier);\n        if (symbol instanceof ESError || symbol == undefined) {\n            return symbol;\n        }\n        return symbol.value;\n    }\n    getRawSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key].value;\n        return symbols;\n    }\n    getSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key];\n        return symbols;\n    }\n    getSymbol(identifier) {\n        let symbol = this.symbolTable[identifier];\n        if (symbol && !symbol.isAccessible) {\n            return new TypeError(Position.void, 'assessable', 'inaccessible', symbol.identifier);\n        }\n        if (!symbol && this.parent) {\n            let res = this.parent.getSymbol(identifier);\n            if (res instanceof ESError) {\n                return res;\n            }\n            symbol = res;\n        }\n        return symbol;\n    }\n    set(identifier, value, options = {}) {\n        let context = this;\n        if (options.global) {\n            context = this.root;\n        }\n        else {\n            while (!context.hasOwn(identifier) && context.parent !== undefined) {\n                context = context.parent;\n            }\n            if (!context.hasOwn(identifier)) {\n                context = this;\n            }\n        }\n        return context.setOwn(identifier, value, options);\n    }\n    setOwn(identifier, value, options = {}) {\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        if (options.global && !this.initialisedAsGlobal) {\n            options.global = false;\n        }\n        if (!options.forceThroughConst) {\n            let symbol = this.symbolTable[identifier];\n            if (symbol === null || symbol === void 0 ? void 0 : symbol.isConstant)\n                return new TypeError(Position.void, 'dynamic', 'constant', identifier);\n        }\n        this.symbolTable[identifier] = new ESSymbol(value, identifier, options);\n    }\n    remove(identifier) {\n        delete this.symbolTable[identifier];\n    }\n    clear() {\n        for (let symbol in this.symbolTable) {\n            this.remove(symbol);\n        }\n        this.parent = undefined;\n        this.deleted = true;\n    }\n    get root() {\n        let parent = this;\n        while (parent.parent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    get keys() {\n        return Object.keys(this.symbolTable);\n    }\n    resetAsGlobal() {\n        var _a, _b;\n        if (!this.initialisedAsGlobal)\n            return;\n        const printFunc = this.root.get('print');\n        const inputFunc = this.root.get('input');\n        if (!(printFunc instanceof ESPrimitive) || !(inputFunc instanceof ESPrimitive)) {\n            console.error('Error with print and input functions.');\n            return;\n        }\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        initialise(this, ((_a = printFunc.valueOf()) === null || _a === void 0 ? void 0 : _a.func) || console.log, ((_b = inputFunc.valueOf()) === null || _b === void 0 ? void 0 : _b.func) || (() => { }));\n    }\n    clone() {\n        const newContext = new Context();\n        newContext.parent = this.parent;\n        newContext.deleted = this.deleted;\n        newContext.initialisedAsGlobal = this.initialisedAsGlobal;\n        newContext.symbolTable = Object.assign(Object.assign({}, newContext.symbolTable), this.symbolTable);\n        return newContext;\n    }\n    deepClone() {\n        var _a;\n        let clone = this.clone();\n        clone.parent = (_a = clone.parent) === null || _a === void 0 ? void 0 : _a.deepClone();\n        return clone;\n    }\n    log() {\n        console.log('---- CONTEXT ----');\n        for (let key in this.symbolTable) {\n            const symbol = this.symbolTable[key];\n            let out = key;\n            if (symbol.isConstant) {\n                out += ' (CONST)';\n            }\n            if (!symbol.isAccessible) {\n                out += ' (INACCESSIBLE)';\n            }\n            out += ': ';\n            out += str(this.symbolTable[key].value);\n            console.log(out);\n        }\n        console.log('-----------------');\n    }\n}\nexport function generateESFunctionCallContext(params, self, parent) {\n    const newContext = new Context();\n    newContext.parent = parent;\n    let max = Math.max(params.length, self.arguments_.length);\n    for (let i = 0; i < max; i++) {\n        let value = new ESUndefined();\n        let type = types.any;\n        if (!self.arguments_[i]) {\n            continue;\n        }\n        const arg = self.arguments_[i];\n        if (params[i] instanceof ESPrimitive) {\n            type = params[i].__type__;\n            value = params[i];\n        }\n        const typeIncludes = arg.type.type_check({ context: parent }, params[i]);\n        if (typeIncludes instanceof ESError)\n            return typeIncludes;\n        if (!typeIncludes.valueOf()) {\n            return new TypeError(Position.void, str(arg.type), str(type), str(value));\n        }\n        newContext.setOwn(arg.name, value, {\n            forceThroughConst: true\n        });\n    }\n    let setRes = newContext.setOwn('args', new ESArray(params), {\n        forceThroughConst: true\n    });\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    return newContext;\n}\n","import { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { ESType, ESTypeIntersection, ESTypeUnion } from './estype';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { wrap } from \"./wrapStrip\";\nimport { types } from \"../../constants\";\nexport class ESUndefined extends ESPrimitive {\n    constructor() {\n        super(undefined, types.undefined);\n        this.cast = ({ context }, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber();\n                case types.string:\n                    return new ESString();\n                case types.array:\n                    return new ESArray();\n                case types.undefined:\n                    return new ESUndefined();\n                case types.type:\n                    return new ESType();\n                case types.error:\n                    return new ESErrorPrimitive();\n                case types.object:\n                case types.any:\n                    return new ESObject();\n                case types.function:\n                    return new ESFunction(() => { });\n                case types.boolean:\n                    return new ESBoolean();\n                default:\n                    if (!(type instanceof ESType)) {\n                        return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n                    }\n                    return type.__call__({ context });\n            }\n        };\n        this.str = () => new ESString('<Undefined>');\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(n instanceof ESUndefined ||\n                typeof n === 'undefined' ||\n                typeof n.valueOf() === 'undefined');\n        };\n        this.__bool__ = () => new ESBoolean();\n        this.bool = this.__bool__;\n        this.clone = () => new ESUndefined();\n        this.__get_property__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.type_check = this.__eq__;\n        this.info = {\n            name: 'undefined',\n            description: 'Not defined, not a value.',\n            file: 'built-in',\n            isBuiltIn: true\n        };\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESNamespace extends ESPrimitive {\n    constructor(name, value, mutable = false) {\n        super(value, types.object);\n        this.cast = (props) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast type 'namespace'`);\n        };\n        this.clone = () => {\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            return new ESNamespace(this.name, obj);\n        };\n        this.str = () => {\n            const keys = Object.keys(this.valueOf());\n            return new ESString(`<Namespace ${str(this.name)}${keys.length > 0 ? ': ' : ''}${keys.slice(0, 5)}${keys.length >= 5 ? '...' : ''}>`);\n        };\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__get_property__ = (props, key) => {\n            if (key instanceof ESString && this.valueOf().hasOwnProperty(key.valueOf())) {\n                const symbol = this.valueOf()[key.valueOf()];\n                if (symbol.isAccessible) {\n                    return symbol.value;\n                }\n            }\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.void, 'string', key.typeName());\n            }\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this.self);\n        };\n        this.type_check = this.__eq__;\n        this.info.name = str(name);\n        this.mutable = mutable;\n    }\n    get name() {\n        return new ESString(this.info.name);\n    }\n    set name(v) {\n        this.info.name = v.valueOf();\n    }\n    __set_property__(props, key, value) {\n        if (!(key instanceof ESString)) {\n            return new TypeError(Position.void, 'string', key.typeName().valueOf(), str(key));\n        }\n        let idx = str(key);\n        if (!this.mutable) {\n            return new TypeError(Position.void, 'mutable', 'immutable', `${str(this.name)}`);\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        const symbol = this.__value__[idx];\n        if (!symbol) {\n            return new ESError(Position.void, 'SymbolError', `Symbol ${idx} is not declared in namespace ${str(this.name)}.`);\n        }\n        if (symbol.isConstant) {\n            return new TypeError(Position.void, 'mutable', 'immutable', `${str(this.name)}[${idx}]`);\n        }\n        if (!symbol.isAccessible) {\n            return new TypeError(Position.void, 'accessible', 'inaccessible', `${str(this.name)}[${idx}]`);\n        }\n        symbol.value = value;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { strip, wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nfunction callBack(fTakesProps, val, key, props, args) {\n    let res;\n    if (fTakesProps) {\n        try {\n            res = new val[key](props, ...args);\n        }\n        catch (_a) {\n            try {\n                res = val[key](props, ...args);\n            }\n            catch (e) {\n                return new ESError(Position.void, e.name, e.toString());\n            }\n        }\n    }\n    else {\n        try {\n            res = new val[key](...args.map(o => strip(o, props)));\n        }\n        catch (_b) {\n            try {\n                res = val[key](...args.map(o => strip(o, props)));\n            }\n            catch (e) {\n                return new ESError(Position.void, e.name, e.toString());\n            }\n        }\n    }\n    return wrap(res);\n}\nexport class ESJSBinding extends ESPrimitive {\n    constructor(value, name = '<AnonNative>', functionsTakeProps = false) {\n        super(value, types.object);\n        this.cast = (props) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast native object`);\n        };\n        this.clone = () => new ESJSBinding(this.__value__);\n        this.str = () => {\n            return new ESString(str(this.__value__));\n        };\n        this.__eq__ = ({}, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__get_property__ = (props, k) => {\n            const key = str(k);\n            const val = this.__value__;\n            const res = val[key];\n            if (res === undefined) {\n                if (this.self.hasOwnProperty(key)) {\n                    return wrap(this.self[str(key)], true);\n                }\n                return new IndexError(Position.void, key, this);\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            if (typeof res === 'function') {\n                const fTakesProps = this.functionsTakeProps;\n                return new ESFunction((props, ...args) => {\n                    return callBack(fTakesProps, val, key, props, args);\n                });\n            }\n            return wrap(res);\n        };\n        this.__call__ = (props, ...args) => {\n            if (typeof this.__value__ !== 'function') {\n                return new TypeError(Position.void, 'function', typeof this.__value__, str(this));\n            }\n            return callBack(this.functionsTakeProps, this, '__value__', props, args);\n        };\n        this.has_property = (props, key) => {\n            return new ESBoolean(!(this.__get_property__(props, key) instanceof ESError));\n        };\n        this.type_check = this.__eq__;\n        this.info.name = str(name);\n        this.functionsTakeProps = functionsTakeProps;\n    }\n    __set_property__(props, k, value) {\n        const key = str(k);\n        const val = this.__value__;\n        if (this.self.hasOwnProperty(key)) {\n            this.self[str(key)] = value;\n            return;\n        }\n        val[key] = strip(value, props);\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESPrimitive } from './primitives/esprimitive';\nimport { ESArray } from './primitives/esarray';\nimport { ESBoolean } from './primitives/esboolean';\nimport { ESErrorPrimitive } from './primitives/eserrorprimitive';\nimport { ESFunction } from './primitives/esfunction';\nimport { ESNumber } from './primitives/esnumber';\nimport { ESObject } from './primitives/esobject';\nimport { ESString } from './primitives/esstring';\nimport { ESType } from './primitives/estype';\nimport { ESUndefined } from './primitives/esundefined';\nimport { ESNamespace } from './primitives/esnamespace';\nimport { ESJSBinding } from \"./primitives/esjsbinding\";\nimport { types } from \"../constants\";\nexport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNumber, ESPrimitive, ESString, ESObject, ESType, ESUndefined, ESNamespace, ESJSBinding };\nexport function initPrimitiveTypes() {\n    types.type = new ESType(true, 'Type');\n    types.undefined = new ESType(true, 'Undefined');\n    types.string = new ESType(true, 'String');\n    types.array = new ESType(true, 'Array');\n    types.number = new ESType(true, 'Number');\n    types.any = new ESType(true, 'Any');\n    types.function = new ESType(true, 'Function');\n    types.bool = new ESType(true, 'Boolean');\n    types.object = new ESType(true, 'Object');\n    types.error = new ESType(true, 'Error');\n    types.any.info = {\n        name: 'any',\n        description: 'Matches any other type',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.number.info = {\n        name: 'any',\n        description: 'The ES Number type. Is a a double-precision 64-bit binary format IEEE 754 value, like double in Java and C#',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.string.info = {\n        name: 'string',\n        description: 'The ES String type. Holds an array of characters, and can be defined with any of \\', \" and `. Can be indexed like an array.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.bool.info = {\n        name: 'bool',\n        description: 'The ES Bool type. Exactly two instances exist, true and false.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.function.info = {\n        name: 'function',\n        description: 'The ES Function type. Is a block of code which executes when called and takes in 0+ parameters.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.array.info = {\n        name: 'array',\n        description: 'The ES Array type. Defines a set of items of any type which can be accessed by an index with [].',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.object.info = {\n        name: 'object',\n        description: 'The ES Object type. Similar to JS objects or python dictionaries.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.error.info = {\n        name: 'error',\n        description: 'The ES Error type. Call to throw an error.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n    types.type.info = {\n        name: 'type',\n        description: 'The ES Type type. Call to get the type of a value at a string.',\n        file: 'built-in',\n        isBuiltIn: true\n    };\n}\n","import { primitiveMethods } from '../constants';\nimport { Context } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESFunction, ESNumber, ESObject, ESString, ESType, ESUndefined } from \"./primitiveTypes\";\nfunction dealWithExtends(context, class_, instance, this_, callContext) {\n    if (!(class_ instanceof ESType)) {\n        return new TypeError(Position.void, 'Type', typeof class_, class_);\n    }\n    const superFunc = new ESFunction(({ context }, ...args) => {\n        const newContext = new Context();\n        newContext.parent = context;\n        if (class_.__extends__) {\n            let _a = dealWithExtends(newContext, class_.__extends__, instance, this_, callContext);\n            if (_a instanceof ESError) {\n                return _a;\n            }\n        }\n        const initFunc = class_ === null || class_ === void 0 ? void 0 : class_.__init__;\n        if (!initFunc) {\n            return;\n        }\n        initFunc.this_ = this_;\n        initFunc.__closure__ = newContext;\n        const res_ = initFunc.__call__({ context: newContext }, ...args);\n        if (res_ instanceof ESError) {\n            return res_;\n        }\n    }, undefined, 'super', this_);\n    let setRes = context.setOwn('super', superFunc);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    const res = createInstance(class_, { context }, [], false, instance);\n    if (res instanceof ESError) {\n        return res;\n    }\n}\nexport function createInstance(type, { context }, params, runInit = true, on = {}) {\n    var _b;\n    if (type.primitive) {\n        if (params.length < 1) {\n            return new ESUndefined();\n        }\n        switch (type.__name__) {\n            case 'Undefined':\n            case 'Type':\n                if (params.length < 1) {\n                    return new ESType();\n                }\n                else {\n                    return new ESString(params[0].typeName());\n                }\n            case 'String':\n                return new ESString(params[0].str().valueOf());\n            case 'Array':\n                return new ESArray(params);\n            case 'Number':\n                return new ESNumber(params[0].valueOf());\n            case 'Function':\n                return new ESFunction(params[0].valueOf());\n            case 'Boolean':\n                return new ESBoolean(params[0].bool().valueOf());\n            default:\n                return wrap(params[0]);\n        }\n    }\n    const newContext = new Context();\n    newContext.parent = (_b = type.__init__) === null || _b === void 0 ? void 0 : _b.__closure__;\n    const instance = new ESObject();\n    if (type.__extends__) {\n        let res = dealWithExtends(newContext, type.__extends__, on, instance, context);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__value__ = on;\n    for (let method of type.__methods__) {\n        const methodClone = method.clone();\n        methodClone.this_ = instance;\n        on[method.name] = methodClone;\n        if (primitiveMethods.indexOf(method.name) !== -1) {\n            instance[method.name] = methodClone.__call__;\n        }\n    }\n    if (runInit && type.__init__) {\n        type.__init__.this_ = instance;\n        type.__init__.__closure__ = newContext;\n        const res = type.__init__.__call__({ context: newContext }, ...params);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__type__ = type;\n    type.__instances__.push(instance);\n    return instance;\n}\n","import { ESPrimitive } from './esprimitive';\nimport { ESError, InvalidOperationError, TypeError } from '../../errors';\nimport { createInstance } from '../instantiator';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nimport { Position } from \"../../position\";\nimport { str } from \"../../util/util\";\nimport { types } from \"../../constants\";\nimport { ESTypeArray } from \"./esarray\";\nexport class ESType extends ESPrimitive {\n    constructor(isPrimitive = false, name = '(anon)', __methods__ = [], __extends__, __init__) {\n        super(undefined, types === null || types === void 0 ? void 0 : types.type);\n        this.__instances__ = [];\n        this.clone = () => {\n            return new ESType(this.primitive, this.__name__, this.__methods__, this.__extends__, this.__init__);\n        };\n        this.isa = (props, type) => {\n            return new ESBoolean(type === types.type);\n        };\n        this.cast = (props, type) => {\n            return new InvalidOperationError('cast', this);\n        };\n        this.type_check = (props, n) => {\n            var _a;\n            if (!n)\n                return new ESBoolean();\n            let t = n.__type__;\n            if (this === types.any ||\n                t === types.any ||\n                this === t) {\n                return new ESBoolean(true);\n            }\n            while (t instanceof ESType) {\n                if (((_a = t.__extends__) === null || _a === void 0 ? void 0 : _a.__eq__(props, this).valueOf()) === true) {\n                    return new ESBoolean(true);\n                }\n                if (!t.__extends__) {\n                    break;\n                }\n                t = t.__extends__;\n            }\n            return new ESBoolean();\n        };\n        this.__eq__ = (props, t) => {\n            return new ESBoolean(t === this);\n        };\n        this.__call__ = (props, ...params) => {\n            return createInstance(this, props, params || []);\n        };\n        this.str = () => new ESString(this.__name__);\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__get_property__ = (props, k) => {\n            if (!(k instanceof ESString)) {\n                if (this === types.array) {\n                    return new ESTypeArray(k);\n                }\n                return new TypeError(Position.void, 'string', k.typeName(), str(k));\n            }\n            const key = k.valueOf();\n            if (this.self.hasOwnProperty(key)) {\n                return wrap(this.self[key], true);\n            }\n            return new ESTypeArray(k);\n        };\n        this.primitive = isPrimitive;\n        this.__name__ = name;\n        this.info.name = name;\n        this.__extends__ = __extends__;\n        this.__methods__ = __methods__;\n        if (__init__) {\n            __init__.name = name;\n            this.__init__ = __init__;\n        }\n        if (!types.type) {\n            this.__type__ = this;\n        }\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\nexport class ESTypeUnion extends ESType {\n    constructor(left, right) {\n        super(false, `(${str(left)}) | (${str(right)})`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.type_check = (props, t) => {\n            const leftRes = this.__left__.type_check(props, t);\n            const rightRes = this.__right__.type_check(props, t);\n            if (leftRes instanceof ESError)\n                return leftRes;\n            if (rightRes instanceof ESError)\n                return rightRes;\n            return new ESBoolean(leftRes.valueOf() ||\n                rightRes.valueOf());\n        };\n        this.clone = () => {\n            return new ESTypeUnion(this.__left__, this.__right__);\n        };\n        this.__eq__ = (props, t) => {\n            return new ESBoolean(t instanceof ESTypeUnion &&\n                this.__left__.__eq__(props, t.__left__).valueOf() === true &&\n                this.__right__.__eq__(props, t.__right__).valueOf() === true);\n        };\n        this.__left__ = left;\n        this.__right__ = right;\n    }\n}\nexport class ESTypeIntersection extends ESType {\n    constructor(left, right) {\n        super(false, `(${str(left)}) & (${str(right)})`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.type_check = (props, t) => {\n            const leftRes = this.__left__.type_check(props, t);\n            const rightRes = this.__right__.type_check(props, t);\n            if (leftRes instanceof ESError)\n                return leftRes;\n            if (rightRes instanceof ESError)\n                return rightRes;\n            return new ESBoolean(leftRes.valueOf() &&\n                rightRes.valueOf());\n        };\n        this.clone = () => {\n            return new ESTypeIntersection(this.__left__, this.__right__);\n        };\n        this.__eq__ = (props, t) => {\n            return new ESBoolean(t instanceof ESTypeIntersection &&\n                this.__left__.__eq__(props, t.__left__).valueOf() === true &&\n                this.__right__.__eq__(props, t.__right__).valueOf() === true);\n        };\n        this.__left__ = left;\n        this.__right__ = right;\n    }\n}\nexport class ESTypeNot extends ESType {\n    constructor(type) {\n        super(false, `~(${str(type)})`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.type_check = (props, t) => {\n            const res = this.__val__.type_check(props, t);\n            if (res instanceof ESError)\n                return res;\n            return new ESBoolean(!res.valueOf());\n        };\n        this.clone = () => {\n            return new ESTypeNot(this.__val__);\n        };\n        this.__eq__ = (props, t) => {\n            return new ESBoolean(t instanceof ESTypeNot &&\n                this.__val__.__eq__(props, t.__val__).valueOf() === true);\n        };\n        this.__val__ = type;\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { wrap } from \"./wrapStrip\";\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESNumber extends ESPrimitive {\n    constructor(value = 0) {\n        super(value, types.number);\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return this;\n                case types.string:\n                    return this.str();\n                case types.array:\n                    return new ESArray(new Array(this.valueOf()));\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(this.valueOf().toString());\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() + n.valueOf());\n        };\n        this.__subtract__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() - n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() * n.valueOf());\n        };\n        this.__divide__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() / n.valueOf());\n        };\n        this.__pow__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESNumber(Math.pow(this.valueOf(), n.valueOf()));\n        };\n        this.__mod__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESNumber(this.valueOf() % n.valueOf());\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new ESBoolean(false);\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() > n.valueOf());\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() < n.valueOf());\n        };\n        this.__bool__ = () => {\n            return new ESBoolean(this.valueOf() > 0);\n        };\n        this.bool = this.__bool__;\n        this.clone = () => new ESNumber(this.valueOf());\n        this.__get_property__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.type_check = this.__eq__;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { wrap } from \"./wrapStrip\";\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESBoolean extends ESPrimitive {\n    constructor(val = false) {\n        super(Boolean(val), types.bool);\n        this.__get_property__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESBoolean)) {\n                return new TypeError(Position.void, 'Boolean', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__bool__ = () => this;\n        this.__and__ = (props, n) => new ESBoolean(this.valueOf() && n.bool().valueOf());\n        this.__or__ = (props, n) => {\n            return new ESBoolean(this.valueOf() || n.bool().valueOf());\n        };\n        this.str = () => new ESString(this.valueOf() ? 'true' : 'false');\n        this.clone = () => new ESBoolean(this.valueOf());\n        this.bool = () => this;\n        this.type_check = this.__eq__;\n        this.info = {\n            name: str(val),\n            description: `Boolean global constant which evaluates to ${str(val)}, the opposite of ${str(!val)}`,\n            file: 'built-in',\n            isBuiltIn: true,\n            helpLink: 'https://en.wikipedia.org/wiki/Boolean_expression'\n        };\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESError, InvalidOperationError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nimport { ESType, ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESArray extends ESPrimitive {\n    constructor(values = []) {\n        super(values, types.array);\n        this.len = (props) => {\n            return new ESNumber(this.valueOf().length);\n        };\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.len(props).valueOf());\n                case types.boolean:\n                    return this.bool();\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(str(this.valueOf()));\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESArray)) {\n                return new ESBoolean();\n            }\n            if (n.len(props).valueOf() !== this.len(props).valueOf()) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.len(props).valueOf(); i++) {\n                const thisElement = this.valueOf()[i];\n                const nElement = n.valueOf()[i];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__(props, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESArray)) {\n                return new TypeError(Position.void, 'array', n.typeName().valueOf(), n);\n            }\n            return new ESArray([...this.valueOf(), ...n.valueOf()]);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.__get_property__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESUndefined();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return this.valueOf()[idx];\n            }\n            return new ESUndefined();\n        };\n        this.contains = (props, val) => {\n            for (let element of this.__value__) {\n                if (val.__eq__(props, element)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        this.clone = () => {\n            const newArr = [];\n            for (let element of this.valueOf()) {\n                newArr.push(element);\n            }\n            return new ESArray(newArr);\n        };\n        this.type_check = (props, n) => {\n            if (!(n instanceof ESArray) || this.len(props).valueOf() !== n.len(props).valueOf()) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.__value__.length; i++) {\n                const res = this.__value__[i].type_check(props, n.__value__[i]);\n                if (res instanceof ESError)\n                    return res;\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n    }\n    __set_property__(props, key, value) {\n        if (!(key instanceof ESNumber)) {\n            return;\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        let idx = key.valueOf();\n        while (idx < 0) {\n            idx = this.valueOf().length + idx;\n        }\n        this.__value__[idx] = value;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\nexport class ESTypeArray extends ESType {\n    constructor(type) {\n        super(false, `Array[${str(type)}]`);\n        this.numElements = -1;\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.type_check = (props, t) => {\n            if (!(t instanceof ESArray)) {\n                return new ESBoolean();\n            }\n            if (this.numElements >= 0) {\n                if (t.valueOf().length !== this.numElements) {\n                    return new TypeError(Position.void, `Array[${str(this.type)}][${this.numElements}]`, `Array[Any][${t.valueOf().length}]`);\n                }\n            }\n            for (const element of t.valueOf()) {\n                if (!this.type.type_check(props, element).valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.clone = () => {\n            return new ESTypeArray(this.type);\n        };\n        this.__get_property__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', key.typeName(), str(key));\n            }\n            this.numElements = key.valueOf();\n            return this;\n        };\n        this.type = type;\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESPrimitive } from './esprimitive';\nimport { wrap } from './wrapStrip';\nimport { types } from \"../../constants\";\nimport { ESTypeIntersection, ESTypeUnion } from \"./estype\";\nexport class ESString extends ESPrimitive {\n    constructor(value = '') {\n        super(value, types.string);\n        this.str = () => this;\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    const num = parseFloat(this.valueOf());\n                    if (isNaN(num)) {\n                        return new ESError(Position.void, 'TypeError', `This string is not a valid number`);\n                    }\n                    return new ESNumber(num);\n                case types.string:\n                    return this;\n                case types.array:\n                    return new ESArray(this.valueOf().split('').map(s => new ESString(s)));\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESString(this.valueOf() + n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESString(this.valueOf().repeat(n.valueOf()));\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new ESBoolean(false);\n            }\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf().length > n.valueOf().length);\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESString)) {\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf().length < n.valueOf().length);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.len = () => {\n            return new ESNumber(this.valueOf().length);\n        };\n        this.clone = () => new ESString(this.valueOf());\n        this.__get_property__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESString();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return new ESString(this.valueOf()[idx]);\n            }\n            return new ESString();\n        };\n        this.type_check = this.__eq__;\n    }\n    __set_property__(props, key, value) {\n        if (!(key instanceof ESNumber))\n            return;\n        if (!(value instanceof ESString))\n            value = new ESString(str(value));\n        let idx = key.valueOf();\n        while (idx < 0)\n            idx = this.valueOf().length + idx;\n        const strToInsert = value.str().valueOf();\n        let firstPart = this.__value__.substr(0, idx);\n        let lastPart = this.__value__.substr(idx + strToInsert.length);\n        this.__value__ = firstPart + strToInsert + lastPart;\n    }\n    __pipe__(props, n) {\n        return new ESTypeUnion(this, n);\n    }\n    __ampersand__(props, n) {\n        return new ESTypeIntersection(this, n);\n    }\n}\n","import { ESString } from './primitives/esstring';\nimport { types } from \"../constants\";\nexport class ESSymbol {\n    constructor(value, identifier, options = {}) {\n        var _a, _b, _c;\n        this.clone = () => {\n            return new ESSymbol(this.value.clone(), this.identifier, {\n                isConstant: this.isConstant,\n                isAccessible: this.isAccessible\n            });\n        };\n        this.str = () => new ESString(`<Symbol: ${this.identifier}>`);\n        this.value = value;\n        this.identifier = identifier;\n        this.isConstant = (_a = options.isConstant) !== null && _a !== void 0 ? _a : false;\n        this.isAccessible = (_b = options.isAccessible) !== null && _b !== void 0 ? _b : true;\n        this.type = (_c = options.type) !== null && _c !== void 0 ? _c : types.any;\n    }\n}\n","import { ESError } from '../../errors';\nimport { ESSymbol } from '../symbol';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESPrimitive } from './esprimitive';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESUndefined } from './esundefined';\nimport { ESJSBinding } from \"./esjsbinding\";\nexport function wrap(thing, functionsTakeProps = false) {\n    if (thing instanceof ESPrimitive) {\n        return thing;\n    }\n    else if (thing === undefined || thing === null) {\n        return new ESUndefined();\n    }\n    else if (thing instanceof ESError) {\n        return new ESErrorPrimitive(thing);\n    }\n    else if (thing instanceof ESSymbol) {\n        return thing.value;\n    }\n    else if (typeof thing === 'number') {\n        return new ESNumber(thing);\n    }\n    else if (typeof thing === 'string') {\n        return new ESString(thing);\n    }\n    else if (typeof thing === 'boolean') {\n        return new ESBoolean(thing);\n    }\n    else if (typeof thing === 'bigint') {\n        return new ESNumber(Number(thing));\n    }\n    else if (typeof thing === 'symbol') {\n        return new ESString(String(thing));\n    }\n    else if (Array.isArray(thing)) {\n        return new ESArray(thing.map(o => wrap(o, functionsTakeProps)));\n    }\n    return new ESJSBinding(thing, undefined, functionsTakeProps);\n}\nexport function strip(thing, props) {\n    if (!(thing instanceof ESPrimitive)) {\n        return thing;\n    }\n    else if (thing instanceof ESArray) {\n        return thing.valueOf().map(m => strip(m, props), props);\n    }\n    else if (thing instanceof ESObject) {\n        let val = {};\n        for (let key in thing.valueOf()) {\n            val[key] = strip(thing.valueOf()[key], props);\n        }\n        return val;\n    }\n    else if (thing instanceof ESUndefined) {\n        return undefined;\n    }\n    else if (thing instanceof ESFunction) {\n        return (...args) => {\n            const res = thing.__call__(props, ...args.map(a => wrap(a)));\n            if (res instanceof ESError) {\n                console.error(res.str);\n                return res;\n            }\n            return strip(res, props);\n        };\n    }\n    else if (thing instanceof ESType) {\n        return thing;\n    }\n    return thing.valueOf();\n}\n","import { IS_NODE_INSTANCE } from \"../constants\";\nconst codes = {\n    red: 31,\n    yellow: 33,\n    green: 32,\n    cyan: 36,\n    blue: 34,\n    grey: 2\n};\nconst c = {};\nfor (let code of Object.keys(codes)) {\n    c[code] = (s) => {\n        s || (s = '');\n        if (IS_NODE_INSTANCE) {\n            return `\\x1b[${codes[code]}m` + s + '\\x1b[0m';\n        }\n        return `<span style=\"color: ${code}\">${s}</span>`;\n    };\n}\nexport default c;\n","import { TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESNumber, ESString } from '../../runtime/primitiveTypes';\nimport { str } from '../../util/util';\nconst module = {\n    asciiToChar: (props, number) => {\n        if (!(number instanceof ESNumber)) {\n            return new TypeError(Position.void, 'number', str(number.typeName()), str(number));\n        }\n        return new ESString(String.fromCharCode(number.valueOf()));\n    },\n    charToAscii: (props, char) => {\n        if (!(char instanceof ESString)) {\n            return new TypeError(Position.void, 'string', str(char.typeName()), str(char));\n        }\n        return new ESNumber(str(char).charCodeAt(0));\n    },\n};\nexport default module;\n","import { strip } from '../../runtime/primitives/wrapStrip';\nimport { str } from '../../util/util';\nimport { global } from \"../../constants\";\nconst module = {\n    parse: (json) => {\n        return JSON.parse(str(json));\n    },\n    stringify: (json) => {\n        return JSON.stringify(strip(json, { context: global }));\n    }\n};\nexport default module;\n","let AllowAny = Symbol('AllowAny');\nexport function defaultPermissions() {\n    return {\n        networking: false,\n        imports: true,\n        accessDOM: false,\n        useSTD: true,\n        fileSystem: false,\n    };\n}\nexport const config = {\n    permissions: defaultPermissions(),\n    modules: {\n        [AllowAny]: 'y'\n    },\n};\nfunction pathAsString(path) {\n    let res = '[';\n    for (let p of path) {\n        res += p + '][';\n    }\n    return res.substring(0, res.length - 1);\n}\nfunction parsePartOfConfig(config, configJSON, path = []) {\n    if (!config[AllowAny]) {\n        const unknownProps = Object.keys(configJSON).filter(x => !(x in config));\n        for (const k of unknownProps) {\n            console.error(`Cannot parse config`, ` - unknown property config${pathAsString([...path, k])}`);\n        }\n    }\n    for (const key of Object.keys(configJSON)) {\n        if (typeof config[key] !== typeof configJSON[key] && !config[AllowAny]) {\n            console.error(`Cannot parse config`, ` - config${pathAsString([...path, key])} should be of type '${typeof config[key]}'`);\n            return;\n        }\n        if (typeof config[key] === 'object') {\n            parsePartOfConfig(config[key], configJSON[key], [...path, key]);\n            continue;\n        }\n        config[key] = configJSON[key];\n    }\n}\nexport function parseConfig(configJSON) {\n    parsePartOfConfig(config, configJSON);\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { global, IS_NODE_INSTANCE, libs } from '../constants';\nimport { ESError } from '../errors';\nimport { ESSymbol } from '../runtime/symbol';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport ascii from './built-in-modules/ascii';\nimport json from './built-in-modules/json';\nimport dom from './built-in-modules/dom';\nimport time from './built-in-modules/time';\nimport { Position } from \"../position\";\nimport { Context } from \"../runtime/context\";\nimport { ESNamespace } from \"../runtime/primitives/esnamespace\";\nimport { ESString } from \"../runtime/primitives/esstring\";\nimport { run } from \"../index\";\nconst modules = {};\nconst processedModules = {};\nexport function initModules() {\n    processedModules['math'] = new ESJSBinding(Math);\n    processedModules['promise'] = new ESJSBinding(Promise);\n    processedModules['time'] = new ESJSBinding(time(libs));\n    processedModules['json'] = new ESJSBinding(json);\n    processedModules['ascii'] = new ESJSBinding(ascii);\n    if (!IS_NODE_INSTANCE) {\n        const domRes = dom(libs);\n        if (!(domRes instanceof ESError)) {\n            modules['dom'] = domRes;\n        }\n        else {\n            return domRes;\n        }\n    }\n}\nexport function processRawModule(module, name) {\n    const moduleDict = {};\n    const moduleRaw = module.valueOf();\n    for (const key of Object.keys(moduleRaw)) {\n        moduleDict[key] = new ESSymbol(moduleRaw[key], key);\n    }\n    return new ESJSBinding(moduleDict, name);\n}\nexport function moduleExist(name) {\n    return name in modules || name in processedModules;\n}\nexport function addModule(name, body) {\n    modules[name] = {};\n    processedModules[name] = body;\n}\nexport function getModule(name) {\n    if (name in processedModules) {\n        return processedModules[name];\n    }\n    if (name in modules) {\n        const res = new ESJSBinding(modules[name]);\n        const processed = processRawModule(res, name);\n        processedModules[name] = processed;\n        return processed;\n    }\n}\nexport function preloadModules(urls) {\n    return __awaiter(this, void 0, void 0, function* () {\n        for (const name of Object.keys(urls)) {\n            let url = urls[name];\n            if (url.substring(url.length - 3) !== '.es') {\n                url = url + '.es';\n            }\n            try {\n                let data = yield (yield fetch(url)).text();\n                const env = new Context();\n                env.parent = global;\n                let splitUrl = url.split(\"/\");\n                let scriptName = splitUrl.pop();\n                let exDir = splitUrl.join(\"/\");\n                const n = new ESNamespace(new ESString(scriptName), {});\n                const res = run(data, {\n                    env,\n                    fileName: name,\n                    currentDir: exDir,\n                });\n                n.__value__ = env.getSymbolTableAsDict();\n                if (res.error) {\n                    return res.error;\n                }\n                processedModules[name] = n;\n            }\n            catch (E) {\n                return new ESError(Position.void, 'ImportError', E.toString());\n            }\n        }\n    });\n}\n","import { ESError, ImportError, TypeError, ReferenceError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { strip, wrap } from '../runtime/primitives/wrapStrip';\nimport { ESArray, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESUndefined } from '../runtime/primitiveTypes';\nimport { indent, sleep, str } from '../util/util';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport chalk from \"../util/colours\";\nimport { IS_NODE_INSTANCE } from \"../constants\";\nimport { getModule, moduleExist } from \"./builtInModules\";\nexport const builtInFunctions = {\n    'range': [({ context }, minP, maxP, stepP) => {\n            if (!(minP instanceof ESNumber)) {\n                return new ESArray();\n            }\n            const min = minP.valueOf();\n            if (maxP instanceof ESUndefined) {\n                try {\n                    return new ESArray([...Array(min).keys()].map(n => new ESNumber(n)));\n                }\n                catch (e) {\n                    return new ESError(Position.void, 'RangeError', `Cannot make range of length '${str(min)}'`);\n                }\n            }\n            let step = 1;\n            if (!(maxP instanceof ESNumber)) {\n                return new TypeError(Position.void, 'number', maxP.typeName(), str(maxP));\n            }\n            let max = maxP.valueOf();\n            if (!(stepP instanceof ESUndefined)) {\n                if (!(stepP instanceof ESNumber)) {\n                    return new TypeError(Position.void, 'number', stepP.typeName(), str(stepP));\n                }\n                step = stepP.valueOf();\n            }\n            let arr = [];\n            let i = min;\n            while (i < max) {\n                arr.push(new ESNumber(i));\n                i += step;\n            }\n            return new ESArray(arr);\n        }, {\n            args: [{\n                    name: 'N',\n                    type: 'Number',\n                }],\n            description: 'Generates an array of integers given N. Starts at 0 and goes to N-1. Can be used like for i in range(10) ..., similarly to python.',\n            returns: 'array of numbers from 0 to N-1',\n            returnType: 'number[] | RangeError'\n        }],\n    'log': [({ context }, ...msgs) => {\n            console.log(...msgs.map(m => str(m)));\n        }, {\n            args: [{\n                    name: '...values',\n                    type: 'any[]'\n                }],\n            description: 'Uses console.log to log all values',\n            returnType: 'void'\n        }],\n    'parse_num': [({ context }, num) => {\n            try {\n                const val = parseFloat(str(num));\n                if (isNaN(val)) {\n                    return new ESError(Position.void, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n                }\n                return new ESNumber(val);\n            }\n            catch (e) {\n                return new ESError(Position.void, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n            }\n        }, {\n            args: [{\n                    name: 'num',\n                    type: 'any'\n                }],\n            description: `Converts a string of digits into a number. Works with decimals and integers. Calls .str() on value before using native JS 'parseFloat' function. Returns TypeError if the string can't be converted into a number.`,\n            returnType: 'number | TypeError'\n        }],\n    'help': [({ context }, ...things) => {\n            if (!things.length) {\n                return new ESString('Visit https://entropygames.io/entropy-script for help with Entropy Script!\\n' +\n                    'Try \\'help(<anything>)\\' for help about a particular object.');\n            }\n            let out = '';\n            for (const thing of things) {\n                if (!(thing instanceof ESPrimitive)) {\n                    console.log('Invalid arg not primitive: ' + str(thing));\n                    return;\n                }\n                const info = thing.info;\n                out += `${chalk.yellow(`Help on '${info.name || '(anonymous)'}'`)}:\n    \n    ${chalk.yellow('Value')}: ${indent(indent(str(thing)))}\n    ${chalk.yellow('Type')}: '${str(thing.typeName())}'\n    ${chalk.yellow('Location')}: ${info.file || chalk.yellow('(unknown)')}\n    \n        ${chalk.green(info.description) || `No description.`}\n        \n    ${info.helpLink ? chalk.cyan(info.helpLink + '\\n\\n') : ''}\n`;\n                if (info.args && thing instanceof ESFunction) {\n                    const total = info.args.length;\n                    const required = info.args.filter(a => a.required).length;\n                    if (total == required)\n                        out += chalk.yellow(`    Arguments (${total}): \\n`);\n                    else\n                        out += chalk.yellow(`    Arguments (${required}-${total}): \\n`);\n                    for (const [idx, arg] of info.args.entries()) {\n                        if (typeof arg !== 'object')\n                            out += `        ${idx + 1}. INVALID ARG INFO`;\n                        else\n                            out += `        ${idx + 1}. ${arg.name}${arg.required === false ? chalk.yellow(' (optional) ') : ' '}{${arg.type}} ${arg.description || ''}\\n`;\n                    }\n                    out += `\\n\\n`;\n                    if (info.returns)\n                        out += `    Returns: ${info.returns}\\n\\n`;\n                    if (info.returnType)\n                        out += `    Return Type: ${info.returnType}\\n\\n`;\n                }\n                if (info.contents && (thing instanceof ESObject || thing instanceof ESNamespace)) {\n                    out += '    Properties: \\n      ';\n                    for (let contents of info.contents)\n                        out += contents.name + '\\n      ';\n                }\n            }\n            console.log(out);\n            if (things.length > 1) {\n                return new ESArray(things);\n            }\n            if (things) {\n                return things[0];\n            }\n        }, {\n            args: [{\n                    name: 'value',\n                    type: 'any'\n                }],\n            description: 'logs info on value',\n            returns: 'value passed in'\n        }],\n    'delete': [({ context }, name) => {\n            const id = str(name);\n            if (!context.has(id)) {\n                return new ESError(Position.void, 'DeleteError', `Identifier '${id}' not found in the current context`);\n            }\n            context.set(id, new ESUndefined());\n        }, {\n            name: 'delete',\n            args: [{ name: 'identifier', type: 'string' }],\n            description: 'Deletes a variable from the current context'\n        }],\n    '__path__': [({ context }) => {\n            return new ESString(context.path);\n        }, {\n            name: '__path__',\n            args: [],\n            description: 'Returns the current path'\n        }],\n    '__symbols__': [({ context }, recursive) => {\n            if (recursive.bool().valueOf()) {\n                let keys = context.keys;\n                while (context.parent) {\n                    keys = context.parent.keys;\n                    context = context.parent;\n                }\n                return wrap(keys);\n            }\n            return wrap(context.keys);\n        }, {\n            name: '__symbols',\n            args: [{\n                    name: 'recursive',\n                    type: 'Bool',\n                    description: 'if true, returns the names of all symbols available in the current scope, if false, just the symbols declared in the current scope.'\n                }],\n            description: 'Returns an array of the names of all symbols in the current context'\n        }],\n    'using': [(props, module, global_) => {\n            if (!(module instanceof ESNamespace) && !(module instanceof ESJSBinding) && !(module instanceof ESObject)) {\n                return new TypeError(Position.void, 'Namespace', str(module.typeName()));\n            }\n            let { context } = props;\n            let global = !(global_ && !global_.bool().valueOf());\n            let value = strip(module, props);\n            if (global) {\n                context = context.root;\n            }\n            else if (context.parent) {\n                context = context.parent;\n            }\n            for (const key of Object.keys(value)) {\n                let res = context.setOwn(key, wrap(value[key]));\n                if (res)\n                    return res;\n            }\n        }, {\n            name: 'using',\n            args: [\n                { name: 'module', type: 'namespace' },\n                { name: 'global', type: 'bool' }\n            ],\n            description: 'Adds contents of a namespace to the current or global context'\n        }],\n    'sleep': [({ context }, time, cb) => {\n            if (!(time instanceof ESNumber)) {\n                return new TypeError(Position.void, 'number', str(time.typeName()), str(time));\n            }\n            sleep(time.valueOf())\n                .then(() => {\n                const res = cb.__call__({ context });\n                if (res instanceof ESError) {\n                    console.log(res.str);\n                }\n            });\n        }, {\n            name: 'sleep',\n            args: [{ name: 'n', type: 'number' }, { name: 'callback', type: 'function' }],\n            description: 'Waits n milliseconds and then executes the callback'\n        }],\n    'throw': [({ context }, name, details) => {\n            return new ESError(Position.void, str(name), str(details));\n        }, {\n            name: 'throw',\n            args: [{ name: 'name', type: 'String' }, { name: 'details', type: 'String' }]\n        }],\n    'typeof': [({ context }, symbolPrim) => {\n            if (!(symbolPrim instanceof ESString)) {\n                return new TypeError(Position.void, 'String', symbolPrim.typeName(), str(symbolPrim));\n            }\n            let symbol = str(symbolPrim);\n            if (!context.has(symbol)) {\n                return new ReferenceError(Position.void, symbol);\n            }\n            let res = context.getSymbol(symbol);\n            if (!res) {\n                return new ReferenceError(Position.void, symbol);\n            }\n            if (res instanceof ESError) {\n                return res;\n            }\n            return res.type;\n        }, {\n            name: 'typeof',\n            args: [\n                { name: 'identifier', type: 'String' }\n            ]\n        }]\n};\nexport function addDependencyInjectedBIFs(printFunc, inputFunc) {\n    builtInFunctions['import'] = [(props, rawUrl) => {\n            if (IS_NODE_INSTANCE) {\n                return new ESError(Position.void, 'ImportError', 'Is running in node instance but trying to run browser import function');\n            }\n            if (!(rawUrl instanceof ESString)) {\n                return new TypeError(Position.void, 'String', rawUrl.typeName(), str(rawUrl));\n            }\n            const url = str(rawUrl);\n            if (moduleExist(url)) {\n                return getModule(url);\n            }\n            return new ImportError(Position.void, url, 'Module not found. Try adding it to the pre-loaded modules.');\n        }, {\n            description: 'Loads a module. Cannot be used asynchronously, so add any modules to pre-load in the esconfig.json file.'\n        }];\n    builtInFunctions['print'] = [({ context }, ...args) => {\n            let out = ``;\n            for (let arg of args) {\n                out += str(arg);\n            }\n            printFunc(out);\n        }, {}];\n    builtInFunctions['input'] = [({ context }, msg, cbRaw) => {\n            inputFunc(msg.valueOf(), (msg) => {\n                let cb = cbRaw === null || cbRaw === void 0 ? void 0 : cbRaw.valueOf();\n                if (cb instanceof ESFunction) {\n                    let res = cb.__call__({ context }, new ESString(msg));\n                    if (res instanceof ESError) {\n                        console.log(res.str);\n                    }\n                }\n                else if (typeof cb === 'function') {\n                    cb(msg);\n                }\n                return new ESString('\\'input()\\' does not return anything. Pass in a function as the second argument, which will take the user input as an argument.');\n            });\n        }, {}];\n}\n","import { addDependencyInjectedBIFs, builtInFunctions } from \"./built-in/builtInFunctions\";\nimport { initModules } from './built-in/builtInModules';\nimport { ESFunction } from './runtime/primitiveTypes';\nimport loadGlobalConstants from \"./built-in/globalConstants\";\nimport { types } from \"./constants\";\nexport function initialise(globalContext, printFunc, inputFunc) {\n    addDependencyInjectedBIFs(printFunc, inputFunc);\n    for (let builtIn in builtInFunctions) {\n        const fn = new ESFunction(builtInFunctions[builtIn][0], [], builtIn, undefined, undefined, globalContext, true);\n        fn.info = builtInFunctions[builtIn][1];\n        fn.info.name = builtIn;\n        fn.info.isBuiltIn = true;\n        fn.info.file = 'built-in';\n        globalContext.set(builtIn, fn, {\n            global: true,\n            isConstant: true,\n            type: types.function\n        });\n    }\n    loadGlobalConstants(globalContext);\n    const initModRes = initModules();\n    if (initModRes) {\n        return initModRes;\n    }\n    globalContext.initialisedAsGlobal = true;\n}\n","import { ESBoolean, ESUndefined } from '../runtime/primitiveTypes';\nimport { types } from \"../constants\";\nexport default function load(context) {\n    const globalConstants = {\n        'false': new ESBoolean(false),\n        'true': new ESBoolean(true),\n        'nil': new ESUndefined(),\n        'Any': types.any,\n        'Number': types.number,\n        'String': types.string,\n        'Bool': types.bool,\n        'Func': types.function,\n        'Array': types.array,\n        'Object': types.object,\n        'Type': types.type,\n        'Error': types.error,\n        'Undefined': types.undefined\n    };\n    for (let constant in globalConstants) {\n        const value = globalConstants[constant];\n        context.set(constant, value, {\n            global: true,\n            isConstant: true\n        });\n    }\n}\n","import { now } from '../../constants';\nimport { ESFunction } from '../../runtime/primitives/esfunction';\nimport { ESJSBinding } from '../../runtime/primitives/esjsbinding';\nimport { ESNumber } from '../../runtime/primitives/esnumber';\nconst module = (config) => ({\n    now: new ESFunction(() => new ESNumber(now())),\n    date: new ESJSBinding(Date)\n});\nexport default module;\n","import { IS_NODE_INSTANCE } from '../../constants';\nimport { InvalidRuntimeError, PermissionRequiredError, TypeError } from '../../errors';\nimport { ESJSBinding } from \"../../runtime/primitives/esjsbinding\";\nimport { config } from \"../../config\";\nimport { Position } from \"../../position\";\nconst module = () => {\n    if (!config.permissions.accessDOM) {\n        return new PermissionRequiredError('No access to DOM');\n    }\n    if (IS_NODE_INSTANCE) {\n        return new InvalidRuntimeError();\n    }\n    const w = window;\n    if (typeof w === 'undefined') {\n        return new TypeError(Position.void, 'Object', 'undefined', 'window', 'Window is undefined! ES expected to be in a browser.');\n    }\n    if (!('$' in w)) {\n        return {\n            window: new ESJSBinding(w, 'window'),\n            document: new ESJSBinding(w['document'], 'document'),\n        };\n    }\n    const $ = new ESJSBinding(w['$'], 'jquery');\n    return {\n        $,\n        window: new ESJSBinding(w, 'window'),\n        document: new ESJSBinding(w['document'], 'document'),\n    };\n};\nexport default module;\n","import { ESPrimitive } from \"./primitiveTypes\";\nexport function interpretArgument(arg, context) {\n    var _a;\n    const typeRes = arg.type.interpret(context);\n    if (typeRes.error) {\n        return typeRes.error;\n    }\n    let defaultValue;\n    if (arg.defaultValue) {\n        let defaultValRes = (_a = arg.defaultValue) === null || _a === void 0 ? void 0 : _a.interpret(context);\n        if (defaultValRes.error) {\n            return defaultValRes.error;\n        }\n        if (defaultValRes.val instanceof ESPrimitive) {\n            defaultValue = defaultValRes.val;\n        }\n    }\n    return {\n        name: arg.name,\n        type: typeRes.val,\n        defaultValue\n    };\n}\n","import { ESError, InvalidSyntaxError, ReferenceError, TypeError } from \"../errors\";\nimport { Context } from './context';\nimport { Position } from \"../position\";\nimport { catchBlockErrorSymbolName, now, tokenTypeString, tt, types } from \"../constants\";\nimport { interpretArgument } from \"./argument\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESJSBinding, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESType, ESUndefined } from \"./primitiveTypes\";\nimport { generateRandomSymbol, str } from '../util/util';\nimport { ESTypeNot, ESTypeUnion } from \"./primitives/estype\";\nexport class interpretResult {\n    constructor(val) {\n        this.val = new ESUndefined();\n        this.shouldBreak = false;\n        this.shouldContinue = false;\n        if (val instanceof ESError) {\n            this.error = val;\n        }\n        else if (val) {\n            this.val = val;\n        }\n    }\n}\nexport class compileResult {\n    constructor(val) {\n        this.val = '';\n        this.hoisted = '';\n        if (typeof val === 'string') {\n            this.val = val;\n        }\n        else if (val) {\n            this.error = val;\n        }\n    }\n    register(node, config) {\n        const res = node.compilePy(config);\n        this.hoisted += res.hoisted;\n        if (res.error) {\n            this.error = res.error;\n            return '';\n        }\n        return res.val;\n    }\n}\nexport class Node {\n    constructor(pos, isTerminal = false) {\n        this.pos = pos;\n        this.isTerminal = isTerminal;\n    }\n    interpret(context) {\n        var _a;\n        const start = now();\n        const res = new interpretResult;\n        const val = this.interpret_(context);\n        if (val instanceof ESError) {\n            res.error = val;\n        }\n        else if (val instanceof interpretResult) {\n            res.val = val.val;\n            res.error = val.error;\n            res.funcReturn = val.funcReturn;\n            res.shouldBreak = val.shouldBreak;\n            res.shouldContinue = val.shouldContinue;\n        }\n        else {\n            res.val = val;\n        }\n        if (res.error && res.error.pos.isUnknown) {\n            res.error.pos = this.pos;\n        }\n        if (!(res.val instanceof ESPrimitive)) {\n            res.error = new TypeError(Position.void, 'Primitive', 'Native JS value', str(res.val));\n            res.val = new ESUndefined();\n        }\n        (_a = res.val.info).file || (_a.file = this.pos.file);\n        Node.interprets++;\n        let time = now() - start;\n        Node.totalTime += time;\n        if (time > Node.maxTime)\n            Node.maxTime = time;\n        return res;\n    }\n}\nNode.interprets = 0;\nNode.totalTime = 0;\nNode.maxTime = 0;\nexport class N_binOp extends Node {\n    constructor(pos, left, opTok, right) {\n        super(pos);\n        this.left = left;\n        this.opTok = opTok;\n        this.right = right;\n    }\n    interpret_(context) {\n        const left = this.left.interpret(context);\n        if (left.error)\n            return left.error;\n        const right = this.right.interpret(context);\n        if (right.error)\n            return right.error;\n        const l = left.val;\n        const r = right.val;\n        if (typeof l === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', l, 'N_binOp.interpret_');\n        }\n        if (typeof r === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', r, 'N_binOp.interpret_');\n        }\n        switch (this.opTok.type) {\n            case tt.LTE: {\n                const lt = l.__lt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (lt instanceof ESError)\n                    return lt;\n                if (eq instanceof ESError)\n                    return eq;\n                return new interpretResult(lt.__or__({ context }, eq));\n            }\n            case tt.GTE: {\n                const gt = l.__gt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (gt instanceof ESError)\n                    return gt;\n                if (eq instanceof ESError)\n                    return eq;\n                return new interpretResult(gt.__or__({ context }, eq));\n            }\n            case tt.NOTEQUALS: {\n                const res = l.__eq__({ context }, r);\n                if (res instanceof ESError)\n                    return res;\n                return new interpretResult(new ESBoolean(!res.bool().valueOf()));\n            }\n            case tt.ADD:\n                return new interpretResult(l.__add__({ context }, r));\n            case tt.SUB:\n                return new interpretResult(l.__subtract__({ context }, r));\n            case tt.MUL:\n                return new interpretResult(l.__multiply__({ context }, r));\n            case tt.DIV:\n                return new interpretResult(l.__divide__({ context }, r));\n            case tt.POW:\n                return new interpretResult(l.__pow__({ context }, r));\n            case tt.MOD:\n                return new interpretResult(l.__mod__({ context }, r));\n            case tt.EQUALS:\n                return new interpretResult(l.__eq__({ context }, r));\n            case tt.LT:\n                return new interpretResult(l.__lt__({ context }, r));\n            case tt.GT:\n                return new interpretResult(l.__gt__({ context }, r));\n            case tt.AND:\n                return new interpretResult(l.__and__({ context }, r));\n            case tt.OR:\n                return new interpretResult(l.__or__({ context }, r));\n            case tt.APMERSAND:\n                return new interpretResult(l.__ampersand__({ context }, r));\n            case tt.PIPE:\n                return new interpretResult(l.__pipe__({ context }, r));\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid binary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(config) {\n        const left = this.left.compileJS(config);\n        if (left.error)\n            return left;\n        const right = this.right.compileJS(config);\n        if (right.error)\n            return right;\n        if (config.minify) {\n            return new compileResult(`${left.val}${tokenTypeString[this.opTok.type]}${right.val}`);\n        }\n        return new compileResult(`${left.val} ${tokenTypeString[this.opTok.type]} ${right.val}`);\n    }\n    compilePy(config) {\n        const left = this.left.compilePy(config);\n        if (left.error)\n            return left;\n        const right = this.right.compilePy(config);\n        if (right.error)\n            return right;\n        const switchers = {\n            '&&': 'and',\n            '||': 'or',\n            '^': '**',\n        };\n        let op = tokenTypeString[this.opTok.type];\n        if (op in switchers) {\n            op = switchers[op];\n        }\n        return new compileResult(`${left.val} ${op} ${right.val}`);\n    }\n}\nexport class N_unaryOp extends Node {\n    constructor(pos, a, opTok) {\n        super(pos);\n        this.a = a;\n        this.opTok = opTok;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const res = this.a.interpret(context);\n        if (res.error)\n            return res.error;\n        switch (this.opTok.type) {\n            case tt.SUB:\n            case tt.ADD:\n                if (!(res.val instanceof ESNumber)) {\n                    return new TypeError(this.pos, 'Number', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().toString()) || 'undefined_', (_b = res.val) === null || _b === void 0 ? void 0 : _b.valueOf());\n                }\n                const numVal = res.val.valueOf();\n                return new interpretResult(new ESNumber(this.opTok.type === tt.SUB ? -numVal : Math.abs(numVal)));\n            case tt.NOT:\n                return new interpretResult(new ESBoolean(!((_c = res === null || res === void 0 ? void 0 : res.val) === null || _c === void 0 ? void 0 : _c.bool().valueOf())));\n            case tt.BITWISE_NOT:\n                return new interpretResult(new ESTypeNot(res.val));\n            case tt.QM:\n                return new interpretResult(new ESTypeUnion(types.undefined, res.val));\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid unary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(config) {\n        const val = this.a.compileJS(config);\n        if (val.error)\n            return val;\n        return new compileResult(`${tokenTypeString[this.opTok.type]}${val.val}`);\n    }\n    compilePy(config) {\n        const val = this.a.compilePy(config);\n        if (val.error)\n            return val;\n        return new compileResult(`${tokenTypeString[this.opTok.type]}${val.val}`);\n    }\n}\nexport class N_varAssign extends Node {\n    constructor(pos, varNameTok, value, assignType = '=', isGlobal = false, isConstant = false, isDeclaration = false, type = types.any) {\n        super(pos);\n        this.value = value;\n        this.varNameTok = varNameTok;\n        this.isGlobal = isGlobal;\n        this.assignType = assignType;\n        this.isConstant = isConstant;\n        this.isDeclaration = isDeclaration;\n        if (type instanceof ESPrimitive) {\n            this.type = new N_primitiveWrapper(type);\n        }\n        else {\n            this.type = type;\n        }\n    }\n    interpret_(context) {\n        var _a, _b;\n        if (this.isDeclaration) {\n            if (context.hasOwn(this.varNameTok.value)) {\n                return new InvalidSyntaxError(this.pos, `Symbol '${this.varNameTok.value}' already exists, and cannot be redeclared`);\n            }\n            if (this.assignType !== '=') {\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            }\n        }\n        const res = this.value.interpret(context);\n        const typeRes = this.type.interpret(context);\n        if (res.error)\n            return res.error;\n        if (typeRes.error)\n            return typeRes.error;\n        if (!typeRes.val) {\n            return new TypeError(this.varNameTok.pos, 'Type', 'undefined');\n        }\n        if (!res.val) {\n            return new TypeError(this.varNameTok.pos, '~undefined', 'undefined', 'N_varAssign.interpret_');\n        }\n        const typeCheckRes = typeRes.val.type_check({ context }, res.val);\n        if (typeCheckRes instanceof ESError)\n            return typeCheckRes;\n        if (!typeCheckRes.bool().valueOf()) {\n            return new TypeError(this.varNameTok.pos, str(typeRes.val), str((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName()), str(res.val));\n        }\n        if (this.isDeclaration) {\n            context.setOwn(this.varNameTok.value, res.val, {\n                global: false,\n                isConstant: this.isConstant,\n                type: typeRes.val\n            });\n            return new interpretResult(res.val);\n        }\n        if (context.has(this.varNameTok.value)) {\n            const symbol = context.getSymbol(this.varNameTok.value);\n            if (symbol instanceof ESError) {\n                return symbol;\n            }\n            if (symbol) {\n                if (!symbol.type.type_check({ context }, res.val).valueOf()) {\n                    return new TypeError(this.varNameTok.pos, str(symbol.type), (_b = res.val) === null || _b === void 0 ? void 0 : _b.typeName(), str(res.val));\n                }\n            }\n        }\n        if (this.assignType === '=') {\n            let value = res.val;\n            if (value === undefined) {\n                value = new ESUndefined();\n            }\n            const type = context.getSymbol(this.varNameTok.value);\n            if (type instanceof ESError) {\n                return type;\n            }\n            if (!type) {\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable without keyword`);\n            }\n            const typeCheckRes = type.type.type_check({ context }, res.val);\n            if (typeCheckRes instanceof ESError)\n                return typeCheckRes;\n            if (!typeCheckRes.bool().valueOf()) {\n                return new TypeError(Position.void, str(type.type), str(res.val.__type__), str(res.val));\n            }\n            const setRes = context.set(this.varNameTok.value, value, {\n                global: this.isGlobal,\n                isConstant: this.isConstant,\n                type: type.type\n            });\n            if (setRes instanceof ESError) {\n                return setRes;\n            }\n        }\n        else {\n            const currentVal = context.get(this.varNameTok.value);\n            if (currentVal instanceof ESError)\n                return currentVal;\n            if (currentVal == undefined)\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            let newVal;\n            let assignVal = res.val;\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError) {\n                return newVal;\n            }\n            let setRes = context.set(this.varNameTok.value, newVal, {\n                global: this.isGlobal,\n                isConstant: this.isConstant,\n                type: newVal.__type__\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n            res.val = newVal;\n        }\n        if (res.val.info.name === '(anonymous)' || !res.val.info.name) {\n            res.val.info.name = this.varNameTok.value;\n        }\n        return res;\n    }\n    compileJS(config) {\n        const val = this.value.compileJS(config);\n        if (val.error)\n            return val;\n        let declaration = '';\n        if (this.isDeclaration) {\n            if (this.isGlobal) {\n                declaration = 'var';\n            }\n            else if (this.isConstant) {\n                declaration = 'const';\n            }\n            else {\n                declaration = 'let';\n            }\n        }\n        let assign = this.assignType;\n        if (assign !== '=') {\n            assign += '=';\n        }\n        if (config.minify) {\n            return new compileResult(`${declaration} ${this.varNameTok.value}${assign}${val.val}`);\n        }\n        return new compileResult(`${declaration} ${this.varNameTok.value} ${assign} ${val.val}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const val = this.value.compilePy(config);\n        if (val.error)\n            return val;\n        res.hoisted += val.hoisted;\n        let assign = this.assignType;\n        if (assign !== '=') {\n            assign += '=';\n        }\n        if (this.isGlobal) {\n            res.hoisted += `${this.varNameTok.value}=None`;\n        }\n        if (config.minify) {\n            res.val = `${this.varNameTok.value}${assign}${val.val}`;\n        }\n        else {\n            res.val = `${this.varNameTok.value} ${assign} ${val.val}`;\n        }\n        return res;\n    }\n}\nexport class N_arrayDestructAssign extends Node {\n    constructor(pos, varNames, types, value, isGlobal = false, isConstant = false) {\n        super(pos);\n        this.value = value;\n        this.varNames = varNames;\n        this.types = types;\n        this.isGlobal = isGlobal;\n        this.isConstant = isConstant;\n    }\n    interpret_(context) {\n        for (let varName of this.varNames) {\n            if (context.hasOwn(varName)) {\n                return new InvalidSyntaxError(this.pos, `Symbol '${varName}' already exists, and cannot be redeclared`);\n            }\n        }\n        const res = this.value.interpret(context);\n        if (res.error)\n            return res.error;\n        if (res.val instanceof ESArray || res.val instanceof ESString) {\n            if (this.varNames.length > res.val.valueOf().length) {\n                return new TypeError(Position.void, `[Any * >=${this.varNames.length}]`, `[Any * <${this.varNames.length}]`, str(res.val));\n            }\n            let i = 0;\n            for (let varName of this.varNames) {\n                let val = res.val.valueOf()[i];\n                if (typeof val === 'string') {\n                    val = new ESString(val);\n                }\n                let typeRes = this.types[i].interpret(context);\n                if (typeRes.error)\n                    return typeRes;\n                let typeCheckRes = typeRes.val.type_check({ context }, val);\n                if (typeCheckRes instanceof ESError)\n                    return typeCheckRes;\n                if (!typeCheckRes.bool().valueOf()) {\n                    return new TypeError(Position.void, str(typeRes.val), val.typeName(), str(val));\n                }\n                context.setOwn(varName, val, {\n                    global: this.isGlobal,\n                    isConstant: this.isConstant,\n                    type: res.val.__type__\n                });\n                i++;\n            }\n            return new interpretResult(res.val);\n        }\n        let i = 0;\n        for (let varName of this.varNames) {\n            let objPropRes = res.val.__get_property__({ context }, new ESString(varName));\n            if (objPropRes instanceof ESError)\n                return objPropRes;\n            let typeRes = this.types[i].interpret(context);\n            if (typeRes.error)\n                return typeRes;\n            let typeCheckRes = typeRes.val.type_check({ context }, objPropRes);\n            if (typeCheckRes instanceof ESError)\n                return typeCheckRes;\n            if (!typeCheckRes.bool().valueOf()) {\n                return new TypeError(Position.void, str(typeRes.val), objPropRes.typeName(), str(objPropRes));\n            }\n            context.setOwn(varName, objPropRes, {\n                global: this.isGlobal,\n                isConstant: this.isConstant,\n                type: res.val.__type__\n            });\n            i++;\n        }\n        return new interpretResult(res.val);\n    }\n    compileJS(config) {\n        const val = this.value.compileJS(config);\n        if (val.error)\n            return val;\n        let declaration = '';\n        if (this.isGlobal) {\n            declaration = 'var';\n        }\n        else if (this.isConstant) {\n            declaration = 'const';\n        }\n        else {\n            declaration = 'let';\n        }\n        if (config.minify) {\n            return new compileResult(`${declaration}[${this.varNames.join(',')}]=${val.val}`);\n        }\n        return new compileResult(`${declaration} [${this.varNames.join(', ')}] = ${val.val}`);\n    }\n    compilePy(config) {\n        const val = this.value.compileJS(config);\n        if (val.error)\n            return val;\n        return new compileResult(`${this.varNames.join(', ')} = ${val.val}`);\n    }\n}\nexport class N_if extends Node {\n    constructor(pos, comparison, ifTrue, ifFalse) {\n        super(pos);\n        this.comparison = comparison;\n        this.ifFalse = ifFalse;\n        this.ifTrue = ifTrue;\n    }\n    interpret_(context) {\n        var _a;\n        let newContext = new Context();\n        newContext.parent = context;\n        let res = new interpretResult();\n        let compRes = this.comparison.interpret(context);\n        if (compRes.error)\n            return compRes;\n        if ((_a = compRes.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            return this.ifTrue.interpret(newContext);\n        }\n        else if (this.ifFalse) {\n            return this.ifFalse.interpret(newContext);\n        }\n        return res;\n    }\n    compileJS(config) {\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 4);\n        config.indent += 4;\n        const statementRes = this.comparison.compileJS(config);\n        if (statementRes.error)\n            return statementRes;\n        const ifTrueRes = this.ifTrue.compileJS(config);\n        if (ifTrueRes.error)\n            return ifTrueRes;\n        if (!this.ifFalse) {\n            if (config.minify) {\n                return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}\\n}`);\n            }\n            return new compileResult(`if (${statementRes.val}) {\\n${ifTrueRes.val}\\n}`);\n        }\n        config.indent = highIndent.length;\n        let ifFalseRes = this.ifFalse.compileJS(config);\n        if (ifFalseRes.error)\n            return ifFalseRes;\n        if (!(this.ifFalse instanceof N_statements)) {\n            ifFalseRes.val = highIndent + ifFalseRes.val;\n        }\n        if (config.minify) {\n            return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}}else{${ifFalseRes.val}}`);\n        }\n        return new compileResult(`if (${statementRes.val}) {\\n${ifTrueRes.val}\\n${indent}} else {\\n${ifFalseRes.val}\\n${indent}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 4);\n        config.indent += 4;\n        const statementRes = this.comparison.compilePy(config);\n        if (statementRes.error)\n            return statementRes;\n        res.hoisted += statementRes.hoisted;\n        const ifTrueRes = this.ifTrue.compilePy(config);\n        if (ifTrueRes.error)\n            return ifTrueRes;\n        res.hoisted += ifTrueRes.hoisted;\n        if (!this.ifFalse) {\n            return new compileResult(`if ${statementRes.val}:\\n${highIndent}${ifTrueRes.val}`);\n        }\n        const ifFalseRes = this.ifFalse.compilePy(config);\n        if (ifFalseRes.error)\n            return ifFalseRes;\n        res.hoisted += ifFalseRes.hoisted;\n        if (!(this.ifFalse instanceof N_statements)) {\n            ifFalseRes.val = highIndent + ifFalseRes.val;\n        }\n        return new compileResult(`if ${statementRes.val}:\\n${ifTrueRes.val}\\n${indent}else:\\n${ifFalseRes.val}\\n${indent}`);\n    }\n}\nexport class N_while extends Node {\n    constructor(pos, comparison, loop) {\n        super(pos);\n        this.comparison = comparison;\n        this.loop = loop;\n    }\n    interpret_(context) {\n        var _a, _b;\n        while (true) {\n            let newContext = new Context();\n            newContext.parent = context;\n            let shouldLoop = this.comparison.interpret(context);\n            if (shouldLoop.error)\n                return shouldLoop;\n            if (!((_b = (_a = shouldLoop.val) === null || _a === void 0 ? void 0 : _a.bool()) === null || _b === void 0 ? void 0 : _b.valueOf()))\n                break;\n            let potentialError = this.loop.interpret(newContext);\n            if (potentialError.error)\n                return potentialError;\n            if (potentialError.shouldBreak)\n                break;\n        }\n        return new interpretResult(new ESUndefined());\n    }\n    compileJS(config) {\n        config.indent += 4;\n        const comparisonRes = this.comparison.compileJS(config);\n        if (comparisonRes.error)\n            return comparisonRes;\n        const bodyRes = this.loop.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        if (config.minify) {\n            return new compileResult(`while(${comparisonRes.val}){${bodyRes.val}}`);\n        }\n        return new compileResult(`while (${comparisonRes.val}) {\\n${bodyRes.val}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const highIndent = ' '.repeat(config.indent || 0);\n        const comparisonRes = this.comparison.compilePy(config);\n        if (comparisonRes.error)\n            return comparisonRes;\n        res.hoisted += comparisonRes.hoisted;\n        const bodyRes = this.loop.compilePy(config);\n        if (bodyRes.error)\n            return bodyRes;\n        res.hoisted += bodyRes.hoisted;\n        return new compileResult(`while ${comparisonRes.val}:\\n${highIndent}${bodyRes.val}`);\n    }\n}\nexport class N_for extends Node {\n    constructor(pos, body, array, identifier, isGlobalIdentifier, isConstIdentifier) {\n        super(pos);\n        this.body = body;\n        this.array = array;\n        this.identifier = identifier;\n        this.isGlobalId = isGlobalIdentifier;\n        this.isConstId = isConstIdentifier;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const array = this.array.interpret(context);\n        if (array.error)\n            return array;\n        if (context.has(this.identifier.value) && this.isGlobalId) {\n            return new InvalidSyntaxError(this.identifier.pos, 'Cannot declare global variable which exists in the current scope');\n        }\n        function iteration(body, id, element, isGlobal, isConstant) {\n            let newContext = new Context();\n            newContext.parent = context;\n            newContext.set(id, element, {\n                global: isGlobal,\n                isConstant,\n                type: element.__type__\n            });\n            const res = body.interpret(newContext);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (res.shouldBreak) {\n                res.shouldBreak = false;\n                return 'break';\n            }\n            if (res.shouldContinue) {\n                res.shouldContinue = false;\n            }\n        }\n        if (array.val instanceof ESNumber) {\n            for (let i = 0; i < array.val.valueOf(); i++) {\n                const res = iteration(this.body, this.identifier.value, new ESNumber(i), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESObject || array.val instanceof ESJSBinding) {\n            for (let element in (_a = array.val) === null || _a === void 0 ? void 0 : _a.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, new ESString(element), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESArray) {\n            for (let element of (_b = array.val) === null || _b === void 0 ? void 0 : _b.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, element, this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESString) {\n            for (let element of (_c = array.val) === null || _c === void 0 ? void 0 : _c.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, new ESString(element), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val);\n        return new interpretResult(new ESUndefined());\n    }\n    compileJS(config) {\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const iteratorRes = this.array.compileJS(config);\n        if (iteratorRes.error)\n            return iteratorRes;\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        let declaration = 'let';\n        if (this.isGlobalId) {\n            declaration = 'var';\n        }\n        else if (this.isConstId) {\n            declaration = 'const';\n        }\n        if (config.minify) {\n            return new compileResult(`for(${declaration} ${this.identifier.value} of ${iteratorRes.val}){${bodyRes.val}\\n${indent}}`);\n        }\n        return new compileResult(`for (${declaration} ${this.identifier.value} of ${iteratorRes.val}) {\\n${bodyRes.val}\\n${indent}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        config.indent += 4;\n        const iteratorRes = res.register(this.array, config);\n        if (res.error)\n            return res;\n        const bodyRes = res.register(this.body, config);\n        if (res.error)\n            return res;\n        if (this.isGlobalId) {\n            res.hoisted += `${this.identifier.value}=None`;\n        }\n        res.val = `for ${this.identifier.value} in ${iteratorRes}:\\n${bodyRes}`;\n        return res;\n    }\n}\nexport class N_array extends Node {\n    constructor(pos, items, shouldClone = false) {\n        super(pos);\n        this.items = items;\n        this.shouldClone = shouldClone;\n    }\n    interpret_(context) {\n        let result = new interpretResult();\n        let interpreted = [];\n        for (let item of this.items) {\n            const res = item.interpret(context);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (!res.val)\n                continue;\n            let val = res.val;\n            if (this.shouldClone) {\n                val = val.clone();\n            }\n            interpreted.push(val);\n        }\n        result.val = new ESArray(interpreted);\n        return result;\n    }\n    compileJS(config) {\n        const res = new compileResult('[');\n        for (let item of this.items) {\n            const itemRes = item.compileJS(config);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ',';\n        }\n        res.val += ']';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult('[');\n        for (let item of this.items) {\n            const itemRes = res.register(item, config);\n            if (res.error)\n                return res;\n            res.val += itemRes + ',';\n        }\n        res.val += ']';\n        return res;\n    }\n}\nexport class N_objectLiteral extends Node {\n    constructor(pos, properties) {\n        super(pos);\n        this.properties = properties;\n    }\n    interpret_(context) {\n        let interpreted = {};\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.interpret(context);\n            if (value.error)\n                return value.error;\n            const key = keyNode.interpret(context);\n            if (key.error)\n                return key.error;\n            if (key.val && value.val) {\n                interpreted[key.val.valueOf()] = value.val;\n            }\n        }\n        return new interpretResult(new ESObject(interpreted));\n    }\n    compileJS(config) {\n        const res = new compileResult('{');\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.compileJS(config);\n            if (value.error)\n                return value;\n            const key = keyNode.compileJS(config);\n            if (key.error)\n                return key;\n            if (key.val && value.val) {\n                res.val += `[${key.val}]: ${value.val},`;\n            }\n        }\n        res.val += '}';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult('{');\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = res.register(valueNode, config);\n            if (res.error)\n                return res;\n            const key = res.register(keyNode, config);\n            if (res.error)\n                return res;\n            if (key && value) {\n                res.val += `${key}: ${value},`;\n            }\n        }\n        res.val += '}';\n        return res;\n    }\n}\nexport class N_statements extends Node {\n    constructor(pos, items, topLevel = false) {\n        super(pos);\n        this.items = items;\n        this.topLevel = topLevel;\n    }\n    interpret_(context) {\n        if (!this.topLevel) {\n            let last;\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (typeof res.funcReturn !== 'undefined') || res.shouldBreak || res.shouldContinue)\n                    return res;\n                last = res.val;\n            }\n            return new interpretResult(last || new ESUndefined());\n        }\n        else {\n            let result = new interpretResult();\n            let interpreted = [];\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (res.funcReturn !== undefined))\n                    return res;\n                if (!res.val)\n                    continue;\n                let val = res.val.clone();\n                interpreted.push(val);\n            }\n            result.val = new ESArray(interpreted);\n            return result;\n        }\n    }\n    compileJS(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        res.val += indent;\n        for (let item of this.items) {\n            const itemRes = item.compileJS(config);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ';';\n            if (!config.minify) {\n                res.val += '\\n' + indent;\n            }\n        }\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        res.val += indent;\n        for (let item of this.items) {\n            const itemRes = res.register(item, config);\n            if (res.error)\n                return res;\n            res.val += itemRes;\n            res.val += '\\n' + indent;\n        }\n        return res;\n    }\n}\nexport class N_functionCall extends Node {\n    constructor(pos, to, args) {\n        super(pos);\n        this.arguments = args;\n        this.to = to;\n    }\n    interpret_(context) {\n        let { val, error } = this.to.interpret(context);\n        if (error) {\n            return error;\n        }\n        if (!val) {\n            return new TypeError(this.pos, 'any', 'undefined', undefined, 'On function call');\n        }\n        let params = [];\n        for (let arg of this.arguments) {\n            const res = arg.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (res.val) {\n                params.push(res.val);\n            }\n        }\n        const res = val.__call__({ context }, ...params);\n        if (res instanceof ESError) {\n            res.traceback.push({\n                position: this.pos,\n                line: `${val.info.name || '<AnonFunction>'}(${params.map(str).join(', ')})`\n            });\n        }\n        return new interpretResult(res);\n    }\n    compileJS(config) {\n        const res = new compileResult;\n        const funcRes = this.to.compileJS(config);\n        if (funcRes.error)\n            return funcRes;\n        res.val = funcRes.val + '(';\n        for (let arg of this.arguments) {\n            const argRes = arg.compileJS(config);\n            if (argRes.error)\n                return argRes;\n            res.val += argRes.val;\n            if (arg !== this.arguments[this.arguments.length - 1]) {\n                res.val += ',';\n                if (!config.minify) {\n                    res.val += ' ';\n                }\n            }\n        }\n        res.val += ')';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const funcRes = res.register(this.to, config);\n        if (res.error)\n            return res;\n        res.val = funcRes + '(';\n        for (let arg of this.arguments) {\n            const argRes = res.register(arg, config);\n            if (res.error)\n                return res;\n            res.val += argRes;\n            if (arg !== this.arguments[this.arguments.length - 1]) {\n                res.val += ',';\n                if (!config.minify) {\n                    res.val += ' ';\n                }\n            }\n        }\n        res.val += ')';\n        return res;\n    }\n}\nexport class N_functionDefinition extends Node {\n    constructor(pos, body, argNames, returnType, name = '(anon)', this_ = new ESObject(), description = '') {\n        super(pos);\n        this.arguments = argNames;\n        this.body = body;\n        this.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        this.description = description;\n    }\n    interpret_(context) {\n        let args = [];\n        for (let arg of this.arguments) {\n            const res = interpretArgument(arg, context);\n            if (res instanceof ESError)\n                return res;\n            args.push(res);\n        }\n        const returnTypeRes = this.returnType.interpret(context);\n        if (returnTypeRes.error)\n            return returnTypeRes.error;\n        return new interpretResult(new ESFunction(this.body, args, this.name, this.this_, returnTypeRes.val, context));\n    }\n    compileJS(config) {\n        const res = new compileResult('function(');\n        for (let param of this.arguments) {\n            res.val += param.name + ',';\n            if (!config.minify) {\n                res.val += ' ';\n            }\n        }\n        if (config.minify) {\n            res.val += '){';\n        }\n        else {\n            res.val += ') {\\n';\n        }\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        res.val += `${bodyRes.val}\\n${indent}}`;\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const hoistedName = generateRandomSymbol(config.symbols);\n        res.hoisted = `def ${hoistedName}(`;\n        for (let param of this.arguments) {\n            res.hoisted += param.name + ',';\n            if (!config.minify) {\n                res.hoisted += ' ';\n            }\n        }\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const body = this.body.compilePy(config);\n        if (body.error)\n            return body;\n        res.hoisted += `):\\n${indent}${body.val}`;\n        res.hoisted = body.hoisted + res.hoisted;\n        res.val = hoistedName;\n        return res;\n    }\n}\nexport class N_return extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        res.funcReturn = val.val;\n        return res;\n    }\n    compileJS(config) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(config);\n        if (valRes === null || valRes === void 0 ? void 0 : valRes.error)\n            return valRes;\n        return new compileResult(`return(${valRes === null || valRes === void 0 ? void 0 : valRes.val})`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        if (!this.value) {\n            return new compileResult('return');\n        }\n        const valRes = res.register(this.value, config);\n        if (res.error)\n            return res;\n        return new compileResult(`return ${valRes}`);\n    }\n}\nexport class N_yield extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        var _a;\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        if ((_a = val.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            res.funcReturn = val.val;\n        }\n        return res;\n    }\n    compileJS(config) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(config);\n        if (!valRes || !valRes.val) {\n            return new compileResult('');\n        }\n        return new compileResult(`if(_=${valRes.val}){return(_))`);\n    }\n    compilePy(config) {\n        if (!this.value) {\n            return new compileResult('');\n        }\n        const res = new compileResult;\n        const valRes = res.register(this.value, config);\n        if (!valRes) {\n            return new compileResult('');\n        }\n        return new compileResult(`if _ := ${valRes}: return _`);\n    }\n}\nexport class N_indexed extends Node {\n    constructor(pos, base, index) {\n        super(pos);\n        this.base = base;\n        this.index = index;\n    }\n    interpret_(context) {\n        var _a;\n        let baseRes = this.base.interpret(context);\n        if (baseRes.error)\n            return baseRes;\n        let indexRes = this.index.interpret(context);\n        if (indexRes.error)\n            return indexRes;\n        const index = indexRes.val;\n        const base = baseRes.val;\n        if (!base || !index) {\n            return new interpretResult(new ESUndefined());\n        }\n        if (this.value !== undefined) {\n            let valRes = this.value.interpret(context);\n            if (valRes.error)\n                return valRes;\n            const currentVal = wrap(base.__get_property__({ context }, index));\n            let newVal;\n            let assignVal = valRes.val;\n            (_a = this.assignType) !== null && _a !== void 0 ? _a : (this.assignType = '=');\n            if (!assignVal) {\n                return new TypeError(this.pos, '~undefined', 'undefined', 'undefined', 'N_indexed.interpret_');\n            }\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                case '=':\n                    newVal = assignVal;\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError)\n                return newVal;\n            if (!base.__set_property__)\n                return new TypeError(this.pos, 'mutable', 'immutable', base.valueOf());\n            const res = base.__set_property__({ context }, index, newVal !== null && newVal !== void 0 ? newVal : new ESUndefined());\n            if (res instanceof ESError)\n                return res;\n        }\n        return new interpretResult(base.__get_property__({ context }, index));\n    }\n    compileJS(config) {\n        const objectRes = this.base.compileJS(config);\n        if (objectRes.error)\n            return objectRes;\n        const keyRes = this.index.compileJS(config);\n        if (keyRes.error)\n            return keyRes;\n        if (!this.value) {\n            return new compileResult(`${objectRes.val}[${keyRes.val}]`);\n        }\n        const valRes = this.value.compileJS(config);\n        if (valRes.error)\n            return valRes;\n        return new compileResult(`${objectRes.val}[${keyRes.val}]${this.assignType || '='}${valRes.val}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const objectRes = res.register(this.base, config);\n        if (res.error)\n            return res;\n        const keyRes = res.register(this.index, config);\n        if (res.error)\n            return res;\n        if (!this.value) {\n            res.val = `${objectRes}[${keyRes}]`;\n            return res;\n        }\n        const valRes = res.register(this.value, config);\n        if (res.error)\n            return res;\n        res.val = `${objectRes}[${keyRes}] ${this.assignType || '='} ${valRes}`;\n        return res;\n    }\n}\nexport class N_class extends Node {\n    constructor(pos, methods, extends_, init, name = '<anon class>') {\n        super(pos);\n        this.init = init;\n        this.methods = methods;\n        this.name = name;\n        this.extends_ = extends_;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const methods = [];\n        for (let method of this.methods) {\n            const res = method.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (!(res.val instanceof ESFunction)) {\n                return new TypeError(this.pos, 'Function', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            methods.push(res.val);\n        }\n        let extends_ = types.object;\n        if (this.extends_) {\n            const extendsRes = this.extends_.interpret(context);\n            if (extendsRes.error) {\n                return extendsRes.error;\n            }\n            if (!(extendsRes.val instanceof ESType)) {\n                return new TypeError(this.pos, 'Type', ((_b = extendsRes.val) === null || _b === void 0 ? void 0 : _b.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            extends_ = extendsRes.val;\n        }\n        let init;\n        if (this.init) {\n            const initRes = this.init.interpret(context);\n            if (initRes.error) {\n                return initRes.error;\n            }\n            if (!(initRes.val instanceof ESFunction)) {\n                return new TypeError(this.pos, 'Function', ((_c = initRes.val) === null || _c === void 0 ? void 0 : _c.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            init = initRes.val;\n        }\n        return new interpretResult(new ESType(false, this.name, methods, extends_, init));\n    }\n    compileJS(config) {\n        return new compileResult('function(){return{};}');\n    }\n    compilePy(config) {\n        return new compileResult(`class ${this.name}:\\n${' '.repeat(config.indent)}pass`);\n    }\n}\nexport class N_namespace extends Node {\n    constructor(pos, statements, name = '(anon)', mutable = false) {\n        super(pos);\n        this.name = name;\n        this.statements = statements;\n        this.mutable = mutable;\n    }\n    interpret_(context) {\n        const newContext = new Context();\n        newContext.parent = context;\n        const res = this.statements.interpret(newContext);\n        if (res.error)\n            return res;\n        return new interpretResult(new ESNamespace(new ESString(this.name), newContext.getSymbolTableAsDict(), this.mutable));\n    }\n    compileJS(config) {\n        const bodyRes = this.statements.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        return new compileResult(`(() => {${bodyRes.val}})()`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const bodyRes = res.register(this.statements, config);\n        if (res.error)\n            return res;\n        res.val = `'namespace'`;\n        return res;\n    }\n}\nexport class N_tryCatch extends Node {\n    constructor(pos, body, catchBlock) {\n        super(pos, true);\n        this.body = body;\n        this.catchBlock = catchBlock;\n    }\n    interpret_(context) {\n        const res = this.body.interpret(context);\n        if (res.error) {\n            const newContext = new Context();\n            newContext.parent = context;\n            newContext.setOwn(catchBlockErrorSymbolName, new ESErrorPrimitive(res.error), {\n                isConstant: true\n            });\n            const catchRes = this.catchBlock.interpret(newContext);\n            if (catchRes.error)\n                return catchRes.error;\n        }\n        return new interpretResult();\n    }\n    compileJS(config) {\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        const catchRes = this.catchBlock.compileJS(config);\n        if (catchRes.error)\n            return catchRes;\n        return new compileResult(`try{${bodyRes.val}}catch(${catchBlockErrorSymbolName}){${catchRes.val}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const bodyRes = res.register(this.body, config);\n        if (res.error)\n            return res;\n        const catchRes = res.register(this.catchBlock, config);\n        if (res.error)\n            return res;\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 1);\n        res.val = `try:\\n${highIndent}${bodyRes}\\n${indent}except:\\n${highIndent}${catchRes}`;\n        return res;\n    }\n}\nexport class N_number extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        const res = new interpretResult();\n        res.val = new ESNumber(val);\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult(this.a.value.toString());\n    }\n    compilePy(config) {\n        return new compileResult(this.a.value.toString());\n    }\n}\nexport class N_string extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        const res = new interpretResult();\n        res.val = new ESString(val);\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult(`'${this.a.value}'`);\n    }\n    compilePy(config) {\n        return new compileResult(`'${this.a.value}'`);\n    }\n}\nexport class N_variable extends Node {\n    constructor(a) {\n        super(a.pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        if (!context.has(this.a.value)) {\n            return new ReferenceError(this.a.pos, this.a.value);\n        }\n        let res = new interpretResult();\n        let symbol = context.getSymbol(this.a.value);\n        if (!symbol) {\n            return new ReferenceError(this.pos, `No access to undeclared variable ${this.a.value}`);\n        }\n        if (symbol instanceof ESError) {\n            return symbol;\n        }\n        res.val = symbol.value;\n        return res;\n    }\n    compileJS(config) {\n        let val = this.a.value.toString();\n        if (val === 'import') {\n            val = 'import_';\n        }\n        return new compileResult(val);\n    }\n    compilePy(config) {\n        let val = this.a.value.toString();\n        if (val === 'import') {\n            val = 'import_';\n        }\n        return new compileResult(val);\n    }\n}\nexport class N_undefined extends Node {\n    constructor(pos = Position.void) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.val = new ESUndefined();\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('undefined');\n    }\n    compilePy(config) {\n        return new compileResult('None');\n    }\n}\nexport class N_break extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldBreak = true;\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('break');\n    }\n    compilePy(config) {\n        return new compileResult('break');\n    }\n}\nexport class N_continue extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldContinue = true;\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('continue');\n    }\n    compilePy(config) {\n        return new compileResult('continue');\n    }\n}\nexport class N_primitiveWrapper extends Node {\n    constructor(val, pos = Position.void) {\n        super(pos, true);\n        this.value = val;\n    }\n    interpret_(context) {\n        return new interpretResult(this.value);\n    }\n    compileJS(config) {\n        return new compileResult(JSON.stringify(this.value.valueOf()));\n    }\n    compilePy(config) {\n        return new compileResult(JSON.stringify(this.value.valueOf()));\n    }\n}\n","import { Node } from \"../runtime/nodes\";\nimport { ESPrimitive } from '../runtime/primitiveTypes';\nexport function deepClone(obj, hash = new WeakMap()) {\n    let result;\n    if (Object(obj) !== obj || obj instanceof Function) {\n        return obj;\n    }\n    if (hash.has(obj)) {\n        return hash.get(obj);\n    }\n    try {\n        result = new obj.constructor();\n    }\n    catch (e) {\n        result = Object.create(Object.getPrototypeOf(obj));\n    }\n    if (obj instanceof Map) {\n        Array.from(obj, ([key, val]) => result.set(deepClone(key, hash), deepClone(val, hash)));\n    }\n    else if (obj instanceof Set) {\n        Array.from(obj, (key) => result.add(deepClone(key, hash)));\n    }\n    hash.set(obj, result);\n    return Object.assign(result, ...Object.keys(obj).map(key => ({ [key]: deepClone(obj[key], hash) })));\n}\nexport function str(val, depth = 0) {\n    if (typeof val === 'string') {\n        if (depth > 0) {\n            return `'${val}'`;\n        }\n        return val;\n    }\n    if (depth > 20) {\n        return '...';\n    }\n    let result = '';\n    if (typeof val === 'undefined') {\n        return 'undefined';\n    }\n    if (val instanceof ESPrimitive) {\n        return val.str().valueOf();\n    }\n    if (val instanceof Node) {\n        return `<RunTimeNode: ${val.constructor.name}>`;\n    }\n    switch (typeof val) {\n        case 'object':\n            if (Array.isArray(val)) {\n                result += '[';\n                for (let item of val) {\n                    try {\n                        result += str(item, depth + 1) + `, `;\n                    }\n                    catch (e) {\n                        result += '<large property>, ';\n                    }\n                }\n                if (val.length) {\n                    result = result.substring(0, result.length - 2);\n                }\n                result += ']';\n            }\n            else {\n                result += '{\\n';\n                let i = 0;\n                for (let item in val) {\n                    i++;\n                    if (!val.hasOwnProperty || !val.hasOwnProperty(item)) {\n                        continue;\n                    }\n                    result += `  ${item}: ${str(val[item], depth + 1) || ''}, \\n`;\n                }\n                if (i > 0) {\n                    result = result.substring(0, result.length - 3);\n                }\n                result += '\\n}\\n';\n            }\n            break;\n        case \"bigint\":\n        case \"number\":\n        case \"boolean\":\n            result = `${val}`;\n            break;\n        case \"function\":\n            result = `<NativeFunction ${val.name}>`;\n            break;\n    }\n    for (let i = 0; i < depth; i++) {\n        result = indent(result);\n    }\n    return result;\n}\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms));\nexport function indent(str) {\n    return str.replace(/\\n/g, '\\n    ');\n}\nexport function generateRandomSymbol(symbols, length = 10) {\n    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_';\n    const gen = () => {\n        let result = '';\n        for (let i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * characters.length));\n        }\n        return result;\n    };\n    let symbol = gen();\n    while (symbols.indexOf(symbol) !== -1) {\n        symbol = gen();\n    }\n    return symbol;\n}\n","import { IS_NODE_INSTANCE } from './constants';\nimport { Position } from \"./position\";\nimport { str } from \"./util/util\";\nimport chalk from \"./util/colours\";\nexport class ESError {\n    constructor(pos, name, details) {\n        this.traceback = [];\n        this.pos = pos;\n        this.name = name;\n        this.details = details;\n    }\n    get colouredStr() {\n        let out = '';\n        if (this.traceback.length) {\n            out = chalk.yellow('Error Traceback (most recent call last):\\n');\n            for (let pos of [...this.traceback].reverse())\n                out += `    ${chalk.cyan(pos.position.str)}:\\n        ${pos.line}\\n`;\n        }\n        out += `${chalk.red(this.name)}: ${this.details} \\n at ${chalk.cyan(this.pos.str)}`;\n        return out;\n    }\n    get str() {\n        return `${this.name}: ${this.details} \\n at ${this.pos.str}`;\n    }\n}\nexport class IllegalCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'IllegalCharError', `'${char}'`);\n    }\n}\nexport class InvalidSyntaxError extends ESError {\n    constructor(pos, details) {\n        super(pos, 'InvalidSyntaxError', details);\n    }\n}\nexport class ExpectedCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'ExpectedCharError', `'${char}'`);\n    }\n}\nexport class TypeError extends ESError {\n    constructor(pos, expectedType, actualType, value = '', detail = '') {\n        super(pos, 'TypeError', `Expected type '${expectedType}', got type '${actualType}' ${typeof value === 'undefined' ? '' : ` on value '${str(value)}'`} ${!detail ? '' : detail}`);\n    }\n}\nexport class ImportError extends ESError {\n    constructor(pos, url, detail = '') {\n        super(pos, 'ImportError', `Could not import ${url}: ${detail}`);\n    }\n}\nexport class ReferenceError extends ESError {\n    constructor(pos, ref) {\n        super(pos, 'ReferenceError', `${ref} is not defined`);\n    }\n}\nexport class IndexError extends ESError {\n    constructor(pos, ref, object) {\n        var _a;\n        super(pos, 'IndexError', `'${ref}' is not a property of '${((_a = object === null || object === void 0 ? void 0 : object.info) === null || _a === void 0 ? void 0 : _a.name) || str(object)}'`);\n    }\n}\nexport class InvalidOperationError extends ESError {\n    constructor(op, value, detail = '', pos = Position.void) {\n        var _a;\n        super(pos, 'TypeError', `Cannot perform '${op}' on value ${((_a = value === null || value === void 0 ? void 0 : value.info) === null || _a === void 0 ? void 0 : _a.name) || str(value)}: ${detail}`);\n    }\n}\nexport class InvalidRuntimeError extends ESError {\n    constructor() {\n        super(Position.void, 'InvalidRuntimeError', `Required runtime of ${IS_NODE_INSTANCE ? 'browser' : 'node'}`);\n    }\n}\nexport class TestFailed extends ESError {\n    constructor(detail) {\n        super(Position.void, 'TestFailed', detail);\n    }\n}\nexport class PermissionRequiredError extends ESError {\n    constructor(detail) {\n        super(Position.void, 'PermissionRequiredError', detail);\n    }\n}\n","export class Token {\n    constructor(pos, type, value) {\n        this.type = type;\n        this.value = value;\n        this.pos = pos;\n    }\n    matches(type, val) {\n        return this.type === type && this.value === val;\n    }\n}\n","import { Position } from \"../position\";\nimport { digits, doubleCharTokens, identifierChars, KEYWORDS, multiLineCommentEnd, multiLineCommentStart, singleCharTokens, singleLineComment, stringSurrounds, tripleCharTokens, tt, } from '../constants';\nimport { IllegalCharError } from \"../errors\";\nimport { Token } from \"./tokens\";\nexport class Lexer {\n    constructor(program, fileName) {\n        this.text = program;\n        this.position = new Position(-1, 0, -1, fileName);\n        this.advance();\n    }\n    advance() {\n        this.position.advance(this.currentChar);\n        this.currentChar = this.text[this.position.idx];\n    }\n    generate() {\n        if (!this.text) {\n            return [new Token(this.position, tt.EOF, undefined)];\n        }\n        const tokens = [];\n        while (this.currentChar !== undefined) {\n            if (' \\t\\n'.includes(this.currentChar)) {\n                this.advance();\n            }\n            else if (digits.includes(this.currentChar)) {\n                tokens.push(this.makeNumber());\n            }\n            else if (this.currentChar === singleLineComment[0] &&\n                this.text[this.position.idx + 1] === singleLineComment[1]) {\n                this.singleLineComment();\n            }\n            else if (this.currentChar === multiLineCommentStart[0] &&\n                this.text[this.position.idx + 1] === multiLineCommentStart[1]) {\n                this.multiLineComment();\n            }\n            else if (identifierChars.includes(this.currentChar)) {\n                tokens.push(this.makeIdentifier());\n            }\n            else if (stringSurrounds.indexOf(this.currentChar) !== -1) {\n                tokens.push(this.makeString());\n            }\n            else {\n                const possibleAssignFirstChar = this.currentChar;\n                let token = this.unknownChar();\n                if (token) {\n                    if (token.type === tt.ASSIGN) {\n                        token.value = possibleAssignFirstChar;\n                    }\n                    tokens.push(token);\n                }\n                else {\n                    let pos = this.position.clone;\n                    let char = this.currentChar;\n                    this.advance();\n                    return new IllegalCharError(pos, char);\n                }\n            }\n        }\n        tokens.push(new Token(this.position, tt.EOF, undefined));\n        return tokens;\n    }\n    makeNumber() {\n        const pos = this.position.clone;\n        let numStr = '';\n        let dotCount = 0;\n        while (this.currentChar !== undefined && (digits + '._').includes(this.currentChar)) {\n            if (this.currentChar === '.') {\n                if (dotCount === 1) {\n                    break;\n                }\n                dotCount++;\n                numStr += '.';\n            }\n            else if (this.currentChar !== '_') {\n                numStr += this.currentChar;\n            }\n            this.advance();\n        }\n        return new Token(pos, tt.NUMBER, parseFloat(numStr));\n    }\n    makeString() {\n        const pos = this.position.clone;\n        let str = '';\n        let strClose = this.currentChar;\n        this.advance();\n        while (this.currentChar !== strClose && this.currentChar !== undefined) {\n            if (this.currentChar === '\\\\') {\n                this.advance();\n                if (this.currentChar === 'n') {\n                    str += '\\n';\n                    this.advance();\n                    continue;\n                }\n            }\n            str += this.currentChar;\n            this.advance();\n        }\n        this.advance();\n        return new Token(pos, tt.STRING, str);\n    }\n    makeIdentifier() {\n        let idStr = '';\n        const posStart = this.position.clone;\n        while (this.currentChar !== undefined && (identifierChars + digits).includes(this.currentChar)) {\n            idStr += this.currentChar;\n            this.advance();\n        }\n        let tokType = tt.IDENTIFIER;\n        if (KEYWORDS.indexOf(idStr) !== -1) {\n            tokType = tt.KEYWORD;\n        }\n        return new Token(posStart, tokType, idStr);\n    }\n    unknownChar() {\n        if (this.currentChar === undefined) {\n            return undefined;\n        }\n        for (let triple in tripleCharTokens) {\n            if (triple[0] === this.currentChar)\n                if (triple[1] === this.text[this.position.idx + 1])\n                    if (triple[2] === this.text[this.position.idx + 2]) {\n                        const pos = this.position.clone;\n                        this.advance();\n                        this.advance();\n                        this.advance();\n                        return new Token(pos, tripleCharTokens[triple], undefined);\n                    }\n        }\n        for (let double in doubleCharTokens) {\n            if (double[0] === this.currentChar)\n                if (double[1] === this.text[this.position.idx + 1]) {\n                    const pos = this.position.clone;\n                    this.advance();\n                    this.advance();\n                    return new Token(pos, doubleCharTokens[double], undefined);\n                }\n        }\n        if (singleCharTokens.hasOwnProperty(this.currentChar)) {\n            let pos = this.position.clone;\n            let val = singleCharTokens[this.currentChar];\n            this.advance();\n            return new Token(pos, val, undefined);\n        }\n        return undefined;\n    }\n    singleLineComment() {\n        this.advance();\n        while (this.currentChar !== '\\n' && this.currentChar !== undefined) {\n            this.advance();\n        }\n        this.advance();\n    }\n    multiLineComment() {\n        this.advance();\n        while (!(this.currentChar === multiLineCommentEnd[0] &&\n            this.text[this.position.idx + 1] === multiLineCommentEnd[1])) {\n            this.advance();\n        }\n        this.advance();\n        this.advance();\n    }\n}\n","import { tokenType, tokenTypeString, tt, types, VAR_DECLARE_KEYWORDS } from '../constants';\nimport { Token } from \"./tokens\";\nimport * as n from '../runtime/nodes';\nimport { N_functionDefinition, N_namespace, N_primitiveWrapper, N_tryCatch, N_undefined, N_variable, } from '../runtime/nodes';\nimport { ESError, InvalidSyntaxError } from \"../errors\";\nexport class ParseResults {\n    constructor() {\n        this.advanceCount = 0;\n        this.lastRegisteredAdvanceCount = 0;\n        this.reverseCount = 0;\n    }\n    registerAdvance() {\n        this.advanceCount = 1;\n        this.lastRegisteredAdvanceCount++;\n    }\n    register(res) {\n        this.lastRegisteredAdvanceCount = res.advanceCount;\n        this.advanceCount += res.advanceCount;\n        if (res.error) {\n            this.error = res.error;\n        }\n        if (!res.node) {\n            return new N_undefined();\n        }\n        return res.node;\n    }\n    tryRegister(res) {\n        if (res.error) {\n            this.reverseCount += res.advanceCount;\n            return;\n        }\n        return this.register(res);\n    }\n    success(node) {\n        this.node = node;\n        return this;\n    }\n    failure(error) {\n        this.error = error;\n        return this;\n    }\n}\nexport class Parser {\n    constructor(tokens) {\n        this.tokens = tokens;\n        this.tokenIdx = -1;\n        this.currentToken = tokens[0];\n        this.advance();\n    }\n    parse() {\n        var _a;\n        if (!this.currentToken || !this.tokens || (this.tokens.length === 1 && this.tokens[0].type === tt.EOF)) {\n            return new ParseResults();\n        }\n        const res = this.statements(true);\n        if (!res.error && this.currentToken.type !== tokenType.EOF) {\n            return res.failure(new InvalidSyntaxError((_a = this.currentToken) === null || _a === void 0 ? void 0 : _a.pos, `Expected 'End of File', got token of type '${tokenTypeString[this.currentToken.type]}'`));\n        }\n        return res;\n    }\n    advance(res) {\n        if (res)\n            res.registerAdvance();\n        this.tokenIdx++;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    reverse(amount = 1) {\n        this.tokenIdx -= amount;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    consume(res, type, errorMsg) {\n        if (this.currentToken.type !== type)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, errorMsg !== null && errorMsg !== void 0 ? errorMsg : `Expected '${tokenTypeString[type]}' but got '${tokenTypeString[this.currentToken.type]}'`));\n        this.advance(res);\n    }\n    clearEndStatements(res) {\n        while (this.currentToken.type === tt.ENDSTATEMENT) {\n            this.advance(res);\n        }\n    }\n    statements(topLevel = false) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let statements = [];\n        this.clearEndStatements(res);\n        const firstStatement = res.register(this.statement());\n        if (!firstStatement) {\n            return res;\n        }\n        statements.push(firstStatement);\n        if (res.error) {\n            return res;\n        }\n        let moreStatements = true;\n        while (true) {\n            let newLineCount = 0;\n            while (this.currentToken.type === tt.ENDSTATEMENT) {\n                this.advance(res);\n                newLineCount++;\n            }\n            if (newLineCount === 0) {\n                moreStatements = false;\n            }\n            if (!moreStatements) {\n                break;\n            }\n            const statement = res.tryRegister(this.statement());\n            if (!statement) {\n                this.reverse(res.reverseCount);\n                continue;\n            }\n            statements.push(statement);\n        }\n        this.clearEndStatements(res);\n        let node = new n.N_statements(pos, statements, topLevel);\n        return res.success(node);\n    }\n    statement() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        if (this.currentToken.matches(tt.KEYWORD, 'return')) {\n            return this.returnStatement(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'yield')) {\n            return this.returnStatement(res, true);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'break')) {\n            this.advance(res);\n            return res.success(new n.N_break(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'continue')) {\n            this.advance(res);\n            return res.success(new n.N_continue(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'try')) {\n            return this.tryCatch();\n        }\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    returnStatement(res, isYield = false) {\n        const pos = this.currentToken.pos;\n        this.advance(res);\n        let expr = new N_undefined(this.currentToken.pos);\n        if (this.currentToken.type !== tt.ENDSTATEMENT) {\n            let exprRes = res.register(this.expr());\n            if (!exprRes) {\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'Expected end of statement'));\n            }\n            expr = exprRes;\n        }\n        if (isYield) {\n            return res.success(new n.N_yield(pos, expr));\n        }\n        return res.success(new n.N_return(pos, expr));\n    }\n    atom() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        const pos = this.currentToken.pos;\n        switch (tok.type) {\n            case tt.NUMBER:\n                this.advance(res);\n                return res.success(new n.N_number(pos, tok));\n            case tt.STRING:\n                this.advance(res);\n                return res.success(new n.N_string(pos, tok));\n            case tt.IDENTIFIER:\n                return this.atomIdentifier(res, pos, tok);\n            case tt.OPAREN:\n                this.advance(res);\n                const expr = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type === tt.CPAREN) {\n                    this.advance(res);\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ')'\"));\n            case tt.OSQUARE:\n                let arrayExpr = res.register(this.array());\n                if (res.error)\n                    return res;\n                return res.success(arrayExpr);\n            case tt.OBRACES:\n                let objectExpr = res.register(this.object());\n                if (res.error)\n                    return res;\n                return res.success(objectExpr);\n            case tt.KEYWORD:\n                if (tok.value === 'if') {\n                    const expr = res.register(this.ifExpr());\n                    if (res.error)\n                        return res;\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Invalid Identifier ${tok.value}`));\n            default:\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected number, identifier, '(', '+' or '-'`));\n        }\n    }\n    atomIdentifier(res, pos, tok) {\n        this.advance(res);\n        let node = new n.N_variable(tok);\n        let prevNode = new n.N_undefined(pos);\n        let functionCall = false;\n        while ([tt.OPAREN, tt.OSQUARE, tt.DOT].indexOf(this.currentToken.type) !== -1) {\n            switch (this.currentToken.type) {\n                case tt.OPAREN:\n                    functionCall = true;\n                    const tempNode = node;\n                    node = res.register(this.makeFunctionCall(node));\n                    prevNode = tempNode;\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.OSQUARE:\n                    prevNode = node;\n                    node = res.register(this.makeIndex(node));\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.DOT:\n                    this.advance(res);\n                    if (this.currentToken.type !== tt.IDENTIFIER) {\n                        return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected identifier after '.'`));\n                    }\n                    prevNode = node;\n                    node = new n.N_indexed(this.currentToken.pos, node, new n.N_string(this.currentToken.pos, this.currentToken));\n                    this.advance(res);\n            }\n        }\n        if (this.currentToken.type === tt.ASSIGN) {\n            let assignType = this.currentToken.value;\n            if (functionCall) {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot assign to return value of function`));\n            }\n            this.advance(res);\n            const value = res.register(this.expr());\n            if (node instanceof n.N_variable) {\n                node = new n.N_varAssign(pos, node.a, value, assignType, false);\n            }\n            else if (node instanceof n.N_indexed) {\n                node.value = value;\n                node.assignType = assignType;\n            }\n            else {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot have node of type ${this.currentToken.constructor.name}.\n                            Expected either index or variable node.`));\n            }\n            if (res.error)\n                return res;\n        }\n        return res.success(node);\n    }\n    power() {\n        return this.binOp(() => this.atom(), [tt.POW, tt.MOD, tt.APMERSAND, tt.PIPE], () => this.factor());\n    }\n    factor() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        if (tok.type === tt.ADD || tok.type === tt.SUB || tok.type === tt.BITWISE_NOT || tok.type === tt.QM) {\n            this.advance(res);\n            const factor = res.register(this.factor());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(tok.pos, factor, tok));\n        }\n        return this.power();\n    }\n    term() {\n        return this.binOp(() => this.factor(), [tt.MUL, tt.DIV]);\n    }\n    arithmeticExpr() {\n        return this.binOp(() => this.term(), [tt.ADD, tt.SUB]);\n    }\n    comparisonExpr() {\n        const res = new ParseResults();\n        if (this.currentToken.type === tt.NOT) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            let node = res.register(this.expr());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(opTok.pos, node, opTok));\n        }\n        if (this.currentToken.type === tt.BITWISE_NOT) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            let node = res.register(this.expr());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(opTok.pos, node, opTok));\n        }\n        let node = res.register(this.binOp(() => this.arithmeticExpr(), [tt.EQUALS, tt.NOTEQUALS, tt.GT, tt.GTE, tt.LTE, tt.LT]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    expr() {\n        const res = new ParseResults();\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.KEYWORD && VAR_DECLARE_KEYWORDS.indexOf(this.currentToken.value) !== -1) {\n            return this.initiateVar(res);\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'if')) {\n            return this.ifExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'while')) {\n            return this.whileExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'for')) {\n            return this.forExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'func')) {\n            return this.funcExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'class')) {\n            return this.classExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'namespace')) {\n            return this.namespace();\n        }\n        let node = res.register(this.binOp(() => this.comparisonExpr(), [tt.AND, tt.OR]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    binOp(func, ops, funcB = func) {\n        const res = new ParseResults();\n        let left = res.register(func());\n        if (res.error)\n            return res;\n        while (ops.indexOf(this.currentToken.type) !== -1\n            || ops.indexOf([this.currentToken.type, this.currentToken.value]) !== -1) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            const right = res.register(funcB());\n            if (res.error)\n                return res;\n            left = new n.N_binOp(left.pos, left, opTok, right);\n        }\n        return res.success(left);\n    }\n    makeFunctionCall(to) {\n        const res = new ParseResults();\n        let args = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OPAREN) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '['\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n            return res.success(new n.N_functionCall(pos, to, []));\n        }\n        args.push(res.register(this.expr()));\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid argument\"));\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            args.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CPAREN)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n        this.advance(res);\n        return res.success(new n.N_functionCall(pos, to, args));\n    }\n    makeIndex(to) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const base = to;\n        if (this.currentToken.type !== tt.OSQUARE)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, `Cannot index without expression`));\n        }\n        let index = res.register(this.expr());\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid index\"));\n        if (this.currentToken.type !== tt.CSQUARE)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ']'\"));\n        this.advance(res);\n        return res.success(new n.N_indexed(pos, base, index));\n    }\n    typeExpr(res) {\n        if (this.currentToken.type === tt.IDENTIFIER) {\n            const tok = this.currentToken;\n            this.advance(res);\n            return res.success(new N_variable(tok));\n        }\n        return this.expr();\n    }\n    destructuring(pos, isConst, isGlobal) {\n        const res = new ParseResults();\n        this.advance(res);\n        if (res.error)\n            return res;\n        let identifiers = [];\n        let typeNodes = [];\n        if (this.currentToken.type === tt.CSQUARE) {\n            this.consume(res, tt.CSQUARE);\n            if (!this.currentToken.matches(tt.ASSIGN, '=')) {\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected '='`));\n            }\n            this.consume(res, tt.ASSIGN);\n            let expr = res.register(this.expr());\n            if (res.error)\n                return res;\n            return res.success(new n.N_arrayDestructAssign(pos, [], [], expr, isGlobal, isConst));\n        }\n        while (true) {\n            if (this.currentToken.type !== tt.IDENTIFIER) {\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected identifier`));\n            }\n            identifiers.push(this.currentToken);\n            this.advance(res);\n            if (this.currentToken.type === tt.COLON) {\n                this.consume(res, tt.COLON);\n                let tRes = res.register(this.typeExpr(res));\n                if (res.error)\n                    return res;\n                typeNodes.push(tRes);\n            }\n            else {\n                typeNodes.push(new N_primitiveWrapper(types.any));\n            }\n            if (this.currentToken.type === tt.CSQUARE) {\n                this.consume(res, tt.CSQUARE);\n                break;\n            }\n            this.consume(res, tt.COMMA);\n            if (res.error)\n                return res;\n        }\n        if (!this.currentToken.matches(tt.ASSIGN, '=')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected '='`));\n        }\n        this.consume(res, tt.ASSIGN);\n        let expr = res.register(this.expr());\n        if (res.error)\n            return res;\n        return res.success(new n.N_arrayDestructAssign(pos, identifiers.map(i => i.value), typeNodes, expr, isGlobal, isConst));\n    }\n    initiateVar(res) {\n        let pos = this.currentToken.pos;\n        let isConst = true;\n        let isGlobal = false;\n        let isDeclaration = false;\n        if (this.currentToken.type === tt.KEYWORD &&\n            this.currentToken.value === 'let') {\n            isDeclaration = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n            if (this.currentToken.type === tt.KEYWORD &&\n                this.currentToken.value === 'global') {\n                isDeclaration = true;\n                isGlobal = true;\n                this.advance(res);\n                if (res.error)\n                    return res;\n            }\n            if (this.currentToken.type === tt.KEYWORD &&\n                this.currentToken.value === 'var') {\n                isDeclaration = true;\n                isConst = false;\n                this.advance(res);\n                if (res.error)\n                    return res;\n            }\n        }\n        if (this.currentToken.type === tt.KEYWORD) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected variable declaration keyword, not ${this.currentToken.value}`));\n        }\n        if (this.currentToken.type === tt.OSQUARE) {\n            return this.destructuring(pos, isConst, isGlobal);\n        }\n        if (this.currentToken.type !== tokenType.IDENTIFIER) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected Identifier, '[' or '{'`));\n        }\n        const varName = this.currentToken;\n        this.advance(res);\n        let type = types.any;\n        if (this.currentToken.type === tt.COLON) {\n            isDeclaration = true;\n            this.consume(res, tt.COLON);\n            type = res.register(this.typeExpr(res));\n        }\n        if (this.currentToken.type !== tt.ASSIGN) {\n            if (isConst)\n                return res.failure(new InvalidSyntaxError(pos, 'Cannot initialise constant to undefined'));\n            return res.success(new n.N_varAssign(pos, varName, new n.N_undefined(this.currentToken.pos), '=', isGlobal, isConst, isDeclaration, type));\n        }\n        let assignType = this.currentToken.value;\n        this.advance(res);\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        if (expr instanceof n.N_class || expr instanceof n.N_functionDefinition) {\n            expr.name = varName.value;\n        }\n        if (expr instanceof N_namespace) {\n            expr.name = varName.value;\n            expr.mutable = !isConst;\n        }\n        return res.success(new n.N_varAssign(pos, varName, expr, assignType, isGlobal, isConst, isDeclaration, type));\n    }\n    bracesExp() {\n        const res = new ParseResults();\n        this.consume(res, tt.OBRACES);\n        if (res.error) {\n            return res;\n        }\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_undefined(this.currentToken.pos));\n        }\n        const expr = res.register(this.statements());\n        if (res.error) {\n            return res;\n        }\n        this.consume(res, tt.CBRACES);\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    addEndStatement(res) {\n        this.tokens.splice(this.tokenIdx, 0, new Token(this.currentToken.pos, tt.ENDSTATEMENT, undefined));\n        this.reverse();\n        this.advance(res);\n    }\n    ifExpr() {\n        const res = new ParseResults();\n        let ifTrue;\n        let ifFalse;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'if'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'if'\"));\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        ifTrue = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.clearEndStatements(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'else')) {\n            this.advance(res);\n            if (this.currentToken.type == tt.OBRACES) {\n                ifFalse = res.register(this.bracesExp());\n                if (res.error)\n                    return res;\n            }\n            else {\n                ifFalse = res.register(this.statement());\n                if (res.error)\n                    return res;\n            }\n        }\n        this.addEndStatement(res);\n        return res.success(new n.N_if(pos, condition, ifTrue, ifFalse));\n    }\n    whileExpr() {\n        const res = new ParseResults();\n        let loop;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'while')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'while'\"));\n        }\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        loop = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        return res.success(new n.N_while(pos, condition, loop));\n    }\n    parameter(res) {\n        let name;\n        let type = new n.N_primitiveWrapper(types.any);\n        if (this.currentToken.type !== tt.IDENTIFIER) {\n            return new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\");\n        }\n        name = this.currentToken.value;\n        this.advance(res);\n        if (this.currentToken.type === tt.COLON) {\n            this.consume(res, tt.COLON);\n            if (res.error)\n                return res.error;\n            type = res.register(this.typeExpr(res));\n            if (res.error)\n                return res.error;\n        }\n        return { name, type };\n    }\n    funcCore() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, args = [], returnType = new n.N_primitiveWrapper(types.any);\n        this.consume(res, tt.OPAREN);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n        }\n        else {\n            let param = this.parameter(res);\n            if (param instanceof ESError) {\n                return res.failure(param);\n            }\n            args.push(param);\n            while (this.currentToken.type === tt.COMMA) {\n                this.advance(res);\n                let param = this.parameter(res);\n                if (param instanceof ESError)\n                    return res.failure(param);\n                args.push(param);\n            }\n            if (this.currentToken.type !== tt.CPAREN)\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n            this.advance(res);\n        }\n        if (this.currentToken.type === tt.COLON) {\n            this.advance(res);\n            returnType = res.register(this.typeExpr(res));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.OBRACES) {\n            body = new n.N_return(this.currentToken.pos, res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        else {\n            this.consume(res, tt.OBRACES);\n            if (res.error)\n                return res;\n            if (this.currentToken.type !== tt.CBRACES)\n                body = res.register(this.statements());\n            else\n                body = new n.N_undefined(this.currentToken.pos);\n            this.consume(res, tt.CBRACES);\n            if (res.error)\n                return res;\n        }\n        return res.success(new n.N_functionDefinition(pos, body, args, returnType));\n    }\n    funcExpr() {\n        const res = new ParseResults();\n        if (!this.currentToken.matches(tt.KEYWORD, 'func')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'func'\"));\n        }\n        this.advance(res);\n        const func = res.register(this.funcCore());\n        if (res.error)\n            return res;\n        return res.success(func);\n    }\n    classExpr(name) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const methods = [];\n        let init;\n        let extends_ = new N_primitiveWrapper(types.object);\n        if (!this.currentToken.matches(tt.KEYWORD, 'class')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'class'\"));\n        }\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'extends')) {\n            this.advance(res);\n            extends_ = res.register(this.expr());\n            if (res.error)\n                return res;\n        }\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_class(pos, [], extends_, undefined, name));\n        }\n        while (true) {\n            if (this.currentToken.type !== tt.IDENTIFIER) {\n                break;\n            }\n            let methodId = this.currentToken.value;\n            this.advance(res);\n            const func = res.register(this.funcCore());\n            if (res.error)\n                return res;\n            if (!(func instanceof N_functionDefinition)) {\n                return res.failure(new ESError(this.currentToken.pos, 'ParseError', `Tried to get function, but got ${func} instead`));\n            }\n            func.name = methodId;\n            if (methodId === 'init') {\n                init = func;\n            }\n            else {\n                methods.push(func);\n            }\n        }\n        this.consume(res, tt.CBRACES);\n        return res.success(new n.N_class(pos, methods, extends_, init, name));\n    }\n    forExpr() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, array, identifier, isConst = true;\n        if (!this.currentToken.matches(tt.KEYWORD, 'for')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'for'\"));\n        }\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'var')) {\n            isConst = false;\n            this.advance(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'let')) {\n            this.advance(res);\n        }\n        if (res.error)\n            return res;\n        if (this.currentToken.type !== tt.IDENTIFIER) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\"));\n        }\n        identifier = this.currentToken;\n        this.advance(res);\n        if (!this.currentToken.matches(tt.KEYWORD, 'in')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected keyword 'in\"));\n        }\n        this.advance(res);\n        array = res.register(this.expr());\n        if (res.error)\n            return res;\n        body = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new n.N_for(pos, body, array, identifier, false, isConst));\n    }\n    array() {\n        const res = new ParseResults();\n        let elements = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            this.advance(res);\n            return res.success(new n.N_array(pos, []));\n        }\n        elements.push(res.register(this.expr()));\n        if (res.error) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Unexpected token\"));\n        }\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            elements.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ']'\"));\n        }\n        this.advance(res);\n        return res.success(new n.N_array(pos, elements));\n    }\n    object() {\n        const res = new ParseResults();\n        let properties = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OBRACES) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '{\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_objectLiteral(pos, []));\n        }\n        while (true) {\n            let keyType, key, value;\n            if (this.currentToken.type === tt.IDENTIFIER) {\n                keyType = 'id';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.STRING) {\n                keyType = 'string';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.OSQUARE) {\n                keyType = 'value';\n                this.advance(res);\n                key = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.CSQUARE) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ']', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                this.advance(res);\n            }\n            else {\n                break;\n            }\n            if (this.currentToken.type === tt.COLON) {\n                this.advance(res);\n                value = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                if (this.currentToken.type === tt.COMMA) {\n                    this.advance(res);\n                }\n            }\n            else {\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                if (keyType !== 'id') {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `You must specify a value when initialising an object literal with a key that is not an identifier.\n                        Try using \\`key: value\\` syntax.`));\n                }\n                this.reverse();\n                value = new n.N_variable(this.currentToken);\n                this.advance(res);\n                if (this.currentToken.type === tt.COMMA) {\n                    this.advance(res);\n                }\n            }\n            properties.push([key, value]);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CBRACES)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier, ',' or '}'\"));\n        this.advance(res);\n        return res.success(new n.N_objectLiteral(pos, properties));\n    }\n    namespace() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_namespace(pos, new n.N_undefined()));\n        }\n        const statements = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        return res.success(new n.N_namespace(pos, statements));\n    }\n    tryCatch() {\n        const res = new ParseResults();\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'No empty try block'));\n        }\n        const body = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.value !== 'catch') {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'try block requires catch'));\n        }\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.success(new N_tryCatch(this.currentToken.pos, body, new N_undefined()));\n        }\n        const catchBlock = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new N_tryCatch(this.currentToken.pos, body, catchBlock));\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Lexer } from \"./parse/lexer\";\nimport { Parser } from \"./parse/parser\";\nimport { global, libs as allLibs, now, refreshPerformanceNow, runningInNode, setGlobalContext, VERSION } from \"./constants\";\nimport { initialise } from \"./init\";\nimport { ESError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { compileResult, interpretResult, Node } from \"./runtime/nodes\";\nimport { ESArray, initPrimitiveTypes } from \"./runtime/primitiveTypes\";\nimport { Context } from \"./runtime/context\";\nimport addNodeLibs from \"./built-in/nodeLibs\";\nimport colours from './util/colours';\nimport JS_STD_TXT_RAW from 'raw-loader!./built-in/compiledSTD/std.txt.js';\nimport PY_STD_TXT_RAW from 'raw-loader!./built-in/compiledSTD/std.txt.py';\nimport { preloadModules } from \"./built-in/builtInModules\";\nimport { config } from \"./config\";\nexport { Context, colours, Position, };\nexport * from './runtime/primitiveTypes';\nexport { VERSION, global, setGlobalContext, IS_NODE_INSTANCE, runningInNode, libs, now, refreshPerformanceNow, configFileName } from './constants';\nexport * from './errors';\nexport * from './runtime/nodes';\nexport * from './util/util';\nexport { strip, wrap } from './runtime/primitives/wrapStrip';\nexport { ESSymbol } from './runtime/symbol';\nexport { parseConfig, config } from './config';\nexport function init(printFunc = console.log, inputFunc, node = true, libs = { print: console.log }, context = new Context(), path = '') {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        initPrimitiveTypes();\n        const res = initialise(context, printFunc, inputFunc);\n        if (res instanceof ESError) {\n            return res;\n        }\n        setGlobalContext(context);\n        (_a = libs['context']) !== null && _a !== void 0 ? _a : (libs['context'] = context);\n        if (path) {\n            context.path = path;\n        }\n        if (libs.print) {\n            allLibs.print = libs.print;\n        }\n        if (node) {\n            runningInNode();\n            yield refreshPerformanceNow(true);\n            addNodeLibs(libs, context);\n        }\n        let modulePreloadRes = yield preloadModules(config.modules);\n        if (modulePreloadRes instanceof ESError) {\n            return modulePreloadRes;\n        }\n        return global;\n    });\n}\nexport function run(msg, { env = global, measurePerformance = false, fileName = '(unknown)', currentDir = '' } = {}) {\n    if (currentDir) {\n        env.path = currentDir;\n    }\n    Node.maxTime = 0;\n    Node.totalTime = 0;\n    Node.interprets = 0;\n    const timeData = {\n        total: 0,\n        lexerTotal: 0,\n        parserTotal: 0,\n        interpretTotal: 0,\n        nodeMax: 0,\n        nodeAvg: 0,\n        nodeTotal: 0,\n        interprets: 0,\n    };\n    let start = now();\n    if (!env.root.initialisedAsGlobal) {\n        const res = new interpretResult();\n        res.error = new ESError(Position.void, 'Uninitialised', 'Global context has not been initialised with global values');\n        return res;\n    }\n    const lexer = new Lexer(msg, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        const res_ = new interpretResult();\n        res_.error = lexerRes;\n        return res_;\n    }\n    timeData.lexerTotal = now() - start;\n    start = now();\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        const res_ = new interpretResult();\n        res_.error = res.error;\n        return res_;\n    }\n    timeData.parserTotal = now() - start;\n    start = now();\n    if (!res.node) {\n        const res = new interpretResult();\n        res.val = new ESArray([]);\n        return res;\n    }\n    const finalRes = res.node.interpret(env);\n    timeData.interpretTotal = now() - start;\n    timeData.total = now() - start;\n    timeData.nodeMax = Node.maxTime;\n    timeData.nodeTotal = Node.totalTime;\n    timeData.nodeAvg = Node.totalTime / Node.interprets;\n    timeData.interprets = Node.interprets;\n    if (measurePerformance) {\n        console.log(timeData);\n    }\n    return Object.assign(Object.assign({}, finalRes), { timeData });\n}\nexport function parse(code, { fileName = '(unknown)', currentDir = '' } = {}) {\n    const lexer = new Lexer(code, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        return {\n            error: lexerRes\n        };\n    }\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        return {\n            error: res.error\n        };\n    }\n    if (!res.node) {\n        return {\n            error: new ESError(Position.void, 'Error', 'no output')\n        };\n    }\n    return {\n        compileToJavaScript: (config) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            const comment = `// Generated by EntropyScript->JavaScript compiler v${VERSION}\\n`;\n            const stdStr = JS_STD_TXT_RAW.toString().replace(/(\\r\\n|\\n|\\r|\\t| )+/gm, ' ') + '\\n';\n            const out = res.node.compileJS(config);\n            if (out.error)\n                return out;\n            if (config.minify) {\n                out.val = out.val.replace(/(\\r\\n|\\n|\\r|\\t| )+/gm, ' ');\n            }\n            return new compileResult(comment + stdStr + out.val);\n        },\n        compileToPython: (config) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            const comment = `# Generated by EntropyScript->Python compiler v${VERSION}\\n\\n`;\n            const stdStr = PY_STD_TXT_RAW.toString() + '\\n';\n            const out = res.node.compilePy(config);\n            if (out.error)\n                return out;\n            return new compileResult(comment + stdStr + out.hoisted + '\\n' + out.val);\n        },\n        interpret: (env = global) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            if (currentDir) {\n                env.path = currentDir;\n            }\n            if (!env.root.initialisedAsGlobal) {\n                const res = new interpretResult();\n                res.error = new ESError(Position.void, 'Uninitialised', 'Global context has not been initialised with global values');\n                return res;\n            }\n            return res.node.interpret(env);\n        },\n    };\n}\n","import { Position } from \"../position\";\nimport { Context } from \"../runtime/context\";\nimport { ESError, ImportError, PermissionRequiredError } from '../errors';\nimport { ESFunction, ESNamespace, ESObject, ESString } from '../runtime/primitiveTypes';\nimport { str } from \"../util/util\";\nimport { config, run } from '../index';\nimport { addModule, getModule, moduleExist } from './builtInModules';\nimport { global, types, VALID_FILE_ENCODINGS } from \"../constants\";\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nfunction addNodeLibs(libs, context) {\n    const { fs, path } = libs;\n    for (let libName of Object.keys(libs)) {\n        addModule(libName, new ESJSBinding(libs[libName], libName));\n    }\n    context.set('import', new ESFunction(({ context }, rawPath) => {\n        if (!config.permissions.imports) {\n            return new PermissionRequiredError('Imports not allowed');\n        }\n        let scriptPath = str(rawPath);\n        if (config.permissions.useSTD && moduleExist(scriptPath)) {\n            return getModule(scriptPath);\n        }\n        scriptPath = path.join(context.path, scriptPath);\n        try {\n            if (!fs.existsSync(scriptPath)) {\n                if (fs.existsSync('./particles/' + scriptPath)) {\n                    if (fs.existsSync('particles/' + scriptPath + '/main.es')) {\n                        scriptPath = 'particles/' + scriptPath + '/main.es';\n                    }\n                    else {\n                        return new ESError(Position.void, 'ImportError', `Module '${scriptPath}' has no entry point. Requires 'main.es'.`);\n                    }\n                }\n                else {\n                    return new ESError(Position.void, 'ImportError', `Can't find file '${scriptPath}' to import.`);\n                }\n            }\n            const exDir = path.dirname(scriptPath);\n            const code = fs.readFileSync(scriptPath, 'utf-8');\n            const env = new Context();\n            env.parent = global;\n            env.path = exDir;\n            const n = new ESNamespace(new ESString(scriptPath), {});\n            const res = run(code, {\n                env,\n                fileName: scriptPath,\n                currentDir: exDir,\n            });\n            n.__value__ = env.getSymbolTableAsDict();\n            if (res.error) {\n                return res.error;\n            }\n            return n;\n        }\n        catch (E) {\n            return new ESError(Position.void, 'ImportError', E.toString());\n        }\n    }, [{ name: 'path', type: types.string }], 'import', undefined, types.object), {\n        forceThroughConst: true,\n        isConstant: true\n    });\n    context.setOwn('open', new ESFunction(({ context }, path_, encoding_) => {\n        if (!config.permissions.fileSystem) {\n            return new PermissionRequiredError('No access to file system');\n        }\n        const filePath = str(path_);\n        let encoding = str(encoding_);\n        if (VALID_FILE_ENCODINGS.indexOf(encoding) === -1) {\n            encoding = 'utf-8';\n        }\n        if (!fs.existsSync(filePath)) {\n            return new ImportError(Position.void, filePath);\n        }\n        return new ESObject({\n            str: new ESFunction(({ context }) => {\n                return new ESString(fs.readFileSync(path.join(context.path, filePath), encoding).toString());\n            }, [], 'str', undefined, types.string),\n            write: new ESFunction(({ context }, data) => {\n                fs.writeFileSync(context.path + filePath, str(data));\n            }, [{ name: 'path', type: types.string }]),\n            append: new ESFunction(({ context }, data) => {\n                fs.appendFileSync(context.path + filePath, str(data));\n            }, [{ name: 'path', type: types.string }]),\n        });\n    }));\n}\nexport default addNodeLibs;\n","export default \"Array.prototype.contains = function (element) {\\n\\treturn this.indexOf(element) !== -1;\\n};\\n\\nfunction parseNum (str) {\\n\\treturn parseFloat(str);\\n}\\n\\nconst print = console.log;\\n\\nNumber.prototype[Symbol.iterator] = function () {\\n\\treturn {\\n\\t\\tcurrent: 0,\\n\\t\\tlast: this,\\n\\t\\tnext() {\\n\\t\\t\\tif (this.current <= this.last) {\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\tdone: false,\\n\\t\\t\\t\\t\\tvalue: this.current++\\n\\t\\t\\t\\t};\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn { done: true };\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n};\\n\\nconst __private__ = {\\n\\tbims: {\\n\\t\\tmath: Math,\\n\\t\\ttime: {\\n\\t\\t\\tdate: Date,\\n\\t\\t\\tnow: Date.now,\\n\\t\\t},\\n\\t},\\n};\\n\\nif (typeof performance !== 'undefined') {\\n\\t__private__.bims.time.now = performance.now;\\n}\\n\\nfunction import_ (path) {\\n\\tif (__private__.bims.hasOwnProperty(path)) {\\n\\t\\treturn __private__.bims[path];\\n\\t}\\n}\\n\\nfunction range (minP, maxP, stepP) {\\n\\tif (typeof minP !== 'number') {\\n\\t\\treturn [];\\n\\t}\\n\\n\\tconst min = minP.valueOf();\\n\\n\\tif (typeof maxP === 'undefined') {\\n\\t\\ttry {\\n\\t\\t\\treturn [...Array(min).keys()];\\n\\t\\t} catch (e) {\\n\\t\\t\\tthrow `RangeError: Cannot make range of length '${min}'`;\\n\\t\\t}\\n\\t}\\n\\n\\tlet step = 1;\\n\\n\\tif (typeof maxP !== 'number') {\\n\\t\\tthrow 'TypeError: Expected number';\\n\\t}\\n\\n\\tlet max = maxP.valueOf();\\n\\n\\tif (typeof stepP !== 'undefined') {\\n\\t\\tif (typeof stepP !== 'number') {\\n\\t\\t\\tthrow 'TypeError: Expected number';\\n\\t\\t}\\n\\t\\tstep = stepP.valueOf();\\n\\t}\\n\\n\\tlet arr = [];\\n\\n\\tlet i = min;\\n\\twhile (i < max) {\\n\\t\\tarr.push(i);\\n\\t\\ti += step;\\n\\t}\\n\\n\\treturn arr;\\n}\";","export default \"\\n###############################\\n# START OF ENTROPY SCRIPT STD #\\n###############################\\nimport time\\n\\nlog = print\\nparseNum = float\\n\\ndef help(thing):\\n    return 'Help is not available in ES compiled Python'\\n\\n\\ndef GENERATE_PRIVATE():\\n    return {\\n        'modules': {\\n            'ascii': {\\n\\n            },\\n            'time': {\\n                'now': lambda: time.time_ns() / (10 ** 6)\\n            }\\n        }\\n    }\\n\\nPRIVATE = GENERATE_PRIVATE()\\n\\ndef import_ (path):\\n    if path in PRIVATE['modules']:\\n        return PRIVATE['modules'][path]\\n\\n\\n#############################\\n# END OF ENTROPY SCRIPT STD #\\n#############################\";"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Position","constructor","idx","ln","col","file","advance","currentChar","clone","str","isUnknown","void","digits","identifierChars","global","setGlobalContext","c","stringSurrounds","IS_NODE_INSTANCE","window","runningInNode","VAR_DECLARE_KEYWORDS","VERSION","configFileName","VALID_FILE_ENCODINGS","print","console","log","KEYWORDS","now","refreshPerformanceNow","thisArg","_arguments","generator","Date","performance","e","P","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","tokenType","tt","tokenTypeString","NUMBER","STRING","ENDSTATEMENT","IDENTIFIER","KEYWORD","COMMA","OBRACES","CBRACES","OPAREN","CPAREN","OSQUARE","CSQUARE","ASSIGN","ADD","SUB","MUL","DIV","POW","MOD","EQUALS","NOTEQUALS","NOT","GT","LT","GTE","LTE","AND","OR","COLON","DOT","EOF","APMERSAND","PIPE","BITWISE_NOT","QM","singleCharTokens","doubleCharTokens","tripleCharTokens","primitiveMethods","types","ESPrimitive","type","any","self","isa","props","type_check","is","ESBoolean","valueOf","__value__","typeName","__type__","has_property","describe","info","isBuiltIn","description","detail","res","strip","TypeError","assign","__add__","n","InvalidOperationError","__subtract__","__multiply__","__divide__","__pow__","__mod__","__eq__","__gt__","__lt__","__and__","__or__","__bool__","__pipe__","__ampersand__","__set_property__","__call__","parameters","ESErrorPrimitive","error","ESError","super","__get_property__","ESString","name","details","ESArray","traceback","map","s","position","line","wrap","IndexError","cast","bool","ESTypeUnion","ESTypeIntersection","ESObject","val","object","number","ESNumber","length","substr","context","keys","k","thisElement","nElement","newOb","keysToRemove","Array","isArray","indexOf","toClone","thisType","nValue","ESFunction","func","arguments_","this_","returnType","closure","takeCallContextAsClosure","__closure__","params","ctx","path","_a","callContext","fn","newContext","parent","Context","max","Math","i","ESUndefined","arg","typeIncludes","setOwn","forceThroughConst","setRes","generateESFunctionCallContext","Node","_b","interpret","undefined","funcReturn","callNode","push","callNative","thisReturnVal","args","defaultValue","required","v","string","array","ESType","boolean","ESNamespace","mutable","slice","symbol","isAccessible","isConstant","callBack","fTakesProps","toString","ESJSBinding","functionsTakeProps","initPrimitiveTypes","dealWithExtends","class_","instance","superFunc","__extends__","initFunc","__init__","res_","createInstance","runInit","on","primitive","__name__","method","__methods__","methodClone","__instances__","isPrimitive","t","ESTypeArray","left","right","leftRes","__left__","rightRes","__right__","ESTypeNot","__val__","pow","Boolean","helpLink","values","len","contains","element","newArr","numElements","num","parseFloat","isNaN","split","repeat","strToInsert","firstPart","lastPart","ESSymbol","identifier","options","_c","thing","Number","String","m","a","codes","red","yellow","green","cyan","blue","grey","code","asciiToChar","fromCharCode","charToAscii","char","charCodeAt","parse","json","JSON","stringify","AllowAny","config","permissions","networking","imports","accessDOM","useSTD","fileSystem","modules","pathAsString","p","substring","parsePartOfConfig","configJSON","unknownProps","filter","x","parseConfig","processedModules","moduleExist","getModule","processed","moduleDict","moduleRaw","processRawModule","builtInFunctions","minP","maxP","stepP","min","arr","returns","msgs","things","out","indent","total","entries","contents","id","has","set","recursive","global_","time","cb","sleep","symbolPrim","ReferenceError","getSymbol","initialise","globalContext","printFunc","inputFunc","rawUrl","url","ImportError","msg","cbRaw","addDependencyInjectedBIFs","builtIn","globalConstants","constant","load","initModRes","date","ascii","domRes","PermissionRequiredError","InvalidRuntimeError","w","$","document","dom","initModules","initialisedAsGlobal","symbolTable","deleted","path_","parent_","permissions_","hasOwn","getRawSymbolTableAsDict","symbols","getSymbolTableAsDict","remove","clear","resetAsGlobal","deepClone","interpretArgument","typeRes","defaultValRes","interpretResult","shouldBreak","shouldContinue","compileResult","hoisted","register","node","compilePy","pos","isTerminal","start","interpret_","interprets","totalTime","maxTime","N_binOp","opTok","l","r","lt","eq","gt","InvalidSyntaxError","compileJS","minify","switchers","op","N_unaryOp","numVal","abs","N_varAssign","varNameTok","assignType","isGlobal","isDeclaration","N_primitiveWrapper","typeCheckRes","currentVal","newVal","assignVal","declaration","N_arrayDestructAssign","varNames","varName","objPropRes","join","N_if","comparison","ifTrue","ifFalse","compRes","highIndent","statementRes","ifTrueRes","ifFalseRes","N_statements","N_while","loop","shouldLoop","potentialError","comparisonRes","bodyRes","N_for","body","isGlobalIdentifier","isConstIdentifier","isGlobalId","isConstId","iteration","iteratorRes","N_array","items","shouldClone","interpreted","item","itemRes","N_objectLiteral","properties","keyNode","valueNode","topLevel","last","N_functionCall","to","arguments","funcRes","argRes","N_functionDefinition","argNames","returnTypeRes","param","hoistedName","generateRandomSymbol","N_return","valRes","N_yield","N_indexed","base","index","baseRes","indexRes","objectRes","keyRes","N_class","methods","extends_","init","extendsRes","initRes","N_namespace","statements","N_tryCatch","catchBlock","catchRes","N_number","N_string","N_variable","N_undefined","N_break","N_continue","hash","WeakMap","Function","create","getPrototypeOf","Map","from","Set","add","depth","ms","setTimeout","replace","characters","gen","charAt","floor","random","colouredStr","reverse","IllegalCharError","ExpectedCharError","expectedType","actualType","ref","TestFailed","Token","matches","Lexer","program","fileName","text","generate","tokens","includes","makeNumber","singleLineComment","multiLineComment","makeIdentifier","makeString","possibleAssignFirstChar","token","unknownChar","numStr","dotCount","strClose","idStr","posStart","tokType","triple","double","ParseResults","advanceCount","lastRegisteredAdvanceCount","reverseCount","registerAdvance","tryRegister","success","failure","Parser","tokenIdx","currentToken","amount","consume","errorMsg","clearEndStatements","firstStatement","statement","moreStatements","newLineCount","returnStatement","tryCatch","expr","isYield","exprRes","atom","tok","atomIdentifier","arrayExpr","objectExpr","ifExpr","prevNode","functionCall","tempNode","makeFunctionCall","makeIndex","power","binOp","factor","term","arithmeticExpr","comparisonExpr","initiateVar","whileExpr","forExpr","funcExpr","classExpr","namespace","ops","funcB","typeExpr","destructuring","isConst","identifiers","typeNodes","tRes","bracesExp","addEndStatement","splice","condition","parameter","funcCore","methodId","elements","keyType","libs","fs","libName","rawPath","scriptPath","existsSync","exDir","dirname","readFileSync","env","run","currentDir","E","encoding_","filePath","encoding","write","data","writeFileSync","append","appendFileSync","modulePreloadRes","urls","fetch","splitUrl","scriptName","pop","preloadModules","measurePerformance","timeData","lexerTotal","parserTotal","interpretTotal","nodeMax","nodeAvg","nodeTotal","lexerRes","finalRes","compileToJavaScript","comment","stdStr","compileToPython"],"sourceRoot":""}