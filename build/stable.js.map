{"version":3,"file":"2.12.2.js","mappings":"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","sources":["webpack://es/webpack/universalModuleDefinition","webpack://es/webpack/bootstrap","webpack://es/webpack/runtime/define property getters","webpack://es/webpack/runtime/hasOwnProperty shorthand","webpack://es/webpack/runtime/make namespace object","webpack://es/./src/position.ts","webpack://es/./src/constants.ts","webpack://es/./src/runtime/primitives/primitive.ts","webpack://es/./src/runtime/primitives/esprimitive.ts","webpack://es/./src/runtime/primitives/esnumber.ts","webpack://es/./src/runtime/primitives/esboolean.ts","webpack://es/./src/runtime/primitives/eserrorprimitive.ts","webpack://es/./src/runtime/primitives/esobject.ts","webpack://es/./src/runtime/instantiator.ts","webpack://es/./src/runtime/primitives/estype.ts","webpack://es/./src/runtime/primitives/esnamespace.ts","webpack://es/./src/runtime/primitives/esjsbinding.ts","webpack://es/./src/runtime/primitiveTypes.ts","webpack://es/./src/runtime/primitives/esfunction.ts","webpack://es/./src/runtime/functionCaller.ts","webpack://es/./src/runtime/context.ts","webpack://es/./src/runtime/primitives/esundefined.ts","webpack://es/./src/runtime/primitives/esarray.ts","webpack://es/./src/runtime/primitives/esstring.ts","webpack://es/./src/runtime/symbol.ts","webpack://es/./src/runtime/primitives/wrapStrip.ts","webpack://es/./src/util/colours.ts","webpack://es/./src/built-in/builtInFunctions.ts","webpack://es/./src/built-in/built-in-modules/json.ts","webpack://es/./src/built-in/builtInModules.ts","webpack://es/./src/built-in/built-in-modules/ascii.ts","webpack://es/./src/init.ts","webpack://es/./src/built-in/globalConstants.ts","webpack://es/./src/built-in/built-in-modules/promise.ts","webpack://es/./src/built-in/built-in-modules/time.ts","webpack://es/./src/built-in/built-in-modules/dom.ts","webpack://es/./src/runtime/argument.ts","webpack://es/./src/runtime/nodes.ts","webpack://es/./src/util/util.ts","webpack://es/./src/errors.ts","webpack://es/./src/parse/tokens.ts","webpack://es/./src/parse/lexer.ts","webpack://es/./src/parse/parser.ts","webpack://es/./src/index.ts","webpack://es/./src/built-in/nodeLibs.ts","webpack://es/./src/built-in/compiledSTD/std.txt.js","webpack://es/./src/built-in/compiledSTD/std.txt.py"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"es\"] = factory();\n\telse\n\t\troot[\"es\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Position {\n    constructor(idx, ln, col, file = '(unknown)') {\n        this.idx = idx;\n        this.ln = ln;\n        this.col = col;\n        this.file = file;\n    }\n    advance(currentChar = '') {\n        this.idx++;\n        this.col++;\n        if (currentChar === '\\n') {\n            this.ln++;\n            this.col = 0;\n        }\n        return this;\n    }\n    get clone() {\n        return new Position(this.idx, this.ln, this.col, this.file);\n    }\n    get str() {\n        return `File ${this.file}, ${this.ln + 1}:${this.col + 1}`;\n    }\n    get isUnknown() {\n        return this.idx === -2;\n    }\n    static get void() {\n        return new Position(-2, -2, -2, '(unknown)');\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const digits = '0123456789';\nexport const identifierChars = '_$abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nexport const singleLineComment = '//';\nexport const multiLineCommentStart = '/*';\nexport const multiLineCommentEnd = '*/';\nexport let global;\nexport const setGlobalContext = (c) => void (global = c);\nexport const stringSurrounds = ['\\'', '`', '\"'];\nexport let IS_NODE_INSTANCE = typeof window === 'undefined';\nexport const runningInNode = () => void (IS_NODE_INSTANCE = true);\nexport const VAR_DECLARE_KEYWORDS = ['var', 'let', 'global'];\nimport PACKAGE_JSON from '../package.json';\nexport const VERSION = PACKAGE_JSON['version'];\nexport let permissions = {\n    networking: false,\n    imports: true,\n    accessDOM: false,\n    useSTD: true,\n    fileSystem: false,\n};\nexport function updatePermissions(newPermissions) {\n    permissions = Object.assign(Object.assign({}, permissions), newPermissions);\n}\nexport const libs = {\n    print: console.log\n};\nexport const catchBlockErrorSymbolName = 'err';\nexport const KEYWORDS = [\n    'var',\n    'let',\n    'global',\n    'local',\n    'mutable',\n    'const',\n    'if',\n    'else',\n    'while',\n    'for',\n    'in',\n    'continue',\n    'break',\n    'func',\n    'return',\n    'yield',\n    'class',\n    'extends',\n    'namespace',\n    'export',\n    'try',\n    'catch'\n];\nexport let now = () => 0;\nexport function refreshPerformanceNow(IS_NODE_INSTANCE) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (IS_NODE_INSTANCE) {\n            now = () => Date.now();\n        }\n        else {\n            now = () => {\n                try {\n                    return performance === null || performance === void 0 ? void 0 : performance.now();\n                }\n                catch (e) {\n                    return 0;\n                }\n            };\n        }\n    });\n}\nrefreshPerformanceNow(IS_NODE_INSTANCE);\nexport var tokenType;\n(function (tokenType) {\n    tokenType[tokenType[\"NUMBER\"] = 0] = \"NUMBER\";\n    tokenType[tokenType[\"STRING\"] = 1] = \"STRING\";\n    tokenType[tokenType[\"ENDSTATEMENT\"] = 2] = \"ENDSTATEMENT\";\n    tokenType[tokenType[\"IDENTIFIER\"] = 3] = \"IDENTIFIER\";\n    tokenType[tokenType[\"KEYWORD\"] = 4] = \"KEYWORD\";\n    tokenType[tokenType[\"COMMA\"] = 5] = \"COMMA\";\n    tokenType[tokenType[\"ASSIGN\"] = 6] = \"ASSIGN\";\n    tokenType[tokenType[\"ADD\"] = 7] = \"ADD\";\n    tokenType[tokenType[\"SUB\"] = 8] = \"SUB\";\n    tokenType[tokenType[\"MUL\"] = 9] = \"MUL\";\n    tokenType[tokenType[\"DIV\"] = 10] = \"DIV\";\n    tokenType[tokenType[\"POW\"] = 11] = \"POW\";\n    tokenType[tokenType[\"MOD\"] = 12] = \"MOD\";\n    tokenType[tokenType[\"OPAREN\"] = 13] = \"OPAREN\";\n    tokenType[tokenType[\"CPAREN\"] = 14] = \"CPAREN\";\n    tokenType[tokenType[\"OBRACES\"] = 15] = \"OBRACES\";\n    tokenType[tokenType[\"CBRACES\"] = 16] = \"CBRACES\";\n    tokenType[tokenType[\"OSQUARE\"] = 17] = \"OSQUARE\";\n    tokenType[tokenType[\"CSQUARE\"] = 18] = \"CSQUARE\";\n    tokenType[tokenType[\"EQUALS\"] = 19] = \"EQUALS\";\n    tokenType[tokenType[\"NOTEQUALS\"] = 20] = \"NOTEQUALS\";\n    tokenType[tokenType[\"NOT\"] = 21] = \"NOT\";\n    tokenType[tokenType[\"GT\"] = 22] = \"GT\";\n    tokenType[tokenType[\"LT\"] = 23] = \"LT\";\n    tokenType[tokenType[\"GTE\"] = 24] = \"GTE\";\n    tokenType[tokenType[\"LTE\"] = 25] = \"LTE\";\n    tokenType[tokenType[\"AND\"] = 26] = \"AND\";\n    tokenType[tokenType[\"OR\"] = 27] = \"OR\";\n    tokenType[tokenType[\"COLON\"] = 28] = \"COLON\";\n    tokenType[tokenType[\"DOT\"] = 29] = \"DOT\";\n    tokenType[tokenType[\"EOF\"] = 30] = \"EOF\";\n    tokenType[tokenType[\"PIPE\"] = 31] = \"PIPE\";\n    tokenType[tokenType[\"APMERSAND\"] = 32] = \"APMERSAND\";\n    tokenType[tokenType[\"BITWISE_NOT\"] = 33] = \"BITWISE_NOT\";\n})(tokenType || (tokenType = {}));\nexport let tt = tokenType;\nexport const tokenTypeString = {\n    [tt.NUMBER]: 'Number',\n    [tt.STRING]: 'String',\n    [tt.ENDSTATEMENT]: ';',\n    [tt.IDENTIFIER]: 'Identifier',\n    [tt.KEYWORD]: 'Keyword',\n    [tt.COMMA]: ',',\n    [tt.OBRACES]: '{',\n    [tt.CBRACES]: '}',\n    [tt.OPAREN]: '(',\n    [tt.CPAREN]: ')',\n    [tt.OSQUARE]: '[',\n    [tt.CSQUARE]: ']',\n    [tt.ASSIGN]: '=',\n    [tt.ADD]: '+',\n    [tt.SUB]: '-',\n    [tt.MUL]: '*',\n    [tt.DIV]: '/',\n    [tt.POW]: '^',\n    [tt.MOD]: '%',\n    [tt.EQUALS]: '==',\n    [tt.NOTEQUALS]: '!=',\n    [tt.NOT]: '!',\n    [tt.GT]: '>',\n    [tt.LT]: '<',\n    [tt.GTE]: '>=',\n    [tt.LTE]: '<=',\n    [tt.AND]: '&&',\n    [tt.OR]: '||',\n    [tt.COLON]: ':',\n    [tt.DOT]: '.',\n    [tt.EOF]: 'End of File',\n    [tt.APMERSAND]: '&',\n    [tt.PIPE]: '|',\n    [tt.BITWISE_NOT]: '~',\n};\nexport const singleCharTokens = {\n    '*': tt.MUL,\n    '/': tt.DIV,\n    '+': tt.ADD,\n    '-': tt.SUB,\n    '(': tt.OPAREN,\n    ')': tt.CPAREN,\n    '^': tt.POW,\n    '%': tt.MOD,\n    '{': tt.OBRACES,\n    '}': tt.CBRACES,\n    ',': tt.COMMA,\n    '[': tt.OSQUARE,\n    ']': tt.CSQUARE,\n    ';': tt.ENDSTATEMENT,\n    ':': tt.COLON,\n    '.': tt.DOT,\n    '=': tt.ASSIGN,\n    '>': tt.GT,\n    '<': tt.LT,\n    '!': tt.NOT,\n    '|': tt.PIPE,\n    '&': tt.APMERSAND,\n    '~': tt.BITWISE_NOT\n};\nexport const doubleCharTokens = {\n    '==': tt.EQUALS,\n    '!=': tt.NOTEQUALS,\n    '>=': tt.GTE,\n    '<=': tt.LTE,\n    '+=': tt.ASSIGN,\n    '-=': tt.ASSIGN,\n    '*=': tt.ASSIGN,\n    '/=': tt.ASSIGN,\n    '&&': tt.AND,\n    '||': tt.OR\n};\nexport const tripleCharTokens = {};\nexport const primitiveMethods = [\n    '__add__',\n    '__subtract__',\n    '__multiply__',\n    '__divide__',\n    '__pow__',\n    '__eq__',\n    '__gt__',\n    '__lt__',\n    '__and__',\n    '__or__',\n    '__bool__',\n    '__setProperty__',\n    '__getProperty__',\n    '__call__',\n];\n","export const types = {};\n","import { InvalidOperationError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { types } from './primitive';\nimport { str } from '../../util/util';\nimport { strip } from './wrapStrip';\nexport class ESPrimitive {\n    constructor(value, type = types.any) {\n        this.self = this;\n        this.isa = (props, type) => {\n            return type.typeCheck(props, this);\n        };\n        this.is = (props, obj) => {\n            return new ESBoolean(obj === this);\n        };\n        this.valueOf = () => this.__value__;\n        this.typeName = () => str(this.__type__);\n        this.hasProperty = (props, key) => new ESBoolean(this.hasOwnProperty(str(key)));\n        this.describe = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            this.info.description = str(info);\n        };\n        this.detail = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            const res = strip(info, props);\n            if (typeof res !== 'object') {\n                return new TypeError(Position.void, 'object', this.typeName(), str(this));\n            }\n            this.info = Object.assign(Object.assign({}, this.info), res);\n            this.info.isBuiltIn = false;\n        };\n        this.__type__ = type || this;\n        this.__value__ = value;\n        this.info = {};\n    }\n    __add__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __subtract__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __multiply__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __divide__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __pow__(props, n) {\n        return new InvalidOperationError('__pow__', this);\n    }\n    __mod__(props, n) {\n        return new InvalidOperationError('__mod__', this);\n    }\n    __eq__(props, n) {\n        return new InvalidOperationError('__eq__', this);\n    }\n    __gt__(props, n) {\n        return new InvalidOperationError('__gt__', this);\n    }\n    __lt__(props, n) {\n        return new InvalidOperationError('__lt__', this);\n    }\n    __and__(props, n) {\n        return new InvalidOperationError('__and__', this);\n    }\n    __or__(props, n) {\n        return new InvalidOperationError('__or__', this);\n    }\n    __bool__(props) {\n        return new InvalidOperationError('__bool__', this);\n    }\n    __pipe__(props, n) {\n        return new InvalidOperationError('__pipe__', this);\n    }\n    __ampersand__(props, n) {\n        return new InvalidOperationError('__ampersand__', this);\n    }\n    __setProperty__(props, key, value) {\n        return new InvalidOperationError('__setProperty__', this, `[${str(key)}] = ${str(value)}`);\n    }\n    __call__(props, ...parameters) {\n        return new InvalidOperationError('__call__', this);\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nexport class ESNumber extends ESPrimitive {\n    constructor(value = 0) {\n        super(value, types.number);\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return this;\n                case types.string:\n                    return this.str();\n                case types.array:\n                    return new ESArray(new Array(this.valueOf()));\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(this.valueOf().toString());\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() + n.valueOf());\n        };\n        this.__subtract__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() - n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() * n.valueOf());\n        };\n        this.__divide__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() / n.valueOf());\n        };\n        this.__pow__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESNumber(Math.pow(this.valueOf(), n.valueOf()));\n        };\n        this.__mod__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESNumber(this.valueOf() % n.valueOf());\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new ESBoolean(false);\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() > n.valueOf());\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() < n.valueOf());\n        };\n        this.__bool__ = () => {\n            return new ESBoolean(this.valueOf() > 0);\n        };\n        this.bool = this.__bool__;\n        this.clone = () => new ESNumber(this.valueOf());\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.typeCheck = this.__eq__;\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nexport class ESBoolean extends ESPrimitive {\n    constructor(val = false) {\n        super(Boolean(val), types.bool);\n        this.__getProperty__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESBoolean)) {\n                return new TypeError(Position.void, 'Boolean', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__bool__ = () => this;\n        this.__and__ = (props, n) => new ESBoolean(this.valueOf() && n.bool().valueOf());\n        this.__or__ = (props, n) => {\n            return new ESBoolean(this.valueOf() || n.bool().valueOf());\n        };\n        this.str = () => new ESString(this.valueOf() ? 'true' : 'false');\n        this.clone = () => new ESBoolean(this.valueOf());\n        this.bool = () => this;\n        this.typeCheck = this.__eq__;\n        this.info = {\n            name: str(val),\n            description: `Boolean global constant which evaluates to ${str(val)}, the opposite of ${str(!val)}`,\n            file: 'built-in',\n            isBuiltIn: true,\n            helpLink: 'https://en.wikipedia.org/wiki/Boolean_expression'\n        };\n    }\n}\n","import { ESPrimitive } from './esprimitive';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nimport { str } from \"../../util/util\";\nimport { ESArray } from \"./esarray\";\nexport class ESErrorPrimitive extends ESPrimitive {\n    constructor(error = new ESError(Position.void, 'Unknown', 'Error not specified')) {\n        super(error, types.error);\n        this.__getProperty__ = (props, key) => {\n            switch (str(key)) {\n                case 'name':\n                    return new ESString(this.valueOf().name);\n                case 'details':\n                    return new ESString(this.valueOf().details);\n                case 'traceback':\n                    return new ESArray(this.valueOf().traceback\n                        .map(s => new ESString(`${s.position.str} : ${s.line}`)));\n                default:\n                    if (this.self.hasOwnProperty(str(key))) {\n                        return wrap(this.self[str(key)], true);\n                    }\n                    return new IndexError(Position.void, key.valueOf(), this);\n            }\n        };\n        this.cast = () => new ESError(Position.void, 'TypeError', `Cannot cast type 'error'`);\n        this.str = () => new ESString(`<Error: ${this.valueOf().str}>`);\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(n instanceof ESErrorPrimitive &&\n                this.valueOf().constructor === n.valueOf().constructor);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.clone = () => new ESErrorPrimitive(this.valueOf());\n        this.typeCheck = this.__eq__;\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { types } from './primitive';\nimport { strip, wrap } from './wrapStrip';\nexport class ESObject extends ESPrimitive {\n    constructor(val = {}) {\n        super(val, types.object);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => {\n            let val = str(this.valueOf());\n            if (val[val.length - 1] === '\\n') {\n                val = val.substr(0, val.length - 1);\n            }\n            return new ESString(`<ESObject ${val}>`);\n        };\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new ESBoolean();\n            }\n            if (n.keys.length !== this.keys.length) {\n                return new ESBoolean();\n            }\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const thisElement = this.valueOf()[key];\n                const nElement = n.valueOf()[key];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new TypeError(Position.void, 'object', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const res = this.__getProperty__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            for (let k of n.keys) {\n                const key = k.valueOf();\n                if (newOb.hasOwnProperty(key)) {\n                    continue;\n                }\n                const res = n.__getProperty__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            return new ESObject(newOb);\n        };\n        this.__subtract__ = (props, n) => {\n            let keysToRemove = [];\n            if (n instanceof ESString) {\n                keysToRemove = [str(n)];\n            }\n            else if (n instanceof ESArray) {\n                keysToRemove = strip(n, props);\n            }\n            else {\n                return new TypeError(Position.void, 'array | string', n.typeName().valueOf(), n);\n            }\n            if (!Array.isArray(keysToRemove)) {\n                return new TypeError(Position.void, 'array | string', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                if (keysToRemove.indexOf(key) === -1) {\n                    let res = this.__getProperty__(props, k);\n                    if (res instanceof ESError) {\n                        return res;\n                    }\n                    newOb[key] = res;\n                }\n            }\n            return new ESObject(newOb);\n        };\n        this.__getProperty__ = (props, k) => {\n            if (!(k instanceof ESString) && !(k instanceof ESNumber)) {\n                return new TypeError(Position.void, 'string | number', k.typeName(), str(k));\n            }\n            const key = k.valueOf();\n            if (this.valueOf().hasOwnProperty(key)) {\n                return this.valueOf()[key];\n            }\n            if (this.self.hasOwnProperty(key)) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new ESUndefined();\n        };\n        this.__setProperty__ = ({}, key, value) => {\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.void, 'string', key.typeName(), str(key));\n            }\n            this.__value__[key.valueOf()] = value;\n        };\n        this.hasProperty = (props, k) => {\n            const key = str(k);\n            if (this.valueOf().hasOwnProperty(str(key))) {\n                return new ESBoolean(true);\n            }\n            return new ESBoolean(this.hasOwnProperty(key));\n        };\n        this.clone = () => {\n            const res = new ESObject();\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            res.__value__ = obj;\n            return res;\n        };\n        this.typeCheck = this.__eq__;\n    }\n    get keys() {\n        return Object.keys(this.valueOf()).map(s => new ESString(s));\n    }\n    set keys(val) { }\n}\n","import { primitiveMethods } from '../constants';\nimport { Context } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESFunction, ESNumber, ESObject, ESString, ESType, ESUndefined } from \"./primitiveTypes\";\nfunction dealWithExtends(context, class_, instance, this_, callContext) {\n    if (!(class_ instanceof ESType)) {\n        return new TypeError(Position.void, 'Type', typeof class_, class_);\n    }\n    const superFunc = new ESFunction(({ context }, ...args) => {\n        const newContext = new Context();\n        newContext.parent = context;\n        if (class_.__extends__) {\n            let _a = dealWithExtends(newContext, class_.__extends__, instance, this_, callContext);\n            if (_a instanceof ESError) {\n                return _a;\n            }\n        }\n        const initFunc = class_ === null || class_ === void 0 ? void 0 : class_.__init__;\n        if (!initFunc) {\n            return;\n        }\n        initFunc.this_ = this_;\n        initFunc.__closure__ = newContext;\n        const res_ = initFunc.__call__({ context: newContext }, ...args);\n        if (res_ instanceof ESError) {\n            return res_;\n        }\n    }, undefined, 'super', this_);\n    let setRes = context.setOwn('super', superFunc);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    const res = createInstance(class_, { context }, [], false, instance);\n    if (res instanceof ESError) {\n        return res;\n    }\n}\nexport function createInstance(type, { context }, params, runInit = true, on = {}) {\n    var _b;\n    if (type.primitive) {\n        if (params.length < 1) {\n            return new ESUndefined();\n        }\n        switch (type.__name__) {\n            case 'Undefined':\n            case 'Type':\n                if (params.length < 1) {\n                    return new ESType();\n                }\n                else {\n                    return new ESString(params[0].typeName());\n                }\n            case 'String':\n                return new ESString(params[0].str().valueOf());\n            case 'Array':\n                return new ESArray(params);\n            case 'Number':\n                return new ESNumber(params[0].valueOf());\n            case 'Function':\n                return new ESFunction(params[0].valueOf());\n            case 'Boolean':\n                return new ESBoolean(params[0].bool().valueOf());\n            default:\n                return wrap(params[0]);\n        }\n    }\n    const newContext = new Context();\n    newContext.parent = (_b = type.__init__) === null || _b === void 0 ? void 0 : _b.__closure__;\n    const instance = new ESObject();\n    if (type.__extends__) {\n        let res = dealWithExtends(newContext, type.__extends__, on, instance, context);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__value__ = on;\n    for (let method of type.__methods__) {\n        const methodClone = method.clone();\n        methodClone.this_ = instance;\n        on[method.name] = methodClone;\n        if (primitiveMethods.indexOf(method.name) !== -1) {\n            instance[method.name] = methodClone.__call__;\n        }\n    }\n    if (runInit && type.__init__) {\n        type.__init__.this_ = instance;\n        type.__init__.__closure__ = newContext;\n        const res = type.__init__.__call__({ context: newContext }, ...params);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__type__ = type;\n    type.__instances__.push(instance);\n    return instance;\n}\n","import { ESError, IndexError, InvalidOperationError, TypeError } from '../../errors';\nimport { createInstance } from '../instantiator';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nimport { Position } from \"../../position\";\nimport { str } from \"../../util/util\";\nexport class ESType extends ESPrimitive {\n    constructor(isPrimitive = false, name = '(anon)', __methods__ = [], __extends__, __init__) {\n        super(undefined, types === null || types === void 0 ? void 0 : types.type);\n        this.__instances__ = [];\n        this.clone = () => {\n            return new ESType(this.primitive, this.__name__, this.__methods__, this.__extends__, this.__init__);\n        };\n        this.isa = (props, type) => {\n            return new ESBoolean(type === types.type);\n        };\n        this.cast = (props, type) => {\n            return new InvalidOperationError('cast', this);\n        };\n        this.typeCheck = (props, n) => {\n            var _a, _b;\n            if (!n)\n                return new ESBoolean();\n            let t = n.__type__;\n            if (this === types.any ||\n                t === types.any ||\n                t === this ||\n                this.__extends__ === t ||\n                this.__extends__ === types.any ||\n                this.__extends__ === n ||\n                (((_a = this.__extends__) === null || _a === void 0 ? void 0 : _a.typeCheck(props, n).valueOf()) === true)) {\n                return new ESBoolean(true);\n            }\n            if (t instanceof ESType) {\n                if (t.__extends__ === this ||\n                    t.__extends__ === types.any ||\n                    (((_b = t.__extends__) === null || _b === void 0 ? void 0 : _b.typeCheck(props, this).valueOf()) === true)) {\n                    return new ESBoolean(true);\n                }\n            }\n            return new ESBoolean(this === t);\n        };\n        this.__eq__ = (props, t) => {\n            return new ESBoolean(t === this);\n        };\n        this.__call__ = (props, ...params) => {\n            return createInstance(this, props, params || []);\n        };\n        this.str = () => new ESString(this.__name__);\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, k) => {\n            if (!(k instanceof ESString)) {\n                return new TypeError(Position.void, 'string', k.typeName(), str(k));\n            }\n            const key = k.valueOf();\n            if (this.self.hasOwnProperty(key)) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key, this);\n        };\n        this.primitive = isPrimitive;\n        this.__name__ = name;\n        this.info.name = name;\n        this.__extends__ = __extends__;\n        this.__methods__ = __methods__;\n        if (__init__) {\n            __init__.name = name;\n            this.__init__ = __init__;\n        }\n        if (!types.type) {\n            this.__type__ = this;\n        }\n    }\n    __pipe__(props, n) {\n        if (!(n instanceof ESType)) {\n            return new TypeError(Position.void, 'type', n.typeName(), str(n));\n        }\n        return new ESTypeUnion(this, n);\n    }\n}\nexport class ESTypeUnion extends ESType {\n    constructor(left, right) {\n        super(false, `(${left.__name__}) | (${right.__name__})`);\n        this.__call__ = (props, ...params) => {\n            return new InvalidOperationError('__call__', this);\n        };\n        this.typeCheck = (props, t) => {\n            const leftRes = this.__left__.typeCheck(props, t);\n            const rightRes = this.__right__.typeCheck(props, t);\n            if (leftRes instanceof ESError)\n                return leftRes;\n            if (rightRes instanceof ESError)\n                return rightRes;\n            return new ESBoolean(leftRes.valueOf() ||\n                rightRes.valueOf());\n        };\n        this.clone = () => {\n            return new ESTypeUnion(this.__left__, this.__right__);\n        };\n        this.__left__ = left;\n        this.__right__ = right;\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { wrap } from './wrapStrip';\nexport class ESNamespace extends ESPrimitive {\n    constructor(name, value, mutable = false) {\n        super(value, types.object);\n        this.cast = ({}) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast type 'namespace'`);\n        };\n        this.clone = () => {\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            return new ESNamespace(this.name, obj);\n        };\n        this.str = () => {\n            const keys = Object.keys(this.valueOf());\n            return new ESString(`<Namespace ${str(this.name)}${keys.length > 0 ? ': ' : ''}${keys.slice(0, 5)}${keys.length >= 5 ? '...' : ''}>`);\n        };\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.valueOf().hasOwnProperty(key.valueOf())) {\n                const symbol = this.valueOf()[key.valueOf()];\n                if (symbol.isAccessible) {\n                    return symbol.value;\n                }\n            }\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.void, 'string', key.typeName());\n            }\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this.self);\n        };\n        this.typeCheck = this.__eq__;\n        this.info.name = str(name);\n        this.mutable = mutable;\n    }\n    get name() {\n        return new ESString(this.info.name);\n    }\n    set name(v) {\n        this.info.name = v.valueOf();\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESString)) {\n            return new TypeError(Position.void, 'string', key.typeName().valueOf(), str(key));\n        }\n        let idx = str(key);\n        if (!this.mutable) {\n            return new TypeError(Position.void, 'mutable', 'immutable', `${str(this.name)}`);\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        const symbol = this.__value__[idx];\n        if (!symbol) {\n            return new ESError(Position.void, 'SymbolError', `Symbol ${idx} is not declared in namespace ${str(this.name)}.`);\n        }\n        if (symbol.isConstant) {\n            return new TypeError(Position.void, 'mutable', 'immutable', `${str(this.name)}[${idx}]`);\n        }\n        if (!symbol.isAccessible) {\n            return new TypeError(Position.void, 'accessible', 'inaccessible', `${str(this.name)}[${idx}]`);\n        }\n        symbol.value = value;\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { strip, wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESJSBinding extends ESPrimitive {\n    constructor(value, name = '<AnonNative>', functionsTakeProps = false) {\n        super(value, types.object);\n        this.cast = (props) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast native object`);\n        };\n        this.clone = () => new ESJSBinding(this.__value__);\n        this.str = () => {\n            try {\n                return new ESString(JSON.stringify(this.__value__));\n            }\n            catch (e) {\n                return new ESString(`${this.__value__}`);\n            }\n        };\n        this.__eq__ = ({}, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, k) => {\n            const key = str(k);\n            const val = this.valueOf();\n            const res = val[key];\n            if (res === undefined) {\n                if (this.self.hasOwnProperty(key)) {\n                    return wrap(this.self[str(key)], true);\n                }\n                return new IndexError(Position.void, key, this);\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            if (typeof res === 'function') {\n                let fTakesProps = this.functionsTakeProps;\n                return new ESFunction((props, ...args) => {\n                    if (!fTakesProps) {\n                        args = args.map(o => strip(o, props));\n                        const res = val[key](...args);\n                        return wrap(res);\n                    }\n                    else {\n                        return val[key](props, ...args);\n                    }\n                });\n            }\n            return wrap(res);\n        };\n        this.__call__ = (props, ...args) => {\n            if (typeof this.__value__ !== 'function') {\n                return new TypeError(Position.void, 'function', typeof this.__value__, str(this));\n            }\n            let res;\n            if (this.functionsTakeProps) {\n                try {\n                    res = new this.__value__(props, ...args);\n                }\n                catch (_a) {\n                    res = this.__value__(props, ...args);\n                }\n            }\n            else {\n                try {\n                    res = new this.__value__(...args.map(o => strip(o, props)));\n                }\n                catch (_b) {\n                    res = this.__value__(...args.map(o => strip(o, props)));\n                }\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            return wrap(res);\n        };\n        this.hasProperty = (props, key) => {\n            return new ESBoolean(!(this.__getProperty__(props, key) instanceof ESError));\n        };\n        this.typeCheck = this.__eq__;\n        this.info.name = str(name);\n        this.functionsTakeProps = functionsTakeProps;\n    }\n}\n","import { types } from './primitives/primitive';\nimport { ESPrimitive } from './primitives/esprimitive';\nimport { ESArray } from './primitives/esarray';\nimport { ESBoolean } from './primitives/esboolean';\nimport { ESErrorPrimitive } from './primitives/eserrorprimitive';\nimport { ESFunction } from './primitives/esfunction';\nimport { ESNumber } from './primitives/esnumber';\nimport { ESObject } from './primitives/esobject';\nimport { ESString } from './primitives/esstring';\nimport { ESType } from './primitives/estype';\nimport { ESUndefined } from './primitives/esundefined';\nimport { ESNamespace } from './primitives/esnamespace';\nimport { ESJSBinding } from \"./primitives/esjsbinding\";\nexport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNumber, ESPrimitive, ESString, ESObject, ESType, ESUndefined, ESNamespace, ESJSBinding, types };\ntypes.type = new ESType(true, 'Type');\ntypes.undefined = new ESType(true, 'Undefined');\ntypes.string = new ESType(true, 'String');\ntypes.array = new ESType(true, 'Array');\ntypes.number = new ESType(true, 'Number');\ntypes.any = new ESType(true, 'Any');\ntypes.function = new ESType(true, 'Function');\ntypes.bool = new ESType(true, 'Boolean');\ntypes.object = new ESType(true, 'Object');\ntypes.error = new ESType(true, 'Error');\ntypes.any.info = {\n    name: 'any',\n    description: 'Matches any other type',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.number.info = {\n    name: 'any',\n    description: 'The ES Number type. Is a a double-precision 64-bit binary format IEEE 754 value, like double in Java and C#',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.string.info = {\n    name: 'string',\n    description: 'The ES String type. Holds an array of characters, and can be defined with any of \\', \" and `. Can be indexed like an array.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.bool.info = {\n    name: 'bool',\n    description: 'The ES Bool type. Exactly two instances exist, true and false.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.function.info = {\n    name: 'function',\n    description: 'The ES Function type. Is a block of code which executes when called and takes in 0+ parameters.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.array.info = {\n    name: 'array',\n    description: 'The ES Array type. Defines a set of items of any type which can be accessed by an index with [].',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.object.info = {\n    name: 'object',\n    description: 'The ES Object type. Similar to JS objects or python dictionaries.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.error.info = {\n    name: 'error',\n    description: 'The ES Error type. Call to throw an error.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.type.info = {\n    name: 'type',\n    description: 'The ES Type type. Call to get the type of a value at a string.',\n    file: 'built-in',\n    isBuiltIn: true\n};\n","import { ESPrimitive } from './esprimitive';\nimport { global } from '../../constants';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { Context } from '../context';\nimport { call } from '../functionCaller';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nexport class ESFunction extends ESPrimitive {\n    constructor(func = (() => { }), arguments_ = [], name = '(anon)', this_ = new ESObject(), returnType = types.any, closure) {\n        super(func, types.function);\n        this.cast = (props, type) => {\n            return new ESError(Position.void, 'TypeError', `Cannot cast type 'function'`);\n        };\n        this.clone = () => {\n            return new ESFunction(this.__value__, this.arguments_, this.name, this.this_, this.returnType, this.__closure__);\n        };\n        this.valueOf = () => this;\n        this.str = () => new ESString(`<Func: ${this.name}>`);\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESFunction))\n                return new ESBoolean(false);\n            return new ESBoolean(this.__value__ === n.__value__);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__call__ = ({ context }, ...params) => {\n            this.__closure__.path = context.path;\n            return call(this.__closure__, this, params);\n        };\n        this.__getProperty__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.typeCheck = this.__eq__;\n        this.arguments_ = arguments_;\n        this.info.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        if (closure) {\n            this.__closure__ = closure;\n        }\n        else {\n            this.__closure__ = new Context();\n            this.__closure__.parent = global;\n        }\n        this.info.returnType = str(returnType);\n        this.info.args = arguments_.map(arg => ({\n            name: arg.name,\n            defaultValue: str(arg.defaultValue),\n            type: arg.type.info.name,\n            required: true\n        }));\n    }\n    get name() {\n        var _a;\n        return (_a = this.info.name) !== null && _a !== void 0 ? _a : '(anonymous)';\n    }\n    set name(v) {\n        this.info.name = v;\n    }\n}\n","import { str } from '../util/util';\nimport { Node } from \"./nodes\";\nimport { generateESFunctionCallContext } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { ESObject, ESPrimitive, ESUndefined } from \"./primitiveTypes\";\nfunction callNode(self, context, params, fn) {\n    var _a, _b;\n    const res = fn.interpret(context);\n    if (res.error)\n        return res.error;\n    if (res.funcReturn !== undefined) {\n        res.val = res.funcReturn;\n        res.funcReturn = undefined;\n    }\n    if (self.returnType.typeCheck({ context }, res.val).valueOf() === false) {\n        return new TypeError(Position.void, str(self.returnType), ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || 'undefined', (_b = res.val) === null || _b === void 0 ? void 0 : _b.str().valueOf(), '(from function return)');\n    }\n    if (res.val) {\n        return res.val;\n    }\n    else {\n        return new ESUndefined();\n    }\n}\nfunction callNative(self, context, params, fn) {\n    for (let i = params.length; i < fn.length; i++)\n        params.push(new ESUndefined());\n    const res = fn({\n        context\n    }, ...params);\n    if (res instanceof ESError || res instanceof ESPrimitive) {\n        return res;\n    }\n    return new ESUndefined();\n}\nexport function call(context, self, params) {\n    var _a;\n    let callContext = context;\n    context = self.__closure__;\n    context.path = callContext.path;\n    const fn = self.__value__;\n    const newContext = generateESFunctionCallContext(params, self, context);\n    if (newContext instanceof ESError) {\n        return newContext;\n    }\n    let this_ = (_a = self.this_) !== null && _a !== void 0 ? _a : new ESObject();\n    if (!(this_ instanceof ESObject))\n        return new TypeError(Position.void, 'object', typeof this_, this_, '\\'this\\' must be an object');\n    let setRes = newContext.setOwn('this', this_);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    if (fn instanceof Node) {\n        return callNode(self, newContext, params, fn);\n    }\n    else if (typeof fn === 'function') {\n        return callNative(self, newContext, params, fn);\n    }\n    else {\n        return new TypeError(Position.void, 'function', typeof fn);\n    }\n}\n","import { initialise } from \"../init\";\nimport { ESError, TypeError, ReferenceError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESPrimitive, ESType, ESUndefined, types } from \"./primitiveTypes\";\nimport { str } from \"../util/util\";\nimport { ESSymbol } from './symbol';\nimport chalk from \"../util/colours\";\nexport class Context {\n    constructor() {\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        this.deleted = false;\n        this.path_ = '';\n    }\n    get path() {\n        if (this.path_ || !this.parent) {\n            return this.path_;\n        }\n        return this.parent.path;\n    }\n    set path(val) {\n        this.path_ = val;\n    }\n    get parent() {\n        return this.parent_;\n    }\n    set parent(val) {\n        if (val == this) {\n            console.error(chalk.red(`Setting context parent to self`));\n            return;\n        }\n        this.parent_ = val;\n    }\n    has(identifier) {\n        if (!identifier)\n            return false;\n        return this.get(identifier) !== undefined;\n    }\n    hasOwn(identifier) {\n        return this.symbolTable[identifier] instanceof ESSymbol;\n    }\n    get(identifier) {\n        let symbol = this.getSymbol(identifier);\n        if (symbol instanceof ESError || symbol == undefined) {\n            return symbol;\n        }\n        return symbol.value;\n    }\n    getRawSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key].value;\n        return symbols;\n    }\n    getSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key];\n        return symbols;\n    }\n    getSymbol(identifier) {\n        let symbol = this.symbolTable[identifier];\n        if (symbol !== undefined && !symbol.isAccessible)\n            return new TypeError(Position.void, 'assessable', 'inaccessible', symbol.identifier);\n        if (symbol === undefined && this.parent) {\n            let res = this.parent.getSymbol(identifier);\n            if (res instanceof ESError)\n                return res;\n            if (!res)\n                return new ReferenceError(Position.void, identifier);\n            symbol = res;\n        }\n        return symbol;\n    }\n    set(identifier, value, options = {}) {\n        let context = this;\n        if (options.global) {\n            context = this.root;\n        }\n        else {\n            while (!context.hasOwn(identifier) && context.parent !== undefined) {\n                context = context.parent;\n            }\n            if (!context.hasOwn(identifier)) {\n                context = this;\n            }\n        }\n        return context.setOwn(identifier, value, options);\n    }\n    setOwn(identifier, value, options = {}) {\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        if (options.global && !this.initialisedAsGlobal) {\n            options.global = false;\n        }\n        if (!options.forceThroughConst) {\n            let symbol = this.symbolTable[identifier];\n            if (symbol === null || symbol === void 0 ? void 0 : symbol.isConstant)\n                return new TypeError(Position.void, 'dynamic', 'constant', identifier);\n        }\n        this.symbolTable[identifier] = new ESSymbol(value, identifier, options);\n    }\n    remove(identifier) {\n        delete this.symbolTable[identifier];\n    }\n    clear() {\n        for (let symbol in this.symbolTable) {\n            this.remove(symbol);\n        }\n        this.parent = undefined;\n        this.deleted = true;\n    }\n    get root() {\n        let parent = this;\n        while (parent.parent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    get keys() {\n        return Object.keys(this.symbolTable);\n    }\n    resetAsGlobal() {\n        var _a, _b;\n        if (!this.initialisedAsGlobal)\n            return;\n        const printFunc = this.root.get('print');\n        const inputFunc = this.root.get('input');\n        if (!(printFunc instanceof ESPrimitive) || !(inputFunc instanceof ESPrimitive)) {\n            console.error('Error with print and input functions.');\n            return;\n        }\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        initialise(this, ((_a = printFunc.valueOf()) === null || _a === void 0 ? void 0 : _a.func) || console.log, ((_b = inputFunc.valueOf()) === null || _b === void 0 ? void 0 : _b.func) || (() => { }));\n    }\n    clone() {\n        const newContext = new Context();\n        newContext.parent = this.parent;\n        newContext.deleted = this.deleted;\n        newContext.initialisedAsGlobal = this.initialisedAsGlobal;\n        newContext.symbolTable = Object.assign(Object.assign({}, newContext.symbolTable), this.symbolTable);\n        return newContext;\n    }\n    deepClone() {\n        var _a;\n        let clone = this.clone();\n        clone.parent = (_a = clone.parent) === null || _a === void 0 ? void 0 : _a.deepClone();\n        return clone;\n    }\n    log() {\n        console.log('---- CONTEXT ----');\n        for (let key in this.symbolTable) {\n            const symbol = this.symbolTable[key];\n            let out = key;\n            if (symbol.isConstant)\n                out += ' (CONST)';\n            if (!symbol.isAccessible)\n                out += ' (INACCESSIBLE)';\n            out += ': ';\n            out += str(this.symbolTable[key].value);\n            console.log(out);\n        }\n        console.log('-----------------');\n    }\n}\nexport function generateESFunctionCallContext(params, self, parent) {\n    const newContext = new Context();\n    newContext.parent = parent;\n    let max = Math.max(params.length, self.arguments_.length);\n    for (let i = 0; i < max; i++) {\n        let value = new ESUndefined();\n        let type = types.any;\n        if (!self.arguments_[i]) {\n            continue;\n        }\n        const arg = self.arguments_[i];\n        if (!(arg.type instanceof ESType)) {\n            return new TypeError(Position.void, 'Type', typeof arg.type, arg.type);\n        }\n        if (params[i] instanceof ESPrimitive) {\n            type = params[i].__type__;\n            value = params[i];\n        }\n        const typeIncludes = arg.type.typeCheck({ context: parent }, params[i]);\n        if (typeIncludes instanceof ESError)\n            return typeIncludes;\n        if (!typeIncludes.valueOf()) {\n            return new TypeError(Position.void, arg.type.__name__, str(type), str(value));\n        }\n        newContext.setOwn(arg.name, value, {\n            forceThroughConst: true\n        });\n    }\n    let setRes = newContext.setOwn('args', new ESArray(params), {\n        forceThroughConst: true\n    });\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    return newContext;\n}\n","import { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { str } from '../../util/util';\nimport { wrap } from \"./wrapStrip\";\nexport class ESUndefined extends ESPrimitive {\n    constructor() {\n        super(undefined, types.undefined);\n        this.cast = ({ context }, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber();\n                case types.string:\n                    return new ESString();\n                case types.array:\n                    return new ESArray();\n                case types.undefined:\n                    return new ESUndefined();\n                case types.type:\n                    return new ESType();\n                case types.error:\n                    return new ESErrorPrimitive();\n                case types.object:\n                case types.any:\n                    return new ESObject();\n                case types.function:\n                    return new ESFunction(() => { });\n                case types.boolean:\n                    return new ESBoolean();\n                default:\n                    if (!(type instanceof ESType)) {\n                        return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n                    }\n                    return type.__call__({ context });\n            }\n        };\n        this.str = () => new ESString('<Undefined>');\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(n instanceof ESUndefined ||\n                typeof n === 'undefined' ||\n                typeof n.valueOf() === 'undefined');\n        };\n        this.__bool__ = () => new ESBoolean();\n        this.bool = this.__bool__;\n        this.clone = () => new ESUndefined();\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            return new IndexError(Position.void, key.valueOf(), this);\n        };\n        this.typeCheck = this.__eq__;\n        this.info = {\n            name: 'undefined',\n            description: 'Not defined, not a value.',\n            file: 'built-in',\n            isBuiltIn: true\n        };\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { types } from './primitive';\nimport { wrap } from './wrapStrip';\nexport class ESArray extends ESPrimitive {\n    constructor(values = []) {\n        super(values, types.array);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.len);\n                case types.boolean:\n                    return this.bool();\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(str(this.valueOf()));\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESArray)) {\n                return new ESBoolean();\n            }\n            if (n.len !== this.len) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.len; i++) {\n                const thisElement = this.valueOf()[i];\n                const nElement = n.valueOf()[i];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESArray)) {\n                return new TypeError(Position.void, 'array', n.typeName().valueOf(), n);\n            }\n            return new ESArray([...this.valueOf(), ...n.valueOf()]);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESUndefined();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return this.valueOf()[idx];\n            }\n            return new ESUndefined();\n        };\n        this.add = (props, val, idx = new ESNumber(this.len - 1)) => {\n            if (!(val instanceof ESPrimitive))\n                throw 'adding non-primitive to array: ' + str(val);\n            this.len++;\n            this.__value__.splice(idx.valueOf(), 0, val);\n            return new ESNumber(this.len);\n        };\n        this.contains = (props, val) => {\n            for (let element of this.__value__) {\n                if (val.__eq__(props, element)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        this.clone = () => {\n            const newArr = [];\n            for (let element of this.valueOf()) {\n                newArr.push(element);\n            }\n            return new ESArray(newArr);\n        };\n        this.typeCheck = (props, n) => {\n            console.log(str(n));\n            if (!(n instanceof ESArray) || this.len !== n.len) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.__value__.length; i++) {\n                const res = this.__value__[i].typeCheck(props, n.__value__[i]);\n                if (res instanceof ESError)\n                    return res;\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.len = values.length;\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESNumber)) {\n            return;\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        let idx = key.valueOf();\n        while (idx < 0) {\n            idx = this.valueOf().length + idx;\n        }\n        this.__value__[idx] = value;\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { wrap } from './wrapStrip';\nexport class ESString extends ESPrimitive {\n    constructor(value = '') {\n        super(value, types.string);\n        this.str = () => this;\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    const num = parseFloat(this.valueOf());\n                    if (isNaN(num))\n                        return new ESError(Position.void, 'TypeError', `This string is not a valid number`);\n                    return new ESNumber(num);\n                case types.string:\n                    return this;\n                case types.array:\n                    return new ESArray(this.valueOf().split('').map(s => new ESString(s)));\n                default:\n                    return new ESError(Position.void, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESString(this.valueOf() + n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.void, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESString(this.valueOf().repeat(n.valueOf()));\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new ESBoolean(false);\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf().length > n.valueOf().length);\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.void, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf().length < n.valueOf().length);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.len = () => {\n            return new ESNumber(this.valueOf().length);\n        };\n        this.clone = () => new ESString(this.valueOf());\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                return wrap(this.self[str(key)], true);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESString();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return new ESString(this.valueOf()[idx]);\n            }\n            return new ESString();\n        };\n        this.typeCheck = this.__eq__;\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESNumber))\n            return;\n        if (!(value instanceof ESString))\n            value = new ESString(str(value));\n        let idx = key.valueOf();\n        while (idx < 0)\n            idx = this.valueOf().length + idx;\n        const strToInsert = value.str().valueOf();\n        let firstPart = this.__value__.substr(0, idx);\n        let lastPart = this.__value__.substr(idx + strToInsert.length);\n        this.__value__ = firstPart + strToInsert + lastPart;\n    }\n}\n","import { ESString } from './primitives/esstring';\nimport { types } from \"./primitives/primitive\";\nexport class ESSymbol {\n    constructor(value, identifier, options = {}) {\n        var _a, _b, _c;\n        this.clone = () => {\n            return new ESSymbol(this.value.clone(), this.identifier, {\n                isConstant: this.isConstant,\n                isAccessible: this.isAccessible\n            });\n        };\n        this.str = () => new ESString(`<Symbol: ${this.identifier}>`);\n        this.value = value;\n        this.identifier = identifier;\n        this.isConstant = (_a = options.isConstant) !== null && _a !== void 0 ? _a : false;\n        this.isAccessible = (_b = options.isAccessible) !== null && _b !== void 0 ? _b : true;\n        this.type = (_c = options.type) !== null && _c !== void 0 ? _c : types.any;\n    }\n}\n","import { ESError } from '../../errors';\nimport { ESSymbol } from '../symbol';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESPrimitive } from './esprimitive';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESUndefined } from './esundefined';\nimport { ESJSBinding } from \"./esjsbinding\";\nexport function wrap(thing, functionsTakeProps = false) {\n    if (thing instanceof ESPrimitive) {\n        return thing;\n    }\n    else if (thing === undefined || thing === null) {\n        return new ESUndefined();\n    }\n    else if (thing instanceof ESError) {\n        return new ESErrorPrimitive(thing);\n    }\n    else if (thing instanceof ESSymbol) {\n        return thing.value;\n    }\n    else if (typeof thing === 'number') {\n        return new ESNumber(thing);\n    }\n    else if (typeof thing === 'string') {\n        return new ESString(thing);\n    }\n    else if (typeof thing === 'boolean') {\n        return new ESBoolean(thing);\n    }\n    else if (typeof thing === 'bigint') {\n        return new ESNumber(Number(thing));\n    }\n    else if (typeof thing === 'symbol') {\n        return new ESString(String(thing));\n    }\n    return new ESJSBinding(thing, undefined, functionsTakeProps);\n}\nexport function strip(thing, props) {\n    if (thing == undefined) {\n        return undefined;\n    }\n    else if (!(thing instanceof ESPrimitive)) {\n        return thing;\n    }\n    else if (thing instanceof ESArray) {\n        return thing.valueOf().map(m => strip(m, props), props);\n    }\n    else if (thing instanceof ESObject) {\n        let val = {};\n        for (let key in thing.valueOf()) {\n            val[key] = strip(thing.valueOf()[key], props);\n        }\n        return val;\n    }\n    else if (thing instanceof ESUndefined) {\n        return undefined;\n    }\n    else if (thing instanceof ESFunction) {\n        return (...args) => {\n            const res = thing.__call__(props, ...args.map(a => wrap(a)));\n            if (res instanceof ESError) {\n                return res;\n            }\n            return strip(res, props);\n        };\n    }\n    else if (thing instanceof ESType) {\n        return thing;\n    }\n    return thing.valueOf();\n}\n","import { IS_NODE_INSTANCE } from \"../constants\";\nconst codes = {\n    red: 31,\n    yellow: 33,\n    green: 32,\n    cyan: 36,\n    blue: 34,\n    grey: 2\n};\nconst c = {};\nfor (let code of Object.keys(codes)) {\n    c[code] = (s) => {\n        s || (s = '');\n        if (IS_NODE_INSTANCE) {\n            return `\\x1b[${codes[code]}m` + s + '\\x1b[0m';\n        }\n        return `<span style=\"color: ${code}\">${s}</span>`;\n    };\n}\nexport default c;\n","import { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from '../runtime/primitives/wrapStrip';\nimport { ESArray, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESUndefined } from '../runtime/primitiveTypes';\nimport { indent, sleep, str } from '../util/util';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport chalk from \"../util/colours\";\nexport const builtInFunctions = {\n    'range': [({ context }, minP, maxP, stepP) => {\n            if (!(minP instanceof ESNumber)) {\n                return new ESArray();\n            }\n            const min = minP.valueOf();\n            if (maxP instanceof ESUndefined) {\n                try {\n                    return new ESArray([...Array(min).keys()].map(n => new ESNumber(n)));\n                }\n                catch (e) {\n                    return new ESError(Position.void, 'RangeError', `Cannot make range of length '${str(min)}'`);\n                }\n            }\n            let step = 1;\n            if (!(maxP instanceof ESNumber)) {\n                return new TypeError(Position.void, 'number', maxP.typeName(), str(maxP));\n            }\n            let max = maxP.valueOf();\n            if (!(stepP instanceof ESUndefined)) {\n                if (!(stepP instanceof ESNumber)) {\n                    return new TypeError(Position.void, 'number', stepP.typeName(), str(stepP));\n                }\n                step = stepP.valueOf();\n            }\n            let arr = [];\n            let i = min;\n            while (i < max) {\n                arr.push(new ESNumber(i));\n                i += step;\n            }\n            return new ESArray(arr);\n        }, {\n            args: [{\n                    name: 'N',\n                    type: 'Number',\n                }],\n            description: 'Generates an array of integers given N. Starts at 0 and goes to N-1. Can be used like for i in range(10) ..., similarly to python.',\n            returns: 'array of numbers from 0 to N-1',\n            returnType: 'number[] | RangeError'\n        }],\n    'log': [({ context }, ...msgs) => {\n            console.log(...msgs.map(m => str(m)));\n        }, {\n            args: [{\n                    name: '...values',\n                    type: 'any[]'\n                }],\n            description: 'Uses console.log to log all values',\n            returnType: 'void'\n        }],\n    'parseNum': [({ context }, num) => {\n            try {\n                const val = parseFloat(str(num));\n                if (isNaN(val)) {\n                    return new ESError(Position.void, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n                }\n                return new ESNumber(val);\n            }\n            catch (e) {\n                return new ESError(Position.void, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n            }\n        }, {\n            args: [{\n                    name: 'num',\n                    type: 'any'\n                }],\n            description: `Converts a string of digits into a number. Works with decimals and integers. Calls .str() on value before using native JS 'parseFloat' function. Returns TypeError if the string can't be converted into a number.`,\n            returnType: 'number | TypeError'\n        }],\n    'help': [({ context }, ...things) => {\n            if (!things.length) {\n                return new ESString('Visit https://entropygames.io/entropy-script for help with Entropy Script!\\n' +\n                    'Try \\'help(<anything>)\\' for help about a particular object.');\n            }\n            let out = '';\n            for (const thing of things) {\n                if (!(thing instanceof ESPrimitive)) {\n                    console.log('Invalid arg not primitive: ' + str(thing));\n                    return;\n                }\n                const info = thing.info;\n                out += `${chalk.yellow(`Help on '${info.name || '(anonymous)'}'`)}:\n    \n    ${chalk.yellow('Value')}: ${indent(indent(str(thing)))}\n    ${chalk.yellow('Type')}: '${str(thing.typeName())}'\n    ${chalk.yellow('Location')}: ${info.file || chalk.yellow('(unknown)')}\n    \n        ${chalk.green(info.description) || `No description.`}\n        \n    ${info.helpLink ? chalk.cyan(info.helpLink + '\\n\\n') : ''}\n`;\n                if (info.args && thing instanceof ESFunction) {\n                    const total = info.args.length;\n                    const required = info.args.filter(a => a.required).length;\n                    if (total == required)\n                        out += chalk.yellow(`    Arguments (${total}): \\n`);\n                    else\n                        out += chalk.yellow(`    Arguments (${required}-${total}): \\n`);\n                    for (const [idx, arg] of info.args.entries()) {\n                        if (typeof arg !== 'object')\n                            out += `        ${idx + 1}. INVALID ARG INFO`;\n                        else\n                            out += `        ${idx + 1}. ${arg.name}${arg.required === false ? chalk.yellow(' (optional) ') : ' '}{${arg.type}} ${arg.description || ''}\\n`;\n                    }\n                    out += `\\n\\n`;\n                    if (info.returns)\n                        out += `    Returns: ${info.returns}\\n\\n`;\n                    if (info.returnType)\n                        out += `    Return Type: ${info.returnType}\\n\\n`;\n                }\n                if (info.contents && (thing instanceof ESObject || thing instanceof ESNamespace)) {\n                    out += '    Properties: \\n      ';\n                    for (let contents of info.contents)\n                        out += contents.name + '\\n      ';\n                }\n            }\n            console.log(out);\n            if (things.length > 1) {\n                return new ESArray(things);\n            }\n            if (things) {\n                return things[0];\n            }\n        }, {\n            args: [{\n                    name: 'value',\n                    type: 'any'\n                }],\n            description: 'logs info on value',\n            returns: 'value passed in'\n        }],\n    'delete': [({ context }, name) => {\n            const id = str(name);\n            if (!context.has(id)) {\n                return new ESError(Position.void, 'DeleteError', `Identifier '${id}' not found in the current context`);\n            }\n            context.set(id, new ESUndefined());\n        }, {\n            name: 'delete',\n            args: [{ name: 'identifier', type: 'string' }],\n            description: 'Deletes a variable from the current context'\n        }],\n    '__path': [({ context }) => {\n            return new ESString(context.path);\n        }, {\n            name: '__path',\n            args: [],\n            description: 'Returns the current path'\n        }],\n    '__symbols': [({ context }) => {\n            return wrap(context.keys);\n        }, {\n            name: '__allSymbols',\n            args: [],\n            description: 'Returns an array of the names of all symbols in the current context'\n        }],\n    'using': [({ context }, module, global_) => {\n            if (!(module instanceof ESNamespace) && !(module instanceof ESJSBinding)) {\n                return new TypeError(Position.void, 'Namespace', str(module.typeName()));\n            }\n            let global = true;\n            if (global_) {\n                if (!global_.bool().valueOf()) {\n                    global = false;\n                }\n            }\n            const values = module.valueOf();\n            if (global) {\n                context = context.root;\n            }\n            else if (context.parent) {\n                context = context.parent;\n            }\n            for (const key of Object.keys(values)) {\n                context.setOwn(key, values[key].value, {\n                    isConstant: values[key].isConstant,\n                    isAccessible: values[key].isAccessible,\n                    forceThroughConst: true\n                });\n            }\n        }, {\n            name: 'using',\n            args: [\n                { name: 'module', type: 'namespace' },\n                { name: 'global', type: 'bool' }\n            ],\n            description: 'Adds contents of a namespace to the global context'\n        }],\n    'sleep': [({ context }, time, cb) => {\n            if (!(time instanceof ESNumber)) {\n                return new TypeError(Position.void, 'number', str(time.typeName()), str(time));\n            }\n            sleep(time.valueOf())\n                .then(() => {\n                const res = cb.__call__({ context });\n                if (res instanceof ESError) {\n                    console.log(res.str);\n                }\n            });\n        }, {\n            name: 'sleep',\n            args: [{ name: 'n', type: 'number' }, { name: 'callback', type: 'function' }],\n            description: 'Waits n milliseconds and then executes the callback'\n        }],\n    'throw': [({ context }, name, details) => {\n            return new ESError(Position.void, str(name), str(details));\n        }, {\n            name: 'throw',\n            args: [{ name: 'name', type: 'string' }, { name: 'details', type: 'string' }]\n        }],\n};\n","import { Position } from '../../position';\nimport { strip } from '../../runtime/primitives/wrapStrip';\nimport { ESObject, ESString } from '../../runtime/primitiveTypes';\nimport { str } from '../../util/util';\nimport { TypeError } from '../../errors';\nconst module = {\n    parse: (props, json) => {\n        return new ESObject(JSON.parse(str(json)));\n    },\n    stringify: (props, json) => {\n        if (!(json instanceof ESObject)) {\n            return new TypeError(Position.void, 'object', str(json.typeName()), str(json));\n        }\n        return new ESString(JSON.stringify(strip(json, props)));\n    }\n};\nexport default module;\n","import { IS_NODE_INSTANCE, libs } from '../constants';\nimport { ESError } from '../errors';\nimport { wrap } from '../runtime/primitives/wrapStrip';\nimport { ESSymbol } from '../runtime/symbol';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport ascii from './built-in-modules/ascii';\nimport json from './built-in-modules/json';\nimport dom from './built-in-modules/dom';\nimport Promise from './built-in-modules/promise';\nimport time from './built-in-modules/time';\nconst modules = {\n    ascii, json\n};\nconst processedModules = {};\nexport function initModules() {\n    processedModules['math'] = new ESJSBinding(Math);\n    processedModules['Promise'] = new ESJSBinding(Promise);\n    processedModules['time'] = new ESJSBinding(time(libs));\n    if (!IS_NODE_INSTANCE) {\n        const domRes = dom(libs);\n        if (!(domRes instanceof ESError)) {\n            modules['dom'] = domRes;\n        }\n        else {\n            return domRes;\n        }\n    }\n}\nexport function processRawModule(module, name) {\n    const moduleDict = {};\n    const moduleRaw = module.valueOf();\n    for (const key of Object.keys(moduleRaw)) {\n        moduleDict[key] = new ESSymbol(moduleRaw[key], key);\n    }\n    return new ESJSBinding(moduleDict, name);\n}\nexport function moduleExist(name) {\n    return name in modules || name in processedModules;\n}\nexport function addModule(name, body) {\n    modules[name] = {};\n    processedModules[name] = body;\n}\nexport function addModuleFromObj(name, raw) {\n    addModule(name, processRawModule(wrap(raw), name));\n}\nexport function getModule(name) {\n    if (name in processedModules) {\n        return processedModules[name];\n    }\n    if (name in modules) {\n        const res = new ESJSBinding(modules[name]);\n        const processed = processRawModule(res, name);\n        processedModules[name] = processed;\n        return processed;\n    }\n}\n","import { TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESNumber, ESString } from '../../runtime/primitiveTypes';\nimport { str } from '../../util/util';\nconst module = {\n    asciiToChar: (props, number) => {\n        if (!(number instanceof ESNumber)) {\n            return new TypeError(Position.void, 'number', str(number.typeName()), str(number));\n        }\n        return new ESString(String.fromCharCode(number.valueOf()));\n    },\n    charToAscii: (props, char) => {\n        if (!(char instanceof ESString)) {\n            return new TypeError(Position.void, 'string', str(char.typeName()), str(char));\n        }\n        return new ESNumber(str(char).charCodeAt(0));\n    },\n};\nexport default module;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { builtInFunctions } from \"./built-in/builtInFunctions\";\nimport { getModule, initModules, moduleExist } from './built-in/builtInModules';\nimport { Context } from \"./runtime/context\";\nimport { ESError, ImportError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { run } from \"./index\";\nimport { IS_NODE_INSTANCE } from \"./constants\";\nimport { str } from \"./util/util\";\nimport { ESFunction, ESNamespace, ESString } from './runtime/primitiveTypes';\nimport loadGlobalConstants from \"./built-in/globalConstants\";\nexport function initialise(globalContext, printFunc, inputFunc) {\n    builtInFunctions['import'] = [({ context }, rawUrl, callback) => {\n            if (IS_NODE_INSTANCE) {\n                return new ESError(Position.void, 'ImportError', 'Is running in node instance but trying to run browser import function');\n            }\n            const url = rawUrl.str();\n            if (moduleExist(str(url))) {\n                return getModule(str(url));\n            }\n            try {\n                fetch(str(url))\n                    .then(c => c.text())\n                    .then((code) => __awaiter(this, void 0, void 0, function* () {\n                    const env = new Context();\n                    env.parent = globalContext;\n                    const res = yield run(code);\n                    if (res.error) {\n                        printFunc(new ImportError(Position.void, str(url), res.error.str).str);\n                        return;\n                    }\n                    if (!(callback instanceof ESFunction))\n                        return;\n                    callback.__call__({ context }, new ESNamespace(url, env.getSymbolTableAsDict()));\n                }));\n            }\n            catch (E) {\n                return new ESError(Position.void, 'ImportError', E.toString());\n            }\n        }, {}];\n    builtInFunctions['print'] = [({ context }, ...args) => {\n            let out = ``;\n            for (let arg of args)\n                out += str(arg);\n            printFunc(out);\n        }, {}];\n    builtInFunctions['input'] = [({ context }, msg, cbRaw) => {\n            inputFunc(msg.valueOf(), (msg) => {\n                let cb = cbRaw === null || cbRaw === void 0 ? void 0 : cbRaw.valueOf();\n                if (cb instanceof ESFunction) {\n                    let res = cb.__call__({ context }, new ESString(msg));\n                    if (res instanceof ESError) {\n                        console.log(res.str);\n                    }\n                }\n                else if (typeof cb === 'function')\n                    cb(msg);\n                return new ESString('\\'input()\\' does not return anything. Pass in a function as the second argument, which will take the user input as an argument.');\n            });\n        }, {}];\n    for (let builtIn in builtInFunctions) {\n        const fn = new ESFunction(builtInFunctions[builtIn][0], [], builtIn, undefined, undefined, globalContext);\n        fn.info = builtInFunctions[builtIn][1];\n        fn.info.name = builtIn;\n        fn.info.isBuiltIn = true;\n        fn.info.file = 'built-in';\n        globalContext.set(builtIn, fn, {\n            global: true,\n            isConstant: true\n        });\n    }\n    loadGlobalConstants(globalContext);\n    const initModRes = initModules();\n    if (initModRes) {\n        return initModRes;\n    }\n    globalContext.initialisedAsGlobal = true;\n}\n","import { ESBoolean, ESUndefined, types } from '../runtime/primitiveTypes';\nexport default function load(context) {\n    const globalConstants = {\n        'false': new ESBoolean(false),\n        'true': new ESBoolean(true),\n        'nil': new ESUndefined(),\n        'any': types.any,\n        'number': types.number,\n        'string': types.string,\n        'bool': types.bool,\n        'function': types.function,\n        'array': types.array,\n        'object': types.object,\n        'type': types.type,\n        'error': types.error,\n        'undefined': types.undefined\n    };\n    for (let constant in globalConstants) {\n        const value = globalConstants[constant];\n        context.set(constant, value, {\n            global: true,\n            isConstant: true\n        });\n    }\n}\n","export default class {\n    constructor(cb) {\n        this.thens = [];\n        this.resolved = false;\n        cb((value) => {\n            if (this.resolved) {\n                return;\n            }\n            this.resolved = true;\n            for (let then of this.thens) {\n                then(value);\n            }\n        }, (error) => {\n            if (this.resolved) {\n                return;\n            }\n            this.resolved = true;\n            if (this.catch_) {\n                this.catch_(error);\n            }\n        });\n    }\n    then(cb) {\n        if (this.resolved) {\n            return;\n        }\n        this.thens.push(cb);\n        return this;\n    }\n    catch(cb) {\n        if (this.resolved) {\n            return;\n        }\n        this.catch_ = cb;\n        return this;\n    }\n}\n;\n","import { now } from '../../constants';\nimport { ESFunction } from '../../runtime/primitives/esfunction';\nimport { ESJSBinding } from '../../runtime/primitives/esjsbinding';\nimport { ESNumber } from '../../runtime/primitives/esnumber';\nconst module = (config) => ({\n    now: new ESFunction(() => new ESNumber(now())),\n    date: new ESJSBinding(Date)\n});\nexport default module;\n","import { IS_NODE_INSTANCE, permissions } from '../../constants';\nimport { ReferenceError, InvalidRuntimeError, PermissionRequiredError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESJSBinding } from \"../../runtime/primitives/esjsbinding\";\nconst module = () => {\n    if (!permissions.accessDOM) {\n        return new PermissionRequiredError('No access to DOM');\n    }\n    if (IS_NODE_INSTANCE) {\n        return new InvalidRuntimeError();\n    }\n    const w = window;\n    if (typeof w === 'undefined' || !('$' in w)) {\n        return new ReferenceError(Position.void, '$ must be property of window to use dom library');\n    }\n    const $ = new ESJSBinding(w['$'], 'jquery');\n    return {\n        $,\n        window: new ESJSBinding(w, 'window'),\n        document: new ESJSBinding(w['document'], 'document'),\n    };\n};\nexport default module;\n","import { ESPrimitive, ESType } from \"./primitiveTypes\";\nimport { TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nexport function interpretArgument(arg, context) {\n    var _a;\n    let type;\n    const typeRes = arg.type.interpret(context);\n    if (typeRes.error)\n        return typeRes.error;\n    if (typeRes.val instanceof ESType)\n        type = typeRes.val;\n    else\n        return new TypeError(Position.void, 'Type', typeof typeRes.val, typeRes.val, 'Argument can\\'t be undefined');\n    let defaultValue;\n    if (arg.defaultValue) {\n        let defaultValRes = (_a = arg.defaultValue) === null || _a === void 0 ? void 0 : _a.interpret(context);\n        if (defaultValRes.error)\n            return defaultValRes.error;\n        if (defaultValRes.val instanceof ESPrimitive)\n            defaultValue = defaultValRes.val;\n    }\n    return {\n        name: arg.name,\n        type, defaultValue\n    };\n}\n","import { ESError, InvalidSyntaxError, ReferenceError, TypeError } from \"../errors\";\nimport { Context } from './context';\nimport { Position } from \"../position\";\nimport { catchBlockErrorSymbolName, now, tokenTypeString, tt } from \"../constants\";\nimport { interpretArgument } from \"./argument\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESType, ESUndefined, types } from \"./primitiveTypes\";\nimport { generateRandomSymbol, str } from '../util/util';\nexport class interpretResult {\n    constructor() {\n        this.val = new ESUndefined();\n        this.shouldBreak = false;\n        this.shouldContinue = false;\n    }\n}\nexport class compileResult {\n    constructor(val) {\n        this.val = '';\n        this.hoisted = '';\n        if (typeof val === 'string') {\n            this.val = val;\n        }\n        else if (val) {\n            this.error = val;\n        }\n    }\n    register(node, config) {\n        const res = node.compilePy(config);\n        this.hoisted += res.hoisted;\n        if (res.error) {\n            this.error = res.error;\n            return '';\n        }\n        return res.val;\n    }\n}\nexport class Node {\n    constructor(pos, isTerminal = false) {\n        this.pos = pos;\n        this.isTerminal = isTerminal;\n    }\n    interpret(context) {\n        var _a;\n        const start = now();\n        const res = new interpretResult;\n        const val = this.interpret_(context);\n        if (val instanceof ESError) {\n            res.error = val;\n        }\n        else if (val instanceof interpretResult) {\n            res.val = val.val;\n            res.error = val.error;\n            res.funcReturn = val.funcReturn;\n            res.shouldBreak = val.shouldBreak;\n            res.shouldContinue = val.shouldContinue;\n        }\n        else {\n            res.val = val;\n        }\n        if (res.error && res.error.pos.isUnknown) {\n            res.error.pos = this.pos;\n        }\n        if (!(res.val instanceof ESPrimitive)) {\n            res.error = new TypeError(Position.void, 'Primitive', 'Native JS value', str(res.val));\n            res.val = new ESUndefined();\n        }\n        (_a = res.val.info).file || (_a.file = this.pos.file);\n        Node.interprets++;\n        let time = now() - start;\n        Node.totalTime += time;\n        if (time > Node.maxTime)\n            Node.maxTime = time;\n        return res;\n    }\n}\nNode.interprets = 0;\nNode.totalTime = 0;\nNode.maxTime = 0;\nexport class N_binOp extends Node {\n    constructor(pos, left, opTok, right) {\n        super(pos);\n        this.left = left;\n        this.opTok = opTok;\n        this.right = right;\n    }\n    interpret_(context) {\n        const left = this.left.interpret(context);\n        if (left.error)\n            return left.error;\n        const right = this.right.interpret(context);\n        if (right.error)\n            return right.error;\n        const l = left.val;\n        const r = right.val;\n        if (typeof l === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', l, 'N_binOp.interpret_');\n        }\n        if (typeof r === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', r, 'N_binOp.interpret_');\n        }\n        switch (this.opTok.type) {\n            case tt.LTE: {\n                const lt = l.__lt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (lt instanceof ESError)\n                    return lt;\n                if (eq instanceof ESError)\n                    return eq;\n                return lt.__or__({ context }, eq);\n            }\n            case tt.GTE: {\n                const gt = l.__gt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (gt instanceof ESError)\n                    return gt;\n                if (eq instanceof ESError)\n                    return eq;\n                return gt.__or__({ context }, eq);\n            }\n            case tt.NOTEQUALS: {\n                const res = l.__eq__({ context }, r);\n                if (res instanceof ESError)\n                    return res;\n                return new ESBoolean(!res.bool().valueOf());\n            }\n            case tt.ADD:\n                return l.__add__({ context }, r);\n            case tt.SUB:\n                return l.__subtract__({ context }, r);\n            case tt.MUL:\n                return l.__multiply__({ context }, r);\n            case tt.DIV:\n                return l.__divide__({ context }, r);\n            case tt.POW:\n                return l.__pow__({ context }, r);\n            case tt.MOD:\n                return l.__mod__({ context }, r);\n            case tt.EQUALS:\n                return l.__eq__({ context }, r);\n            case tt.LT:\n                return l.__lt__({ context }, r);\n            case tt.GT:\n                return l.__gt__({ context }, r);\n            case tt.AND:\n                return l.__and__({ context }, r);\n            case tt.OR:\n                return l.__or__({ context }, r);\n            case tt.APMERSAND:\n                return l.__ampersand__({ context }, r);\n            case tt.PIPE:\n                return l.__pipe__({ context }, r);\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid binary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(config) {\n        const left = this.left.compileJS(config);\n        if (left.error)\n            return left;\n        const right = this.right.compileJS(config);\n        if (right.error)\n            return right;\n        if (config.minify) {\n            return new compileResult(`${left.val}${tokenTypeString[this.opTok.type]}${right.val}`);\n        }\n        return new compileResult(`${left.val} ${tokenTypeString[this.opTok.type]} ${right.val}`);\n    }\n    compilePy(config) {\n        const left = this.left.compilePy(config);\n        if (left.error)\n            return left;\n        const right = this.right.compilePy(config);\n        if (right.error)\n            return right;\n        const switchers = {\n            '&&': 'and',\n            '||': 'or',\n            '^': '**',\n        };\n        let op = tokenTypeString[this.opTok.type];\n        if (op in switchers) {\n            op = switchers[op];\n        }\n        return new compileResult(`${left.val} ${op} ${right.val}`);\n    }\n}\nexport class N_unaryOp extends Node {\n    constructor(pos, a, opTok) {\n        super(pos);\n        this.a = a;\n        this.opTok = opTok;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const res = this.a.interpret(context);\n        if (res.error)\n            return res.error;\n        switch (this.opTok.type) {\n            case tt.SUB:\n            case tt.ADD:\n                if (!(res.val instanceof ESNumber)) {\n                    return new TypeError(this.pos, 'Number', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().toString()) || 'undefined_', (_b = res.val) === null || _b === void 0 ? void 0 : _b.valueOf());\n                }\n                const numVal = res.val.valueOf();\n                return new ESNumber(this.opTok.type === tt.SUB ? -numVal : Math.abs(numVal));\n            case tt.NOT:\n                return new ESBoolean(!((_c = res === null || res === void 0 ? void 0 : res.val) === null || _c === void 0 ? void 0 : _c.bool().valueOf()));\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid unary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(config) {\n        const val = this.a.compileJS(config);\n        if (val.error)\n            return val;\n        return new compileResult(`${tokenTypeString[this.opTok.type]}${val.val}`);\n    }\n    compilePy(config) {\n        const val = this.a.compilePy(config);\n        if (val.error)\n            return val;\n        return new compileResult(`${tokenTypeString[this.opTok.type]}${val.val}`);\n    }\n}\nexport class N_varAssign extends Node {\n    constructor(pos, varNameTok, value, assignType = '=', isGlobal = false, isConstant = false, isDeclaration = false, type = types.any) {\n        super(pos);\n        this.value = value;\n        this.varNameTok = varNameTok;\n        this.isGlobal = isGlobal;\n        this.assignType = assignType;\n        this.isConstant = isConstant;\n        this.isDeclaration = isDeclaration;\n        if (type instanceof ESType) {\n            this.type = new N_primitiveWrapper(type);\n        }\n        else {\n            this.type = type;\n        }\n    }\n    interpret_(context) {\n        var _a, _b;\n        if (this.isDeclaration && context.hasOwn(this.varNameTok.value)) {\n            return new InvalidSyntaxError(this.pos, `Symbol '${this.varNameTok.value}' already exists, and cannot be redeclared`);\n        }\n        const res = this.value.interpret(context);\n        const typeRes = this.type.interpret(context);\n        if (res.error)\n            return res.error;\n        if (typeRes.error)\n            return typeRes.error;\n        if (!typeRes.val) {\n            return new TypeError(this.varNameTok.pos, 'Type', 'undefined');\n        }\n        if (!res.val) {\n            return new TypeError(this.varNameTok.pos, '~undefined', 'undefined', 'N_varAssign.interpret_');\n        }\n        const typeCheckRes = typeRes.val.typeCheck({ context }, res.val);\n        if (typeCheckRes instanceof ESError)\n            return typeCheckRes;\n        if (!typeCheckRes.bool().valueOf()) {\n            return new TypeError(this.varNameTok.pos, str(typeRes.val), str((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName()), str(res.val));\n        }\n        if (this.isDeclaration) {\n            if (this.assignType !== '=') {\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            }\n            if (context.hasOwn(this.varNameTok.value)) {\n                return new InvalidSyntaxError(this.pos, `Cannot redeclare variable which exists in the current scope`);\n            }\n            context.setOwn(this.varNameTok.value, res.val, {\n                global: false,\n                isConstant: this.isConstant,\n                type: typeRes.val\n            });\n            return res.val;\n        }\n        if (context.has(this.varNameTok.value)) {\n            const symbol = context.getSymbol(this.varNameTok.value);\n            if (symbol instanceof ESError)\n                return symbol;\n            if (symbol) {\n                if (!symbol.type.typeCheck({ context }, res.val).valueOf()) {\n                    return new TypeError(this.varNameTok.pos, str(symbol.type), (_b = res.val) === null || _b === void 0 ? void 0 : _b.typeName(), str(res.val));\n                }\n            }\n        }\n        if (this.assignType === '=') {\n            let value = res.val;\n            if (value === undefined) {\n                value = new ESUndefined();\n            }\n            const type = context.getSymbol(this.varNameTok.value);\n            if (type instanceof ESError) {\n                return type;\n            }\n            if (!type) {\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable without keyword`);\n            }\n            const typeCheckRes = type.type.typeCheck({ context }, res.val);\n            if (typeCheckRes instanceof ESError)\n                return typeCheckRes;\n            if (!typeCheckRes.bool().valueOf()) {\n                return new TypeError(Position.void, str(type.type), str(res.val.__type__), str(res.val));\n            }\n            const setRes = context.set(this.varNameTok.value, value, {\n                global: this.isGlobal,\n                isConstant: this.isConstant,\n                type: res.val.__type__\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n        }\n        else {\n            const currentVal = context.get(this.varNameTok.value);\n            if (currentVal instanceof ESError)\n                return currentVal;\n            if (currentVal == undefined)\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            let newVal;\n            let assignVal = res.val;\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError) {\n                return newVal;\n            }\n            let setRes = context.set(this.varNameTok.value, newVal, {\n                global: this.isGlobal,\n                isConstant: this.isConstant,\n                type: newVal.__type__\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n            res.val = newVal;\n        }\n        if (res.val.info.name === '(anonymous)' || !res.val.info.name) {\n            res.val.info.name = this.varNameTok.value;\n        }\n        return res;\n    }\n    compileJS(config) {\n        const val = this.value.compileJS(config);\n        if (val.error)\n            return val;\n        let declaration = '';\n        if (this.isDeclaration) {\n            if (this.isGlobal) {\n                declaration = 'var';\n            }\n            else if (this.isConstant) {\n                declaration = 'const';\n            }\n            else {\n                declaration = 'let';\n            }\n        }\n        let assign = this.assignType;\n        if (assign !== '=') {\n            assign += '=';\n        }\n        if (config.minify) {\n            return new compileResult(`${declaration} ${this.varNameTok.value}${assign}${val.val}`);\n        }\n        return new compileResult(`${declaration} ${this.varNameTok.value} ${assign} ${val.val}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const val = this.value.compilePy(config);\n        if (val.error)\n            return val;\n        res.hoisted += val.hoisted;\n        let assign = this.assignType;\n        if (assign !== '=') {\n            assign += '=';\n        }\n        if (this.isGlobal) {\n            res.hoisted += `${this.varNameTok.value}=None`;\n        }\n        if (config.minify) {\n            res.val = `${this.varNameTok.value}${assign}${val.val}`;\n        }\n        else {\n            res.val = `${this.varNameTok.value} ${assign} ${val.val}`;\n        }\n        return res;\n    }\n}\nexport class N_if extends Node {\n    constructor(pos, comparison, ifTrue, ifFalse) {\n        super(pos);\n        this.comparison = comparison;\n        this.ifFalse = ifFalse;\n        this.ifTrue = ifTrue;\n    }\n    interpret_(context) {\n        var _a;\n        let newContext = new Context();\n        newContext.parent = context;\n        let res = new interpretResult();\n        let compRes = this.comparison.interpret(context);\n        if (compRes.error)\n            return compRes;\n        if ((_a = compRes.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            res = this.ifTrue.interpret(newContext);\n            res.val = new ESUndefined();\n            if (res.error)\n                return res;\n        }\n        else if (this.ifFalse) {\n            res = this.ifFalse.interpret(newContext);\n            res.val = new ESUndefined();\n            if (res.error)\n                return res;\n        }\n        return res;\n    }\n    compileJS(config) {\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 4);\n        config.indent += 4;\n        const statementRes = this.comparison.compileJS(config);\n        if (statementRes.error)\n            return statementRes;\n        const ifTrueRes = this.ifTrue.compileJS(config);\n        if (ifTrueRes.error)\n            return ifTrueRes;\n        if (!this.ifFalse) {\n            if (config.minify) {\n                return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}\\n}`);\n            }\n            return new compileResult(`if (${statementRes.val}) {\\n${ifTrueRes.val}\\n}`);\n        }\n        config.indent = highIndent.length;\n        let ifFalseRes = this.ifFalse.compileJS(config);\n        if (ifFalseRes.error)\n            return ifFalseRes;\n        if (!(this.ifFalse instanceof N_statements)) {\n            ifFalseRes.val = highIndent + ifFalseRes.val;\n        }\n        if (config.minify) {\n            return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}}else{${ifFalseRes.val}}`);\n        }\n        return new compileResult(`if (${statementRes.val}) {\\n${ifTrueRes.val}\\n${indent}} else {\\n${ifFalseRes.val}\\n${indent}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 4);\n        config.indent += 4;\n        const statementRes = this.comparison.compilePy(config);\n        if (statementRes.error)\n            return statementRes;\n        res.hoisted += statementRes.hoisted;\n        const ifTrueRes = this.ifTrue.compilePy(config);\n        if (ifTrueRes.error)\n            return ifTrueRes;\n        res.hoisted += ifTrueRes.hoisted;\n        if (!this.ifFalse) {\n            return new compileResult(`if ${statementRes.val}:\\n${highIndent}${ifTrueRes.val}`);\n        }\n        const ifFalseRes = this.ifFalse.compilePy(config);\n        if (ifFalseRes.error)\n            return ifFalseRes;\n        res.hoisted += ifFalseRes.hoisted;\n        if (!(this.ifFalse instanceof N_statements)) {\n            ifFalseRes.val = highIndent + ifFalseRes.val;\n        }\n        return new compileResult(`if ${statementRes.val}:\\n${ifTrueRes.val}\\n${indent}else:\\n${ifFalseRes.val}\\n${indent}`);\n    }\n}\nexport class N_while extends Node {\n    constructor(pos, comparison, loop) {\n        super(pos);\n        this.comparison = comparison;\n        this.loop = loop;\n    }\n    interpret_(context) {\n        var _a, _b;\n        let newContext = new Context();\n        newContext.parent = context;\n        while (true) {\n            let shouldLoop = this.comparison.interpret(context);\n            if (shouldLoop.error)\n                return shouldLoop;\n            if (!((_b = (_a = shouldLoop.val) === null || _a === void 0 ? void 0 : _a.bool()) === null || _b === void 0 ? void 0 : _b.valueOf()))\n                break;\n            let potentialError = this.loop.interpret(newContext);\n            if (potentialError.error)\n                return potentialError;\n            if (potentialError.shouldBreak)\n                break;\n        }\n        return new ESUndefined();\n    }\n    compileJS(config) {\n        config.indent += 4;\n        const comparisonRes = this.comparison.compileJS(config);\n        if (comparisonRes.error)\n            return comparisonRes;\n        const bodyRes = this.loop.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        if (config.minify) {\n            return new compileResult(`while(${comparisonRes.val}){${bodyRes.val}}`);\n        }\n        return new compileResult(`while (${comparisonRes.val}) {\\n${bodyRes.val}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const highIndent = ' '.repeat(config.indent || 0);\n        const comparisonRes = this.comparison.compilePy(config);\n        if (comparisonRes.error)\n            return comparisonRes;\n        res.hoisted += comparisonRes.hoisted;\n        const bodyRes = this.loop.compilePy(config);\n        if (bodyRes.error)\n            return bodyRes;\n        res.hoisted += bodyRes.hoisted;\n        return new compileResult(`while ${comparisonRes.val}:\\n${highIndent}${bodyRes.val}`);\n    }\n}\nexport class N_for extends Node {\n    constructor(pos, body, array, identifier, isGlobalIdentifier, isConstIdentifier) {\n        super(pos);\n        this.body = body;\n        this.array = array;\n        this.identifier = identifier;\n        this.isGlobalId = isGlobalIdentifier;\n        this.isConstId = isConstIdentifier;\n    }\n    interpret_(context) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        const array = this.array.interpret(context);\n        if (array.error)\n            return array;\n        if (['Array', 'Number', 'Object', 'String', 'Any'].indexOf(((_a = array.val) === null || _a === void 0 ? void 0 : _a.typeName()) || '') === -1) {\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val + ' | ' + ((_b = array.val) === null || _b === void 0 ? void 0 : _b.typeName()));\n        }\n        if (context.has(this.identifier.value) && this.isGlobalId) {\n            return new InvalidSyntaxError(this.identifier.pos, 'Cannot declare global variable which exists in the current scope');\n        }\n        function iteration(body, id, element, isGlobal, isConstant) {\n            let newContext = new Context();\n            newContext.parent = context;\n            newContext.set(id, element, {\n                global: isGlobal,\n                isConstant,\n                type: element.__type__\n            });\n            const res = body.interpret(newContext);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (res.shouldBreak) {\n                res.shouldBreak = false;\n                return 'break';\n            }\n            if (res.shouldContinue) {\n                res.shouldContinue = false;\n            }\n        }\n        if (array.val instanceof ESNumber || typeof ((_c = array.val) === null || _c === void 0 ? void 0 : _c.valueOf()) == 'number') {\n            for (let i = 0; i < array.val.valueOf(); i++) {\n                const res = iteration(this.body, this.identifier.value, new ESNumber(i), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESObject ||\n            (typeof ((_d = array.val) === null || _d === void 0 ? void 0 : _d.valueOf()) == 'number' && !Array.isArray((_e = array.val) === null || _e === void 0 ? void 0 : _e.valueOf()))) {\n            for (let element in (_f = array.val) === null || _f === void 0 ? void 0 : _f.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, new ESString(element), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESArray || Array.isArray((_g = array.val) === null || _g === void 0 ? void 0 : _g.valueOf())) {\n            for (let element of (_h = array.val) === null || _h === void 0 ? void 0 : _h.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, element, this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val);\n        return new ESUndefined();\n    }\n    compileJS(config) {\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const iteratorRes = this.array.compileJS(config);\n        if (iteratorRes.error)\n            return iteratorRes;\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        let declaration = 'let';\n        if (this.isGlobalId) {\n            declaration = 'var';\n        }\n        else if (this.isConstId) {\n            declaration = 'const';\n        }\n        if (config.minify) {\n            return new compileResult(`for(${declaration} ${this.identifier.value} of ${iteratorRes.val}){${bodyRes.val}\\n${indent}}`);\n        }\n        return new compileResult(`for (${declaration} ${this.identifier.value} of ${iteratorRes.val}) {\\n${bodyRes.val}\\n${indent}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        config.indent += 4;\n        const iteratorRes = res.register(this.array, config);\n        if (res.error)\n            return res;\n        const bodyRes = res.register(this.body, config);\n        if (res.error)\n            return res;\n        if (this.isGlobalId) {\n            res.hoisted += `${this.identifier.value}=None`;\n        }\n        res.val = `for ${this.identifier.value} in ${iteratorRes}:\\n${bodyRes}`;\n        return res;\n    }\n}\nexport class N_array extends Node {\n    constructor(pos, items, shouldClone = false) {\n        super(pos);\n        this.items = items;\n        this.shouldClone = shouldClone;\n    }\n    interpret_(context) {\n        let result = new interpretResult();\n        let interpreted = [];\n        for (let item of this.items) {\n            const res = item.interpret(context);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (!res.val)\n                continue;\n            let val = res.val;\n            if (this.shouldClone) {\n                val = val.clone();\n            }\n            interpreted.push(val);\n        }\n        result.val = new ESArray(interpreted);\n        return result;\n    }\n    compileJS(config) {\n        const res = new compileResult('[');\n        for (let item of this.items) {\n            const itemRes = item.compileJS(config);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ',';\n        }\n        res.val += ']';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult('[');\n        for (let item of this.items) {\n            const itemRes = res.register(item, config);\n            if (res.error)\n                return res;\n            res.val += itemRes + ',';\n        }\n        res.val += ']';\n        return res;\n    }\n}\nexport class N_objectLiteral extends Node {\n    constructor(pos, properties) {\n        super(pos);\n        this.properties = properties;\n    }\n    interpret_(context) {\n        let interpreted = {};\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.interpret(context);\n            if (value.error)\n                return value.error;\n            const key = keyNode.interpret(context);\n            if (key.error)\n                return key.error;\n            if (key.val && value.val) {\n                interpreted[key.val.valueOf()] = value.val;\n            }\n        }\n        return new ESObject(interpreted);\n    }\n    compileJS(config) {\n        const res = new compileResult('{');\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.compileJS(config);\n            if (value.error)\n                return value;\n            const key = keyNode.compileJS(config);\n            if (key.error)\n                return key;\n            if (key.val && value.val) {\n                res.val += `[${key.val}]: ${value.val},`;\n            }\n        }\n        res.val += '}';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult('{');\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = res.register(valueNode, config);\n            if (res.error)\n                return res;\n            const key = res.register(keyNode, config);\n            if (res.error)\n                return res;\n            if (key && value) {\n                res.val += `${key}: ${value},`;\n            }\n        }\n        res.val += '}';\n        return res;\n    }\n}\nexport class N_statements extends Node {\n    constructor(pos, items, topLevel = false) {\n        super(pos);\n        this.items = items;\n        this.topLevel = topLevel;\n    }\n    interpret_(context) {\n        if (!this.topLevel) {\n            let last;\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (typeof res.funcReturn !== 'undefined') || res.shouldBreak || res.shouldContinue)\n                    return res;\n                last = res.val;\n            }\n            if (last)\n                return last;\n            return new ESUndefined();\n        }\n        else {\n            let result = new interpretResult();\n            let interpreted = [];\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (res.funcReturn !== undefined))\n                    return res;\n                if (!res.val)\n                    continue;\n                let val = res.val.clone();\n                interpreted.push(val);\n            }\n            result.val = new ESArray(interpreted);\n            return result;\n        }\n    }\n    compileJS(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        res.val += indent;\n        for (let item of this.items) {\n            const itemRes = item.compileJS(config);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ';';\n            if (!config.minify) {\n                res.val += '\\n' + indent;\n            }\n        }\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const indent = ' '.repeat(config.indent);\n        res.val += indent;\n        for (let item of this.items) {\n            const itemRes = res.register(item, config);\n            if (res.error)\n                return res;\n            res.val += itemRes;\n            res.val += '\\n' + indent;\n        }\n        return res;\n    }\n}\nexport class N_functionCall extends Node {\n    constructor(pos, to, args) {\n        super(pos);\n        this.arguments = args;\n        this.to = to;\n    }\n    interpret_(context) {\n        let { val, error } = this.to.interpret(context);\n        if (error) {\n            return error;\n        }\n        if (!val) {\n            return new TypeError(this.pos, 'any', 'undefined', undefined, 'On function call');\n        }\n        let params = [];\n        for (let arg of this.arguments) {\n            const res = arg.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (res.val) {\n                params.push(res.val);\n            }\n        }\n        const res = val.__call__({ context }, ...params);\n        if (res instanceof ESError) {\n            res.traceback.push({\n                position: this.pos,\n                line: `${val.info.name || '<AnonFunction>'}(${params.map(str).join(', ')})`\n            });\n        }\n        return res;\n    }\n    compileJS(config) {\n        const res = new compileResult;\n        const funcRes = this.to.compileJS(config);\n        if (funcRes.error)\n            return funcRes;\n        res.val = funcRes.val + '(';\n        for (let arg of this.arguments) {\n            const argRes = arg.compileJS(config);\n            if (argRes.error)\n                return argRes;\n            res.val += argRes.val;\n            if (arg !== this.arguments[this.arguments.length - 1]) {\n                res.val += ',';\n                if (!config.minify) {\n                    res.val += ' ';\n                }\n            }\n        }\n        res.val += ')';\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const funcRes = res.register(this.to, config);\n        if (res.error)\n            return res;\n        res.val = funcRes + '(';\n        for (let arg of this.arguments) {\n            const argRes = res.register(arg, config);\n            if (res.error)\n                return res;\n            res.val += argRes;\n            if (arg !== this.arguments[this.arguments.length - 1]) {\n                res.val += ',';\n                if (!config.minify) {\n                    res.val += ' ';\n                }\n            }\n        }\n        res.val += ')';\n        return res;\n    }\n}\nexport class N_functionDefinition extends Node {\n    constructor(pos, body, argNames, returnType, name = '(anon)', this_ = new ESObject(), description = '') {\n        super(pos);\n        this.arguments = argNames;\n        this.body = body;\n        this.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        this.description = description;\n    }\n    interpret_(context) {\n        let args = [];\n        for (let arg of this.arguments) {\n            const res = interpretArgument(arg, context);\n            if (res instanceof ESError)\n                return res;\n            args.push(res);\n        }\n        const returnTypeRes = this.returnType.interpret(context);\n        if (returnTypeRes.error)\n            return returnTypeRes.error;\n        return new ESFunction(this.body, args, this.name, this.this_, returnTypeRes.val, context);\n    }\n    compileJS(config) {\n        const res = new compileResult('function(');\n        for (let param of this.arguments) {\n            res.val += param.name + ',';\n            if (!config.minify) {\n                res.val += ' ';\n            }\n        }\n        if (config.minify) {\n            res.val += '){';\n        }\n        else {\n            res.val += ') {\\n';\n        }\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        res.val += `${bodyRes.val}\\n${indent}}`;\n        return res;\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const hoistedName = generateRandomSymbol(config.symbols);\n        res.hoisted = `def ${hoistedName}(`;\n        for (let param of this.arguments) {\n            res.hoisted += param.name + ',';\n            if (!config.minify) {\n                res.hoisted += ' ';\n            }\n        }\n        const indent = ' '.repeat(config.indent);\n        config.indent += 4;\n        const body = this.body.compilePy(config);\n        if (body.error)\n            return body;\n        res.hoisted += `):\\n${indent}${body.val}`;\n        res.hoisted = body.hoisted + res.hoisted;\n        res.val = hoistedName;\n        return res;\n    }\n}\nexport class N_return extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        res.funcReturn = val.val;\n        return res;\n    }\n    compileJS(config) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(config);\n        if (valRes === null || valRes === void 0 ? void 0 : valRes.error)\n            return valRes;\n        return new compileResult(`return(${valRes === null || valRes === void 0 ? void 0 : valRes.val})`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        if (!this.value) {\n            return new compileResult('return');\n        }\n        const valRes = res.register(this.value, config);\n        if (res.error)\n            return res;\n        return new compileResult(`return ${valRes}`);\n    }\n}\nexport class N_yield extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        var _a;\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        if ((_a = val.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            res.funcReturn = val.val;\n        }\n        return res;\n    }\n    compileJS(config) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(config);\n        if (!valRes || !valRes.val) {\n            return new compileResult('');\n        }\n        return new compileResult(`if(_=${valRes.val}){return(_))`);\n    }\n    compilePy(config) {\n        if (!this.value) {\n            return new compileResult('');\n        }\n        const res = new compileResult;\n        const valRes = res.register(this.value, config);\n        if (!valRes) {\n            return new compileResult('');\n        }\n        return new compileResult(`if _ := ${valRes}: return _`);\n    }\n}\nexport class N_indexed extends Node {\n    constructor(pos, base, index) {\n        super(pos);\n        this.base = base;\n        this.index = index;\n    }\n    interpret_(context) {\n        var _a;\n        let baseRes = this.base.interpret(context);\n        if (baseRes.error)\n            return baseRes;\n        let indexRes = this.index.interpret(context);\n        if (indexRes.error)\n            return indexRes;\n        const index = indexRes.val;\n        const base = baseRes.val;\n        if (!base || !index)\n            return new ESUndefined();\n        if (this.value !== undefined) {\n            let valRes = this.value.interpret(context);\n            if (valRes.error)\n                return valRes;\n            const currentVal = wrap(base.__getProperty__({ context }, index));\n            let newVal;\n            let assignVal = valRes.val;\n            (_a = this.assignType) !== null && _a !== void 0 ? _a : (this.assignType = '=');\n            if (!assignVal) {\n                return new TypeError(this.pos, '~undefined', 'undefined', 'undefined', 'N_indexed.interpret_');\n            }\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                case '=':\n                    newVal = assignVal;\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError)\n                return newVal;\n            if (!base.__setProperty__)\n                return new TypeError(this.pos, 'mutable', 'immutable', base.valueOf());\n            const res = base.__setProperty__({ context }, index, newVal !== null && newVal !== void 0 ? newVal : new ESUndefined());\n            if (res instanceof ESError)\n                return res;\n        }\n        return base.__getProperty__({ context }, index);\n    }\n    compileJS(config) {\n        const objectRes = this.base.compileJS(config);\n        if (objectRes.error)\n            return objectRes;\n        const keyRes = this.index.compileJS(config);\n        if (keyRes.error)\n            return keyRes;\n        if (!this.value) {\n            return new compileResult(`${objectRes.val}[${keyRes.val}]`);\n        }\n        const valRes = this.value.compileJS(config);\n        if (valRes.error)\n            return valRes;\n        return new compileResult(`${objectRes.val}[${keyRes.val}]${this.assignType || '='}${valRes.val}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const objectRes = res.register(this.base, config);\n        if (res.error)\n            return res;\n        const keyRes = res.register(this.index, config);\n        if (res.error)\n            return res;\n        if (!this.value) {\n            res.val = `${objectRes}[${keyRes}]`;\n            return res;\n        }\n        const valRes = res.register(this.value, config);\n        if (res.error)\n            return res;\n        res.val = `${objectRes}[${keyRes}] ${this.assignType || '='} ${valRes}`;\n        return res;\n    }\n}\nexport class N_class extends Node {\n    constructor(pos, methods, extends_, init, name = '<anon class>') {\n        super(pos);\n        this.init = init;\n        this.methods = methods;\n        this.name = name;\n        this.extends_ = extends_;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const methods = [];\n        for (let method of this.methods) {\n            const res = method.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (!(res.val instanceof ESFunction)) {\n                return new TypeError(this.pos, 'Function', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            methods.push(res.val);\n        }\n        let extends_ = types.object;\n        if (this.extends_) {\n            const extendsRes = this.extends_.interpret(context);\n            if (extendsRes.error) {\n                return extendsRes.error;\n            }\n            if (!(extendsRes.val instanceof ESType)) {\n                return new TypeError(this.pos, 'Function', ((_b = extendsRes.val) === null || _b === void 0 ? void 0 : _b.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            extends_ = extendsRes.val;\n        }\n        let init;\n        if (this.init) {\n            const initRes = this.init.interpret(context);\n            if (initRes.error) {\n                return initRes.error;\n            }\n            if (!(initRes.val instanceof ESFunction)) {\n                return new TypeError(this.pos, 'Function', ((_c = initRes.val) === null || _c === void 0 ? void 0 : _c.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            init = initRes.val;\n        }\n        return new ESType(false, this.name, methods, extends_, init);\n    }\n    compileJS(config) {\n        return new compileResult('function(){return{};}');\n    }\n    compilePy(config) {\n        return new compileResult(`class ${this.name}:\\n${' '.repeat(config.indent)}pass`);\n    }\n}\nexport class N_namespace extends Node {\n    constructor(pos, statements, name = '(anon)', mutable = false) {\n        super(pos);\n        this.name = name;\n        this.statements = statements;\n        this.mutable = mutable;\n    }\n    interpret_(context) {\n        const newContext = new Context();\n        newContext.parent = context;\n        const res = this.statements.interpret(newContext);\n        if (res.error)\n            return res;\n        return new ESNamespace(new ESString(this.name), newContext.getSymbolTableAsDict(), this.mutable);\n    }\n    compileJS(config) {\n        const bodyRes = this.statements.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        return new compileResult(`(() => {${bodyRes.val}})()`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const bodyRes = res.register(this.statements, config);\n        if (res.error)\n            return res;\n        res.val = `'namespace'`;\n        return res;\n    }\n}\nexport class N_tryCatch extends Node {\n    constructor(pos, body, catchBlock) {\n        super(pos, true);\n        this.body = body;\n        this.catchBlock = catchBlock;\n    }\n    interpret_(context) {\n        const res = this.body.interpret(context);\n        if (res.error) {\n            const newContext = new Context();\n            newContext.parent = context;\n            newContext.setOwn(catchBlockErrorSymbolName, new ESErrorPrimitive(res.error), {\n                isConstant: true\n            });\n            const catchRes = this.catchBlock.interpret(newContext);\n            if (catchRes.error)\n                return catchRes.error;\n        }\n        return new interpretResult();\n    }\n    compileJS(config) {\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        const catchRes = this.catchBlock.compileJS(config);\n        if (catchRes.error)\n            return catchRes;\n        return new compileResult(`try{${bodyRes.val}}catch(${catchBlockErrorSymbolName}){${catchRes.val}}`);\n    }\n    compilePy(config) {\n        const res = new compileResult;\n        const bodyRes = res.register(this.body, config);\n        if (res.error)\n            return res;\n        const catchRes = res.register(this.catchBlock, config);\n        if (res.error)\n            return res;\n        const indent = ' '.repeat(config.indent);\n        const highIndent = ' '.repeat(config.indent + 1);\n        res.val = `try:\\n${highIndent}${bodyRes}\\n${indent}except:\\n${highIndent}${catchRes}`;\n        return res;\n    }\n}\nexport class N_number extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        const res = new interpretResult();\n        res.val = new ESNumber(val);\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult(this.a.value.toString());\n    }\n    compilePy(config) {\n        return new compileResult(this.a.value.toString());\n    }\n}\nexport class N_string extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        const res = new interpretResult();\n        res.val = new ESString(val);\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult(`'${this.a.value}'`);\n    }\n    compilePy(config) {\n        return new compileResult(`'${this.a.value}'`);\n    }\n}\nexport class N_variable extends Node {\n    constructor(a) {\n        super(a.pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        if (!context.has(this.a.value)) {\n            return new ReferenceError(this.a.pos, this.a.value);\n        }\n        let res = new interpretResult();\n        let symbol = context.getSymbol(this.a.value);\n        if (!symbol) {\n            return new ESUndefined();\n        }\n        if (symbol instanceof ESError) {\n            return symbol;\n        }\n        res.val = symbol.value;\n        return res;\n    }\n    compileJS(config) {\n        let val = this.a.value.toString();\n        if (val === 'import') {\n            val = 'import_';\n        }\n        return new compileResult(val);\n    }\n    compilePy(config) {\n        let val = this.a.value.toString();\n        if (val === 'import') {\n            val = 'import_';\n        }\n        return new compileResult(val);\n    }\n}\nexport class N_undefined extends Node {\n    constructor(pos = Position.void) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.val = new ESUndefined();\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('undefined');\n    }\n    compilePy(config) {\n        return new compileResult('None');\n    }\n}\nexport class N_break extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldBreak = true;\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('break');\n    }\n    compilePy(config) {\n        return new compileResult('break');\n    }\n}\nexport class N_continue extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldContinue = true;\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('continue');\n    }\n    compilePy(config) {\n        return new compileResult('continue');\n    }\n}\nexport class N_primitiveWrapper extends Node {\n    constructor(val, pos = Position.void) {\n        super(pos, true);\n        this.value = val;\n    }\n    interpret_(context) {\n        return this.value;\n    }\n    compileJS(config) {\n        return new compileResult(JSON.stringify(this.value.valueOf()));\n    }\n    compilePy(config) {\n        return new compileResult(JSON.stringify(this.value.valueOf()));\n    }\n}\n","import { Node } from \"../runtime/nodes\";\nimport { ESPrimitive } from '../runtime/primitiveTypes';\nexport function deepClone(obj, hash = new WeakMap()) {\n    let result;\n    if (Object(obj) !== obj || obj instanceof Function) {\n        return obj;\n    }\n    if (hash.has(obj)) {\n        return hash.get(obj);\n    }\n    try {\n        result = new obj.constructor();\n    }\n    catch (e) {\n        result = Object.create(Object.getPrototypeOf(obj));\n    }\n    if (obj instanceof Map) {\n        Array.from(obj, ([key, val]) => result.set(deepClone(key, hash), deepClone(val, hash)));\n    }\n    else if (obj instanceof Set) {\n        Array.from(obj, (key) => result.add(deepClone(key, hash)));\n    }\n    hash.set(obj, result);\n    return Object.assign(result, ...Object.keys(obj).map(key => ({ [key]: deepClone(obj[key], hash) })));\n}\nexport function str(val, depth = 0) {\n    if (typeof val === 'string') {\n        if (depth > 0) {\n            return `'${val}'`;\n        }\n        return val;\n    }\n    if (depth > 20) {\n        return '...';\n    }\n    let result = '';\n    if (typeof val === 'undefined') {\n        return 'undefined';\n    }\n    if (val instanceof ESPrimitive) {\n        return val.str().valueOf();\n    }\n    if (val instanceof Node) {\n        return `<RunTimeNode: ${val.constructor.name}>`;\n    }\n    switch (typeof val) {\n        case 'object':\n            if (Array.isArray(val)) {\n                result += '[';\n                for (let item of val) {\n                    try {\n                        result += str(item, depth + 1) + `, `;\n                    }\n                    catch (e) {\n                        result += '<large property>, ';\n                    }\n                }\n                if (val.length) {\n                    result = result.substring(0, result.length - 2);\n                }\n                result += ']';\n            }\n            else {\n                try {\n                    result += val.constructor.name;\n                }\n                catch (e) {\n                    result += 'UNKNOWN_CONSTRUCTOR';\n                }\n                result += ': {\\n';\n                let i = 0;\n                for (let item in val) {\n                    i++;\n                    if (!val.hasOwnProperty || !val.hasOwnProperty(item)) {\n                        continue;\n                    }\n                    result += `  ${item}: ${str(val[item], depth + 1) || ''}, \\n`;\n                }\n                if (i > 0) {\n                    result = result.substring(0, result.length - 3);\n                }\n                result += '\\n}\\n';\n            }\n            break;\n        case 'string':\n            result = `'${val}'`;\n            break;\n        case \"bigint\":\n        case \"number\":\n        case \"boolean\":\n            result = `${val}`;\n            break;\n        case \"undefined\":\n            result = '<NativeUndefined>';\n            break;\n        case \"function\":\n            result = `<NativeFunction ${val.name}>`;\n            break;\n    }\n    for (let i = 0; i < depth; i++)\n        result = indent(result);\n    return result;\n}\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms));\nexport function indent(str) {\n    return str.replace(/\\n/g, '\\n    ');\n}\nexport function generateRandomSymbol(symbols, length = 10) {\n    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_';\n    const gen = () => {\n        let result = '';\n        for (let i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * characters.length));\n        }\n        return result;\n    };\n    let symbol = gen();\n    while (symbols.indexOf(symbol) !== -1) {\n        symbol = gen();\n    }\n    return symbol;\n}\n","import { IS_NODE_INSTANCE } from './constants';\nimport { Position } from \"./position\";\nimport { str } from \"./util/util\";\nimport chalk from \"./util/colours\";\nexport class ESError {\n    constructor(pos, name, details) {\n        this.traceback = [];\n        this.pos = pos;\n        this.name = name;\n        this.details = details;\n    }\n    get colouredStr() {\n        let out = '';\n        if (this.traceback.length) {\n            out = chalk.yellow('Error Traceback (most recent call last):\\n');\n            for (let pos of [...this.traceback].reverse())\n                out += `    ${chalk.cyan(pos.position.str)}:\\n        ${pos.line}\\n`;\n        }\n        out += `${chalk.red(this.name)}: ${this.details} \\n at ${chalk.cyan(this.pos.str)}`;\n        return out;\n    }\n    get str() {\n        return `${this.name}: ${this.details} \\n at ${this.pos.str}`;\n    }\n}\nexport class IllegalCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'IllegalCharError', `'${char}'`);\n    }\n}\nexport class InvalidSyntaxError extends ESError {\n    constructor(pos, details) {\n        super(pos, 'InvalidSyntaxError', details);\n    }\n}\nexport class ExpectedCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'ExpectedCharError', `'${char}'`);\n    }\n}\nexport class TypeError extends ESError {\n    constructor(pos, expectedType, actualType, value = '', detail = '') {\n        super(pos, 'TypeError', `Expected type '${expectedType}', got type '${actualType}' ${typeof value === 'undefined' ? '' : ` on value '${str(value)}'`} ${!detail ? '' : detail}`);\n    }\n}\nexport class ImportError extends ESError {\n    constructor(pos, url, detail = '') {\n        super(pos, 'ImportError', `Could not import ${url}: ${detail}`);\n    }\n}\nexport class ReferenceError extends ESError {\n    constructor(pos, ref) {\n        super(pos, 'ReferenceError', `${ref} is not defined`);\n    }\n}\nexport class IndexError extends ESError {\n    constructor(pos, ref, object) {\n        var _a;\n        super(pos, 'IndexError', `'${ref}' is not a property of '${((_a = object === null || object === void 0 ? void 0 : object.info) === null || _a === void 0 ? void 0 : _a.name) || str(object)}'`);\n    }\n}\nexport class InvalidOperationError extends ESError {\n    constructor(op, value, detail = '', pos = Position.void) {\n        var _a;\n        super(pos, 'TypeError', `Cannot perform '${op}' on value ${((_a = value === null || value === void 0 ? void 0 : value.info) === null || _a === void 0 ? void 0 : _a.name) || str(value)}: ${detail}`);\n    }\n}\nexport class InvalidRuntimeError extends ESError {\n    constructor() {\n        super(Position.void, 'InvalidRuntimeError', `Required runtime of ${IS_NODE_INSTANCE ? 'browser' : 'node'}`);\n    }\n}\nexport class TestFailed extends ESError {\n    constructor(detail) {\n        super(Position.void, 'TestFailed', detail);\n    }\n}\nexport class PermissionRequiredError extends ESError {\n    constructor(detail) {\n        super(Position.void, 'PermissionRequiredError', detail);\n    }\n}\n","export class Token {\n    constructor(pos, type, value) {\n        this.type = type;\n        this.value = value;\n        this.pos = pos;\n    }\n    matches(type, val) {\n        return this.type === type && this.value === val;\n    }\n}\n","import { Position } from \"../position\";\nimport { digits, doubleCharTokens, identifierChars, KEYWORDS, multiLineCommentEnd, multiLineCommentStart, singleCharTokens, singleLineComment, stringSurrounds, tripleCharTokens, tt, } from '../constants';\nimport { IllegalCharError } from \"../errors\";\nimport { Token } from \"./tokens\";\nexport class Lexer {\n    constructor(program, fileName) {\n        this.text = program;\n        this.position = new Position(-1, 0, -1, fileName);\n        this.advance();\n    }\n    advance() {\n        this.position.advance(this.currentChar);\n        this.currentChar = this.text[this.position.idx];\n    }\n    generate() {\n        if (!this.text) {\n            return [new Token(this.position, tt.EOF, undefined)];\n        }\n        const tokens = [];\n        while (this.currentChar !== undefined) {\n            if (' \\t\\n'.includes(this.currentChar)) {\n                this.advance();\n            }\n            else if (digits.includes(this.currentChar)) {\n                tokens.push(this.makeNumber());\n            }\n            else if (this.currentChar === singleLineComment[0] &&\n                this.text[this.position.idx + 1] === singleLineComment[1]) {\n                this.singleLineComment();\n            }\n            else if (this.currentChar === multiLineCommentStart[0] &&\n                this.text[this.position.idx + 1] === multiLineCommentStart[1]) {\n                this.multiLineComment();\n            }\n            else if (identifierChars.includes(this.currentChar)) {\n                tokens.push(this.makeIdentifier());\n            }\n            else if (stringSurrounds.indexOf(this.currentChar) !== -1) {\n                tokens.push(this.makeString());\n            }\n            else {\n                const possibleAssignFirstChar = this.currentChar;\n                let token = this.unknownChar();\n                if (token) {\n                    if (token.type === tt.ASSIGN) {\n                        token.value = possibleAssignFirstChar;\n                    }\n                    tokens.push(token);\n                }\n                else {\n                    let pos = this.position.clone;\n                    let char = this.currentChar;\n                    this.advance();\n                    return new IllegalCharError(pos, char);\n                }\n            }\n        }\n        tokens.push(new Token(this.position, tt.EOF, undefined));\n        return tokens;\n    }\n    makeNumber() {\n        const pos = this.position.clone;\n        let numStr = '';\n        let dotCount = 0;\n        while (this.currentChar !== undefined && (digits + '._').includes(this.currentChar)) {\n            if (this.currentChar === '.') {\n                if (dotCount === 1) {\n                    break;\n                }\n                dotCount++;\n                numStr += '.';\n            }\n            else if (this.currentChar !== '_') {\n                numStr += this.currentChar;\n            }\n            this.advance();\n        }\n        return new Token(pos, tt.NUMBER, parseFloat(numStr));\n    }\n    makeString() {\n        const pos = this.position.clone;\n        let str = '';\n        let strClose = this.currentChar;\n        this.advance();\n        while (this.currentChar !== strClose && this.currentChar !== undefined) {\n            if (this.currentChar === '\\\\') {\n                this.advance();\n                if (this.currentChar === 'n') {\n                    str += '\\n';\n                    this.advance();\n                    continue;\n                }\n            }\n            str += this.currentChar;\n            this.advance();\n        }\n        this.advance();\n        return new Token(pos, tt.STRING, str);\n    }\n    makeIdentifier() {\n        let idStr = '';\n        const posStart = this.position.clone;\n        while (this.currentChar !== undefined && (identifierChars + digits).includes(this.currentChar)) {\n            idStr += this.currentChar;\n            this.advance();\n        }\n        let tokType = tt.IDENTIFIER;\n        if (KEYWORDS.indexOf(idStr) !== -1) {\n            tokType = tt.KEYWORD;\n        }\n        return new Token(posStart, tokType, idStr);\n    }\n    unknownChar() {\n        if (this.currentChar === undefined) {\n            return undefined;\n        }\n        for (let triple in tripleCharTokens) {\n            if (triple[0] === this.currentChar)\n                if (triple[1] === this.text[this.position.idx + 1])\n                    if (triple[2] === this.text[this.position.idx + 2]) {\n                        const pos = this.position.clone;\n                        this.advance();\n                        this.advance();\n                        this.advance();\n                        return new Token(pos, tripleCharTokens[triple], undefined);\n                    }\n        }\n        for (let double in doubleCharTokens) {\n            if (double[0] === this.currentChar)\n                if (double[1] === this.text[this.position.idx + 1]) {\n                    const pos = this.position.clone;\n                    this.advance();\n                    this.advance();\n                    return new Token(pos, doubleCharTokens[double], undefined);\n                }\n        }\n        if (singleCharTokens.hasOwnProperty(this.currentChar)) {\n            let pos = this.position.clone;\n            let val = singleCharTokens[this.currentChar];\n            this.advance();\n            return new Token(pos, val, undefined);\n        }\n        return undefined;\n    }\n    singleLineComment() {\n        this.advance();\n        while (this.currentChar !== '\\n' && this.currentChar !== undefined) {\n            this.advance();\n        }\n        this.advance();\n    }\n    multiLineComment() {\n        this.advance();\n        while (!(this.currentChar === multiLineCommentEnd[0] &&\n            this.text[this.position.idx + 1] === multiLineCommentEnd[1])) {\n            this.advance();\n        }\n        this.advance();\n        this.advance();\n    }\n}\n","import { tokenType, tokenTypeString, tt, VAR_DECLARE_KEYWORDS } from '../constants';\nimport { Token } from \"./tokens\";\nimport * as n from '../runtime/nodes';\nimport { N_functionDefinition, N_namespace, N_primitiveWrapper, N_tryCatch, N_undefined, N_variable, } from '../runtime/nodes';\nimport { ESError, InvalidSyntaxError } from \"../errors\";\nimport { types } from \"../runtime/primitiveTypes\";\nexport class ParseResults {\n    constructor() {\n        this.advanceCount = 0;\n        this.lastRegisteredAdvanceCount = 0;\n        this.reverseCount = 0;\n    }\n    registerAdvance() {\n        this.advanceCount = 1;\n        this.lastRegisteredAdvanceCount++;\n    }\n    register(res) {\n        this.lastRegisteredAdvanceCount = res.advanceCount;\n        this.advanceCount += res.advanceCount;\n        if (res.error) {\n            this.error = res.error;\n        }\n        if (!res.node) {\n            return new N_undefined();\n        }\n        return res.node;\n    }\n    tryRegister(res) {\n        if (res.error) {\n            this.reverseCount += res.advanceCount;\n            return;\n        }\n        return this.register(res);\n    }\n    success(node) {\n        this.node = node;\n        return this;\n    }\n    failure(error) {\n        this.error = error;\n        return this;\n    }\n}\nexport class Parser {\n    constructor(tokens) {\n        this.tokens = tokens;\n        this.tokenIdx = -1;\n        this.currentToken = tokens[0];\n        this.advance();\n    }\n    parse() {\n        var _a;\n        if (!this.currentToken || !this.tokens || (this.tokens.length === 1 && this.tokens[0].type === tt.EOF)) {\n            return new ParseResults();\n        }\n        const res = this.statements(true);\n        if (!res.error && this.currentToken.type !== tokenType.EOF) {\n            return res.failure(new InvalidSyntaxError((_a = this.currentToken) === null || _a === void 0 ? void 0 : _a.pos, `Expected 'End of File', got token of type '${tokenTypeString[this.currentToken.type]}'`));\n        }\n        return res;\n    }\n    advance(res) {\n        if (res)\n            res.registerAdvance();\n        this.tokenIdx++;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    reverse(amount = 1) {\n        this.tokenIdx -= amount;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    consume(res, type, errorMsg) {\n        if (this.currentToken.type !== type)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, errorMsg !== null && errorMsg !== void 0 ? errorMsg : `Expected '${tokenTypeString[type]}' but got '${tokenTypeString[this.currentToken.type]}'`));\n        this.advance(res);\n    }\n    clearEndStatements(res) {\n        while (this.currentToken.type === tt.ENDSTATEMENT) {\n            this.advance(res);\n        }\n    }\n    statements(topLevel = false) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let statements = [];\n        this.clearEndStatements(res);\n        const firstStatement = res.register(this.statement());\n        if (!firstStatement) {\n            return res;\n        }\n        statements.push(firstStatement);\n        if (res.error) {\n            return res;\n        }\n        let moreStatements = true;\n        while (true) {\n            let newLineCount = 0;\n            while (this.currentToken.type === tt.ENDSTATEMENT) {\n                this.advance(res);\n                newLineCount++;\n            }\n            if (newLineCount === 0) {\n                moreStatements = false;\n            }\n            if (!moreStatements) {\n                break;\n            }\n            const statement = res.tryRegister(this.statement());\n            if (!statement) {\n                this.reverse(res.reverseCount);\n                continue;\n            }\n            statements.push(statement);\n        }\n        this.clearEndStatements(res);\n        let node = new n.N_statements(pos, statements, topLevel);\n        return res.success(node);\n    }\n    statement() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        if (this.currentToken.matches(tt.KEYWORD, 'return')) {\n            return this.returnStatement(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'yield')) {\n            return this.returnStatement(res, true);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'break')) {\n            this.advance(res);\n            return res.success(new n.N_break(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'continue')) {\n            this.advance(res);\n            return res.success(new n.N_continue(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'try')) {\n            return this.tryCatch();\n        }\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    returnStatement(res, isYield = false) {\n        const pos = this.currentToken.pos;\n        this.advance(res);\n        let expr = new N_undefined(this.currentToken.pos);\n        if (this.currentToken.type !== tt.ENDSTATEMENT) {\n            let exprRes = res.register(this.expr());\n            if (!exprRes) {\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'Expected end of statement'));\n            }\n            expr = exprRes;\n        }\n        if (isYield) {\n            return res.success(new n.N_yield(pos, expr));\n        }\n        return res.success(new n.N_return(pos, expr));\n    }\n    atom() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        const pos = this.currentToken.pos;\n        switch (tok.type) {\n            case tt.NUMBER:\n                this.advance(res);\n                return res.success(new n.N_number(pos, tok));\n            case tt.STRING:\n                this.advance(res);\n                return res.success(new n.N_string(pos, tok));\n            case tt.IDENTIFIER:\n                return this.atomIdentifier(res, pos, tok);\n            case tt.OPAREN:\n                this.advance(res);\n                const expr = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type == tt.CPAREN) {\n                    this.advance(res);\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ')'\"));\n            case tt.OSQUARE:\n                let arrayExpr = res.register(this.array());\n                if (res.error)\n                    return res;\n                return res.success(arrayExpr);\n            case tt.OBRACES:\n                let objectExpr = res.register(this.object());\n                if (res.error)\n                    return res;\n                return res.success(objectExpr);\n            case tt.KEYWORD:\n                if (tok.value === 'if') {\n                    const expr = res.register(this.ifExpr());\n                    if (res.error)\n                        return res;\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Invalid Identifier ${tok.value}`));\n            default:\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected number, identifier, '(', '+' or '-'`));\n        }\n    }\n    atomIdentifier(res, pos, tok) {\n        this.advance(res);\n        let node = new n.N_variable(tok);\n        let prevNode = new n.N_undefined(pos);\n        let functionCall = false;\n        while ([tt.OPAREN, tt.OSQUARE, tt.DOT].indexOf(this.currentToken.type) !== -1) {\n            switch (this.currentToken.type) {\n                case tt.OPAREN:\n                    functionCall = true;\n                    const tempNode = node;\n                    node = res.register(this.makeFunctionCall(node));\n                    prevNode = tempNode;\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.OSQUARE:\n                    prevNode = node;\n                    node = res.register(this.makeIndex(node));\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.DOT:\n                    this.advance(res);\n                    if (this.currentToken.type !== tt.IDENTIFIER)\n                        return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected identifier after '.'`));\n                    prevNode = node;\n                    node = new n.N_indexed(this.currentToken.pos, node, new n.N_string(this.currentToken.pos, this.currentToken));\n                    this.advance(res);\n            }\n        }\n        if (this.currentToken.type === tt.ASSIGN) {\n            let assignType = this.currentToken.value;\n            if (functionCall) {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot assign to return value of function`));\n            }\n            this.advance(res);\n            const value = res.register(this.expr());\n            if (node instanceof n.N_variable) {\n                node = new n.N_varAssign(pos, node.a, value, assignType, false);\n            }\n            else if (node instanceof n.N_indexed) {\n                node.value = value;\n                node.assignType = assignType;\n            }\n            else {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot have node of type ${this.currentToken.constructor.name}.\n                            Expected either index or variable node.`));\n            }\n            if (res.error)\n                return res;\n        }\n        return res.success(node);\n    }\n    power() {\n        return this.binOp(() => this.atom(), [tt.POW, tt.MOD, tt.APMERSAND, tt.PIPE], () => this.factor());\n    }\n    factor() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        if (tok.type == tt.ADD || tok.type === tt.SUB) {\n            this.advance(res);\n            const factor = res.register(this.factor());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(tok.pos, factor, tok));\n        }\n        return this.power();\n    }\n    term() {\n        return this.binOp(() => this.factor(), [tt.MUL, tt.DIV]);\n    }\n    arithmeticExpr() {\n        return this.binOp(() => this.term(), [tt.ADD, tt.SUB]);\n    }\n    comparisonExpr() {\n        const res = new ParseResults();\n        if (this.currentToken.type === tt.NOT) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            let node = res.register(this.expr());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(opTok.pos, node, opTok));\n        }\n        let node = res.register(this.binOp(() => this.arithmeticExpr(), [tt.EQUALS, tt.NOTEQUALS, tt.GT, tt.GTE, tt.LTE, tt.LT]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    expr() {\n        const res = new ParseResults();\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.KEYWORD && VAR_DECLARE_KEYWORDS.indexOf(this.currentToken.value) !== -1) {\n            return this.initiateVar(res);\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'if')) {\n            return this.ifExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'while')) {\n            return this.whileExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'for')) {\n            return this.forExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'func')) {\n            return this.funcExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'class')) {\n            return this.classExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'namespace')) {\n            return this.namespace();\n        }\n        let node = res.register(this.binOp(() => this.comparisonExpr(), [tt.AND, tt.OR]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    binOp(func, ops, funcB = func) {\n        const res = new ParseResults();\n        let left = res.register(func());\n        if (res.error)\n            return res;\n        while (ops.indexOf(this.currentToken.type) !== -1\n            || ops.indexOf([this.currentToken.type, this.currentToken.value]) !== -1) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            const right = res.register(funcB());\n            if (res.error)\n                return res;\n            left = new n.N_binOp(left.pos, left, opTok, right);\n        }\n        return res.success(left);\n    }\n    makeFunctionCall(to) {\n        const res = new ParseResults();\n        let args = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OPAREN)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '['\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n            return res.success(new n.N_functionCall(pos, to, []));\n        }\n        args.push(res.register(this.expr()));\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid argument\"));\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            args.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CPAREN)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n        this.advance(res);\n        return res.success(new n.N_functionCall(pos, to, args));\n    }\n    makeIndex(to) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const base = to;\n        if (this.currentToken.type !== tt.OSQUARE)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, `Cannot index without expression`));\n        }\n        let index = res.register(this.expr());\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid index\"));\n        if (this.currentToken.type !== tt.CSQUARE)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ']'\"));\n        this.advance(res);\n        return res.success(new n.N_indexed(pos, base, index));\n    }\n    typeExpr(res) {\n        if (this.currentToken.type === tt.IDENTIFIER) {\n            const tok = this.currentToken;\n            this.advance(res);\n            return res.success(new N_variable(tok));\n        }\n        return this.expr();\n    }\n    initiateVar(res) {\n        let pos = this.currentToken.pos;\n        let isConst = true;\n        let isGlobal = false;\n        let isDeclaration = false;\n        if (this.currentToken.type === tt.KEYWORD &&\n            this.currentToken.value === 'global') {\n            isDeclaration = true;\n            isGlobal = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD &&\n            this.currentToken.value === 'let') {\n            isDeclaration = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        else if (this.currentToken.type === tt.KEYWORD &&\n            this.currentToken.value === 'var') {\n            isDeclaration = true;\n            isConst = false;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected variable declaration keyword, not ${this.currentToken.value}`));\n        }\n        if (this.currentToken.type !== tokenType.IDENTIFIER) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected Identifier or Keyword`));\n        }\n        const varName = this.currentToken;\n        this.advance(res);\n        let type = types.any;\n        if (this.currentToken.type === tt.COLON) {\n            isDeclaration = true;\n            this.consume(res, tt.COLON);\n            type = res.register(this.typeExpr(res));\n        }\n        if (this.currentToken.type !== tt.ASSIGN) {\n            if (isConst)\n                return res.failure(new InvalidSyntaxError(pos, 'Cannot initialise constant to undefined'));\n            return res.success(new n.N_varAssign(pos, varName, new n.N_undefined(this.currentToken.pos), '=', isGlobal, isConst, isDeclaration, type));\n        }\n        let assignType = this.currentToken.value;\n        this.advance(res);\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        if (expr instanceof n.N_class || expr instanceof n.N_functionDefinition) {\n            expr.name = varName.value;\n        }\n        if (expr instanceof N_namespace) {\n            expr.name = varName.value;\n            expr.mutable = !isConst;\n        }\n        return res.success(new n.N_varAssign(pos, varName, expr, assignType, isGlobal, isConst, isDeclaration, type));\n    }\n    bracesExp() {\n        const res = new ParseResults();\n        this.consume(res, tt.OBRACES);\n        if (res.error) {\n            return res;\n        }\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_undefined(this.currentToken.pos));\n        }\n        const expr = res.register(this.statements());\n        if (res.error) {\n            return res;\n        }\n        this.consume(res, tt.CBRACES);\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    addEndStatement(res) {\n        this.tokens.splice(this.tokenIdx, 0, new Token(this.currentToken.pos, tt.ENDSTATEMENT, undefined));\n        this.reverse();\n        this.advance(res);\n    }\n    ifExpr() {\n        const res = new ParseResults();\n        let ifTrue;\n        let ifFalse;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'if'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'if'\"));\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        ifTrue = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.clearEndStatements(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'else')) {\n            this.advance(res);\n            if (this.currentToken.type == tt.OBRACES) {\n                ifFalse = res.register(this.bracesExp());\n                if (res.error)\n                    return res;\n            }\n            else {\n                ifFalse = res.register(this.statement());\n                if (res.error)\n                    return res;\n            }\n        }\n        this.addEndStatement(res);\n        return res.success(new n.N_if(pos, condition, ifTrue, ifFalse));\n    }\n    whileExpr() {\n        const res = new ParseResults();\n        let loop;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'while')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'while'\"));\n        }\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        loop = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        return res.success(new n.N_while(pos, condition, loop));\n    }\n    parameter(res) {\n        let name;\n        let type = new n.N_primitiveWrapper(types.any);\n        if (this.currentToken.type !== tt.IDENTIFIER) {\n            return new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\");\n        }\n        name = this.currentToken.value;\n        this.advance(res);\n        if (this.currentToken.type === tt.COLON) {\n            this.consume(res, tt.COLON);\n            if (res.error)\n                return res.error;\n            type = res.register(this.typeExpr(res));\n            if (res.error)\n                return res.error;\n        }\n        return { name, type };\n    }\n    funcCore() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, args = [], returnType = new n.N_primitiveWrapper(types.any);\n        this.consume(res, tt.OPAREN);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n        }\n        else {\n            let param = this.parameter(res);\n            if (param instanceof ESError) {\n                return res.failure(param);\n            }\n            args.push(param);\n            while (this.currentToken.type === tt.COMMA) {\n                this.advance(res);\n                let param = this.parameter(res);\n                if (param instanceof ESError)\n                    return res.failure(param);\n                args.push(param);\n            }\n            if (this.currentToken.type !== tt.CPAREN)\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n            this.advance(res);\n        }\n        if (this.currentToken.type === tt.COLON) {\n            this.advance(res);\n            returnType = res.register(this.typeExpr(res));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.OBRACES) {\n            body = new n.N_return(this.currentToken.pos, res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        else {\n            this.consume(res, tt.OBRACES);\n            if (res.error)\n                return res;\n            if (this.currentToken.type !== tt.CBRACES)\n                body = res.register(this.statements());\n            else\n                body = new n.N_undefined(this.currentToken.pos);\n            this.consume(res, tt.CBRACES);\n            if (res.error)\n                return res;\n        }\n        return res.success(new n.N_functionDefinition(pos, body, args, returnType));\n    }\n    funcExpr() {\n        const res = new ParseResults();\n        if (!this.currentToken.matches(tt.KEYWORD, 'func'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'func'\"));\n        this.advance(res);\n        const func = res.register(this.funcCore());\n        if (res.error)\n            return res;\n        return res.success(func);\n    }\n    classExpr(name) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const methods = [];\n        let init;\n        let extends_ = new N_primitiveWrapper(types.object);\n        if (!this.currentToken.matches(tt.KEYWORD, 'class')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'class'\"));\n        }\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'extends')) {\n            this.advance(res);\n            extends_ = res.register(this.expr());\n            if (res.error)\n                return res;\n        }\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_class(pos, [], extends_, undefined, name));\n        }\n        while (true) {\n            if (this.currentToken.type !== tt.IDENTIFIER) {\n                break;\n            }\n            let methodId = this.currentToken.value;\n            this.advance(res);\n            const func = res.register(this.funcCore());\n            if (res.error)\n                return res;\n            if (!(func instanceof N_functionDefinition)) {\n                return res.failure(new ESError(this.currentToken.pos, 'ParseError', `Tried to get function, but got ${func} instead`));\n            }\n            func.name = methodId;\n            if (methodId === 'init') {\n                init = func;\n            }\n            else {\n                methods.push(func);\n            }\n        }\n        this.consume(res, tt.CBRACES);\n        return res.success(new n.N_class(pos, methods, extends_, init, name));\n    }\n    forExpr() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, array, identifier, isConst = true;\n        if (!this.currentToken.matches(tt.KEYWORD, 'for')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'for'\"));\n        }\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'var')) {\n            isConst = false;\n            this.advance(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'let')) {\n            this.advance(res);\n        }\n        if (res.error)\n            return res;\n        if (this.currentToken.type !== tt.IDENTIFIER) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\"));\n        }\n        identifier = this.currentToken;\n        this.advance(res);\n        if (!this.currentToken.matches(tt.KEYWORD, 'in')) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected keyword 'in\"));\n        }\n        this.advance(res);\n        array = res.register(this.expr());\n        if (res.error)\n            return res;\n        body = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new n.N_for(pos, body, array, identifier, false, isConst));\n    }\n    array() {\n        const res = new ParseResults();\n        let elements = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            this.advance(res);\n            return res.success(new n.N_array(pos, []));\n        }\n        elements.push(res.register(this.expr()));\n        if (res.error) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Unexpected token\"));\n        }\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            elements.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ']'\"));\n        }\n        this.advance(res);\n        return res.success(new n.N_array(pos, elements));\n    }\n    object() {\n        const res = new ParseResults();\n        let properties = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OBRACES) {\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '{\"));\n        }\n        this.advance(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_objectLiteral(pos, []));\n        }\n        while (true) {\n            let keyType, key, value;\n            if (this.currentToken.type === tt.IDENTIFIER) {\n                keyType = 'id';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.STRING) {\n                keyType = 'string';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.OSQUARE) {\n                keyType = 'value';\n                this.advance(res);\n                key = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.CSQUARE) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ']', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                this.advance(res);\n            }\n            else {\n                break;\n            }\n            if (this.currentToken.type === tt.COLON) {\n                this.advance(res);\n                value = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                if (this.currentToken.type === tt.COMMA) {\n                    this.advance(res);\n                }\n            }\n            else {\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                }\n                if (keyType !== 'id') {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `You must specify a value when initialising an object literal with a key that is not an identifier.\n                        Try using \\`key: value\\` syntax.`));\n                }\n                this.reverse();\n                value = new n.N_variable(this.currentToken);\n                this.advance(res);\n                if (this.currentToken.type === tt.COMMA) {\n                    this.advance(res);\n                }\n            }\n            properties.push([key, value]);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CBRACES)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier, ',' or '}'\"));\n        this.advance(res);\n        return res.success(new n.N_objectLiteral(pos, properties));\n    }\n    namespace() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_namespace(pos, new n.N_undefined()));\n        }\n        const statements = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        return res.success(new n.N_namespace(pos, statements));\n    }\n    tryCatch() {\n        const res = new ParseResults();\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'No empty try block'));\n        }\n        const body = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.value !== 'catch') {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'try block requires catch'));\n        }\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.success(new N_tryCatch(this.currentToken.pos, body, new N_undefined()));\n        }\n        const catchBlock = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new N_tryCatch(this.currentToken.pos, body, catchBlock));\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Lexer } from \"./parse/lexer\";\nimport { Parser } from \"./parse/parser\";\nimport { global, libs as allLibs, now, refreshPerformanceNow, runningInNode, setGlobalContext, VERSION } from \"./constants\";\nimport { initialise } from \"./init\";\nimport { ESError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { compileResult, interpretResult, Node } from \"./runtime/nodes\";\nimport { ESArray } from \"./runtime/primitiveTypes\";\nimport { Context } from \"./runtime/context\";\nimport addNodeLibs from \"./built-in/nodeLibs\";\nimport colours from './util/colours';\nimport JS_STD_TXT_RAW from 'raw-loader!./built-in/compiledSTD/std.txt.js';\nimport PY_STD_TXT_RAW from 'raw-loader!./built-in/compiledSTD/std.txt.py';\nexport { Context, colours };\nexport * from './runtime/primitiveTypes';\nexport * from './constants';\nexport * from './errors';\nexport * from './runtime/nodes';\nexport * from './util/util';\nexport * from './runtime/primitives/wrapStrip';\nexport * from './runtime/symbol';\nexport function init(printFunc = console.log, inputFunc, node = true, libs = { print: console.log }, context = new Context(), path = '') {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const res = initialise(context, printFunc, inputFunc);\n        if (res instanceof ESError) {\n            return res;\n        }\n        setGlobalContext(context);\n        (_a = libs['context']) !== null && _a !== void 0 ? _a : (libs['context'] = context);\n        if (path) {\n            context.path = path;\n        }\n        if (libs.print) {\n            allLibs.print = libs.print;\n        }\n        if (node) {\n            runningInNode();\n            yield refreshPerformanceNow(true);\n            addNodeLibs(libs, context);\n        }\n    });\n}\nexport function run(msg, { env = global, measurePerformance = false, fileName = '(unknown)', currentDir = '' } = {}) {\n    if (currentDir) {\n        env.path = currentDir;\n    }\n    Node.maxTime = 0;\n    Node.totalTime = 0;\n    Node.interprets = 0;\n    const timeData = {\n        total: 0,\n        lexerTotal: 0,\n        parserTotal: 0,\n        interpretTotal: 0,\n        nodeMax: 0,\n        nodeAvg: 0,\n        nodeTotal: 0,\n        interprets: 0,\n    };\n    let start = now();\n    if (!env.root.initialisedAsGlobal) {\n        const res = new interpretResult();\n        res.error = new ESError(Position.void, 'Uninitialised', 'Global context has not been initialised with global values');\n        return res;\n    }\n    const lexer = new Lexer(msg, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        const res_ = new interpretResult();\n        res_.error = lexerRes;\n        return res_;\n    }\n    timeData.lexerTotal = now() - start;\n    start = now();\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        const res_ = new interpretResult();\n        res_.error = res.error;\n        return res_;\n    }\n    timeData.parserTotal = now() - start;\n    start = now();\n    if (!res.node) {\n        const res = new interpretResult();\n        res.val = new ESArray([]);\n        return res;\n    }\n    const finalRes = res.node.interpret(env);\n    timeData.interpretTotal = now() - start;\n    timeData.total = now() - start;\n    timeData.nodeMax = Node.maxTime;\n    timeData.nodeTotal = Node.totalTime;\n    timeData.nodeAvg = Node.totalTime / Node.interprets;\n    timeData.interprets = Node.interprets;\n    if (measurePerformance) {\n        console.log(timeData);\n    }\n    return Object.assign(Object.assign({}, finalRes), { timeData });\n}\nexport function parse(code, { fileName = '(unknown)', currentDir = '' } = {}) {\n    const lexer = new Lexer(code, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        return {\n            error: lexerRes\n        };\n    }\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        return {\n            error: res.error\n        };\n    }\n    if (!res.node) {\n        return {\n            error: new ESError(Position.void, 'Error', 'no output')\n        };\n    }\n    return {\n        compileToJavaScript: (config) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            const comment = `// Generated by EntropyScript->JavaScript compiler v${VERSION}\\n`;\n            const stdStr = JS_STD_TXT_RAW.toString().replace(/(\\r\\n|\\n|\\r|\\t| )+/gm, ' ') + '\\n';\n            const out = res.node.compileJS(config);\n            if (out.error)\n                return out;\n            if (config.minify) {\n                out.val = out.val.replace(/(\\r\\n|\\n|\\r|\\t| )+/gm, ' ');\n            }\n            return new compileResult(comment + stdStr + out.val);\n        },\n        compileToPython: (config) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            const comment = `# Generated by EntropyScript->Python compiler v${VERSION}\\n\\n`;\n            const stdStr = PY_STD_TXT_RAW.toString() + '\\n';\n            const out = res.node.compilePy(config);\n            if (out.error)\n                return out;\n            return new compileResult(comment + stdStr + out.hoisted + '\\n' + out.val);\n        },\n        interpret: (env = global) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            if (currentDir) {\n                env.path = currentDir;\n            }\n            if (!env.root.initialisedAsGlobal) {\n                const res = new interpretResult();\n                res.error = new ESError(Position.void, 'Uninitialised', 'Global context has not been initialised with global values');\n                return res;\n            }\n            return res.node.interpret(env);\n        },\n    };\n}\n","import { Position } from \"../position\";\nimport { Context } from \"../runtime/context\";\nimport { ESError, ImportError, PermissionRequiredError } from '../errors';\nimport { ESFunction, ESNamespace, ESObject, ESString, types } from '../runtime/primitiveTypes';\nimport { str } from \"../util/util\";\nimport { permissions, run } from '../index';\nimport { addModuleFromObj, getModule, moduleExist } from './builtInModules';\nimport { global } from \"../constants\";\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nfunction addNodeLibs(options, context) {\n    const { fs, path } = options;\n    for (let libName in options) {\n        if (options.hasOwnProperty(libName)) {\n            addModuleFromObj(libName, new ESJSBinding(options[libName], libName));\n        }\n    }\n    context.set('import', new ESFunction(({ context }, rawPath) => {\n        if (!permissions.imports) {\n            return new PermissionRequiredError('Imports not allowed');\n        }\n        if (!permissions.imports) {\n            return new PermissionRequiredError('Imports not allowed');\n        }\n        let scriptPath = str(rawPath);\n        if (permissions.useSTD && moduleExist(scriptPath)) {\n            return getModule(scriptPath);\n        }\n        scriptPath = path.join(context.path, scriptPath);\n        try {\n            if (!fs.existsSync(scriptPath)) {\n                if (fs.existsSync('./particles/' + scriptPath)) {\n                    if (fs.existsSync('particles/' + scriptPath + '/main.es')) {\n                        scriptPath = 'particles/' + scriptPath + '/main.es';\n                    }\n                    else {\n                        return new ESError(Position.void, 'ImportError', `Module '${scriptPath}' has no entry point. Requires 'main.es'.`);\n                    }\n                }\n                else {\n                    return new ESError(Position.void, 'ImportError', `Can't find file '${scriptPath}' to import.`);\n                }\n            }\n            const exDir = path.dirname(scriptPath);\n            const code = fs.readFileSync(scriptPath, 'utf-8');\n            const env = new Context();\n            env.parent = global;\n            env.path = exDir;\n            const n = new ESNamespace(new ESString(scriptPath), {});\n            const res = run(code, {\n                env,\n                measurePerformance: false,\n                fileName: scriptPath,\n                currentDir: exDir,\n            });\n            n.__value__ = env.getSymbolTableAsDict();\n            if (res.error) {\n                return res.error;\n            }\n            return n;\n        }\n        catch (E) {\n            return new ESError(Position.void, 'ImportError', E.toString());\n        }\n    }, [{ name: 'path', type: types.string }], 'import', undefined, types.object), {\n        forceThroughConst: true,\n        isConstant: true\n    });\n    context.setOwn('open', new ESFunction(({ context }, path_, encoding_) => {\n        if (!permissions.fileSystem) {\n            return new PermissionRequiredError('No access to file system');\n        }\n        const path = str(path_);\n        const encoding = str(encoding_) || 'utf-8';\n        if (!fs.existsSync(path)) {\n            return new ImportError(Position.void, path);\n        }\n        return new ESObject({\n            str: new ESFunction(({ context }) => {\n                return new ESString(fs.readFileSync(context.path + path, encoding));\n            }, [], 'str', undefined, types.string),\n            write: new ESFunction(({ context }, data) => {\n                fs.writeFileSync(context.path + path, str(data));\n            }, [{ name: 'path', type: types.string }]),\n            append: new ESFunction(({ context }, data) => {\n                fs.appendFileSync(context.path + path, str(data));\n            }, [{ name: 'path', type: types.string }]),\n        });\n    }));\n}\nexport default addNodeLibs;\n","export default \"Array.prototype.contains = function (element) {\\n\\treturn this.indexOf(element) !== -1;\\n};\\n\\nfunction parseNum (str) {\\n\\treturn parseFloat(str);\\n}\\n\\nconst print = console.log;\\n\\nNumber.prototype[Symbol.iterator] = function () {\\n\\treturn {\\n\\t\\tcurrent: 0,\\n\\t\\tlast: this,\\n\\t\\tnext() {\\n\\t\\t\\tif (this.current <= this.last) {\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\tdone: false,\\n\\t\\t\\t\\t\\tvalue: this.current++\\n\\t\\t\\t\\t};\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn { done: true };\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n};\\n\\nconst __private__ = {\\n\\tbims: {\\n\\t\\tmath: Math,\\n\\t\\ttime: {\\n\\t\\t\\tdate: Date,\\n\\t\\t\\tnow: Date.now,\\n\\t\\t},\\n\\t},\\n};\\n\\nif (typeof performance !== 'undefined') {\\n\\t__private__.bims.time.now = performance.now;\\n}\\n\\nfunction import_ (path) {\\n\\tif (__private__.bims.hasOwnProperty(path)) {\\n\\t\\treturn __private__.bims[path];\\n\\t}\\n}\\n\\nfunction range (minP, maxP, stepP) {\\n\\tif (typeof minP !== 'number') {\\n\\t\\treturn [];\\n\\t}\\n\\n\\tconst min = minP.valueOf();\\n\\n\\tif (typeof maxP === 'undefined') {\\n\\t\\ttry {\\n\\t\\t\\treturn [...Array(min).keys()];\\n\\t\\t} catch (e) {\\n\\t\\t\\tthrow `RangeError: Cannot make range of length '${min}'`;\\n\\t\\t}\\n\\t}\\n\\n\\tlet step = 1;\\n\\n\\tif (typeof maxP !== 'number') {\\n\\t\\tthrow 'TypeError: Expected number';\\n\\t}\\n\\n\\tlet max = maxP.valueOf();\\n\\n\\tif (typeof stepP !== 'undefined') {\\n\\t\\tif (typeof stepP !== 'number') {\\n\\t\\t\\tthrow 'TypeError: Expected number';\\n\\t\\t}\\n\\t\\tstep = stepP.valueOf();\\n\\t}\\n\\n\\tlet arr = [];\\n\\n\\tlet i = min;\\n\\twhile (i < max) {\\n\\t\\tarr.push(i);\\n\\t\\ti += step;\\n\\t}\\n\\n\\treturn arr;\\n}\";","export default \"\\n###############################\\n# START OF ENTROPY SCRIPT STD #\\n###############################\\nimport time\\n\\nlog = print\\nparseNum = float\\n\\ndef help(thing):\\n    return 'Help is not available in ES compiled Python'\\n\\n\\ndef GENERATE_PRIVATE():\\n    return {\\n        'modules': {\\n            'ascii': {\\n\\n            },\\n            'time': {\\n                'now': lambda: time.time_ns() / (10 ** 6)\\n            }\\n        }\\n    }\\n\\nPRIVATE = GENERATE_PRIVATE()\\n\\ndef import_ (path):\\n    if path in PRIVATE['modules']:\\n        return PRIVATE['modules'][path]\\n\\n\\n#############################\\n# END OF ENTROPY SCRIPT STD #\\n#############################\";"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Position","constructor","idx","ln","col","file","advance","currentChar","clone","str","isUnknown","void","digits","identifierChars","singleLineComment","multiLineCommentStart","multiLineCommentEnd","global","setGlobalContext","c","stringSurrounds","IS_NODE_INSTANCE","window","runningInNode","VAR_DECLARE_KEYWORDS","VERSION","permissions","networking","imports","accessDOM","useSTD","fileSystem","updatePermissions","newPermissions","assign","print","console","log","catchBlockErrorSymbolName","KEYWORDS","now","refreshPerformanceNow","thisArg","_arguments","generator","Date","performance","e","P","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","tokenType","tt","tokenTypeString","NUMBER","STRING","ENDSTATEMENT","IDENTIFIER","KEYWORD","COMMA","OBRACES","CBRACES","OPAREN","CPAREN","OSQUARE","CSQUARE","ASSIGN","ADD","SUB","MUL","DIV","POW","MOD","EQUALS","NOTEQUALS","NOT","GT","LT","GTE","LTE","AND","OR","COLON","DOT","EOF","APMERSAND","PIPE","BITWISE_NOT","singleCharTokens","doubleCharTokens","tripleCharTokens","primitiveMethods","types","ESPrimitive","type","any","self","isa","props","typeCheck","is","ESBoolean","valueOf","__value__","typeName","__type__","hasProperty","describe","info","isBuiltIn","description","detail","res","strip","TypeError","__add__","n","InvalidOperationError","__subtract__","__multiply__","__divide__","__pow__","__mod__","__eq__","__gt__","__lt__","__and__","__or__","__bool__","__pipe__","__ampersand__","__setProperty__","__call__","parameters","ESNumber","super","number","cast","string","array","ESArray","Array","ESError","ESString","toString","Math","pow","bool","__getProperty__","wrap","IndexError","val","Boolean","name","helpLink","ESErrorPrimitive","error","details","traceback","map","s","position","line","ESObject","object","length","substr","context","keys","k","thisElement","nElement","newOb","keysToRemove","isArray","indexOf","ESUndefined","toClone","dealWithExtends","class_","instance","this_","callContext","ESType","superFunc","ESFunction","args","newContext","Context","parent","__extends__","_a","initFunc","__init__","__closure__","res_","undefined","setRes","setOwn","createInstance","params","runInit","on","_b","primitive","__name__","method","__methods__","methodClone","__instances__","push","isPrimitive","t","ESTypeUnion","left","right","leftRes","__left__","rightRes","__right__","ESNamespace","mutable","slice","symbol","isAccessible","v","isConstant","ESJSBinding","functionsTakeProps","JSON","stringify","fTakesProps","func","arguments_","returnType","closure","path","fn","max","i","arg","typeIncludes","forceThroughConst","generateESFunctionCallContext","Node","interpret","funcReturn","callNode","callNative","defaultValue","required","boolean","values","len","add","splice","contains","element","newArr","num","parseFloat","isNaN","split","repeat","strToInsert","firstPart","lastPart","ESSymbol","identifier","options","_c","thing","Number","String","m","a","codes","red","yellow","green","cyan","blue","grey","code","builtInFunctions","minP","maxP","stepP","min","arr","returns","msgs","things","out","indent","total","filter","entries","contents","id","has","set","global_","time","cb","sleep","parse","json","modules","ascii","asciiToChar","fromCharCode","charToAscii","char","charCodeAt","processedModules","processRawModule","moduleDict","moduleRaw","moduleExist","getModule","processed","initialise","globalContext","printFunc","inputFunc","rawUrl","callback","url","fetch","text","env","run","ImportError","getSymbolTableAsDict","E","msg","cbRaw","builtIn","globalConstants","constant","load","initModRes","thens","resolved","catch_","catch","date","domRes","PermissionRequiredError","InvalidRuntimeError","w","$","document","ReferenceError","dom","initModules","initialisedAsGlobal","symbolTable","deleted","path_","parent_","hasOwn","getSymbol","getRawSymbolTableAsDict","symbols","remove","clear","resetAsGlobal","deepClone","interpretArgument","typeRes","defaultValRes","interpretResult","shouldBreak","shouldContinue","compileResult","hoisted","register","node","config","compilePy","pos","isTerminal","start","interpret_","interprets","totalTime","maxTime","N_binOp","opTok","l","r","lt","eq","gt","InvalidSyntaxError","compileJS","minify","switchers","op","N_unaryOp","numVal","abs","N_varAssign","varNameTok","assignType","isGlobal","isDeclaration","N_primitiveWrapper","typeCheckRes","currentVal","newVal","assignVal","declaration","N_if","comparison","ifTrue","ifFalse","compRes","highIndent","statementRes","ifTrueRes","ifFalseRes","N_statements","N_while","loop","shouldLoop","potentialError","comparisonRes","bodyRes","N_for","body","isGlobalIdentifier","isConstIdentifier","isGlobalId","isConstId","_d","_e","_f","_g","_h","iteration","iteratorRes","N_array","items","shouldClone","interpreted","item","itemRes","N_objectLiteral","properties","keyNode","valueNode","topLevel","last","N_functionCall","to","arguments","join","funcRes","argRes","N_functionDefinition","argNames","returnTypeRes","param","hoistedName","generateRandomSymbol","N_return","valRes","N_yield","N_indexed","base","index","baseRes","indexRes","objectRes","keyRes","N_class","methods","extends_","init","extendsRes","initRes","N_namespace","statements","N_tryCatch","catchBlock","catchRes","N_number","N_string","N_variable","N_undefined","N_break","N_continue","hash","WeakMap","Function","create","getPrototypeOf","Map","from","Set","depth","substring","ms","setTimeout","replace","characters","gen","charAt","floor","random","colouredStr","reverse","IllegalCharError","ExpectedCharError","expectedType","actualType","ref","TestFailed","Token","matches","Lexer","program","fileName","generate","tokens","includes","makeNumber","multiLineComment","makeIdentifier","makeString","possibleAssignFirstChar","token","unknownChar","numStr","dotCount","strClose","idStr","posStart","tokType","triple","double","ParseResults","advanceCount","lastRegisteredAdvanceCount","reverseCount","registerAdvance","tryRegister","success","failure","Parser","tokenIdx","currentToken","amount","consume","errorMsg","clearEndStatements","firstStatement","statement","moreStatements","newLineCount","returnStatement","tryCatch","expr","isYield","exprRes","atom","tok","atomIdentifier","arrayExpr","objectExpr","ifExpr","prevNode","functionCall","tempNode","makeFunctionCall","makeIndex","power","binOp","factor","term","arithmeticExpr","comparisonExpr","initiateVar","whileExpr","forExpr","funcExpr","classExpr","namespace","ops","funcB","typeExpr","isConst","varName","bracesExp","addEndStatement","condition","parameter","funcCore","methodId","elements","keyType","libs","fs","libName","raw","addModule","rawPath","scriptPath","existsSync","exDir","dirname","readFileSync","measurePerformance","currentDir","encoding_","encoding","write","data","writeFileSync","append","appendFileSync","timeData","lexerTotal","parserTotal","interpretTotal","nodeMax","nodeAvg","nodeTotal","lexerRes","finalRes","compileToJavaScript","comment","stdStr","compileToPython"],"sourceRoot":""}