{"version":3,"file":"2.10.1.js","mappings":"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","sources":["webpack://es/webpack/universalModuleDefinition","webpack://es/webpack/bootstrap","webpack://es/webpack/runtime/define property getters","webpack://es/webpack/runtime/hasOwnProperty shorthand","webpack://es/webpack/runtime/make namespace object","webpack://es/./src/position.ts","webpack://es/./src/constants.ts","webpack://es/./src/runtime/primitives/primitive.ts","webpack://es/./src/runtime/primitives/esprimitive.ts","webpack://es/./src/runtime/primitives/eserrorprimitive.ts","webpack://es/./src/runtime/instantiator.ts","webpack://es/./src/runtime/primitives/estype.ts","webpack://es/./src/runtime/primitives/esundefined.ts","webpack://es/./src/runtime/primitives/esobject.ts","webpack://es/./src/runtime/primitives/esnamespace.ts","webpack://es/./src/runtime/primitives/esjsbinding.ts","webpack://es/./src/runtime/primitiveTypes.ts","webpack://es/./src/runtime/primitives/esfunction.ts","webpack://es/./src/runtime/functionCaller.ts","webpack://es/./src/runtime/context.ts","webpack://es/./src/runtime/primitives/esnumber.ts","webpack://es/./src/runtime/primitives/esboolean.ts","webpack://es/./src/runtime/primitives/esarray.ts","webpack://es/./src/runtime/primitives/esstring.ts","webpack://es/./src/runtime/symbol.ts","webpack://es/./src/runtime/primitives/wrapStrip.ts","webpack://es/./src/util/colours.ts","webpack://es/./src/built-in/builtInFunctions.ts","webpack://es/./src/built-in/built-in-modules/json.ts","webpack://es/./src/built-in/builtInModules.ts","webpack://es/./src/built-in/built-in-modules/ascii.ts","webpack://es/./src/init.ts","webpack://es/./src/built-in/globalConstants.ts","webpack://es/./src/built-in/built-in-modules/promise.ts","webpack://es/./src/built-in/built-in-modules/dom.ts","webpack://es/./src/runtime/argument.ts","webpack://es/./src/runtime/nodes.ts","webpack://es/./src/util/util.ts","webpack://es/./src/errors.ts","webpack://es/./src/parse/tokens.ts","webpack://es/./src/parse/lexer.ts","webpack://es/./src/parse/parser.ts","webpack://es/./src/index.ts","webpack://es/./src/built-in/nodeLibs.ts","webpack://es/./src/built-in/compiledSTD/std.txt.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"es\"] = factory();\n\telse\n\t\troot[\"es\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Position {\n    constructor(idx, ln, col, file = '(unknown)') {\n        this.idx = idx;\n        this.ln = ln;\n        this.col = col;\n        this.file = file;\n    }\n    advance(currentChar = '') {\n        this.idx++;\n        this.col++;\n        if (currentChar === '\\n') {\n            this.ln++;\n            this.col = 0;\n        }\n        return this;\n    }\n    get clone() {\n        return new Position(this.idx, this.ln, this.col, this.file);\n    }\n    get str() {\n        return `File ${this.file}, ${this.ln + 1}:${this.col + 1}`;\n    }\n    get isUnknown() {\n        return this.idx === -2;\n    }\n    static get unknown() {\n        return new Position(-2, -2, -2, '(unknown)');\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const digits = '0123456789';\nexport const identifierChars = '_$abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nexport const singleLineComment = '//';\nexport const multiLineCommentStart = '/*';\nexport const multiLineCommentEnd = '*/';\nexport let global;\nexport const setGlobalContext = (c) => void (global = c);\nexport const stringSurrounds = ['\\'', '`', '\"'];\nexport let IS_NODE_INSTANCE = typeof window === 'undefined';\nexport const runningInNode = () => void (IS_NODE_INSTANCE = true);\nexport const VAR_DECLARE_KEYWORDS = ['var', 'let', 'global', 'mutable', 'const', 'local'];\nimport PACKAGE_JSON from '../package.json';\nexport const VERSION = PACKAGE_JSON['version'];\nexport let permissions = {\n    networking: false,\n    imports: true,\n    accessDOM: false,\n    useSTD: true,\n    fileSystem: false,\n};\nexport function updatePermissions(newPermissions) {\n    permissions = Object.assign(Object.assign({}, permissions), newPermissions);\n}\nexport const libs = {\n    print: console.log\n};\nexport const catchBlockErrorSymbolName = 'err';\nexport const KEYWORDS = [\n    'var',\n    'let',\n    'global',\n    'local',\n    'mutable',\n    'const',\n    'if',\n    'else',\n    'while',\n    'for',\n    'in',\n    'continue',\n    'break',\n    'func',\n    'return',\n    'yield',\n    'class',\n    'extends',\n    'namespace',\n    'export',\n    'try',\n    'catch'\n];\nexport let now = () => 0;\nexport function refreshPerformanceNow(IS_NODE_INSTANCE) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (IS_NODE_INSTANCE) {\n            now = () => Date.now();\n        }\n        else {\n            now = () => {\n                try {\n                    return performance === null || performance === void 0 ? void 0 : performance.now();\n                }\n                catch (e) {\n                    return 0;\n                }\n            };\n        }\n    });\n}\nrefreshPerformanceNow(IS_NODE_INSTANCE);\nexport const importCache = {};\nexport var tokenType;\n(function (tokenType) {\n    tokenType[tokenType[\"NUMBER\"] = 0] = \"NUMBER\";\n    tokenType[tokenType[\"STRING\"] = 1] = \"STRING\";\n    tokenType[tokenType[\"ENDSTATEMENT\"] = 2] = \"ENDSTATEMENT\";\n    tokenType[tokenType[\"IDENTIFIER\"] = 3] = \"IDENTIFIER\";\n    tokenType[tokenType[\"KEYWORD\"] = 4] = \"KEYWORD\";\n    tokenType[tokenType[\"COMMA\"] = 5] = \"COMMA\";\n    tokenType[tokenType[\"ASSIGN\"] = 6] = \"ASSIGN\";\n    tokenType[tokenType[\"ADD\"] = 7] = \"ADD\";\n    tokenType[tokenType[\"SUB\"] = 8] = \"SUB\";\n    tokenType[tokenType[\"MUL\"] = 9] = \"MUL\";\n    tokenType[tokenType[\"DIV\"] = 10] = \"DIV\";\n    tokenType[tokenType[\"POW\"] = 11] = \"POW\";\n    tokenType[tokenType[\"MOD\"] = 12] = \"MOD\";\n    tokenType[tokenType[\"OPAREN\"] = 13] = \"OPAREN\";\n    tokenType[tokenType[\"CPAREN\"] = 14] = \"CPAREN\";\n    tokenType[tokenType[\"OBRACES\"] = 15] = \"OBRACES\";\n    tokenType[tokenType[\"CBRACES\"] = 16] = \"CBRACES\";\n    tokenType[tokenType[\"OSQUARE\"] = 17] = \"OSQUARE\";\n    tokenType[tokenType[\"CSQUARE\"] = 18] = \"CSQUARE\";\n    tokenType[tokenType[\"EQUALS\"] = 19] = \"EQUALS\";\n    tokenType[tokenType[\"NOTEQUALS\"] = 20] = \"NOTEQUALS\";\n    tokenType[tokenType[\"NOT\"] = 21] = \"NOT\";\n    tokenType[tokenType[\"GT\"] = 22] = \"GT\";\n    tokenType[tokenType[\"LT\"] = 23] = \"LT\";\n    tokenType[tokenType[\"GTE\"] = 24] = \"GTE\";\n    tokenType[tokenType[\"LTE\"] = 25] = \"LTE\";\n    tokenType[tokenType[\"AND\"] = 26] = \"AND\";\n    tokenType[tokenType[\"OR\"] = 27] = \"OR\";\n    tokenType[tokenType[\"COLON\"] = 28] = \"COLON\";\n    tokenType[tokenType[\"DOT\"] = 29] = \"DOT\";\n    tokenType[tokenType[\"EOF\"] = 30] = \"EOF\";\n    tokenType[tokenType[\"BITWISE_OR\"] = 31] = \"BITWISE_OR\";\n    tokenType[tokenType[\"BITWISE_AND\"] = 32] = \"BITWISE_AND\";\n    tokenType[tokenType[\"BITWISE_NOT\"] = 33] = \"BITWISE_NOT\";\n})(tokenType || (tokenType = {}));\nexport let tt = tokenType;\nexport const tokenTypeString = {\n    [tt.NUMBER]: 'Number',\n    [tt.STRING]: 'String',\n    [tt.ENDSTATEMENT]: ';',\n    [tt.IDENTIFIER]: 'Identifier',\n    [tt.KEYWORD]: 'Keyword',\n    [tt.COMMA]: ',',\n    [tt.OBRACES]: '{',\n    [tt.CBRACES]: '}',\n    [tt.OPAREN]: '(',\n    [tt.CPAREN]: ')',\n    [tt.OSQUARE]: '[',\n    [tt.CSQUARE]: ']',\n    [tt.ASSIGN]: '=',\n    [tt.ADD]: '+',\n    [tt.SUB]: '-',\n    [tt.MUL]: '*',\n    [tt.DIV]: '/',\n    [tt.POW]: '^',\n    [tt.MOD]: '%',\n    [tt.EQUALS]: '==',\n    [tt.NOTEQUALS]: '!=',\n    [tt.NOT]: '!',\n    [tt.GT]: '>',\n    [tt.LT]: '<',\n    [tt.GTE]: '>=',\n    [tt.LTE]: '<=',\n    [tt.AND]: '&&',\n    [tt.OR]: '||',\n    [tt.COLON]: ':',\n    [tt.DOT]: '.',\n    [tt.EOF]: 'End of File',\n    [tt.BITWISE_AND]: '&',\n    [tt.BITWISE_OR]: '|',\n    [tt.BITWISE_NOT]: '~',\n};\nexport const singleCharTokens = {\n    '*': tt.MUL,\n    '/': tt.DIV,\n    '+': tt.ADD,\n    '-': tt.SUB,\n    '(': tt.OPAREN,\n    ')': tt.CPAREN,\n    '^': tt.POW,\n    '%': tt.MOD,\n    '{': tt.OBRACES,\n    '}': tt.CBRACES,\n    ',': tt.COMMA,\n    '[': tt.OSQUARE,\n    ']': tt.CSQUARE,\n    ';': tt.ENDSTATEMENT,\n    ':': tt.COLON,\n    '.': tt.DOT,\n    '=': tt.ASSIGN,\n    '>': tt.GT,\n    '<': tt.LT,\n    '!': tt.NOT,\n    '|': tt.BITWISE_OR,\n    '&': tt.BITWISE_AND,\n    '~': tt.BITWISE_NOT\n};\nexport const doubleCharTokens = {\n    '==': tt.EQUALS,\n    '!=': tt.NOTEQUALS,\n    '>=': tt.GTE,\n    '<=': tt.LTE,\n    '+=': tt.ASSIGN,\n    '-=': tt.ASSIGN,\n    '*=': tt.ASSIGN,\n    '/=': tt.ASSIGN,\n    '&&': tt.AND,\n    '||': tt.OR\n};\nexport const tripleCharTokens = {};\nexport const primitiveMethods = [\n    '__add__',\n    '__subtract__',\n    '__multiply__',\n    '__divide__',\n    '__pow__',\n    '__eq__',\n    '__gt__',\n    '__lt__',\n    '__and__',\n    '__or__',\n    '__bool__',\n    '__setProperty__',\n    '__getProperty__',\n    '__call__',\n];\n","export const types = {};\n","import { InvalidOperationError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { types } from './primitive';\nimport { str } from '../../util/util';\nimport { strip } from './wrapStrip';\nexport class ESPrimitive {\n    constructor(value, type = types.any) {\n        this.self = this;\n        this.isa = (props, type) => {\n            return new ESBoolean(type === this.__type__);\n        };\n        this.is = (props, obj) => {\n            return new ESBoolean(obj === this);\n        };\n        this.valueOf = () => this.__value__;\n        this.typeName = () => this.__type__.__name__;\n        this.hasProperty = (props, key) => new ESBoolean(this.hasOwnProperty(str(key)));\n        this.describe = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            this.info.description = str(info);\n        };\n        this.detail = (props, info) => {\n            if (this.info.isBuiltIn) {\n                return;\n            }\n            const res = strip(info, props);\n            if (typeof res !== 'object') {\n                return new TypeError(Position.unknown, 'object', this.typeName(), str(this));\n            }\n            this.info = Object.assign(Object.assign({}, this.info), res);\n            this.info.isBuiltIn = false;\n        };\n        this.__type__ = type || this;\n        this.__value__ = value;\n        this.info = {};\n    }\n    __add__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __subtract__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __multiply__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __divide__(props, n) {\n        return new InvalidOperationError('', this);\n    }\n    __pow__(props, n) {\n        return new InvalidOperationError('__pow__', this);\n    }\n    __mod__(props, n) {\n        return new InvalidOperationError('__mod__', this);\n    }\n    __eq__(props, n) {\n        return new InvalidOperationError('__eq__', this);\n    }\n    __gt__(props, n) {\n        return new InvalidOperationError('__gt__', this);\n    }\n    __lt__(props, n) {\n        return new InvalidOperationError('__lt__', this);\n    }\n    __and__(props, n) {\n        return new InvalidOperationError('__and__', this);\n    }\n    __or__(props, n) {\n        return new InvalidOperationError('__or__', this);\n    }\n    __bool__(props) {\n        return new InvalidOperationError('__bool__', this);\n    }\n    __setProperty__(props, key, value) {\n        return new InvalidOperationError('__setProperty__', this, `[${str(key)}] = ${str(value)}`);\n    }\n    __call__(props, ...parameters) {\n        return new InvalidOperationError('__call__', this);\n    }\n}\n","import { ESPrimitive } from './esprimitive';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nimport { str } from \"../../util/util\";\nimport { ESArray } from \"./esarray\";\nexport class ESErrorPrimitive extends ESPrimitive {\n    constructor(error = new ESError(Position.unknown, 'Unknown', 'Error not specified')) {\n        super(error, types.error);\n        this.__getProperty__ = (props, key) => {\n            switch (str(key)) {\n                case 'name':\n                    return new ESString(this.valueOf().name);\n                case 'details':\n                    return new ESString(this.valueOf().details);\n                case 'traceback':\n                    return new ESArray(this.valueOf().traceback\n                        .map(s => new ESString(`${s.position.str} : ${s.line}`)));\n                default:\n                    if (this.self.hasOwnProperty(str(key))) {\n                        return wrap(this.self[str(key)]);\n                    }\n                    return new IndexError(Position.unknown, key.valueOf(), this);\n            }\n        };\n        this.cast = () => new ESError(Position.unknown, 'TypeError', `Cannot cast type 'error'`);\n        this.str = () => new ESString(`<Error: ${this.valueOf().str}>`);\n        this.__eq__ = (props, n) => new ESBoolean(n instanceof ESErrorPrimitive &&\n            this.valueOf().constructor === n.valueOf().constructor);\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.clone = () => new ESErrorPrimitive(this.valueOf());\n    }\n}\n","import { primitiveMethods } from '../constants';\nimport { Context } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESFunction, ESNumber, ESObject, ESString, ESType, ESUndefined } from \"./primitiveTypes\";\nfunction dealWithExtends(context, class_, instance, this_, callContext) {\n    if (!(class_ instanceof ESType)) {\n        return new TypeError(Position.unknown, 'Type', typeof class_, class_);\n    }\n    const superFunc = new ESFunction(({ context }, ...args) => {\n        const newContext = new Context();\n        newContext.parent = context;\n        if (class_.__extends__) {\n            let _a = dealWithExtends(newContext, class_.__extends__, instance, this_, callContext);\n            if (_a instanceof ESError) {\n                return _a;\n            }\n        }\n        const initFunc = class_ === null || class_ === void 0 ? void 0 : class_.__init__;\n        if (!initFunc) {\n            return;\n        }\n        initFunc.this_ = this_;\n        initFunc.__closure__ = newContext;\n        const res_ = initFunc.__call__({ context: newContext }, ...args);\n        if (res_ instanceof ESError) {\n            return res_;\n        }\n    }, undefined, 'super', this_);\n    let setRes = context.setOwn('super', superFunc);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    const res = createInstance(class_, { context }, [], false, instance);\n    if (res instanceof ESError) {\n        return res;\n    }\n}\nexport function createInstance(type, { context }, params, runInit = true, on = {}) {\n    var _b;\n    if (type.__isPrimitive__) {\n        if (params.length < 1) {\n            return new ESUndefined();\n        }\n        switch (type.__name__) {\n            case 'Undefined':\n            case 'Type':\n                if (params.length < 1) {\n                    return new ESType();\n                }\n                else {\n                    return new ESString(params[0].__type__.__name__);\n                }\n            case 'String':\n                return new ESString(params[0].str().valueOf());\n            case 'Array':\n                return new ESArray(params);\n            case 'Number':\n                return new ESNumber(params[0].valueOf());\n            case 'Function':\n                return new ESFunction(params[0].valueOf());\n            case 'Boolean':\n                return new ESBoolean(params[0].bool().valueOf());\n            default:\n                return wrap(params[0]);\n        }\n    }\n    const newContext = new Context();\n    newContext.parent = (_b = type.__init__) === null || _b === void 0 ? void 0 : _b.__closure__;\n    const instance = new ESObject();\n    if (type.__extends__) {\n        let res = dealWithExtends(newContext, type.__extends__, on, instance, context);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__value__ = on;\n    for (let method of type.__methods__) {\n        const methodClone = method.clone();\n        methodClone.this_ = instance;\n        on[method.name] = methodClone;\n        if (primitiveMethods.indexOf(method.name) !== -1) {\n            instance[method.name] = methodClone.__call__;\n        }\n    }\n    if (runInit && type.__init__) {\n        type.__init__.this_ = instance;\n        type.__init__.__closure__ = newContext;\n        const res = type.__init__.__call__({ context: newContext }, ...params);\n        if (res instanceof ESError) {\n            return res;\n        }\n    }\n    instance.__type__ = type;\n    type.__instances__.push(instance);\n    return instance;\n}\n","import { IndexError, InvalidOperationError } from '../../errors';\nimport { createInstance } from '../instantiator';\nimport { ESBoolean } from './esboolean';\nimport { ESFunction } from './esfunction';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nimport { Position } from \"../../position\";\nimport { str } from \"../../util/util\";\nexport class ESType extends ESPrimitive {\n    constructor(isPrimitive = false, name = '(anon)', __methods__ = [], __extends__, __init__) {\n        super(undefined, types === null || types === void 0 ? void 0 : types.type);\n        this.__instances__ = [];\n        this.clone = () => {\n            return new ESType(this.__isPrimitive__, this.__name__, this.__methods__, this.__extends__, this.__init__);\n        };\n        this.isa = ({}, type) => {\n            return new ESBoolean(type === types.type);\n        };\n        this.cast = ({}, type) => new InvalidOperationError('cast', this);\n        this.includesType = (props, t) => {\n            var _a, _b, _c, _d, _e, _f;\n            if (this.equals(props, types.any).bool().valueOf() ||\n                t.equals(props, types.any).bool().valueOf() ||\n                (((_a = this.__extends__) === null || _a === void 0 ? void 0 : _a.equals(props, t).valueOf()) === true) ||\n                (((_b = this.__extends__) === null || _b === void 0 ? void 0 : _b.equals(props, types.any).valueOf()) === true) ||\n                (((_c = this.__extends__) === null || _c === void 0 ? void 0 : _c.includesType(props, t).valueOf()) === true) ||\n                (((_d = t.__extends__) === null || _d === void 0 ? void 0 : _d.equals(props, this).valueOf()) === true) ||\n                (((_e = t.__extends__) === null || _e === void 0 ? void 0 : _e.equals(props, types.any).valueOf()) === true) ||\n                (((_f = t.__extends__) === null || _f === void 0 ? void 0 : _f.includesType(props, this).valueOf()) === true)) {\n                return new ESBoolean(true);\n            }\n            return this.equals(props, t);\n        };\n        this.equals = ({}, t) => {\n            return new ESBoolean(t.__name__ === this.__name__ &&\n                t.__isPrimitive__ === this.__isPrimitive__ &&\n                Object.is(this.valueOf(), t.valueOf()));\n        };\n        this.__call__ = ({ context }, ...params) => {\n            return createInstance(this, { context }, params || []);\n        };\n        this.str = () => new ESString(`<Type: ${this.__name__}>`);\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.__isPrimitive__ = isPrimitive;\n        this.__name__ = name;\n        this.info.name = name;\n        this.__extends__ = __extends__;\n        this.__methods__ = __methods__;\n        if (__init__) {\n            __init__.name = name;\n            this.__init__ = __init__;\n        }\n        if (!types.type) {\n            this.__type__ = this;\n        }\n    }\n}\n","import { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { str } from '../../util/util';\nimport { wrap } from \"./wrapStrip\";\nexport class ESUndefined extends ESPrimitive {\n    constructor() {\n        super(undefined, types.undefined);\n        this.cast = ({ context }, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber();\n                case types.string:\n                    return new ESString();\n                case types.array:\n                    return new ESArray();\n                case types.undefined:\n                    return new ESUndefined();\n                case types.type:\n                    return new ESType();\n                case types.error:\n                    return new ESErrorPrimitive();\n                case types.object:\n                case types.any:\n                    return new ESObject();\n                case types.function:\n                    return new ESFunction(() => { });\n                case types.boolean:\n                    return new ESBoolean();\n                default:\n                    if (!(type instanceof ESType)) {\n                        return new ESError(Position.unknown, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n                    }\n                    return type.__call__({ context });\n            }\n        };\n        this.str = () => new ESString('<Undefined>');\n        this.__eq__ = (props, n) => new ESBoolean(n instanceof ESUndefined ||\n            typeof n === 'undefined' ||\n            typeof n.valueOf() === 'undefined');\n        this.__bool__ = () => new ESBoolean();\n        this.bool = this.__bool__;\n        this.clone = () => new ESUndefined();\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.info = {\n            name: 'undefined',\n            description: 'Not defined, not a value.',\n            file: 'built-in',\n            isBuiltIn: true\n        };\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { types } from './primitive';\nimport { strip, wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESObject extends ESPrimitive {\n    constructor(val = {}) {\n        super(val, types.object);\n        this.isa = (props, type) => {\n            if (type === types.object) {\n                return new ESBoolean(true);\n            }\n            if (!(type instanceof ESType)) {\n                return new TypeError(Position.unknown, 'TypeError', 'type', str(type.typeName()), str(type));\n            }\n            return this.__type__.includesType(props, type);\n        };\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => {\n            let val = str(this.valueOf());\n            if (val[val.length - 1] === '\\n')\n                val = val.substr(0, val.length - 1);\n            return new ESString(`<ESObject ${val}>`);\n        };\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new ESBoolean();\n            }\n            if (n.keys.length !== this.keys.length) {\n                return new ESBoolean();\n            }\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const thisElement = this.valueOf()[key];\n                const nElement = n.valueOf()[key];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESObject)) {\n                return new TypeError(Position.unknown, 'object', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                const res = this.__getProperty__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            for (let k of n.keys) {\n                const key = k.valueOf();\n                if (newOb.hasOwnProperty(key)) {\n                    continue;\n                }\n                const res = n.__getProperty__({ context }, k);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                newOb[key] = res;\n            }\n            return new ESObject(newOb);\n        };\n        this.__subtract__ = (props, n) => {\n            let keysToRemove = [];\n            if (n instanceof ESString) {\n                keysToRemove = [str(n)];\n            }\n            else if (n instanceof ESArray) {\n                keysToRemove = strip(n, props);\n            }\n            else {\n                return new TypeError(Position.unknown, 'array | string', n.typeName().valueOf(), n);\n            }\n            if (!Array.isArray(keysToRemove)) {\n                return new TypeError(Position.unknown, 'array | string', n.typeName().valueOf(), n);\n            }\n            let newOb = {};\n            for (let k of this.keys) {\n                const key = k.valueOf();\n                if (keysToRemove.indexOf(key) === -1) {\n                    let res = this.__getProperty__(props, k);\n                    if (res instanceof ESError) {\n                        return res;\n                    }\n                    newOb[key] = res;\n                }\n            }\n            return new ESObject(newOb);\n        };\n        this.__getProperty__ = (props, k) => {\n            if (!(k instanceof ESString) && !(k instanceof ESNumber)) {\n                return new TypeError(Position.unknown, 'string | number', k.typeName(), str(k));\n            }\n            const key = k.valueOf();\n            if (this.valueOf().hasOwnProperty(key)) {\n                return this.valueOf()[key];\n            }\n            if (this.self.hasOwnProperty(key)) {\n                const val = this.self[key];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new ESUndefined();\n        };\n        this.__setProperty__ = ({}, key, value) => {\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.unknown, 'string', key.typeName(), str(key));\n            }\n            this.__value__[key.valueOf()] = value;\n        };\n        this.hasProperty = (props, k) => {\n            const key = str(k);\n            if (this.valueOf().hasOwnProperty(str(key))) {\n                return new ESBoolean(true);\n            }\n            return new ESBoolean(this.hasOwnProperty(key));\n        };\n        this.clone = () => {\n            const res = new ESObject();\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            res.__value__ = obj;\n            return res;\n        };\n    }\n    get keys() {\n        return Object.keys(this.valueOf()).map(s => new ESString(s));\n    }\n    set keys(val) { }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESNamespace extends ESPrimitive {\n    constructor(name, value, mutable = false) {\n        super(value, types.object);\n        this.cast = ({}) => {\n            return new ESError(Position.unknown, 'TypeError', `Cannot cast type 'namespace'`);\n        };\n        this.clone = () => {\n            let obj = {};\n            let toClone = this.valueOf();\n            for (let key of Object.keys(toClone)) {\n                obj[key] = toClone[key];\n            }\n            return new ESNamespace(this.name, obj);\n        };\n        this.str = () => {\n            const keys = Object.keys(this.valueOf());\n            return new ESString(`<Namespace ${str(this.name)}${keys.length > 0 ? ': ' : ''}${keys.slice(0, 5)}${keys.length >= 5 ? '...' : ''}>`);\n        };\n        this.__eq__ = (props, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.valueOf().hasOwnProperty(key.valueOf())) {\n                const symbol = this.valueOf()[key.valueOf()];\n                if (symbol.isAccessible) {\n                    return symbol.value;\n                }\n            }\n            if (!(key instanceof ESString)) {\n                return new TypeError(Position.unknown, 'string', key.typeName());\n            }\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this.self);\n        };\n        this.info.name = str(name);\n        this.mutable = mutable;\n    }\n    get name() {\n        return new ESString(this.info.name);\n    }\n    set name(v) {\n        this.info.name = v.valueOf();\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESString)) {\n            return new TypeError(Position.unknown, 'string', key.typeName().valueOf(), str(key));\n        }\n        let idx = str(key);\n        if (!this.mutable) {\n            return new TypeError(Position.unknown, 'mutable', 'immutable', `${str(this.name)}`);\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        const symbol = this.__value__[idx];\n        if (!symbol) {\n            return new ESError(Position.unknown, 'SymbolError', `Symbol ${idx} is not declared in namespace ${str(this.name)}.`);\n        }\n        if (symbol.isConstant) {\n            return new TypeError(Position.unknown, 'mutable', 'immutable', `${str(this.name)}[${idx}]`);\n        }\n        if (!symbol.isAccessible) {\n            return new TypeError(Position.unknown, 'accessible', 'inaccessible', `${str(this.name)}[${idx}]`);\n        }\n        symbol.value = value;\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { strip, wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESJSBinding extends ESPrimitive {\n    constructor(value, name = '<AnonNative>', functionsTakeProps = false) {\n        super(value, types.object);\n        this.cast = ({}) => {\n            return new ESError(Position.unknown, 'TypeError', `Cannot cast native object`);\n        };\n        this.clone = () => new ESJSBinding(this.__value__);\n        this.str = () => {\n            try {\n                return new ESString(JSON.stringify(this.__value__));\n            }\n            catch (e) {\n                return new ESString(`${this.__value__}`);\n            }\n        };\n        this.__eq__ = ({}, n) => {\n            return new ESBoolean(this === n);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, k) => {\n            const key = str(k);\n            const val = this.valueOf();\n            const res = val[key];\n            if (res === undefined) {\n                if (this.self.hasOwnProperty(key)) {\n                    const val = this.self[str(key)];\n                    if (typeof val === 'function') {\n                        return new ESFunction(val);\n                    }\n                    return wrap(val);\n                }\n                return new IndexError(Position.unknown, key, this);\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            if (typeof res === 'function') {\n                return new ESFunction(({ context }, ...args) => {\n                    args = args.map(o => strip(o, props));\n                    const res = val[key](...args);\n                    return wrap(res);\n                });\n            }\n            return wrap(res);\n        };\n        this.__call__ = (props, ...args) => {\n            if (typeof this.__value__ !== 'function') {\n                return new TypeError(Position.unknown, 'function', typeof this.__value__, str(this));\n            }\n            let res;\n            try {\n                res = new this.__value__(...args.map(o => strip(o, props)));\n            }\n            catch (_a) {\n                res = this.__value__(...args.map(o => strip(o, props)));\n            }\n            if (res instanceof ESPrimitive) {\n                return res;\n            }\n            return wrap(res);\n        };\n        this.hasProperty = (props, key) => {\n            return new ESBoolean(!(this.__getProperty__(props, key) instanceof ESError));\n        };\n        this.info.name = str(name);\n    }\n}\n","import { types } from './primitives/primitive';\nimport { ESPrimitive } from './primitives/esprimitive';\nimport { ESArray } from './primitives/esarray';\nimport { ESBoolean } from './primitives/esboolean';\nimport { ESErrorPrimitive } from './primitives/eserrorprimitive';\nimport { ESFunction } from './primitives/esfunction';\nimport { ESNumber } from './primitives/esnumber';\nimport { ESObject } from './primitives/esobject';\nimport { ESString } from './primitives/esstring';\nimport { ESType } from './primitives/estype';\nimport { ESUndefined } from './primitives/esundefined';\nimport { ESNamespace } from './primitives/esnamespace';\nimport { ESJSBinding } from \"./primitives/esjsbinding\";\nexport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNumber, ESPrimitive, ESString, ESObject, ESType, ESUndefined, ESNamespace, ESJSBinding, types };\ntypes.type = new ESType(true, 'Type');\ntypes.undefined = new ESType(true, 'Undefined');\ntypes.string = new ESType(true, 'String');\ntypes.array = new ESType(true, 'Array');\ntypes.number = new ESType(true, 'Number');\ntypes.any = new ESType(true, 'Any');\ntypes.function = new ESType(true, 'Function');\ntypes.bool = new ESType(true, 'Boolean');\ntypes.object = new ESType(true, 'Object');\ntypes.error = new ESType(true, 'Error');\ntypes.any.info = {\n    name: 'any',\n    description: 'Matches any other type',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.number.info = {\n    name: 'any',\n    description: 'The ES Number type. Is a a double-precision 64-bit binary format IEEE 754 value, like double in Java and C#',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.string.info = {\n    name: 'string',\n    description: 'The ES String type. Holds an array of characters, and can be defined with any of \\', \" and `. Can be indexed like an array.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.bool.info = {\n    name: 'bool',\n    description: 'The ES Bool type. Exactly two instances exist, true and false.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.function.info = {\n    name: 'function',\n    description: 'The ES Function type. Is a block of code which executes when called and takes in 0+ parameters.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.array.info = {\n    name: 'array',\n    description: 'The ES Array type. Defines a set of items of any type which can be accessed by an index with [].',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.object.info = {\n    name: 'object',\n    description: 'The ES Object type. Similar to JS objects or python dictionaries.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.error.info = {\n    name: 'error',\n    description: 'The ES Error type. Call to throw an error.',\n    file: 'built-in',\n    isBuiltIn: true\n};\ntypes.type.info = {\n    name: 'type',\n    description: 'The ES Type type. Call to get the type of a value at a string.',\n    file: 'built-in',\n    isBuiltIn: true\n};\n","import { ESPrimitive } from './esprimitive';\nimport { global } from '../../constants';\nimport { ESError, IndexError } from '../../errors';\nimport { Position } from '../../position';\nimport { call } from '../functionCaller';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESObject } from './esobject';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { wrap } from \"./wrapStrip\";\nexport class ESFunction extends ESPrimitive {\n    constructor(func = (() => { }), arguments_ = [], name = '(anon)', this_ = new ESObject(), returnType = types.any, closure = global) {\n        super(func, types.function);\n        this.cast = ({}, type) => {\n            return new ESError(Position.unknown, 'TypeError', `Cannot cast type 'function'`);\n        };\n        this.clone = () => {\n            return new ESFunction(this.__value__, this.arguments_, this.name, this.this_, this.returnType, this.__closure__);\n        };\n        this.valueOf = () => this;\n        this.str = () => new ESString(`<Func: ${this.name}>`);\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESFunction))\n                return new ESBoolean(false);\n            return new ESBoolean(this.__value__ === n.__value__);\n        };\n        this.__bool__ = () => new ESBoolean(true);\n        this.bool = this.__bool__;\n        this.__call__ = ({ context }, ...params) => {\n            this.__closure__.path = context.path;\n            return call(this.__closure__, this, params);\n        };\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.arguments_ = arguments_;\n        this.info.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        this.__closure__ = closure;\n        this.info.returnType = str(returnType);\n        this.info.args = arguments_.map(arg => ({\n            name: arg.name,\n            defaultValue: str(arg.defaultValue),\n            type: arg.type.info.name,\n            required: true\n        }));\n    }\n    get name() {\n        var _a;\n        return (_a = this.info.name) !== null && _a !== void 0 ? _a : '(anonymous)';\n    }\n    set name(v) {\n        this.info.name = v;\n    }\n}\n","import { Node } from \"./nodes\";\nimport { generateESFunctionCallContext } from \"./context\";\nimport { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { ESObject, ESPrimitive, ESUndefined, types } from \"./primitiveTypes\";\nfunction callNode(self, context, params, fn) {\n    var _a, _b, _c, _d;\n    const res = fn.interpret(context);\n    if (res.error)\n        return res.error;\n    if (res.funcReturn !== undefined) {\n        res.val = res.funcReturn;\n        res.funcReturn = undefined;\n    }\n    if (self.returnType.includesType({ context }, (_b = (_a = res.val) === null || _a === void 0 ? void 0 : _a.__type__) !== null && _b !== void 0 ? _b : types.any).valueOf() === false) {\n        return new TypeError(Position.unknown, self.returnType.__name__, ((_c = res.val) === null || _c === void 0 ? void 0 : _c.typeName().valueOf()) || 'undefined', (_d = res.val) === null || _d === void 0 ? void 0 : _d.str().valueOf(), '(from function return)');\n    }\n    if (res.val) {\n        return res.val;\n    }\n    else {\n        return new ESUndefined();\n    }\n}\nfunction callNative(self, context, params, fn) {\n    for (let i = params.length; i < fn.length; i++)\n        params.push(new ESUndefined());\n    const res = fn({\n        context\n    }, ...params);\n    if (res instanceof ESError || res instanceof ESPrimitive) {\n        return res;\n    }\n    return new ESUndefined();\n}\nexport function call(context, self, params) {\n    var _a;\n    let callContext = context;\n    context = self.__closure__;\n    context.path = callContext.path;\n    const fn = self.__value__;\n    const newContext = generateESFunctionCallContext(params, self, context);\n    if (newContext instanceof ESError) {\n        return newContext;\n    }\n    let this_ = (_a = self.this_) !== null && _a !== void 0 ? _a : new ESObject();\n    if (!(this_ instanceof ESObject))\n        return new TypeError(Position.unknown, 'object', typeof this_, this_, '\\'this\\' must be an object');\n    let setRes = newContext.setOwn('this', this_);\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    if (fn instanceof Node) {\n        return callNode(self, newContext, params, fn);\n    }\n    else if (typeof fn === 'function') {\n        return callNative(self, newContext, params, fn);\n    }\n    else {\n        return new TypeError(Position.unknown, 'function', typeof fn);\n    }\n}\n","import { initialise } from \"../init\";\nimport { ESError, TypeError, ReferenceError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESPrimitive, ESType, ESUndefined, types } from \"./primitiveTypes\";\nimport { str } from \"../util/util\";\nimport { ESSymbol } from './symbol';\nimport chalk from \"../util/colours\";\nexport class Context {\n    constructor() {\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        this.deleted = false;\n        this.path_ = '';\n    }\n    get path() {\n        if (this.path_ || !this.parent) {\n            return this.path_;\n        }\n        return this.parent.path;\n    }\n    set path(val) {\n        this.path_ = val;\n    }\n    get parent() {\n        return this.parent_;\n    }\n    set parent(val) {\n        if (val == this) {\n            console.error(chalk.red(`Setting context parent to self`));\n            return;\n        }\n        this.parent_ = val;\n    }\n    has(identifier) {\n        return this.get(identifier) !== undefined;\n    }\n    hasOwn(identifier) {\n        return this.symbolTable[identifier] instanceof ESSymbol;\n    }\n    get(identifier) {\n        let symbol = this.getSymbol(identifier);\n        if (symbol instanceof ESError || symbol == undefined) {\n            return symbol;\n        }\n        return symbol.value;\n    }\n    getRawSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key].value;\n        return symbols;\n    }\n    getSymbolTableAsDict() {\n        const symbols = {};\n        for (let key in this.symbolTable)\n            symbols[key] = this.symbolTable[key];\n        return symbols;\n    }\n    getSymbol(identifier) {\n        let symbol = this.symbolTable[identifier];\n        if (symbol !== undefined && !symbol.isAccessible)\n            return new TypeError(Position.unknown, 'assessable', 'inaccessible', symbol.identifier);\n        if (symbol === undefined && this.parent) {\n            let res = this.parent.getSymbol(identifier);\n            if (res instanceof ESError)\n                return res;\n            if (!res)\n                return new ReferenceError(Position.unknown, identifier);\n            symbol = res;\n        }\n        return symbol;\n    }\n    set(identifier, value, options = {}) {\n        let context = this;\n        if (options.global) {\n            context = this.root;\n        }\n        else {\n            while (!context.hasOwn(identifier) && context.parent !== undefined)\n                context = context.parent;\n            if (!context.hasOwn(identifier))\n                context = this;\n        }\n        return context.setOwn(identifier, value, options);\n    }\n    setOwn(identifier, value, options = {}) {\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        if (options.global && !this.initialisedAsGlobal)\n            options.global = false;\n        if (!options.forceThroughConst) {\n            let symbol = this.symbolTable[identifier];\n            if (symbol === null || symbol === void 0 ? void 0 : symbol.isConstant)\n                return new TypeError(Position.unknown, 'dynamic', 'constant', identifier);\n        }\n        this.symbolTable[identifier] = new ESSymbol(value, identifier, options);\n    }\n    remove(identifier) {\n        delete this.symbolTable[identifier];\n    }\n    clear() {\n        for (let symbol in this.symbolTable) {\n            this.remove(symbol);\n        }\n        this.parent = undefined;\n        this.deleted = true;\n    }\n    get root() {\n        let parent = this;\n        while (parent.parent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    get keys() {\n        return Object.keys(this.symbolTable);\n    }\n    resetAsGlobal() {\n        var _a, _b;\n        if (!this.initialisedAsGlobal)\n            return;\n        const printFunc = this.root.get('print');\n        const inputFunc = this.root.get('input');\n        if (!(printFunc instanceof ESPrimitive) || !(inputFunc instanceof ESPrimitive)) {\n            console.error('Error with print and input functions.');\n            return;\n        }\n        this.symbolTable = {};\n        this.initialisedAsGlobal = false;\n        initialise(this, ((_a = printFunc.valueOf()) === null || _a === void 0 ? void 0 : _a.func) || console.log, ((_b = inputFunc.valueOf()) === null || _b === void 0 ? void 0 : _b.func) || (() => { }));\n    }\n    clone() {\n        const newContext = new Context();\n        newContext.parent = this.parent;\n        newContext.deleted = this.deleted;\n        newContext.initialisedAsGlobal = this.initialisedAsGlobal;\n        newContext.symbolTable = Object.assign(Object.assign({}, newContext.symbolTable), this.symbolTable);\n        return newContext;\n    }\n    deepClone() {\n        var _a;\n        let clone = this.clone();\n        clone.parent = (_a = clone.parent) === null || _a === void 0 ? void 0 : _a.deepClone();\n        return clone;\n    }\n    log() {\n        console.log('---- CONTEXT ----');\n        for (let key in this.symbolTable) {\n            const symbol = this.symbolTable[key];\n            let out = key;\n            if (symbol.isConstant)\n                out += ' (CONST)';\n            if (!symbol.isAccessible)\n                out += ' (INACCESSIBLE)';\n            out += ': ';\n            out += str(this.symbolTable[key].value);\n            console.log(out);\n        }\n        console.log('-----------------');\n    }\n}\nexport function generateESFunctionCallContext(params, self, parent) {\n    const newContext = new Context();\n    newContext.parent = parent;\n    let max = Math.max(params.length, self.arguments_.length);\n    for (let i = 0; i < max; i++) {\n        let value = new ESUndefined();\n        let type = types.any;\n        if (!self.arguments_[i]) {\n            continue;\n        }\n        const arg = self.arguments_[i];\n        if (!(arg.type instanceof ESType)) {\n            return new TypeError(Position.unknown, 'Type', typeof arg.type, arg.type);\n        }\n        if (params[i] instanceof ESPrimitive) {\n            type = params[i].__type__;\n            value = params[i];\n        }\n        const typeIncludes = arg.type.includesType({ context: parent }, type).bool().valueOf();\n        if (!typeIncludes) {\n            return new TypeError(Position.unknown, arg.type.__name__, type.__name__, str(value));\n        }\n        newContext.setOwn(arg.name, value, {\n            forceThroughConst: true\n        });\n    }\n    let setRes = newContext.setOwn('args', new ESArray(params), {\n        forceThroughConst: true\n    });\n    if (setRes instanceof ESError) {\n        return setRes;\n    }\n    return newContext;\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { types } from './primitive';\nimport { ESFunction } from \"./esfunction\";\nimport { wrap } from \"./wrapStrip\";\nexport class ESNumber extends ESPrimitive {\n    constructor(value = 0) {\n        super(value, types.number);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return this;\n                case types.string:\n                    return this.str();\n                case types.array:\n                    return new ESArray(new Array(this.valueOf()));\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(this.valueOf().toString());\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() + n.valueOf());\n        };\n        this.__subtract__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() - n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() * n.valueOf());\n        };\n        this.__divide__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESNumber(this.valueOf() / n.valueOf());\n        };\n        this.__pow__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESNumber(Math.pow(this.valueOf(), n.valueOf()));\n        };\n        this.__mod__ = (props, n) => {\n            if (!(n instanceof ESNumber)) {\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESNumber(this.valueOf() % n.valueOf());\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new ESBoolean(false);\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() > n.valueOf());\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf() < n.valueOf());\n        };\n        this.__bool__ = () => {\n            return new ESBoolean(this.valueOf() > 0);\n        };\n        this.bool = this.__bool__;\n        this.clone = () => new ESNumber(this.valueOf());\n        this.__getProperty__ = ({}, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n    }\n}\n","import { ESError, IndexError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESPrimitive } from './esprimitive';\nimport { str } from '../../util/util';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { types } from './primitive';\nimport { ESFunction } from \"./esfunction\";\nimport { wrap } from \"./wrapStrip\";\nexport class ESBoolean extends ESPrimitive {\n    constructor(val = false) {\n        super(Boolean(val), types.bool);\n        this.__getProperty__ = (props, key) => {\n            if (this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            return new IndexError(Position.unknown, key.valueOf(), this);\n        };\n        this.cast = (props, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.valueOf() ? 1 : 0);\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESBoolean)) {\n                return new TypeError(Position.unknown, 'Boolean', n.typeName().valueOf(), n.valueOf());\n            }\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__bool__ = () => this;\n        this.__and__ = (props, n) => new ESBoolean(this.valueOf() && n.bool().valueOf());\n        this.__or__ = (props, n) => {\n            return new ESBoolean(this.valueOf() || n.bool().valueOf());\n        };\n        this.str = () => new ESString(this.valueOf() ? 'true' : 'false');\n        this.clone = () => new ESBoolean(this.valueOf());\n        this.bool = () => this;\n        this.info = {\n            name: str(val),\n            description: `Boolean global constant which evaluates to ${str(val)}, the opposite of ${str(!val)}`,\n            file: 'built-in',\n            isBuiltIn: true,\n            helpLink: 'https://en.wikipedia.org/wiki/Boolean_expression'\n        };\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESString } from './esstring';\nimport { ESPrimitive } from './esprimitive';\nimport { ESUndefined } from './esundefined';\nimport { types } from './primitive';\nimport { wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESArray extends ESPrimitive {\n    constructor(values = []) {\n        super(values, types.array);\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    return new ESNumber(this.len);\n                case types.boolean:\n                    return this.bool();\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast boolean to type '${str(type.typeName())}'`);\n            }\n        };\n        this.str = () => new ESString(str(this.valueOf()));\n        this.__eq__ = ({ context }, n) => {\n            if (!(n instanceof ESArray)) {\n                return new ESBoolean();\n            }\n            if (n.len !== this.len) {\n                return new ESBoolean();\n            }\n            for (let i = 0; i < this.len; i++) {\n                const thisElement = this.valueOf()[i];\n                const nElement = n.valueOf()[i];\n                if (!thisElement) {\n                    if (nElement) {\n                        return new ESBoolean();\n                    }\n                    continue;\n                }\n                if (!thisElement.__eq__) {\n                    return new ESBoolean();\n                }\n                const res = thisElement.__eq__({ context }, nElement);\n                if (res instanceof ESError) {\n                    return res;\n                }\n                if (!res.valueOf()) {\n                    return new ESBoolean();\n                }\n            }\n            return new ESBoolean(true);\n        };\n        this.__add__ = ({ context }, n) => {\n            if (!(n instanceof ESArray)) {\n                return new TypeError(Position.unknown, 'array', n.typeName().valueOf(), n);\n            }\n            return new ESArray([...this.valueOf(), ...n.valueOf()]);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESUndefined();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return this.valueOf()[idx];\n            }\n            return new ESUndefined();\n        };\n        this.add = (props, val, idx = new ESNumber(this.len - 1)) => {\n            if (!(val instanceof ESPrimitive))\n                throw 'adding non-primitive to array: ' + str(val);\n            this.len++;\n            this.__value__.splice(idx.valueOf(), 0, val);\n            return new ESNumber(this.len);\n        };\n        this.contains = (props, val) => {\n            for (let element of this.__value__) {\n                if (val.__eq__(props, element)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        this.clone = () => {\n            const newArr = [];\n            for (let element of this.valueOf()) {\n                newArr.push(element);\n            }\n            return new ESArray(newArr);\n        };\n        this.len = values.length;\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESNumber)) {\n            return;\n        }\n        if (!(value instanceof ESPrimitive)) {\n            value = wrap(value);\n        }\n        let idx = key.valueOf();\n        while (idx < 0) {\n            idx = this.valueOf().length + idx;\n        }\n        this.__value__[idx] = value;\n    }\n}\n","import { ESError, TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { str } from '../../util/util';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESNumber } from './esnumber';\nimport { ESPrimitive } from './esprimitive';\nimport { types } from './primitive';\nimport { wrap } from './wrapStrip';\nimport { ESFunction } from \"./esfunction\";\nexport class ESString extends ESPrimitive {\n    constructor(value = '') {\n        super(value, types.string);\n        this.str = () => this;\n        this.cast = ({}, type) => {\n            switch (type) {\n                case types.number:\n                    const num = parseFloat(this.valueOf());\n                    if (isNaN(num))\n                        return new ESError(Position.unknown, 'TypeError', `This string is not a valid number`);\n                    return new ESNumber(num);\n                case types.string:\n                    return this;\n                case types.array:\n                    return new ESArray(this.valueOf().split('').map(s => new ESString(s)));\n                default:\n                    return new ESError(Position.unknown, 'TypeError', `Cannot cast to type '${str(type.typeName())}'`);\n            }\n        };\n        this.__add__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.unknown, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESString(this.valueOf() + n.valueOf());\n        };\n        this.__multiply__ = (props, n) => {\n            if (!(n instanceof ESNumber))\n                return new TypeError(Position.unknown, 'Number', n.typeName().valueOf(), n.valueOf());\n            return new ESString(this.valueOf().repeat(n.valueOf()));\n        };\n        this.__eq__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new ESBoolean(false);\n            return new ESBoolean(this.valueOf() === n.valueOf());\n        };\n        this.__gt__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.unknown, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf().length > n.valueOf().length);\n        };\n        this.__lt__ = (props, n) => {\n            if (!(n instanceof ESString))\n                return new TypeError(Position.unknown, 'String', n.typeName().valueOf(), n.valueOf());\n            return new ESBoolean(this.valueOf().length < n.valueOf().length);\n        };\n        this.__bool__ = () => new ESBoolean(this.valueOf().length > 0);\n        this.bool = this.__bool__;\n        this.len = () => {\n            return new ESNumber(this.valueOf().length);\n        };\n        this.clone = () => new ESString(this.valueOf());\n        this.__getProperty__ = (props, key) => {\n            if (key instanceof ESString && this.self.hasOwnProperty(str(key))) {\n                const val = this.self[str(key)];\n                if (typeof val === 'function') {\n                    return new ESFunction(val);\n                }\n                return wrap(val);\n            }\n            if (!(key instanceof ESNumber)) {\n                return new ESString();\n            }\n            let idx = key.valueOf();\n            while (idx < 0) {\n                idx = this.valueOf().length + idx;\n            }\n            if (idx < this.valueOf().length) {\n                return new ESString(this.valueOf()[idx]);\n            }\n            return new ESString();\n        };\n    }\n    __setProperty__(props, key, value) {\n        if (!(key instanceof ESNumber))\n            return;\n        if (!(value instanceof ESString))\n            value = new ESString(str(value));\n        let idx = key.valueOf();\n        while (idx < 0)\n            idx = this.valueOf().length + idx;\n        const strToInsert = value.str().valueOf();\n        let firstPart = this.__value__.substr(0, idx);\n        let lastPart = this.__value__.substr(idx + strToInsert.length);\n        this.__value__ = firstPart + strToInsert + lastPart;\n    }\n}\n","import { ESString } from './primitives/esstring';\nexport class ESSymbol {\n    constructor(value, identifier, options = {}) {\n        var _a, _b;\n        this.clone = () => {\n            return new ESSymbol(this.value.clone(), this.identifier, {\n                isConstant: this.isConstant,\n                isAccessible: this.isAccessible\n            });\n        };\n        this.str = () => new ESString(`<Symbol: ${this.identifier}>`);\n        this.value = value;\n        this.identifier = identifier;\n        this.isConstant = (_a = options.isConstant) !== null && _a !== void 0 ? _a : false;\n        this.isAccessible = (_b = options.isAccessible) !== null && _b !== void 0 ? _b : true;\n    }\n}\n","import { ESError } from '../../errors';\nimport { ESSymbol } from '../symbol';\nimport { ESArray } from './esarray';\nimport { ESBoolean } from './esboolean';\nimport { ESErrorPrimitive } from './eserrorprimitive';\nimport { ESFunction } from './esfunction';\nimport { ESNumber } from './esnumber';\nimport { ESObject } from './esobject';\nimport { ESPrimitive } from './esprimitive';\nimport { ESString } from './esstring';\nimport { ESType } from './estype';\nimport { ESUndefined } from './esundefined';\nimport { ESJSBinding } from \"./esjsbinding\";\nexport function wrap(thing, functionsTakeProps = false) {\n    if (thing instanceof ESPrimitive) {\n        return thing;\n    }\n    else if (thing === undefined || thing === null) {\n        return new ESUndefined();\n    }\n    else if (thing instanceof ESError) {\n        return new ESErrorPrimitive(thing);\n    }\n    else if (thing instanceof ESSymbol) {\n        return thing.value;\n    }\n    else if (typeof thing === 'number') {\n        return new ESNumber(thing);\n    }\n    else if (typeof thing === 'string') {\n        return new ESString(thing);\n    }\n    else if (typeof thing === 'boolean') {\n        return new ESBoolean(thing);\n    }\n    else if (typeof thing === 'bigint') {\n        return new ESNumber(Number(thing));\n    }\n    else if (typeof thing === 'symbol') {\n        return new ESString(String(thing));\n    }\n    return new ESJSBinding(thing, undefined, functionsTakeProps);\n}\nexport function strip(thing, props) {\n    if (thing == undefined) {\n        return undefined;\n    }\n    else if (!(thing instanceof ESPrimitive)) {\n        return thing;\n    }\n    else if (thing instanceof ESArray) {\n        return thing.valueOf().map(m => strip(m, props), props);\n    }\n    else if (thing instanceof ESObject) {\n        let val = {};\n        for (let key in thing.valueOf()) {\n            val[key] = strip(thing.valueOf()[key], props);\n        }\n        return val;\n    }\n    else if (thing instanceof ESUndefined) {\n        return undefined;\n    }\n    else if (thing instanceof ESFunction) {\n        return (...args) => {\n            const res = thing.__call__(props, ...args.map(a => wrap(a)));\n            if (res instanceof ESError) {\n                return res;\n            }\n            return strip(res, props);\n        };\n    }\n    else if (thing instanceof ESType) {\n        return thing;\n    }\n    return thing.valueOf();\n}\n","import { IS_NODE_INSTANCE } from \"../constants\";\nconst codes = {\n    red: 31,\n    yellow: 33,\n    green: 32,\n    cyan: 36,\n    blue: 34,\n    grey: 2\n};\nconst c = {};\nfor (let code of Object.keys(codes)) {\n    c[code] = (s) => {\n        s || (s = '');\n        if (IS_NODE_INSTANCE) {\n            return `\\x1b[${codes[code]}m` + s + '\\x1b[0m';\n        }\n        return `<span style=\"color: ${code}\">${s}</span>`;\n    };\n}\nexport default c;\n","import { ESError, TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nimport { wrap } from '../runtime/primitives/wrapStrip';\nimport { ESArray, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESUndefined } from '../runtime/primitiveTypes';\nimport { indent, sleep, str } from '../util/util';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport chalk from \"../util/colours\";\nexport const builtInFunctions = {\n    'range': [({ context }, minP, maxP, stepP) => {\n            if (!(minP instanceof ESNumber)) {\n                return new ESArray();\n            }\n            const min = minP.valueOf();\n            if (maxP instanceof ESUndefined) {\n                try {\n                    return new ESArray([...Array(min).keys()].map(n => new ESNumber(n)));\n                }\n                catch (e) {\n                    return new ESError(Position.unknown, 'RangeError', `Cannot make range of length '${str(min)}'`);\n                }\n            }\n            let step = 1;\n            if (!(maxP instanceof ESNumber)) {\n                return new TypeError(Position.unknown, 'number', maxP.typeName(), str(maxP));\n            }\n            let max = maxP.valueOf();\n            if (!(stepP instanceof ESUndefined)) {\n                if (!(stepP instanceof ESNumber)) {\n                    return new TypeError(Position.unknown, 'number', stepP.typeName(), str(stepP));\n                }\n                step = stepP.valueOf();\n            }\n            let arr = [];\n            let i = min;\n            while (i < max) {\n                arr.push(new ESNumber(i));\n                i += step;\n            }\n            return new ESArray(arr);\n        }, {\n            args: [{\n                    name: 'N',\n                    type: 'Number',\n                }],\n            description: 'Generates an array of integers given N. Starts at 0 and goes to N-1. Can be used like for i in range(10) ..., similarly to python.',\n            returns: 'array of numbers from 0 to N-1',\n            returnType: 'number[] | RangeError'\n        }],\n    'log': [({ context }, ...msgs) => {\n            console.log(...msgs.map(m => str(m)));\n        }, {\n            args: [{\n                    name: '...values',\n                    type: 'any[]'\n                }],\n            description: 'Uses console.log to log all values',\n            returnType: 'void'\n        }],\n    'parseNum': [({ context }, num) => {\n            try {\n                const val = parseFloat(str(num));\n                if (isNaN(val)) {\n                    return new ESError(Position.unknown, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n                }\n                return new ESNumber(val);\n            }\n            catch (e) {\n                return new ESError(Position.unknown, 'TypeError', `Cannot convert '${str(num)}' to a number.`);\n            }\n        }, {\n            args: [{\n                    name: 'num',\n                    type: 'any'\n                }],\n            description: `Converts a string of digits into a number. Works with decimals and integers. Calls .str() on value before using native JS 'parseFloat' function. Returns TypeError if the string can't be converted into a number.`,\n            returnType: 'number | TypeError'\n        }],\n    'help': [({ context }, ...things) => {\n            if (!things.length) {\n                return new ESString('Visit https://entropygames.io/entropy-script for help with Entropy Script!\\n' +\n                    'Try \\'help(<anything>)\\' for help about a particular object.');\n            }\n            let out = '';\n            for (const thing of things) {\n                if (!(thing instanceof ESPrimitive)) {\n                    console.log('Invalid arg not primitive: ' + str(thing));\n                    return;\n                }\n                const info = thing.info;\n                out += `${chalk.yellow(`Help on '${info.name || '(anonymous)'}'`)}:\n    \n    ${chalk.yellow('Value')}: ${indent(indent(str(thing)))}\n    ${chalk.yellow('Type')}: '${str(thing.typeName())}'\n    ${chalk.yellow('Location')}: ${info.file || chalk.yellow('(unknown)')}\n    \n        ${chalk.green(info.description) || `No description.`}\n        \n    ${info.helpLink ? chalk.cyan(info.helpLink + '\\n\\n') : ''}\n`;\n                if (info.args && thing instanceof ESFunction) {\n                    const total = info.args.length;\n                    const required = info.args.filter(a => a.required).length;\n                    if (total == required)\n                        out += chalk.yellow(`    Arguments (${total}): \\n`);\n                    else\n                        out += chalk.yellow(`    Arguments (${required}-${total}): \\n`);\n                    for (const [idx, arg] of info.args.entries()) {\n                        if (typeof arg !== 'object')\n                            out += `        ${idx + 1}. INVALID ARG INFO`;\n                        else\n                            out += `        ${idx + 1}. ${arg.name}${arg.required === false ? chalk.yellow(' (optional) ') : ' '}{${arg.type}} ${arg.description || ''}\\n`;\n                    }\n                    out += `\\n\\n`;\n                    if (info.returns)\n                        out += `    Returns: ${info.returns}\\n\\n`;\n                    if (info.returnType)\n                        out += `    Return Type: ${info.returnType}\\n\\n`;\n                }\n                if (info.contents && (thing instanceof ESObject || thing instanceof ESNamespace)) {\n                    out += '    Properties: \\n      ';\n                    for (let contents of info.contents)\n                        out += contents.name + '\\n      ';\n                }\n            }\n            console.log(out);\n            if (things.length > 1) {\n                return new ESArray(things);\n            }\n            if (things) {\n                return things[0];\n            }\n        }, {\n            args: [{\n                    name: 'value',\n                    type: 'any'\n                }],\n            description: 'logs info on value',\n            returns: 'value passed in'\n        }],\n    'delete': [({ context }, name) => {\n            const id = str(name);\n            if (!context.has(id)) {\n                return new ESError(Position.unknown, 'DeleteError', `Identifier '${id}' not found in the current context`);\n            }\n            context.set(id, new ESUndefined());\n        }, {\n            name: 'delete',\n            args: [{ name: 'identifier', type: 'string' }],\n            description: 'Deletes a variable from the current context'\n        }],\n    '__path': [({ context }) => {\n            return new ESString(context.path);\n        }, {\n            name: '__path',\n            args: [],\n            description: 'Returns the current path'\n        }],\n    '__symbols': [({ context }) => {\n            return wrap(context.keys);\n        }, {\n            name: '__allSymbols',\n            args: [],\n            description: 'Returns an array of the names of all symbols in the current context'\n        }],\n    'using': [({ context }, module, global_) => {\n            if (!(module instanceof ESNamespace) && !(module instanceof ESJSBinding)) {\n                return new TypeError(Position.unknown, 'Namespace', str(module.typeName()));\n            }\n            let global = true;\n            if (global_) {\n                if (!global_.bool().valueOf()) {\n                    global = false;\n                }\n            }\n            const values = module.valueOf();\n            if (global) {\n                context = context.root;\n            }\n            else if (context.parent) {\n                context = context.parent;\n            }\n            for (const key of Object.keys(values)) {\n                context.setOwn(key, values[key].value, {\n                    isConstant: values[key].isConstant,\n                    isAccessible: values[key].isAccessible,\n                    forceThroughConst: true\n                });\n            }\n        }, {\n            name: 'using',\n            args: [\n                { name: 'module', type: 'namespace' },\n                { name: 'global', type: 'bool' }\n            ],\n            description: 'Adds contents of a namespace to the global context'\n        }],\n    'sleep': [({ context }, time, cb) => {\n            if (!(time instanceof ESNumber)) {\n                return new TypeError(Position.unknown, 'number', str(time.typeName()), str(time));\n            }\n            sleep(time.valueOf())\n                .then(() => {\n                const res = cb.__call__({ context });\n                if (res instanceof ESError) {\n                    console.log(res.str);\n                }\n            });\n        }, {\n            name: 'sleep',\n            args: [{ name: 'n', type: 'number' }, { name: 'callback', type: 'function' }],\n            description: 'Waits n milliseconds and then executes the callback'\n        }],\n    'throw': [({ context }, name, details) => {\n            return new ESError(Position.unknown, str(name), str(details));\n        }, {\n            name: 'throw',\n            args: [{ name: 'name', type: 'string' }, { name: 'details', type: 'string' }]\n        }],\n};\n","import { Position } from '../../position';\nimport { strip } from '../../runtime/primitives/wrapStrip';\nimport { ESObject, ESString } from '../../runtime/primitiveTypes';\nimport { str } from '../../util/util';\nimport { TypeError } from '../../errors';\nconst module = {\n    parse: (props, json) => {\n        return new ESObject(JSON.parse(str(json)));\n    },\n    stringify: (props, json) => {\n        if (!(json instanceof ESObject)) {\n            return new TypeError(Position.unknown, 'object', str(json.typeName()), str(json));\n        }\n        return new ESString(JSON.stringify(strip(json, props)));\n    }\n};\nexport default module;\n","import { IS_NODE_INSTANCE, libs } from '../constants';\nimport { ESError } from '../errors';\nimport { wrap } from '../runtime/primitives/wrapStrip';\nimport { ESSymbol } from '../runtime/symbol';\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nimport ascii from './built-in-modules/ascii';\nimport json from './built-in-modules/json';\nimport dom from './built-in-modules/dom';\nimport Promise from './built-in-modules/promise';\nconst modules = {\n    ascii, json,\n};\nconst processedModules = {};\nexport function initModules() {\n    processedModules['math'] = new ESJSBinding(Math);\n    processedModules['Promise'] = new ESJSBinding(Promise);\n    if (!IS_NODE_INSTANCE) {\n        const domRes = dom(libs);\n        if (!(domRes instanceof ESError)) {\n            modules['dom'] = domRes;\n        }\n        else {\n            return domRes;\n        }\n    }\n}\nexport function processRawModule(module, name) {\n    const moduleDict = {};\n    const moduleRaw = module.valueOf();\n    for (const key of Object.keys(moduleRaw)) {\n        moduleDict[key] = new ESSymbol(moduleRaw[key], key);\n    }\n    return new ESJSBinding(moduleDict, name);\n}\nexport function moduleExist(name) {\n    return name in modules || name in processedModules;\n}\nexport function addModule(name, body) {\n    modules[name] = {};\n    processedModules[name] = body;\n}\nexport function addModuleFromObj(name, raw) {\n    addModule(name, processRawModule(wrap(raw), name));\n}\nexport function getModule(name) {\n    if (name in processedModules) {\n        return processedModules[name];\n    }\n    if (name in modules) {\n        const res = new ESJSBinding(modules[name]);\n        const processed = processRawModule(res, name);\n        processedModules[name] = processed;\n        return processed;\n    }\n}\n","import { TypeError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESNumber, ESString } from '../../runtime/primitiveTypes';\nimport { str } from '../../util/util';\nconst module = {\n    asciiToChar: (props, number) => {\n        if (!(number instanceof ESNumber)) {\n            return new TypeError(Position.unknown, 'number', str(number.typeName()), str(number));\n        }\n        return new ESString(String.fromCharCode(number.valueOf()));\n    },\n    charToAscii: (props, char) => {\n        if (!(char instanceof ESString)) {\n            return new TypeError(Position.unknown, 'string', str(char.typeName()), str(char));\n        }\n        return new ESNumber(str(char).charCodeAt(0));\n    },\n};\nexport default module;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { builtInFunctions } from \"./built-in/builtInFunctions\";\nimport { getModule, initModules, moduleExist } from './built-in/builtInModules';\nimport { Context } from \"./runtime/context\";\nimport { ESError, ImportError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { run } from \"./index\";\nimport { IS_NODE_INSTANCE } from \"./constants\";\nimport { str } from \"./util/util\";\nimport { ESFunction, ESNamespace, ESString } from './runtime/primitiveTypes';\nimport loadGlobalConstants from \"./built-in/globalConstants\";\nexport function initialise(globalContext, printFunc, inputFunc) {\n    builtInFunctions['import'] = [({ context }, rawUrl, callback) => {\n            if (IS_NODE_INSTANCE) {\n                return new ESError(Position.unknown, 'ImportError', 'Is running in node instance but trying to run browser import function');\n            }\n            const url = rawUrl.str();\n            if (moduleExist(str(url))) {\n                return getModule(str(url));\n            }\n            try {\n                fetch(str(url))\n                    .then(c => c.text())\n                    .then((code) => __awaiter(this, void 0, void 0, function* () {\n                    const env = new Context();\n                    env.parent = globalContext;\n                    const res = yield run(code);\n                    if (res.error) {\n                        printFunc(new ImportError(Position.unknown, str(url), res.error.str).str);\n                        return;\n                    }\n                    if (!(callback instanceof ESFunction))\n                        return;\n                    callback.__call__({ context }, new ESNamespace(url, env.getSymbolTableAsDict()));\n                }));\n            }\n            catch (E) {\n                return new ESError(Position.unknown, 'ImportError', E.toString());\n            }\n        }, {}];\n    builtInFunctions['print'] = [({ context }, ...args) => {\n            let out = ``;\n            for (let arg of args)\n                out += str(arg);\n            printFunc(out);\n        }, {}];\n    builtInFunctions['input'] = [({ context }, msg, cbRaw) => {\n            inputFunc(msg.valueOf(), (msg) => {\n                let cb = cbRaw === null || cbRaw === void 0 ? void 0 : cbRaw.valueOf();\n                if (cb instanceof ESFunction) {\n                    let res = cb.__call__({ context }, new ESString(msg));\n                    if (res instanceof ESError) {\n                        console.log(res.str);\n                    }\n                }\n                else if (typeof cb === 'function')\n                    cb(msg);\n                return new ESString('\\'input()\\' does not return anything. Pass in a function as the second argument, which will take the user input as an argument.');\n            });\n        }, {}];\n    for (let builtIn in builtInFunctions) {\n        const fn = new ESFunction(builtInFunctions[builtIn][0], [], builtIn, undefined, undefined, globalContext);\n        fn.info = builtInFunctions[builtIn][1];\n        fn.info.name = builtIn;\n        fn.info.isBuiltIn = true;\n        fn.info.file = 'built-in';\n        globalContext.set(builtIn, fn, {\n            global: true,\n            isConstant: true\n        });\n    }\n    loadGlobalConstants(globalContext);\n    const initModRes = initModules();\n    if (initModRes) {\n        return initModRes;\n    }\n    globalContext.initialisedAsGlobal = true;\n}\n","import { ESBoolean, ESUndefined, types } from '../runtime/primitiveTypes';\nexport default function load(context) {\n    const globalConstants = {\n        'false': new ESBoolean(false),\n        'true': new ESBoolean(true),\n        'nil': new ESUndefined(),\n        'any': types.any,\n        'number': types.number,\n        'string': types.string,\n        'bool': types.bool,\n        'function': types.function,\n        'array': types.array,\n        'object': types.object,\n        'type': types.type,\n        'error': types.error,\n        'undefined': types.undefined\n    };\n    for (let constant in globalConstants) {\n        const value = globalConstants[constant];\n        context.set(constant, value, {\n            global: true,\n            isConstant: true\n        });\n    }\n}\n","export default class {\n    constructor(cb) {\n        this.thens = [];\n        this.resolved = false;\n        cb((value) => {\n            if (this.resolved) {\n                return;\n            }\n            this.resolved = true;\n            for (let then of this.thens) {\n                then(value);\n            }\n        }, (error) => {\n            if (this.resolved) {\n                return;\n            }\n            this.resolved = true;\n            if (this.catch_) {\n                this.catch_(error);\n            }\n        });\n    }\n    then(cb) {\n        if (this.resolved) {\n            return;\n        }\n        this.thens.push(cb);\n        return this;\n    }\n    catch(cb) {\n        if (this.resolved) {\n            return;\n        }\n        this.catch_ = cb;\n        return this;\n    }\n}\n;\n","import { IS_NODE_INSTANCE, permissions } from '../../constants';\nimport { ReferenceError, InvalidRuntimeError, PermissionRequiredError } from '../../errors';\nimport { Position } from '../../position';\nimport { ESJSBinding } from \"../../runtime/primitives/esjsbinding\";\nconst module = () => {\n    if (!permissions.accessDOM) {\n        return new PermissionRequiredError('No access to DOM');\n    }\n    if (IS_NODE_INSTANCE) {\n        return new InvalidRuntimeError();\n    }\n    const w = window;\n    if (typeof w === 'undefined' || !('$' in w)) {\n        return new ReferenceError(Position.unknown, '$ must be property of window to use dom library');\n    }\n    const $ = new ESJSBinding(w['$'], 'jquery');\n    return {\n        $,\n        window: new ESJSBinding(w, 'window'),\n        document: new ESJSBinding(w['document'], 'document'),\n    };\n};\nexport default module;\n","import { ESPrimitive, ESType } from \"./primitiveTypes\";\nimport { TypeError } from \"../errors\";\nimport { Position } from \"../position\";\nexport function interpretArgument(arg, context) {\n    var _a;\n    let type;\n    const typeRes = arg.type.interpret(context);\n    if (typeRes.error)\n        return typeRes.error;\n    if (typeRes.val instanceof ESType)\n        type = typeRes.val;\n    else\n        return new TypeError(Position.unknown, 'Type', typeof typeRes.val, typeRes.val, 'Argument can\\'t be undefined');\n    let defaultValue;\n    if (arg.defaultValue) {\n        let defaultValRes = (_a = arg.defaultValue) === null || _a === void 0 ? void 0 : _a.interpret(context);\n        if (defaultValRes.error)\n            return defaultValRes.error;\n        if (defaultValRes.val instanceof ESPrimitive)\n            defaultValue = defaultValRes.val;\n    }\n    return {\n        name: arg.name,\n        type, defaultValue\n    };\n}\n","import { ESError, InvalidSyntaxError, ReferenceError, TypeError } from \"../errors\";\nimport { Context } from './context';\nimport { Position } from \"../position\";\nimport { catchBlockErrorSymbolName, now, tokenTypeString, tt } from \"../constants\";\nimport { interpretArgument } from \"./argument\";\nimport { wrap } from './primitives/wrapStrip';\nimport { ESArray, ESBoolean, ESErrorPrimitive, ESFunction, ESNamespace, ESNumber, ESObject, ESPrimitive, ESString, ESType, ESUndefined, types } from \"./primitiveTypes\";\nimport { str } from '../util/util';\nexport class interpretResult {\n    constructor() {\n        this.val = new ESUndefined();\n        this.shouldBreak = false;\n        this.shouldContinue = false;\n    }\n}\nexport class compileResult {\n    constructor(val) {\n        this.val = '';\n        if (typeof val === 'string') {\n            this.val = val;\n        }\n        else if (val) {\n            this.error = val;\n        }\n    }\n}\nexport class Node {\n    constructor(pos, isTerminal = false) {\n        this.pos = pos;\n        this.isTerminal = isTerminal;\n    }\n    interpret(context) {\n        var _a;\n        const start = now();\n        const res = new interpretResult;\n        const val = this.interpret_(context);\n        if (val instanceof ESError) {\n            res.error = val;\n        }\n        else if (val instanceof interpretResult) {\n            res.val = val.val;\n            res.error = val.error;\n            res.funcReturn = val.funcReturn;\n            res.shouldBreak = val.shouldBreak;\n            res.shouldContinue = val.shouldContinue;\n        }\n        else {\n            res.val = val;\n        }\n        if (res.error && res.error.pos.isUnknown) {\n            res.error.pos = this.pos;\n        }\n        if (!(res.val instanceof ESPrimitive)) {\n            res.error = new TypeError(Position.unknown, 'Primitive', 'Native JS value', str(res.val));\n            res.val = new ESUndefined();\n        }\n        ``;\n        (_a = res.val.info).file || (_a.file = this.pos.file);\n        Node.interprets++;\n        let time = now() - start;\n        Node.totalTime += time;\n        if (time > Node.maxTime)\n            Node.maxTime = time;\n        return res;\n    }\n}\nNode.interprets = 0;\nNode.totalTime = 0;\nNode.maxTime = 0;\nexport class N_binOp extends Node {\n    constructor(pos, left, opTok, right) {\n        super(pos);\n        this.left = left;\n        this.opTok = opTok;\n        this.right = right;\n    }\n    interpret_(context) {\n        const left = this.left.interpret(context);\n        if (left.error)\n            return left.error;\n        const right = this.right.interpret(context);\n        if (right.error)\n            return right.error;\n        const l = left.val;\n        const r = right.val;\n        if (typeof l === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', l, 'N_binOp.interpret_');\n        }\n        if (typeof r === 'undefined') {\n            return new TypeError(this.opTok.pos, '~undefined', 'undefined', r, 'N_binOp.interpret_');\n        }\n        switch (this.opTok.type) {\n            case tt.LTE: {\n                const lt = l.__lt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (lt instanceof ESError)\n                    return lt;\n                if (eq instanceof ESError)\n                    return eq;\n                return lt.__or__({ context }, eq);\n            }\n            case tt.GTE: {\n                const gt = l.__gt__({ context }, r);\n                const eq = l.__eq__({ context }, r);\n                if (gt instanceof ESError)\n                    return gt;\n                if (eq instanceof ESError)\n                    return eq;\n                return gt.__or__({ context }, eq);\n            }\n            case tt.NOTEQUALS: {\n                const res = l.__eq__({ context }, r);\n                if (res instanceof ESError)\n                    return res;\n                return new ESBoolean(!res.bool().valueOf());\n            }\n            case tt.ADD:\n                return l.__add__({ context }, r);\n            case tt.SUB:\n                return l.__subtract__({ context }, r);\n            case tt.MUL:\n                return l.__multiply__({ context }, r);\n            case tt.DIV:\n                return l.__divide__({ context }, r);\n            case tt.POW:\n                return l.__pow__({ context }, r);\n            case tt.MOD:\n                return l.__mod__({ context }, r);\n            case tt.EQUALS:\n                return l.__eq__({ context }, r);\n            case tt.LT:\n                return l.__lt__({ context }, r);\n            case tt.GT:\n                return l.__gt__({ context }, r);\n            case tt.AND:\n                return l.__and__({ context }, r);\n            case tt.OR:\n                return l.__or__({ context }, r);\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid binary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(config) {\n        const left = this.left.compileJS(config);\n        if (left.error)\n            return left;\n        const right = this.right.compileJS(config);\n        if (right.error)\n            return right;\n        if (config.minify) {\n            return new compileResult(`${left.val}${tokenTypeString[this.opTok.type]}${right.val}`);\n        }\n        return new compileResult(`${left.val} ${tokenTypeString[this.opTok.type]} ${right.val}`);\n    }\n}\nexport class N_unaryOp extends Node {\n    constructor(pos, a, opTok) {\n        super(pos);\n        this.a = a;\n        this.opTok = opTok;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const res = this.a.interpret(context);\n        if (res.error)\n            return res.error;\n        switch (this.opTok.type) {\n            case tt.SUB:\n            case tt.ADD:\n                if (!(res.val instanceof ESNumber)) {\n                    return new TypeError(this.pos, 'Number', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().toString()) || 'undefined_', (_b = res.val) === null || _b === void 0 ? void 0 : _b.valueOf());\n                }\n                const numVal = res.val.valueOf();\n                return new ESNumber(this.opTok.type === tt.SUB ? -numVal : Math.abs(numVal));\n            case tt.NOT:\n                return new ESBoolean(!((_c = res === null || res === void 0 ? void 0 : res.val) === null || _c === void 0 ? void 0 : _c.bool().valueOf()));\n            default:\n                return new InvalidSyntaxError(this.opTok.pos, `Invalid unary operator: ${tokenTypeString[this.opTok.type]}`);\n        }\n    }\n    compileJS(config) {\n        const val = this.a.compileJS(config);\n        if (val.error)\n            return val;\n        return new compileResult(`${tokenTypeString[this.opTok.type]}${val.val}`);\n    }\n}\nexport class N_varAssign extends Node {\n    constructor(pos, varNameTok, value, assignType = '=', isGlobal = false, isLocal = false, isConstant = false, isDeclaration = false, type = types.any) {\n        super(pos);\n        this.value = value;\n        this.varNameTok = varNameTok;\n        this.isGlobal = isGlobal;\n        this.assignType = assignType;\n        this.isConstant = isConstant;\n        this.isDeclaration = isDeclaration;\n        this.isLocal = isLocal;\n        if (type instanceof ESType) {\n            this.type = new N_primitiveWrapper(type);\n        }\n        else\n            this.type = type;\n    }\n    interpret_(context) {\n        var _a, _b, _c, _d;\n        if (this.isDeclaration && context.hasOwn(this.varNameTok.value)) {\n            return new InvalidSyntaxError(this.pos, `Symbol '${this.varNameTok.value}' already exists, and cannot be redeclared`);\n        }\n        const res = this.value.interpret(context);\n        const typeRes = this.type.interpret(context);\n        if (res.error)\n            return res.error;\n        if (typeRes.error)\n            return typeRes.error;\n        if (!typeRes.val || !(typeRes.val instanceof ESType)) {\n            return new TypeError(this.varNameTok.pos, 'Type', (_b = (_a = typeRes.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) !== null && _b !== void 0 ? _b : 'undefined', (_c = typeRes.val) === null || _c === void 0 ? void 0 : _c.str(), `@ !typeRes.val || !(typeRes.val instanceof ESType)`);\n        }\n        if (!res.val) {\n            return new TypeError(this.varNameTok.pos, '~undefined', 'undefined', 'N_varAssign.interpret_');\n        }\n        if (!typeRes.val.includesType({ context }, res.val.__type__).bool().valueOf()) {\n            return new TypeError(this.varNameTok.pos, str(typeRes.val), str((_d = res.val) === null || _d === void 0 ? void 0 : _d.typeName()), str(res.val));\n        }\n        if (this.isDeclaration) {\n            if (this.assignType !== '=')\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            context.setOwn(this.varNameTok.value, res.val, {\n                global: false,\n                isConstant: this.isConstant\n            });\n            return res.val;\n        }\n        if (this.assignType === '=') {\n            let value = res.val;\n            if (value === undefined)\n                value = new ESUndefined();\n            const setRes = context.set(this.varNameTok.value, value, {\n                global: this.isGlobal,\n                isConstant: this.isConstant\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n        }\n        else {\n            if (this.isDeclaration)\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            const currentVal = context.get(this.varNameTok.value);\n            if (currentVal instanceof ESError)\n                return currentVal;\n            if (currentVal == undefined)\n                return new InvalidSyntaxError(this.pos, `Cannot declare variable with operator '${this.assignType}'`);\n            let newVal;\n            let assignVal = res.val;\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError) {\n                return newVal;\n            }\n            let setRes = context.set(this.varNameTok.value, newVal, {\n                global: this.isGlobal,\n                isConstant: this.isConstant\n            });\n            if (setRes instanceof ESError)\n                return setRes;\n            res.val = newVal;\n        }\n        if (res.val.info.name === '(anonymous)' || !res.val.info.name) {\n            res.val.info.name = this.varNameTok.value;\n        }\n        return res;\n    }\n    compileJS(config) {\n        const val = this.value.compileJS(config);\n        if (val.error)\n            return val;\n        let declaration = '';\n        if (this.isDeclaration) {\n            if (this.isGlobal) {\n                declaration = 'var';\n            }\n            else if (this.isConstant) {\n                declaration = 'const';\n            }\n            else {\n                declaration = 'let';\n            }\n        }\n        let assign = this.assignType;\n        if (assign !== '=') {\n            assign += '=';\n        }\n        if (config.minify) {\n            return new compileResult(`${declaration} ${this.varNameTok.value}${assign}${val.val}`);\n        }\n        return new compileResult(`${declaration} ${this.varNameTok.value} ${assign} ${val.val}`);\n    }\n}\nexport class N_if extends Node {\n    constructor(pos, comparison, ifTrue, ifFalse) {\n        super(pos);\n        this.comparison = comparison;\n        this.ifFalse = ifFalse;\n        this.ifTrue = ifTrue;\n    }\n    interpret_(context) {\n        var _a;\n        let newContext = new Context();\n        newContext.parent = context;\n        let res = new interpretResult();\n        let compRes = this.comparison.interpret(context);\n        if (compRes.error)\n            return compRes;\n        if ((_a = compRes.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            res = this.ifTrue.interpret(newContext);\n            res.val = new ESUndefined();\n            if (res.error)\n                return res;\n        }\n        else if (this.ifFalse) {\n            res = this.ifFalse.interpret(newContext);\n            res.val = new ESUndefined();\n            if (res.error)\n                return res;\n        }\n        return res;\n    }\n    compileJS(config) {\n        const indent = ' '.repeat((config.indent || 4) - 4);\n        const highIndent = ' '.repeat(config.indent || 0);\n        const statementRes = this.comparison.compileJS(config);\n        if (statementRes.error)\n            return statementRes;\n        const ifTrueRes = this.ifTrue.compileJS(config);\n        if (ifTrueRes.error)\n            return ifTrueRes;\n        if (!this.ifFalse) {\n            return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}`);\n        }\n        const ifFalseRes = this.ifFalse.compileJS(config);\n        if (ifFalseRes.error)\n            return ifFalseRes;\n        if (config.minify) {\n            return new compileResult(`if(${statementRes.val}){${ifTrueRes.val}}else{${ifFalseRes.val}}`);\n        }\n        return new compileResult(`if (${statementRes.val}) {\\n${ifTrueRes.val}\\n${indent}} else {\\n${highIndent}${ifFalseRes.val}\\n${indent}}\\n`);\n    }\n}\nexport class N_while extends Node {\n    constructor(pos, comparison, loop) {\n        super(pos);\n        this.comparison = comparison;\n        this.loop = loop;\n    }\n    interpret_(context) {\n        var _a, _b;\n        let newContext = new Context();\n        newContext.parent = context;\n        while (true) {\n            let shouldLoop = this.comparison.interpret(context);\n            if (shouldLoop.error)\n                return shouldLoop;\n            if (!((_b = (_a = shouldLoop.val) === null || _a === void 0 ? void 0 : _a.bool()) === null || _b === void 0 ? void 0 : _b.valueOf()))\n                break;\n            let potentialError = this.loop.interpret(newContext);\n            if (potentialError.error)\n                return potentialError;\n            if (potentialError.shouldBreak)\n                break;\n        }\n        return new ESUndefined();\n    }\n    compileJS(config) {\n        const comparisonRes = this.comparison.compileJS(config);\n        if (comparisonRes.error)\n            return comparisonRes;\n        const bodyRes = this.loop.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        return new compileResult(`while(${comparisonRes.val}){${bodyRes.val}}`);\n    }\n}\nexport class N_for extends Node {\n    constructor(pos, body, array, identifier, isGlobalIdentifier, isConstIdentifier) {\n        super(pos);\n        this.body = body;\n        this.array = array;\n        this.identifier = identifier;\n        this.isGlobalId = isGlobalIdentifier;\n        this.isConstId = isConstIdentifier;\n    }\n    interpret_(context) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        const array = this.array.interpret(context);\n        if (array.error)\n            return array;\n        if (['Array', 'Number', 'Object', 'String', 'Any'].indexOf(((_a = array.val) === null || _a === void 0 ? void 0 : _a.typeName()) || '') === -1) {\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val + ' | ' + ((_b = array.val) === null || _b === void 0 ? void 0 : _b.typeName()));\n        }\n        function iteration(body, id, element, isGlobal, isConstant) {\n            let newContext = new Context();\n            newContext.parent = context;\n            newContext.set(id, element, {\n                global: isGlobal,\n                isConstant\n            });\n            const res = body.interpret(newContext);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (res.shouldBreak) {\n                res.shouldBreak = false;\n                return 'break';\n            }\n            if (res.shouldContinue)\n                res.shouldContinue = false;\n        }\n        if (array.val instanceof ESNumber || typeof ((_c = array.val) === null || _c === void 0 ? void 0 : _c.valueOf()) == 'number') {\n            for (let i = 0; i < array.val.valueOf(); i++) {\n                const res = iteration(this.body, this.identifier.value, new ESNumber(i), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESObject ||\n            (typeof ((_d = array.val) === null || _d === void 0 ? void 0 : _d.valueOf()) == 'number' && !Array.isArray((_e = array.val) === null || _e === void 0 ? void 0 : _e.valueOf()))) {\n            for (let element in (_f = array.val) === null || _f === void 0 ? void 0 : _f.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, new ESString(element), this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else if (array.val instanceof ESArray || Array.isArray((_g = array.val) === null || _g === void 0 ? void 0 : _g.valueOf())) {\n            for (let element of (_h = array.val) === null || _h === void 0 ? void 0 : _h.valueOf()) {\n                const res = iteration(this.body, this.identifier.value, element, this.isGlobalId, this.isConstId);\n                if (res === 'break')\n                    break;\n                if (res && (res.error || (res.funcReturn !== undefined)))\n                    return res;\n            }\n        }\n        else\n            return new TypeError(this.identifier.pos, 'Array | Number | Object | String', typeof array.val);\n        return new ESUndefined();\n    }\n    compileJS(config) {\n        const iteratorRes = this.array.compileJS(config);\n        if (iteratorRes.error)\n            return iteratorRes;\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        let declaration = 'let';\n        if (this.isGlobalId) {\n            declaration = 'var';\n        }\n        else if (this.isConstId) {\n            declaration = 'const';\n        }\n        if (config.minify) {\n            return new compileResult(`for(${declaration} ${this.identifier.value} of ${iteratorRes.val}){${bodyRes.val}}`);\n        }\n        return new compileResult(`for (${declaration} ${this.identifier.value} of ${iteratorRes.val}) {\\n${bodyRes.val}\\n}\\n`);\n    }\n}\nexport class N_array extends Node {\n    constructor(pos, items, shouldClone = false) {\n        super(pos);\n        this.items = items;\n        this.shouldClone = shouldClone;\n    }\n    interpret_(context) {\n        let result = new interpretResult();\n        let interpreted = [];\n        for (let item of this.items) {\n            const res = item.interpret(context);\n            if (res.error || (res.funcReturn !== undefined))\n                return res;\n            if (!res.val)\n                continue;\n            let val = res.val;\n            if (this.shouldClone) {\n                val = val.clone();\n            }\n            interpreted.push(val);\n        }\n        result.val = new ESArray(interpreted);\n        return result;\n    }\n    compileJS(config) {\n        const res = new compileResult('[');\n        for (let item of this.items) {\n            const itemRes = item.compileJS(config);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ',';\n        }\n        res.val += ']';\n        return res;\n    }\n}\nexport class N_objectLiteral extends Node {\n    constructor(pos, properties) {\n        super(pos);\n        this.properties = properties;\n    }\n    interpret_(context) {\n        let interpreted = {};\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.interpret(context);\n            if (value.error)\n                return value.error;\n            const key = keyNode.interpret(context);\n            if (key.error)\n                return key.error;\n            if (key.val && value.val) {\n                interpreted[key.val.valueOf()] = value.val;\n            }\n        }\n        return new ESObject(interpreted);\n    }\n    compileJS(config) {\n        const res = new compileResult('{');\n        for (const [keyNode, valueNode] of this.properties) {\n            const value = valueNode.compileJS(config);\n            if (value.error)\n                return value;\n            const key = keyNode.compileJS(config);\n            if (key.error)\n                return key;\n            if (key.val && value.val) {\n                res.val += `[${key.val}]: ${value.val},`;\n            }\n        }\n        res.val += '}';\n        return res;\n    }\n}\nexport class N_statements extends Node {\n    constructor(pos, items, topLevel = false) {\n        super(pos);\n        this.items = items;\n        this.topLevel = topLevel;\n    }\n    interpret_(context) {\n        if (!this.topLevel) {\n            let last;\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (typeof res.funcReturn !== 'undefined') || res.shouldBreak || res.shouldContinue)\n                    return res;\n                last = res.val;\n            }\n            if (last)\n                return last;\n            return new ESUndefined();\n        }\n        else {\n            let result = new interpretResult();\n            let interpreted = [];\n            for (let item of this.items) {\n                const res = item.interpret(context);\n                if (res.error || (res.funcReturn !== undefined))\n                    return res;\n                if (!res.val)\n                    continue;\n                let val = res.val.clone();\n                interpreted.push(val);\n            }\n            result.val = new ESArray(interpreted);\n            return result;\n        }\n    }\n    compileJS(config) {\n        const res = new compileResult;\n        config.indent || (config.indent = 0);\n        const indent = config.indent;\n        res.val += ' '.repeat(indent);\n        config.indent += 4;\n        for (let item of this.items) {\n            const itemRes = item.compileJS(config);\n            if (itemRes.error)\n                return itemRes;\n            res.val += itemRes.val + ';';\n            if (!config.minify) {\n                res.val += '\\n' + ' '.repeat(indent);\n            }\n        }\n        return res;\n    }\n}\nexport class N_functionCall extends Node {\n    constructor(pos, to, args) {\n        super(pos);\n        this.arguments = args;\n        this.to = to;\n    }\n    interpret_(context) {\n        let { val, error } = this.to.interpret(context);\n        if (error) {\n            return error;\n        }\n        if (!val) {\n            return new TypeError(this.pos, 'any', 'undefined', undefined, 'On function call');\n        }\n        let params = [];\n        for (let arg of this.arguments) {\n            const res = arg.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (res.val) {\n                params.push(res.val);\n            }\n        }\n        const res = val.__call__({ context }, ...params);\n        if (res instanceof ESError) {\n            res.traceback.push({\n                position: this.pos,\n                line: `${val.info.name || '<AnonFunction>'}(${params.map(str).join(', ')})`\n            });\n        }\n        return res;\n    }\n    compileJS(config) {\n        const res = new compileResult;\n        const funcRes = this.to.compileJS(config);\n        if (funcRes.error)\n            return funcRes;\n        res.val = funcRes.val + '(';\n        for (let arg of this.arguments) {\n            const argRes = arg.compileJS(config);\n            if (argRes.error)\n                return argRes;\n            res.val += argRes.val;\n            if (arg !== this.arguments[this.arguments.length - 1]) {\n                res.val += ',';\n                if (!config.minify) {\n                    res.val += ' ';\n                }\n            }\n        }\n        res.val += ')';\n        return res;\n    }\n}\nexport class N_functionDefinition extends Node {\n    constructor(pos, body, argNames, returnType, name = '(anon)', this_ = new ESObject(), description = '') {\n        super(pos);\n        this.arguments = argNames;\n        this.body = body;\n        this.name = name;\n        this.this_ = this_;\n        this.returnType = returnType;\n        this.description = description;\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        let args = [];\n        for (let arg of this.arguments) {\n            const res = interpretArgument(arg, context);\n            if (res instanceof ESError)\n                return res;\n            args.push(res);\n        }\n        const returnTypeRes = this.returnType.interpret(context);\n        if (returnTypeRes.error)\n            return returnTypeRes.error;\n        if (!(returnTypeRes.val instanceof ESType))\n            return new TypeError(this.returnType.pos, 'Type', (_b = (_a = returnTypeRes.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) !== null && _b !== void 0 ? _b : '<Undefined>', (_c = returnTypeRes.val) === null || _c === void 0 ? void 0 : _c.str().valueOf(), `On func '${this.name}' return type`);\n        return new ESFunction(this.body, args, this.name, this.this_, returnTypeRes.val, context);\n    }\n    compileJS(config) {\n        const res = new compileResult('function(');\n        for (let param of this.arguments) {\n            res.val += param.name + ',';\n        }\n        res.val += '){';\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        res.val += bodyRes.val + '}';\n        return res;\n    }\n}\nexport class N_return extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        res.funcReturn = val.val;\n        return res;\n    }\n    compileJS(config) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(config);\n        if (valRes === null || valRes === void 0 ? void 0 : valRes.error)\n            return valRes;\n        return new compileResult(`return(${valRes === null || valRes === void 0 ? void 0 : valRes.val})`);\n    }\n}\nexport class N_yield extends Node {\n    constructor(pos, value) {\n        super(pos);\n        this.value = value;\n    }\n    interpret_(context) {\n        var _a;\n        const res = new interpretResult();\n        if (this.value === undefined) {\n            res.funcReturn = new ESUndefined();\n            return res;\n        }\n        let val = this.value.interpret(context);\n        if (val.error)\n            return val.error;\n        if ((_a = val.val) === null || _a === void 0 ? void 0 : _a.bool().valueOf()) {\n            res.funcReturn = val.val;\n        }\n        return res;\n    }\n    compileJS(config) {\n        var _a;\n        const valRes = (_a = this.value) === null || _a === void 0 ? void 0 : _a.compileJS(config);\n        if (!valRes || !valRes.val) {\n            return new compileResult('');\n        }\n        return new compileResult(`if(_=${valRes.val}){return(_))`);\n    }\n}\nexport class N_indexed extends Node {\n    constructor(pos, base, index) {\n        super(pos);\n        this.base = base;\n        this.index = index;\n    }\n    interpret_(context) {\n        var _a;\n        let baseRes = this.base.interpret(context);\n        if (baseRes.error)\n            return baseRes;\n        let indexRes = this.index.interpret(context);\n        if (indexRes.error)\n            return indexRes;\n        const index = indexRes.val;\n        const base = baseRes.val;\n        if (!base || !index)\n            return new ESUndefined();\n        if (this.value !== undefined) {\n            let valRes = this.value.interpret(context);\n            if (valRes.error)\n                return valRes;\n            const currentVal = wrap(base.__getProperty__({ context }, index));\n            let newVal;\n            let assignVal = valRes.val;\n            (_a = this.assignType) !== null && _a !== void 0 ? _a : (this.assignType = '=');\n            if (!assignVal) {\n                return new TypeError(this.pos, '~undefined', 'undefined', 'undefined', 'N_indexed.interpret_');\n            }\n            switch (this.assignType[0]) {\n                case '*':\n                    newVal = currentVal.__multiply__({ context }, assignVal);\n                    break;\n                case '/':\n                    newVal = currentVal.__divide__({ context }, assignVal);\n                    break;\n                case '+':\n                    newVal = currentVal.__add__({ context }, assignVal);\n                    break;\n                case '-':\n                    newVal = currentVal.__subtract__({ context }, assignVal);\n                    break;\n                case '=':\n                    newVal = assignVal;\n                    break;\n                default:\n                    return new ESError(this.pos, 'AssignError', `Cannot find assignType of ${this.assignType[0]}`);\n            }\n            if (newVal instanceof ESError)\n                return newVal;\n            if (!base.__setProperty__)\n                return new TypeError(this.pos, 'mutable', 'immutable', base.valueOf());\n            const res = base.__setProperty__({ context }, index, newVal !== null && newVal !== void 0 ? newVal : new ESUndefined());\n            if (res instanceof ESError)\n                return res;\n        }\n        return base.__getProperty__({ context }, index);\n    }\n    compileJS(config) {\n        const objectRes = this.base.compileJS(config);\n        if (objectRes.error)\n            return objectRes;\n        const keyRes = this.index.compileJS(config);\n        if (keyRes.error)\n            return keyRes;\n        if (!this.value) {\n            return new compileResult(`${objectRes.val}[${keyRes.val}]`);\n        }\n        const valRes = this.value.compileJS(config);\n        if (valRes.error)\n            return valRes;\n        return new compileResult(`${objectRes.val}[${keyRes.val}]${this.assignType || '='}${valRes.val}`);\n    }\n}\nexport class N_class extends Node {\n    constructor(pos, methods, extends_, init, name = '<anon class>') {\n        super(pos);\n        this.init = init;\n        this.methods = methods;\n        this.name = name;\n        this.extends_ = extends_;\n        this.instances = [];\n    }\n    interpret_(context) {\n        var _a, _b, _c;\n        const methods = [];\n        for (let method of this.methods) {\n            const res = method.interpret(context);\n            if (res.error) {\n                return res.error;\n            }\n            if (!(res.val instanceof ESFunction))\n                return new TypeError(this.pos, 'Function', ((_a = res.val) === null || _a === void 0 ? void 0 : _a.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            methods.push(res.val);\n        }\n        let extends_;\n        if (this.extends_) {\n            const extendsRes = this.extends_.interpret(context);\n            if (extendsRes.error) {\n                return extendsRes.error;\n            }\n            if (!(extendsRes.val instanceof ESType))\n                return new TypeError(this.pos, 'Function', ((_b = extendsRes.val) === null || _b === void 0 ? void 0 : _b.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            extends_ = extendsRes.val;\n        }\n        let init;\n        if (this.init) {\n            const initRes = this.init.interpret(context);\n            if (initRes.error) {\n                return initRes.error;\n            }\n            if (!(initRes.val instanceof ESFunction)) {\n                return new TypeError(this.pos, 'Function', ((_c = initRes.val) === null || _c === void 0 ? void 0 : _c.typeName().valueOf()) || 'undefined', 'method on ' + this.name);\n            }\n            init = initRes.val;\n        }\n        return new ESType(false, this.name, methods, extends_, init);\n    }\n    compileJS(config) {\n        return new compileResult('function(){return{};}');\n    }\n}\nexport class N_namespace extends Node {\n    constructor(pos, statements, name = '(anon)', mutable = false) {\n        super(pos);\n        this.name = name;\n        this.statements = statements;\n        this.mutable = mutable;\n    }\n    interpret_(context) {\n        const newContext = new Context();\n        newContext.parent = context;\n        const res = this.statements.interpret(newContext);\n        if (res.error)\n            return res;\n        return new ESNamespace(new ESString(this.name), newContext.getSymbolTableAsDict(), this.mutable);\n    }\n    compileJS(config) {\n        const bodyRes = this.statements.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        return new compileResult(`(() => {${bodyRes.val}})()`);\n    }\n}\nexport class N_tryCatch extends Node {\n    constructor(pos, body, catchBlock) {\n        super(pos, true);\n        this.body = body;\n        this.catchBlock = catchBlock;\n    }\n    interpret_(context) {\n        const res = this.body.interpret(context);\n        if (res.error) {\n            const newContext = new Context();\n            newContext.parent = context;\n            newContext.setOwn(catchBlockErrorSymbolName, new ESErrorPrimitive(res.error), {\n                isConstant: true\n            });\n            const catchRes = this.catchBlock.interpret(newContext);\n            if (catchRes.error)\n                return catchRes.error;\n        }\n        return new interpretResult();\n    }\n    compileJS(config) {\n        const bodyRes = this.body.compileJS(config);\n        if (bodyRes.error)\n            return bodyRes;\n        const catchRes = this.catchBlock.compileJS(config);\n        if (catchRes.error)\n            return catchRes;\n        return new compileResult(`try{${bodyRes.val}}catch(${catchBlockErrorSymbolName}){${catchRes.val}}`);\n    }\n}\nexport class N_number extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        if (typeof val !== 'number') {\n            return new TypeError(this.pos, 'number', typeof val);\n        }\n        const res = new interpretResult();\n        res.val = new ESNumber(val);\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult(this.a.value.toString());\n    }\n}\nexport class N_string extends Node {\n    constructor(pos, a) {\n        super(pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        let val = this.a.value;\n        if (typeof val !== 'string')\n            return new TypeError(this.pos, 'string', typeof val);\n        const res = new interpretResult();\n        res.val = new ESString(val);\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult(`'${this.a.value}'`);\n    }\n}\nexport class N_variable extends Node {\n    constructor(a) {\n        super(a.pos, true);\n        this.a = a;\n    }\n    interpret_(context) {\n        if (!context.has(this.a.value))\n            return new ReferenceError(this.a.pos, this.a.value);\n        let res = new interpretResult();\n        let symbol = context.getSymbol(this.a.value);\n        if (!symbol) {\n            return new ESUndefined();\n        }\n        if (symbol instanceof ESError) {\n            return symbol;\n        }\n        res.val = symbol.value;\n        return res;\n    }\n    compileJS(config) {\n        let val = this.a.value.toString();\n        if (val === 'import') {\n            val = 'import_';\n        }\n        return new compileResult(val);\n    }\n}\nexport class N_undefined extends Node {\n    constructor(pos = Position.unknown) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.val = new ESUndefined();\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('undefined');\n    }\n}\nexport class N_break extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldBreak = true;\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('break');\n    }\n}\nexport class N_continue extends Node {\n    constructor(pos) {\n        super(pos, true);\n    }\n    interpret_(context) {\n        const res = new interpretResult();\n        res.shouldContinue = true;\n        return res;\n    }\n    compileJS(config) {\n        return new compileResult('continue');\n    }\n}\nexport class N_primitiveWrapper extends Node {\n    constructor(val, pos = Position.unknown) {\n        super(pos, true);\n        this.value = val;\n    }\n    interpret_(context) {\n        return this.value;\n    }\n    compileJS(config) {\n        return new compileResult(JSON.stringify(this.value.valueOf()));\n    }\n}\n","import { Node } from \"../runtime/nodes\";\nimport { ESPrimitive } from '../runtime/primitiveTypes';\nexport function deepClone(obj, hash = new WeakMap()) {\n    let result;\n    if (Object(obj) !== obj || obj instanceof Function) {\n        return obj;\n    }\n    if (hash.has(obj)) {\n        return hash.get(obj);\n    }\n    try {\n        result = new obj.constructor();\n    }\n    catch (e) {\n        result = Object.create(Object.getPrototypeOf(obj));\n    }\n    if (obj instanceof Map) {\n        Array.from(obj, ([key, val]) => result.set(deepClone(key, hash), deepClone(val, hash)));\n    }\n    else if (obj instanceof Set) {\n        Array.from(obj, (key) => result.add(deepClone(key, hash)));\n    }\n    hash.set(obj, result);\n    return Object.assign(result, ...Object.keys(obj).map(key => ({ [key]: deepClone(obj[key], hash) })));\n}\nexport function str(val, depth = 0) {\n    if (typeof val === 'string') {\n        if (depth > 0) {\n            return `'${val}'`;\n        }\n        return val;\n    }\n    if (depth > 20) {\n        return '...';\n    }\n    let result = '';\n    if (typeof val === 'undefined') {\n        return 'undefined';\n    }\n    if (val instanceof ESPrimitive) {\n        return val.str().valueOf();\n    }\n    if (val instanceof Node) {\n        return `<RunTimeNode: ${val.constructor.name}>`;\n    }\n    switch (typeof val) {\n        case 'object':\n            if (Array.isArray(val)) {\n                result += '[';\n                for (let item of val) {\n                    try {\n                        result += str(item, depth + 1) + `, `;\n                    }\n                    catch (e) {\n                        result += '<large property>, ';\n                    }\n                }\n                if (val.length) {\n                    result = result.substring(0, result.length - 2);\n                }\n                result += ']';\n            }\n            else {\n                try {\n                    result += val.constructor.name;\n                }\n                catch (e) {\n                    result += 'UNKNOWN_CONSTRUCTOR';\n                }\n                result += ': {\\n';\n                let i = 0;\n                for (let item in val) {\n                    i++;\n                    if (!val.hasOwnProperty || !val.hasOwnProperty(item)) {\n                        continue;\n                    }\n                    result += `  ${item}: ${str(val[item], depth + 1) || ''}, \\n`;\n                }\n                if (i > 0) {\n                    result = result.substring(0, result.length - 3);\n                }\n                result += '\\n}\\n';\n            }\n            break;\n        case 'string':\n            result = `'${val}'`;\n            break;\n        case \"bigint\":\n        case \"number\":\n        case \"boolean\":\n            result = `${val}`;\n            break;\n        case \"undefined\":\n            result = '<NativeUndefined>';\n            break;\n        case \"function\":\n            result = `<NativeFunction ${val.name}>`;\n            break;\n    }\n    for (let i = 0; i < depth; i++)\n        result = indent(result);\n    return result;\n}\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms));\nexport function indent(str) {\n    return str.replace(/\\n/g, '\\n    ');\n}\nexport const validURI = (value) => /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(value);\n","import { IS_NODE_INSTANCE } from './constants';\nimport { Position } from \"./position\";\nimport { str } from \"./util/util\";\nimport chalk from \"./util/colours\";\nexport class ESError {\n    constructor(pos, name, details) {\n        this.traceback = [];\n        this.pos = pos;\n        this.name = name;\n        this.details = details;\n    }\n    get colouredStr() {\n        let out = '';\n        if (this.traceback.length) {\n            out = chalk.yellow('Error Traceback (most recent call last):\\n');\n            for (let pos of [...this.traceback].reverse())\n                out += `    ${chalk.cyan(pos.position.str)}:\\n        ${pos.line}\\n`;\n        }\n        out += `${chalk.red(this.name)}: ${this.details} \\n at ${chalk.cyan(this.pos.str)}`;\n        return out;\n    }\n    get str() {\n        return `${this.name}: ${this.details} \\n at ${this.pos.str}`;\n    }\n}\nexport class IllegalCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'IllegalCharError', `'${char}'`);\n    }\n}\nexport class InvalidSyntaxError extends ESError {\n    constructor(pos, details) {\n        super(pos, 'InvalidSyntaxError', details);\n    }\n}\nexport class ExpectedCharError extends ESError {\n    constructor(pos, char) {\n        super(pos, 'ExpectedCharError', `'${char}'`);\n    }\n}\nexport class TypeError extends ESError {\n    constructor(pos, expectedType, actualType, value = '', detail = '') {\n        super(pos, 'TypeError', `Expected type '${expectedType}', got type '${actualType}' ${typeof value === 'undefined' ? '' : ` on value '${str(value)}'`} ${!detail ? '' : detail}`);\n    }\n}\nexport class ImportError extends ESError {\n    constructor(pos, url, detail = '') {\n        super(pos, 'ImportError', `Could not import ${url}: ${detail}`);\n    }\n}\nexport class ReferenceError extends ESError {\n    constructor(pos, ref) {\n        super(pos, 'ReferenceError', `${ref} is not defined`);\n    }\n}\nexport class IndexError extends ESError {\n    constructor(pos, ref, object) {\n        var _a;\n        super(pos, 'IndexError', `'${ref}' is not a property of '${((_a = object === null || object === void 0 ? void 0 : object.info) === null || _a === void 0 ? void 0 : _a.name) || str(object)}'`);\n    }\n}\nexport class InvalidOperationError extends ESError {\n    constructor(op, value, detail = '', pos = Position.unknown) {\n        var _a;\n        super(pos, 'TypeError', `Cannot perform '${op}' on value ${((_a = value === null || value === void 0 ? void 0 : value.info) === null || _a === void 0 ? void 0 : _a.name) || str(value)}: ${detail}`);\n    }\n}\nexport class InvalidRuntimeError extends ESError {\n    constructor() {\n        super(Position.unknown, 'InvalidRuntimeError', `Required runtime of ${IS_NODE_INSTANCE ? 'browser' : 'node'}`);\n    }\n}\nexport class TestFailed extends ESError {\n    constructor(detail) {\n        super(Position.unknown, 'TestFailed', detail);\n    }\n}\nexport class PermissionRequiredError extends ESError {\n    constructor(detail) {\n        super(Position.unknown, 'PermissionRequiredError', detail);\n    }\n}\n","export class Token {\n    constructor(pos, type, value = undefined) {\n        this.type = type;\n        this.value = value;\n        this.pos = pos;\n    }\n    matches(type, val) {\n        return this.type === type && this.value === val;\n    }\n}\n","import { Position } from \"../position\";\nimport { digits, doubleCharTokens, identifierChars, KEYWORDS, multiLineCommentEnd, multiLineCommentStart, singleCharTokens, singleLineComment, stringSurrounds, tripleCharTokens, tt, } from '../constants';\nimport { IllegalCharError } from \"../errors\";\nimport { Token } from \"./tokens\";\nexport class Lexer {\n    constructor(program, fileName) {\n        this.text = program;\n        this.position = new Position(-1, 0, -1, fileName);\n        this.advance();\n    }\n    advance() {\n        this.position.advance(this.currentChar);\n        this.currentChar = this.text[this.position.idx];\n    }\n    generate() {\n        if (!this.text) {\n            return [new Token(this.position, tt.EOF)];\n        }\n        const tokens = [];\n        while (this.currentChar !== undefined) {\n            if (' \\t\\n'.includes(this.currentChar)) {\n                this.advance();\n            }\n            else if (digits.includes(this.currentChar)) {\n                tokens.push(this.makeNumber());\n            }\n            else if (this.currentChar === singleLineComment[0] &&\n                this.text[this.position.idx + 1] === singleLineComment[1]) {\n                this.singleLineComment();\n            }\n            else if (this.currentChar === multiLineCommentStart[0] &&\n                this.text[this.position.idx + 1] === multiLineCommentStart[1]) {\n                this.multiLineComment();\n            }\n            else if (identifierChars.includes(this.currentChar)) {\n                tokens.push(this.makeIdentifier());\n            }\n            else if (stringSurrounds.indexOf(this.currentChar) !== -1) {\n                tokens.push(this.makeString());\n            }\n            else {\n                const possibleAssignFirstChar = this.currentChar;\n                let token = this.unknownChar();\n                if (token) {\n                    if (token.type === tt.ASSIGN) {\n                        token.value = possibleAssignFirstChar;\n                    }\n                    tokens.push(token);\n                }\n                else {\n                    let pos = this.position.clone;\n                    let char = this.currentChar;\n                    this.advance();\n                    return new IllegalCharError(pos, char);\n                }\n            }\n        }\n        tokens.push(new Token(this.position, tt.EOF));\n        return tokens;\n    }\n    makeNumber() {\n        const pos = this.position.clone;\n        let numStr = '';\n        let dotCount = 0;\n        while (this.currentChar !== undefined && (digits + '._').includes(this.currentChar)) {\n            if (this.currentChar === '.') {\n                if (dotCount === 1) {\n                    break;\n                }\n                dotCount++;\n                numStr += '.';\n            }\n            else if (this.currentChar !== '_') {\n                numStr += this.currentChar;\n            }\n            this.advance();\n        }\n        return new Token(pos, tt.NUMBER, parseFloat(numStr));\n    }\n    makeString() {\n        const pos = this.position.clone;\n        let str = '';\n        let strClose = this.currentChar;\n        this.advance();\n        while (this.currentChar !== strClose && this.currentChar !== undefined) {\n            if (this.currentChar === '\\\\') {\n                this.advance();\n                if (this.currentChar === 'n') {\n                    str += '\\n';\n                    this.advance();\n                    continue;\n                }\n            }\n            str += this.currentChar;\n            this.advance();\n        }\n        this.advance();\n        return new Token(pos, tt.STRING, str);\n    }\n    makeIdentifier() {\n        let idStr = '';\n        const posStart = this.position.clone;\n        while (this.currentChar !== undefined && (identifierChars + digits).includes(this.currentChar)) {\n            idStr += this.currentChar;\n            this.advance();\n        }\n        let tokType = tt.IDENTIFIER;\n        if (KEYWORDS.indexOf(idStr) !== -1) {\n            tokType = tt.KEYWORD;\n        }\n        return new Token(posStart, tokType, idStr);\n    }\n    unknownChar() {\n        if (this.currentChar === undefined) {\n            return undefined;\n        }\n        for (let triple in tripleCharTokens) {\n            if (triple[0] === this.currentChar)\n                if (triple[1] === this.text[this.position.idx + 1])\n                    if (triple[2] === this.text[this.position.idx + 2]) {\n                        const pos = this.position.clone;\n                        this.advance();\n                        this.advance();\n                        this.advance();\n                        return new Token(pos, tripleCharTokens[triple]);\n                    }\n        }\n        for (let double in doubleCharTokens) {\n            if (double[0] === this.currentChar)\n                if (double[1] === this.text[this.position.idx + 1]) {\n                    const pos = this.position.clone;\n                    this.advance();\n                    this.advance();\n                    return new Token(pos, doubleCharTokens[double]);\n                }\n        }\n        if (singleCharTokens.hasOwnProperty(this.currentChar)) {\n            let pos = this.position.clone;\n            let val = singleCharTokens[this.currentChar];\n            this.advance();\n            return new Token(pos, val);\n        }\n        return undefined;\n    }\n    singleLineComment() {\n        this.advance();\n        while (this.currentChar !== '\\n' && this.currentChar !== undefined) {\n            this.advance();\n        }\n        this.advance();\n    }\n    multiLineComment() {\n        this.advance();\n        while (!(this.currentChar === multiLineCommentEnd[0] &&\n            this.text[this.position.idx + 1] === multiLineCommentEnd[1])) {\n            this.advance();\n        }\n        this.advance();\n        this.advance();\n    }\n}\n","import { tokenType, tokenTypeString, tt, VAR_DECLARE_KEYWORDS } from '../constants';\nimport { Token } from \"./tokens\";\nimport * as n from '../runtime/nodes';\nimport { N_functionDefinition, N_namespace, N_tryCatch, N_undefined, N_variable } from '../runtime/nodes';\nimport { ESError, InvalidSyntaxError } from \"../errors\";\nimport { types } from \"../runtime/primitiveTypes\";\nexport class ParseResults {\n    constructor() {\n        this.advanceCount = 0;\n        this.lastRegisteredAdvanceCount = 0;\n        this.reverseCount = 0;\n    }\n    registerAdvance() {\n        this.advanceCount = 1;\n        this.lastRegisteredAdvanceCount++;\n    }\n    register(res) {\n        this.lastRegisteredAdvanceCount = res.advanceCount;\n        this.advanceCount += res.advanceCount;\n        if (res.error) {\n            this.error = res.error;\n        }\n        if (!res.node) {\n            return new N_undefined();\n        }\n        return res.node;\n    }\n    tryRegister(res) {\n        if (res.error) {\n            this.reverseCount += res.advanceCount;\n            return;\n        }\n        return this.register(res);\n    }\n    success(node) {\n        this.node = node;\n        return this;\n    }\n    failure(error) {\n        this.error = error;\n        return this;\n    }\n}\nexport class Parser {\n    constructor(tokens) {\n        this.tokens = tokens;\n        this.tokenIdx = -1;\n        this.currentToken = tokens[0];\n        this.advance();\n    }\n    parse() {\n        var _a;\n        if (!this.currentToken || !this.tokens || (this.tokens.length === 1 && this.tokens[0].type === tt.EOF))\n            return new ParseResults();\n        const res = this.statements(true);\n        if (!res.error && this.currentToken.type !== tokenType.EOF) {\n            return res.failure(new InvalidSyntaxError((_a = this.currentToken) === null || _a === void 0 ? void 0 : _a.pos, `Expected 'End of File', got token of type'${tokenTypeString[this.currentToken.type]}' of value ${this.currentToken.value}`));\n        }\n        return res;\n    }\n    advance(res) {\n        if (res)\n            res.registerAdvance();\n        this.tokenIdx++;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    reverse(amount = 1) {\n        this.tokenIdx -= amount;\n        this.currentToken = this.tokens[this.tokenIdx];\n        return this.currentToken;\n    }\n    consume(res, type, errorMsg) {\n        if (this.currentToken.type !== type)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, errorMsg !== null && errorMsg !== void 0 ? errorMsg : `Expected '${tokenTypeString[type]}' but got '${tokenTypeString[this.currentToken.type]}'`));\n        this.advance(res);\n    }\n    clearEndStatements(res) {\n        while (this.currentToken.type === tt.ENDSTATEMENT) {\n            this.advance(res);\n        }\n    }\n    statements(topLevel = false) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let statements = [];\n        this.clearEndStatements(res);\n        const firstStatement = res.register(this.statement());\n        if (!firstStatement) {\n            return res;\n        }\n        statements.push(firstStatement);\n        if (res.error) {\n            return res;\n        }\n        let moreStatements = true;\n        while (true) {\n            let newLineCount = 0;\n            while (this.currentToken.type === tt.ENDSTATEMENT) {\n                this.advance(res);\n                newLineCount++;\n            }\n            if (newLineCount === 0) {\n                moreStatements = false;\n            }\n            if (!moreStatements) {\n                break;\n            }\n            const statement = res.tryRegister(this.statement());\n            if (!statement) {\n                this.reverse(res.reverseCount);\n                continue;\n            }\n            statements.push(statement);\n        }\n        this.clearEndStatements(res);\n        let node = new n.N_statements(pos, statements, topLevel);\n        return res.success(node);\n    }\n    statement() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        if (this.currentToken.matches(tt.KEYWORD, 'return')) {\n            this.advance(res);\n            let expr = new N_undefined(this.currentToken.pos);\n            if (this.currentToken.type !== tt.ENDSTATEMENT) {\n                let exprRes = res.register(this.expr());\n                if (!exprRes) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'Expected end of statement'));\n                }\n                expr = exprRes;\n            }\n            return res.success(new n.N_return(pos, expr));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'yield')) {\n            this.advance(res);\n            let expr = new N_undefined(this.currentToken.pos);\n            if (this.currentToken.type !== tt.ENDSTATEMENT) {\n                let exprRes = res.register(this.expr());\n                if (!exprRes) {\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'Expected end of statement'));\n                }\n                expr = exprRes;\n            }\n            return res.success(new n.N_yield(pos, expr));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'break')) {\n            this.advance(res);\n            return res.success(new n.N_break(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'continue')) {\n            this.advance(res);\n            return res.success(new n.N_continue(pos));\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'try')) {\n            return this.tryCatch();\n        }\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    atom() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        const pos = this.currentToken.pos;\n        switch (tok.type) {\n            case tt.NUMBER:\n                this.advance(res);\n                return res.success(new n.N_number(pos, tok));\n            case tt.STRING:\n                this.advance(res);\n                return res.success(new n.N_string(pos, tok));\n            case tt.IDENTIFIER:\n                return this.atomIdentifier(res, pos, tok);\n            case tt.OPAREN:\n                this.advance(res);\n                const expr = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type == tt.CPAREN) {\n                    this.advance(res);\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ')'\"));\n            case tt.OSQUARE:\n                let arrayExpr = res.register(this.array());\n                if (res.error)\n                    return res;\n                return res.success(arrayExpr);\n            case tt.OBRACES:\n                let objectExpr = res.register(this.object());\n                if (res.error)\n                    return res;\n                return res.success(objectExpr);\n            case tt.KEYWORD:\n                if (tok.value === 'if') {\n                    const expr = res.register(this.ifExpr());\n                    if (res.error)\n                        return res;\n                    return res.success(expr);\n                }\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Invalid Identifier ${tok.value}`));\n            default:\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected number, identifier, '(', '+' or '-'`));\n        }\n    }\n    atomIdentifier(res, pos, tok) {\n        this.advance(res);\n        let node = new n.N_variable(tok);\n        let prevNode = new n.N_undefined(pos);\n        let functionCall = false;\n        while ([tt.OPAREN, tt.OSQUARE, tt.DOT].indexOf(this.currentToken.type) !== -1) {\n            switch (this.currentToken.type) {\n                case tt.OPAREN:\n                    functionCall = true;\n                    const tempNode = node;\n                    node = res.register(this.makeFunctionCall(node));\n                    prevNode = tempNode;\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.OSQUARE:\n                    prevNode = node;\n                    node = res.register(this.makeIndex(node));\n                    if (res.error)\n                        return res;\n                    break;\n                case tt.DOT:\n                    this.advance(res);\n                    if (this.currentToken.type !== tt.IDENTIFIER)\n                        return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected identifier after '.'`));\n                    prevNode = node;\n                    node = new n.N_indexed(this.currentToken.pos, node, new n.N_string(this.currentToken.pos, this.currentToken));\n                    this.advance(res);\n            }\n        }\n        if (this.currentToken.type === tt.ASSIGN) {\n            let assignType = this.currentToken.value;\n            if (functionCall) {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot assign to return value of function`));\n            }\n            this.advance(res);\n            const value = res.register(this.expr());\n            if (node instanceof n.N_variable) {\n                node = new n.N_varAssign(pos, node.a, value, assignType, false);\n            }\n            else if (node instanceof n.N_indexed) {\n                node.value = value;\n                node.assignType = assignType;\n            }\n            else {\n                return res.failure(new InvalidSyntaxError(pos, `Cannot have node of type ${this.currentToken.constructor.name}.\n                            Expected either index or variable node.`));\n            }\n            if (res.error)\n                return res;\n        }\n        return res.success(node);\n    }\n    power() {\n        return this.binOp(() => this.atom(), [tokenType.POW, tokenType.MOD], () => this.factor());\n    }\n    mod() {\n        return this.binOp(() => this.atom(), [tokenType.MOD], () => this.factor());\n    }\n    factor() {\n        const res = new ParseResults();\n        const tok = this.currentToken;\n        switch (tok.type) {\n            case tt.SUB:\n            case tt.ADD:\n                this.advance(res);\n                const factor = res.register(this.factor());\n                if (res.error)\n                    return res;\n                return res.success(new n.N_unaryOp(tok.pos, factor, tok));\n            default:\n                return this.power();\n        }\n    }\n    term() {\n        return this.binOp(() => this.factor(), [tt.MUL, tt.DIV]);\n    }\n    arithmeticExpr() {\n        return this.binOp(() => this.term(), [tt.ADD, tt.SUB]);\n    }\n    comparisonExpr() {\n        const res = new ParseResults();\n        if (this.currentToken.type === tt.NOT) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            let node = res.register(this.expr());\n            if (res.error)\n                return res;\n            return res.success(new n.N_unaryOp(opTok.pos, node, opTok));\n        }\n        let node = res.register(this.binOp(() => this.arithmeticExpr(), [tt.EQUALS, tt.NOTEQUALS, tt.GT, tt.GTE, tt.LTE, tt.LT]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    expr() {\n        const res = new ParseResults();\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.KEYWORD && VAR_DECLARE_KEYWORDS.indexOf(this.currentToken.value) !== -1) {\n            return this.initiateVar(res);\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'if')) {\n            return this.ifExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'while')) {\n            return this.whileExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'for')) {\n            return this.forExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'func')) {\n            return this.funcExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'class')) {\n            return this.classExpr();\n        }\n        else if (this.currentToken.matches(tokenType.KEYWORD, 'namespace')) {\n            return this.namespace();\n        }\n        let node = res.register(this.binOp(() => this.comparisonExpr(), [tt.AND, tt.OR]));\n        if (res.error)\n            return res;\n        return res.success(node);\n    }\n    binOp(func, ops, funcB = func) {\n        const res = new ParseResults();\n        let left = res.register(func());\n        if (res.error)\n            return res;\n        while (ops.indexOf(this.currentToken.type) !== -1\n            || ops.indexOf([this.currentToken.type, this.currentToken.value]) !== -1) {\n            const opTok = this.currentToken;\n            this.advance(res);\n            const right = res.register(funcB());\n            if (res.error)\n                return res;\n            left = new n.N_binOp(left.pos, left, opTok, right);\n        }\n        return res.success(left);\n    }\n    typeExpr() {\n        const res = new ParseResults();\n        if (this.currentToken.type !== tt.IDENTIFIER)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos.clone, `Expected an identifier`));\n        let tok = this.currentToken;\n        this.advance(res);\n        return res.success(new N_variable(tok));\n    }\n    makeFunctionCall(to) {\n        const res = new ParseResults();\n        let args = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OPAREN)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '['\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n            return res.success(new n.N_functionCall(pos, to, []));\n        }\n        args.push(res.register(this.expr()));\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid argument\"));\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            args.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CPAREN)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n        this.advance(res);\n        return res.success(new n.N_functionCall(pos, to, args));\n    }\n    makeIndex(to) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const base = to;\n        if (this.currentToken.type !== tt.OSQUARE)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            return res.failure(new InvalidSyntaxError(pos, `Cannot index without expression`));\n        }\n        let index = res.register(this.expr());\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Invalid index\"));\n        if (this.currentToken.type !== tt.CSQUARE)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ']'\"));\n        this.advance(res);\n        return res.success(new n.N_indexed(pos, base, index));\n    }\n    initiateVar(res) {\n        let pos = this.currentToken.pos;\n        let isConst = false;\n        let isLocal = false;\n        let isGlobal = false;\n        let isDeclaration = false;\n        if (this.currentToken.type === tt.KEYWORD && ['var', 'let'].indexOf(this.currentToken.value) !== -1) {\n            isDeclaration = true;\n            isLocal = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD && ['global', 'local'].indexOf(this.currentToken.value) !== -1) {\n            isDeclaration = true;\n            if (this.currentToken.value === 'global')\n                isGlobal = true;\n            else\n                isLocal = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD && ['const', 'mutable'].indexOf(this.currentToken.value) !== -1) {\n            isDeclaration = true;\n            if (this.currentToken.value === 'const')\n                isConst = true;\n            this.advance(res);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type === tt.KEYWORD) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected Identifier 'var', 'let', 'const', 'mutable', 'local', or 'global', not ${this.currentToken.value}`));\n        }\n        if (this.currentToken.type !== tokenType.IDENTIFIER) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected Identifier or Keyword`));\n        }\n        const varName = this.currentToken;\n        this.advance(res);\n        let type = types.any;\n        if (this.currentToken.type === tt.COLON) {\n            isDeclaration = true;\n            this.consume(res, tt.COLON);\n            type = res.register(this.typeExpr());\n        }\n        if (this.currentToken.type !== tt.ASSIGN) {\n            if (isConst)\n                return res.failure(new InvalidSyntaxError(pos, 'Cannot initialise constant to undefined'));\n            return res.success(new n.N_varAssign(pos, varName, new n.N_undefined(this.currentToken.pos), '=', isGlobal, isLocal, isConst, isDeclaration, type));\n        }\n        let assignType = this.currentToken.value;\n        this.advance(res);\n        const expr = res.register(this.expr());\n        if (res.error) {\n            return res;\n        }\n        if (expr instanceof n.N_class || expr instanceof n.N_functionDefinition) {\n            expr.name = varName.value;\n        }\n        if (expr instanceof N_namespace) {\n            expr.name = varName.value;\n            expr.mutable = !isConst;\n        }\n        return res.success(new n.N_varAssign(pos, varName, expr, assignType, isGlobal, isLocal, isConst, isDeclaration, type));\n    }\n    bracesExp() {\n        const res = new ParseResults();\n        this.consume(res, tt.OBRACES);\n        if (res.error) {\n            return res;\n        }\n        this.clearEndStatements(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_undefined(this.currentToken.pos));\n        }\n        const expr = res.register(this.statements());\n        if (res.error) {\n            return res;\n        }\n        this.consume(res, tt.CBRACES);\n        if (res.error) {\n            return res;\n        }\n        return res.success(expr);\n    }\n    addEndStatement(res) {\n        this.tokens.splice(this.tokenIdx, 0, new Token(this.currentToken.pos, tt.ENDSTATEMENT));\n        this.reverse();\n        this.advance(res);\n    }\n    ifExpr() {\n        const res = new ParseResults();\n        let ifTrue;\n        let ifFalse;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'if'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'if'\"));\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        ifTrue = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.clearEndStatements(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'else')) {\n            this.advance(res);\n            if (this.currentToken.type == tt.OBRACES) {\n                ifFalse = res.register(this.bracesExp());\n                if (res.error)\n                    return res;\n            }\n            else {\n                ifFalse = res.register(this.statement());\n                if (res.error)\n                    return res;\n            }\n        }\n        this.addEndStatement(res);\n        return res.success(new n.N_if(pos, condition, ifTrue, ifFalse));\n    }\n    whileExpr() {\n        const res = new ParseResults();\n        let loop;\n        let condition;\n        const pos = this.currentToken.pos;\n        if (!this.currentToken.matches(tt.KEYWORD, 'while'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'while'\"));\n        this.advance(res);\n        condition = res.register(this.expr());\n        if (res.error)\n            return res;\n        loop = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        return res.success(new n.N_while(pos, condition, loop));\n    }\n    parameter(res) {\n        let name;\n        let type = new n.N_primitiveWrapper(types.any);\n        if (this.currentToken.type !== tt.IDENTIFIER)\n            return new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\");\n        name = this.currentToken.value;\n        this.advance(res);\n        if (this.currentToken.type === tt.COLON) {\n            this.consume(res, tt.COLON);\n            if (res.error)\n                return res.error;\n            type = res.register(this.typeExpr());\n            if (res.error)\n                return res.error;\n        }\n        return { name, type };\n    }\n    funcCore() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, args = [], returnType = new n.N_primitiveWrapper(types.any);\n        this.consume(res, tt.OPAREN);\n        if (this.currentToken.type === tt.CPAREN) {\n            this.advance(res);\n        }\n        else {\n            let param = this.parameter(res);\n            if (param instanceof ESError)\n                return res.failure(param);\n            args.push(param);\n            while (this.currentToken.type === tt.COMMA) {\n                this.advance(res);\n                let param = this.parameter(res);\n                if (param instanceof ESError)\n                    return res.failure(param);\n                args.push(param);\n            }\n            if (this.currentToken.type !== tt.CPAREN)\n                return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ')'\"));\n            this.advance(res);\n        }\n        if (this.currentToken.type === tt.COLON) {\n            this.advance(res);\n            returnType = res.register(this.typeExpr());\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.OBRACES) {\n            body = new n.N_return(this.currentToken.pos, res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        else {\n            this.consume(res, tt.OBRACES);\n            if (res.error)\n                return res;\n            if (this.currentToken.type !== tt.CBRACES)\n                body = res.register(this.statements());\n            else\n                body = new n.N_undefined(this.currentToken.pos);\n            this.consume(res, tt.CBRACES);\n            if (res.error)\n                return res;\n        }\n        return res.success(new n.N_functionDefinition(pos, body, args, returnType));\n    }\n    funcExpr() {\n        const res = new ParseResults();\n        if (!this.currentToken.matches(tt.KEYWORD, 'func'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'func'\"));\n        this.advance(res);\n        const func = res.register(this.funcCore());\n        if (res.error)\n            return res;\n        return res.success(func);\n    }\n    classExpr(name) {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        const methods = [];\n        let init;\n        let extends_;\n        if (!this.currentToken.matches(tt.KEYWORD, 'class'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'class'\"));\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'extends')) {\n            this.advance(res);\n            extends_ = res.register(this.expr());\n            if (res.error)\n                return res;\n        }\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_class(pos, [], undefined, undefined, name));\n        }\n        while (true) {\n            if (this.currentToken.type !== tt.IDENTIFIER) {\n                break;\n            }\n            let methodId = this.currentToken.value;\n            this.advance(res);\n            const func = res.register(this.funcCore());\n            if (res.error)\n                return res;\n            if (!(func instanceof N_functionDefinition)) {\n                return res.failure(new ESError(this.currentToken.pos, 'ParseError', `Tried to get function, but got ${func} instead`));\n            }\n            func.name = methodId;\n            if (methodId === 'init') {\n                init = func;\n            }\n            else {\n                methods.push(func);\n            }\n        }\n        this.consume(res, tt.CBRACES);\n        return res.success(new n.N_class(pos, methods, extends_, init, name));\n    }\n    forExpr() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        let body, array, identifier, isGlobalIdentifier = false, isConstIdentifier = false;\n        if (!this.currentToken.matches(tt.KEYWORD, 'for'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected 'for'\"));\n        this.advance(res);\n        if (this.currentToken.matches(tt.KEYWORD, 'global')) {\n            isGlobalIdentifier = true;\n            this.advance(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'const')) {\n            isConstIdentifier = true;\n            this.advance(res);\n        }\n        else if (this.currentToken.matches(tt.KEYWORD, 'var') || this.currentToken.matches(tt.KEYWORD, 'let')) {\n            this.advance(res);\n        }\n        if (this.currentToken.type !== tt.IDENTIFIER)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier\"));\n        identifier = this.currentToken;\n        this.advance(res);\n        if (!this.currentToken.matches(tt.KEYWORD, 'in'))\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected keyword 'in\"));\n        this.advance(res);\n        array = res.register(this.expr());\n        if (res.error)\n            return res;\n        body = res.register(this.bracesExp());\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new n.N_for(pos, body, array, identifier, isGlobalIdentifier, isConstIdentifier));\n    }\n    array() {\n        const res = new ParseResults();\n        let elements = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OSQUARE)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '[\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CSQUARE) {\n            this.advance(res);\n            return res.success(new n.N_array(pos, []));\n        }\n        elements.push(res.register(this.expr()));\n        if (res.error)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ']', 'var', 'if', 'for', 'while', number, identifier, '+', '-', '(', '[' or '!' 2\"));\n        while (this.currentToken.type === tt.COMMA) {\n            this.advance(res);\n            elements.push(res.register(this.expr()));\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CSQUARE)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected ',' or ']'\"));\n        this.advance(res);\n        return res.success(new n.N_array(pos, elements));\n    }\n    object() {\n        const res = new ParseResults();\n        let properties = [];\n        const pos = this.currentToken.pos;\n        if (this.currentToken.type !== tt.OBRACES)\n            return res.failure(new InvalidSyntaxError(pos, \"Expected '{\"));\n        this.advance(res);\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_objectLiteral(pos, []));\n        }\n        while (true) {\n            let keyType, key, value;\n            if (this.currentToken.type === tt.IDENTIFIER) {\n                keyType = 'id';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.STRING) {\n                keyType = 'string';\n                key = new n.N_string(this.currentToken.pos, this.currentToken);\n                this.advance(res);\n            }\n            else if (this.currentToken.type === tt.OSQUARE) {\n                keyType = 'value';\n                this.advance(res);\n                key = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.CSQUARE)\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ']', got '${tokenTypeString[this.currentToken.type]}'`));\n                this.advance(res);\n            }\n            else\n                break;\n            if (this.currentToken.type === tt.COLON) {\n                this.advance(res);\n                value = res.register(this.expr());\n                if (res.error)\n                    return res;\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES)\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                if (this.currentToken.type === tt.COMMA)\n                    this.advance(res);\n            }\n            else {\n                if (this.currentToken.type !== tt.COMMA && this.currentToken.type !== tt.CBRACES)\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `Expected ',' or '}', got '${tokenTypeString[this.currentToken.type]}'`));\n                if (keyType !== 'id')\n                    return res.failure(new InvalidSyntaxError(this.currentToken.pos, `You must specify a value when initialising an object literal with a key that is not an identifier.\n                        Try using \\`key: value\\` syntax.`));\n                this.reverse();\n                value = new n.N_variable(this.currentToken);\n                this.advance(res);\n                if (this.currentToken.type === tt.COMMA)\n                    this.advance(res);\n            }\n            properties.push([key, value]);\n            if (res.error)\n                return res;\n        }\n        if (this.currentToken.type !== tt.CBRACES)\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, \"Expected identifier, ',' or '}'\"));\n        this.advance(res);\n        return res.success(new n.N_objectLiteral(pos, properties));\n    }\n    namespace() {\n        const res = new ParseResults();\n        const pos = this.currentToken.pos;\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            this.advance(res);\n            return res.success(new n.N_namespace(pos, new n.N_undefined()));\n        }\n        const statements = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        return res.success(new n.N_namespace(pos, statements));\n    }\n    tryCatch() {\n        const res = new ParseResults();\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'No empty try block'));\n        }\n        const body = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.value !== 'catch') {\n            return res.failure(new InvalidSyntaxError(this.currentToken.pos, 'try block requires catch'));\n        }\n        this.consume(res, tt.KEYWORD);\n        if (res.error)\n            return res;\n        this.consume(res, tt.OBRACES);\n        if (res.error)\n            return res;\n        if (this.currentToken.type === tt.CBRACES) {\n            return res.success(new N_tryCatch(this.currentToken.pos, body, new N_undefined()));\n        }\n        const catchBlock = res.register(this.statements());\n        if (res.error)\n            return res;\n        this.consume(res, tt.CBRACES);\n        if (res.error)\n            return res;\n        this.addEndStatement(res);\n        if (res.error)\n            return res;\n        return res.success(new N_tryCatch(this.currentToken.pos, body, catchBlock));\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Lexer } from \"./parse/lexer\";\nimport { Parser } from \"./parse/parser\";\nimport { global, libs as allLibs, now, refreshPerformanceNow, runningInNode, setGlobalContext, VERSION } from \"./constants\";\nimport { initialise } from \"./init\";\nimport { ESError } from \"./errors\";\nimport { Position } from \"./position\";\nimport { compileResult, interpretResult, Node } from \"./runtime/nodes\";\nimport { ESArray } from \"./runtime/primitiveTypes\";\nimport { Context } from \"./runtime/context\";\nimport addNodeLibs from \"./built-in/nodeLibs\";\nimport colours from './util/colours';\nimport JS_STD_TXT_RAW from 'raw-loader!./built-in/compiledSTD/std.txt.js';\nexport { Context, colours };\nexport * from './runtime/primitiveTypes';\nexport * from './constants';\nexport * from './errors';\nexport * from './runtime/nodes';\nexport * from './util/util';\nexport * from './runtime/primitives/wrapStrip';\nexport * from './runtime/symbol';\nexport function init(printFunc = console.log, inputFunc, node = true, libs = { print: console.log }, context = new Context(), path = '') {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const res = initialise(context, printFunc, inputFunc);\n        if (res instanceof ESError) {\n            return res;\n        }\n        setGlobalContext(context);\n        (_a = libs['context']) !== null && _a !== void 0 ? _a : (libs['context'] = context);\n        if (path) {\n            context.path = path;\n        }\n        if (libs.print) {\n            allLibs.print = libs.print;\n        }\n        if (node) {\n            runningInNode();\n            yield refreshPerformanceNow(true);\n            addNodeLibs(libs, context);\n        }\n    });\n}\nexport function run(msg, { env = global, measurePerformance = false, fileName = '(unknown)', currentDir = '' } = {}) {\n    if (currentDir) {\n        env.path = currentDir;\n    }\n    Node.maxTime = 0;\n    Node.totalTime = 0;\n    Node.interprets = 0;\n    const timeData = {\n        total: 0,\n        lexerTotal: 0,\n        parserTotal: 0,\n        interpretTotal: 0,\n        nodeMax: 0,\n        nodeAvg: 0,\n        nodeTotal: 0,\n        interprets: 0,\n    };\n    let start = now();\n    if (!env.root.initialisedAsGlobal) {\n        const res = new interpretResult();\n        res.error = new ESError(Position.unknown, 'Uninitialised', 'Global context has not been initialised with global values');\n        return res;\n    }\n    const lexer = new Lexer(msg, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        const res_ = new interpretResult();\n        res_.error = lexerRes;\n        return res_;\n    }\n    timeData.lexerTotal = now() - start;\n    start = now();\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        const res_ = new interpretResult();\n        res_.error = res.error;\n        return res_;\n    }\n    timeData.parserTotal = now() - start;\n    start = now();\n    if (!res.node) {\n        const res = new interpretResult();\n        res.val = new ESArray([]);\n        return res;\n    }\n    const finalRes = res.node.interpret(env);\n    timeData.interpretTotal = now() - start;\n    timeData.total = now() - start;\n    timeData.nodeMax = Node.maxTime;\n    timeData.nodeTotal = Node.totalTime;\n    timeData.nodeAvg = Node.totalTime / Node.interprets;\n    timeData.interprets = Node.interprets;\n    if (measurePerformance) {\n        console.log(timeData);\n    }\n    return Object.assign(Object.assign({}, finalRes), { timeData });\n}\nexport function parse(code, { fileName = '(unknown)', currentDir = '' } = {}) {\n    const lexer = new Lexer(code, fileName);\n    const lexerRes = lexer.generate();\n    if (lexerRes instanceof ESError) {\n        return {\n            error: lexerRes\n        };\n    }\n    const parser = new Parser(lexerRes);\n    const res = parser.parse();\n    if (res.error) {\n        return {\n            error: res.error\n        };\n    }\n    if (!res.node) {\n        return {\n            error: new ESError(Position.unknown, 'Error', 'no output')\n        };\n    }\n    return {\n        compileToJavaScript: (config) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            const comment = `// Generated by EntropyScript->JavaScript compiler v${VERSION}\\n`;\n            const stdStr = JS_STD_TXT_RAW.toString().replace(/(\\r\\n|\\n|\\r)/gm, '') + '\\n';\n            const out = res.node.compileJS(config);\n            if (out.error)\n                return out;\n            return new compileResult(comment + stdStr + out.val);\n        },\n        interpret: (env = global) => {\n            if (!res.node)\n                throw 'res.node still undefined';\n            if (currentDir) {\n                env.path = currentDir;\n            }\n            if (!env.root.initialisedAsGlobal) {\n                const res = new interpretResult();\n                res.error = new ESError(Position.unknown, 'Uninitialised', 'Global context has not been initialised with global values');\n                return res;\n            }\n            return res.node.interpret(env);\n        },\n    };\n}\n","import { Position } from \"../position\";\nimport { Context } from \"../runtime/context\";\nimport { ESError, ImportError, PermissionRequiredError } from '../errors';\nimport { ESFunction, ESNamespace, ESObject, ESString, types } from '../runtime/primitiveTypes';\nimport { str } from \"../util/util\";\nimport { permissions, run } from '../index';\nimport { addModuleFromObj, getModule, moduleExist } from './builtInModules';\nimport { global, importCache } from \"../constants\";\nimport { ESJSBinding } from \"../runtime/primitives/esjsbinding\";\nfunction addNodeLibs(options, context) {\n    const { fs, path } = options;\n    for (let libName in options) {\n        if (options.hasOwnProperty(libName)) {\n            addModuleFromObj(libName, new ESJSBinding(options[libName], libName));\n        }\n    }\n    context.set('import', new ESFunction(({ context }, rawPath) => {\n        if (!permissions.imports) {\n            return new PermissionRequiredError('Imports not allowed');\n        }\n        if (!permissions.imports) {\n            return new PermissionRequiredError('Imports not allowed');\n        }\n        let scriptPath = str(rawPath);\n        if (permissions.useSTD && moduleExist(scriptPath)) {\n            return getModule(scriptPath);\n        }\n        scriptPath = path.join(context.path, scriptPath);\n        if (scriptPath in importCache) {\n            return importCache[scriptPath];\n        }\n        try {\n            if (!fs.existsSync(scriptPath)) {\n                if (fs.existsSync('./particles/' + scriptPath)) {\n                    if (fs.existsSync('particles/' + scriptPath + '/main.es')) {\n                        scriptPath = 'particles/' + scriptPath + '/main.es';\n                    }\n                    else {\n                        return new ESError(Position.unknown, 'ImportError', `Module '${scriptPath}' has no entry point. Requires 'main.es'.`);\n                    }\n                }\n                else {\n                    return new ESError(Position.unknown, 'ImportError', `Can't find file '${scriptPath}' to import.`);\n                }\n            }\n            const exDir = path.dirname(scriptPath);\n            const code = fs.readFileSync(scriptPath, 'utf-8');\n            const env = new Context();\n            env.parent = global;\n            env.path = exDir;\n            const n = new ESNamespace(new ESString(scriptPath), {});\n            importCache[scriptPath] = n;\n            const res = run(code, {\n                env,\n                measurePerformance: false,\n                fileName: scriptPath,\n                currentDir: exDir,\n            });\n            n.__value__ = env.getSymbolTableAsDict();\n            if (res.error) {\n                return res.error;\n            }\n            return n;\n        }\n        catch (E) {\n            return new ESError(Position.unknown, 'ImportError', E.toString());\n        }\n    }, [{ name: 'path', type: types.string }], 'import', undefined, types.object), {\n        forceThroughConst: true,\n        isConstant: true\n    });\n    context.setOwn('open', new ESFunction(({ context }, path_, encoding_) => {\n        if (!permissions.fileSystem) {\n            return new PermissionRequiredError('No access to file system');\n        }\n        const path = str(path_);\n        const encoding = str(encoding_) || 'utf-8';\n        if (!fs.existsSync(path)) {\n            return new ImportError(Position.unknown, path);\n        }\n        return new ESObject({\n            str: new ESFunction(({ context }) => {\n                return new ESString(fs.readFileSync(context.path + path, encoding));\n            }, [], 'str', undefined, types.string),\n            write: new ESFunction(({ context }, data) => {\n                fs.writeFileSync(context.path + path, str(data));\n            }, [{ name: 'path', type: types.string }]),\n            append: new ESFunction(({ context }, data) => {\n                fs.appendFileSync(context.path + path, str(data));\n            }, [{ name: 'path', type: types.string }]),\n        });\n    }));\n}\nexport default addNodeLibs;\n","export default \"Array.prototype.contains = function (element) {\\n\\treturn this.indexOf(element) !== -1;\\n};\\n\\nfunction parseNum (str) {\\n\\treturn parseFloat(str);\\n}\\n\\nconst print = console.log;\\n\\nNumber.prototype[Symbol.iterator] = function () {\\n\\treturn {\\n\\t\\tcurrent: 0,\\n\\t\\tlast: this,\\n\\t\\tnext() {\\n\\t\\t\\tif (this.current <= this.last) {\\n\\t\\t\\t\\treturn { done: false, value: this.current++ };\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn { done: true };\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n};\\n\\nconst private = {\\n\\tbims: {\\n\\t\\tmath: Math\\n\\t}\\n};\\n\\nfunction import_ (path) {\\n\\tif (private.bims.hasOwnProperty(path)) {\\n\\t\\treturn private.bims[path];\\n\\t}\\n}\\n\\nfunction range (minP, maxP, stepP) {\\n\\tif (typeof minP !== 'number') {\\n\\t\\treturn [];\\n\\t}\\n\\n\\tconst min = minP.valueOf();\\n\\n\\tif (typeof maxP === 'undefined') {\\n\\t\\ttry {\\n\\t\\t\\treturn [...Array(min).keys()];\\n\\t\\t} catch (e) {\\n\\t\\t\\tthrow `RangeError: Cannot make range of length '${min}'`;\\n\\t\\t}\\n\\t}\\n\\n\\tlet step = 1;\\n\\n\\tif (typeof maxP !== 'number') {\\n\\t\\tthrow 'TypeError: Expected number';\\n\\t}\\n\\n\\tlet max = maxP.valueOf();\\n\\n\\tif (typeof stepP !== 'undefined') {\\n\\t\\tif (typeof stepP !== 'number') {\\n\\t\\t\\tthrow 'TypeError: Expected number';\\n\\t\\t}\\n\\t\\tstep = stepP.valueOf();\\n\\t}\\n\\n\\tlet arr = [];\\n\\n\\tlet i = min;\\n\\twhile (i < max) {\\n\\t\\tarr.push(i);\\n\\t\\ti += step;\\n\\t}\\n\\n\\treturn arr;\\n}\";"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Position","constructor","idx","ln","col","file","advance","currentChar","clone","str","isUnknown","unknown","digits","identifierChars","singleLineComment","multiLineCommentStart","multiLineCommentEnd","global","setGlobalContext","c","stringSurrounds","IS_NODE_INSTANCE","window","runningInNode","VAR_DECLARE_KEYWORDS","VERSION","permissions","networking","imports","accessDOM","useSTD","fileSystem","updatePermissions","newPermissions","assign","print","console","log","catchBlockErrorSymbolName","KEYWORDS","now","refreshPerformanceNow","thisArg","_arguments","generator","Date","performance","e","P","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","importCache","tokenType","tt","tokenTypeString","NUMBER","STRING","ENDSTATEMENT","IDENTIFIER","KEYWORD","COMMA","OBRACES","CBRACES","OPAREN","CPAREN","OSQUARE","CSQUARE","ASSIGN","ADD","SUB","MUL","DIV","POW","MOD","EQUALS","NOTEQUALS","NOT","GT","LT","GTE","LTE","AND","OR","COLON","DOT","EOF","BITWISE_AND","BITWISE_OR","BITWISE_NOT","singleCharTokens","doubleCharTokens","tripleCharTokens","primitiveMethods","types","ESPrimitive","type","any","self","isa","props","ESBoolean","__type__","is","valueOf","__value__","typeName","__name__","hasProperty","describe","info","isBuiltIn","description","detail","res","strip","TypeError","__add__","n","InvalidOperationError","__subtract__","__multiply__","__divide__","__pow__","__mod__","__eq__","__gt__","__lt__","__and__","__or__","__bool__","__setProperty__","__call__","parameters","ESErrorPrimitive","error","ESError","super","__getProperty__","ESString","name","details","ESArray","traceback","map","s","position","line","wrap","IndexError","cast","bool","dealWithExtends","context","class_","instance","this_","callContext","ESType","superFunc","ESFunction","args","newContext","Context","parent","__extends__","_a","initFunc","__init__","__closure__","res_","undefined","setRes","setOwn","createInstance","params","runInit","on","_b","__isPrimitive__","length","ESUndefined","ESNumber","ESObject","method","__methods__","methodClone","indexOf","__instances__","push","isPrimitive","includesType","t","_c","_d","_e","_f","equals","val","number","string","array","object","boolean","substr","keys","k","thisElement","nElement","newOb","keysToRemove","Array","isArray","toClone","ESNamespace","mutable","slice","symbol","isAccessible","v","isConstant","ESJSBinding","functionsTakeProps","JSON","stringify","func","arguments_","returnType","closure","path","fn","max","Math","i","arg","forceThroughConst","generateESFunctionCallContext","Node","interpret","funcReturn","callNode","callNative","defaultValue","required","toString","pow","Boolean","helpLink","values","len","add","splice","contains","element","newArr","num","parseFloat","isNaN","split","repeat","strToInsert","firstPart","lastPart","ESSymbol","identifier","options","thing","Number","String","m","a","codes","red","yellow","green","cyan","blue","grey","code","builtInFunctions","minP","maxP","stepP","min","arr","returns","msgs","things","out","indent","total","filter","entries","contents","id","has","set","global_","time","cb","sleep","parse","json","modules","ascii","asciiToChar","fromCharCode","charToAscii","char","charCodeAt","processedModules","processRawModule","moduleDict","moduleRaw","moduleExist","getModule","processed","initialise","globalContext","printFunc","inputFunc","rawUrl","callback","url","fetch","text","env","run","ImportError","getSymbolTableAsDict","E","msg","cbRaw","builtIn","globalConstants","constant","load","initModRes","thens","resolved","catch_","catch","domRes","PermissionRequiredError","InvalidRuntimeError","w","$","document","ReferenceError","dom","initModules","initialisedAsGlobal","symbolTable","deleted","path_","parent_","hasOwn","getSymbol","getRawSymbolTableAsDict","symbols","remove","clear","resetAsGlobal","deepClone","interpretArgument","typeRes","defaultValRes","interpretResult","shouldBreak","shouldContinue","compileResult","pos","isTerminal","start","interpret_","interprets","totalTime","maxTime","N_binOp","left","opTok","right","l","r","lt","eq","gt","InvalidSyntaxError","compileJS","config","minify","N_unaryOp","numVal","abs","N_varAssign","varNameTok","assignType","isGlobal","isLocal","isDeclaration","N_primitiveWrapper","currentVal","newVal","assignVal","declaration","N_if","comparison","ifTrue","ifFalse","compRes","highIndent","statementRes","ifTrueRes","ifFalseRes","N_while","loop","shouldLoop","potentialError","comparisonRes","bodyRes","N_for","body","isGlobalIdentifier","isConstIdentifier","isGlobalId","isConstId","_g","_h","iteration","iteratorRes","N_array","items","shouldClone","interpreted","item","itemRes","N_objectLiteral","properties","keyNode","valueNode","N_statements","topLevel","last","N_functionCall","to","arguments","join","funcRes","argRes","N_functionDefinition","argNames","returnTypeRes","param","N_return","valRes","N_yield","N_indexed","base","index","baseRes","indexRes","objectRes","keyRes","N_class","methods","extends_","init","instances","extendsRes","initRes","N_namespace","statements","N_tryCatch","catchBlock","catchRes","N_number","N_string","N_variable","N_undefined","N_break","N_continue","hash","WeakMap","Function","create","getPrototypeOf","Map","from","Set","depth","substring","ms","setTimeout","replace","validURI","test","colouredStr","reverse","IllegalCharError","ExpectedCharError","expectedType","actualType","ref","op","TestFailed","Token","matches","Lexer","program","fileName","generate","tokens","includes","makeNumber","multiLineComment","makeIdentifier","makeString","possibleAssignFirstChar","token","unknownChar","numStr","dotCount","strClose","idStr","posStart","tokType","triple","double","ParseResults","advanceCount","lastRegisteredAdvanceCount","reverseCount","registerAdvance","register","node","tryRegister","success","failure","Parser","tokenIdx","currentToken","amount","consume","errorMsg","clearEndStatements","firstStatement","statement","moreStatements","newLineCount","expr","exprRes","tryCatch","atom","tok","atomIdentifier","arrayExpr","objectExpr","ifExpr","prevNode","functionCall","tempNode","makeFunctionCall","makeIndex","power","binOp","factor","mod","term","arithmeticExpr","comparisonExpr","initiateVar","whileExpr","forExpr","funcExpr","classExpr","namespace","ops","funcB","typeExpr","isConst","varName","bracesExp","addEndStatement","condition","parameter","funcCore","methodId","elements","keyType","libs","fs","libName","raw","addModule","rawPath","scriptPath","existsSync","exDir","dirname","readFileSync","measurePerformance","currentDir","encoding_","encoding","write","data","writeFileSync","append","appendFileSync","timeData","lexerTotal","parserTotal","interpretTotal","nodeMax","nodeAvg","nodeTotal","lexerRes","finalRes","compileToJavaScript","comment","stdStr"],"sourceRoot":""}