import{ESError}from"../../errors.js";import{Context}from"../../runtime/context.js";import{ESFunction,ESObject,ESPrimitive}from"../../runtime/primitiveTypes.js";export default function(e,t,r,n,o,i){return{createServer:new ESFunction((({context:r},n,o)=>{let s=ESPrimitive.strip(n),c=ESPrimitive.strip(o);s=Object.assign({port:3e3,secure:!1,debug:!1},s);const a=(e,t)=>{s.corsOrigin&&t.setHeader("Access-Control-Allow-Origin",s.corsOrigin);const r=e.url||"/";if(s.debug&&console.log(`Got request at ${r}`),c.hasOwnProperty(r)){let n="";e.on("data",(e=>{n+=e})),e.on("end",(()=>{t.writeHead(200);let o={};try{o=JSON.parse(null!=n?n:"{}")}catch(t){return void i(`Error parsing JSON data from URL ${e.url} with JSON ${n}: ${t}`)}const a=c[r];if(!a)return void i(`Not handler found for url '${r}'`);const u=new Context;u.parent=a.__closure__,u.set("body",new ESObject(o)),a.__closure__=u;const d=a.__call__({context:u});if(d instanceof ESError)return i(d.str),t.writeHead(500),void t.end("{}");let l="";try{if(!(d instanceof ESObject))return t.writeHead(500),void t.end("{}");l=JSON.stringify(ESPrimitive.strip(d))}catch(e){return i(`Incorrect return value for handler of ${r}. Must be JSONifyable.`),s.debug&&i(`Detail: Expected type (object|undefined) but got value ${d.valueOf()} of type ${d.typeOf()}`),t.writeHead(500),void t.end("{}")}s.debug&&i(`Response: ${l}`),t.end(l)}))}else t.writeHead(404),t.end("{}")};if(s.secure){const t=e.createServer({key:s.key,cert:s.cert},a);s.hostname?t.listen(s.port,s.hostname,(()=>{i(`Server running at https://${s.hostname}:${s.port}`)})):t.listen(s.port,(()=>{i(`Server running on port ${s.port}`)}))}else t.createServer(a).listen(s.port,s.hostname,(()=>{i(`Server running at http://${s.hostname}:${s.port}`)}))}))}}