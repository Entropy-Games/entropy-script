import{Position}from"./position.js";import{str}from"./util/util.js";export class ESError{constructor(r,t,e){this.traceback=[],this.startPos=r,this.name=t,this.details=e}get str(){let r="";if(this.traceback.length){r="Error Traceback (most recent call last):\n".yellow;for(let t of[...this.traceback].reverse())r+=`    ${t.position.str.cyan}:\n        ${t.line}\n`}return r+=`${this.name.red}: ${this.details} \n at ${this.startPos.str.cyan}`,r}get uncolouredStr(){return`${this.name}: ${this.details} \n at ${this.startPos.str}`}}export class IllegalCharError extends ESError{constructor(r,t){super(r,"IllegalCharError",`'${t}'`)}}export class InvalidSyntaxError extends ESError{constructor(r,t){super(r,"InvalidSyntaxError",t)}}export class ExpectedCharError extends ESError{constructor(r,t){super(r,"ExpectedCharError",`'${t}'`)}}export class TypeError extends ESError{constructor(r,t,e,s="",o=""){super(r,"TypeError",`Expected type '${t}', got type '${e}' ${void 0===s?"":` on value '${str(s)}'`} ${o||""}`)}}export class ImportError extends ESError{constructor(r,t,e=""){super(r,"ImportError",`Could not import ${t}: ${e}`)}}export class ReferenceError extends ESError{constructor(r,t){super(r,"ReferenceError",`${t} is not defined`)}}export class TestFailed extends ESError{constructor(r){super(Position.unknown,"TestFailed",r)}}