import{global}from"../constants.js";import{str}from"../util/util.js";import{ESError,TypeError}from"../errors.js";import{Position}from"../position.js";import{Node}from"./nodes.js";import{Context,ESSymbol,generateESFunctionCallContext}from"./context.js";export class ESPrimitive{constructor(e,t=types.any){this.info={},this.bool=()=>this.hasOwnProperty("__bool__")?this.__bool__():new ESBoolean(!!this.__value__),this.valueOf=()=>this.__value__,this.typeOf=()=>new ESString(this.__type__.__name__),this.hasProperty=e=>this.hasOwnProperty(e.valueOf()),this.__getProperty__=e=>this.hasOwnProperty(e.valueOf())?ESPrimitive.wrap(this[e.valueOf()]):ESPrimitive.wrap(new ESUndefined),this.__type__=t||this,this.__value__=e}static wrap(e){if(e instanceof ESPrimitive)return e;if(null==e)return new ESUndefined;if(e instanceof ESError)return new ESErrorPrimitive(e);if(e instanceof ESSymbol)return e.value;if("function"==typeof e)return new ESFunction(e);if("number"==typeof e)return new ESNumber(e);if("string"==typeof e)return new ESString(e);if("boolean"==typeof e)return new ESBoolean(e);if("object"==typeof e){if(Array.isArray(e))return new ESArray(e.map((e=>ESPrimitive.wrap(e))));let t={};return e===Math&&console.log(),Object.getOwnPropertyNames(e).forEach((n=>{t[n]=ESPrimitive.wrap(e[n])})),new ESObject(t)}return"bigint"==typeof e?new ESNumber(Number(e)):"symbol"==typeof e?new ESString(String(e)):new ESUndefined}static strip(e){if(e){if(!(e instanceof ESPrimitive))return e;if(e instanceof ESArray)return e.valueOf().map((e=>ESPrimitive.strip(e)));if(e instanceof ESObject){let t={};for(let n in e.valueOf())t[n]=ESPrimitive.strip(e.valueOf()[n]);return t}if(!(e instanceof ESUndefined))return e instanceof ESType||e instanceof ESFunction?e:e.valueOf()}}}export class ESType extends ESPrimitive{constructor(e=!1,t="(anon)",n=[],i,r){super(void 0,null==types?void 0:types.type),this.__instances__=[],this.clone=()=>{var e;return new ESType(this.__isPrimitive__,this.__name__,this.__methods__.map((e=>e.clone())),this.__extends__,null===(e=this.__init__)||void 0===e?void 0:e.clone())},this.includesType=e=>{var t,n,i,r,s,o;return!(!this.equals(types.any)&&!e.equals(types.any))||(!!(null===(t=this.__extends__)||void 0===t?void 0:t.equals(e))||(!!(null===(n=this.__extends__)||void 0===n?void 0:n.equals(types.any))||(!!(null===(i=this.__extends__)||void 0===i?void 0:i.includesType(e))||(!!(null===(r=e.__extends__)||void 0===r?void 0:r.equals(this))||(!!(null===(s=e.__extends__)||void 0===s?void 0:s.equals(types.any))||(!!(null===(o=e.__extends__)||void 0===o?void 0:o.includesType(this))||this.equals(e)))))))},this.equals=e=>e.__name__===this.__name__&&e.__isPrimitive__===this.__isPrimitive__&&Object.is(this.valueOf(),e.valueOf()),this.__call__=(e=[],t=global,n=!0,i={})=>{var r,s,o;if(this.__isPrimitive__){if(e.length<1)return new ESUndefined;switch(this.__name__){case"Undefined":case"Type":return e.length<1?new ESType:e[0].typeOf();case"String":return new ESString(e[0].str().valueOf());case"Array":return new ESArray(e);case"Number":return new ESNumber(e[0].valueOf());case"Function":return new ESFunction(e[0].valueOf());case"Boolean":return new ESBoolean(e[0].bool().valueOf());case"Object":return new ESObject(e[0]);case"Error":return new ESError(Position.unknown,"UserError",e[0].str().valueOf());default:return ESPrimitive.wrap(e[0])}}const a=new Context;if(a.parent=null===(r=this.__init__)||void 0===r?void 0:r.__closure__,this.__extends__){let e=function e(n,i,r){const s=r.constructor;if(!i)return;if(!(i instanceof ESType))return new TypeError(Position.unknown,"Type",typeof i,i);let o=n.setOwn("super",new ESFunction((()=>{var n;const s=new Context;s.parent=t;let o=s.setOwn("this",new ESObject(r));if(o instanceof ESError)return o;if(void 0!==i.__extends__){let t=e(s,i.__extends__,r);if(t instanceof ESError)return t}const a=null===(n=null==i?void 0:i.__init__)||void 0===n?void 0:n.__call__([]);return a instanceof ESPrimitive?a:void 0})));if(o instanceof ESError)return o;const a=i.__call__([],t,!1,r);if(a instanceof ESError)return a;(r=a.valueOf()).constructor=s}(a,this.__extends__,i);if(e instanceof ESError)return e}i.constructor=null!==(o=null===(s=this.__init__)||void 0===s?void 0:s.clone())&&void 0!==o?o:new ESUndefined;const l=new ESObject(i);for(let e of this.__methods__){const t=e.clone();t.this_=l,i[e.name]=t}if(n&&this.__init__){this.__init__.this_=l,this.__init__.__closure__=a;const t=this.__init__.__call__(e);if(t instanceof ESError)return t}return l.__type__=this,this.__instances__.push(l),l},this.str=()=>new ESString(`<Type: ${this.__name__}>`),this.__isPrimitive__=e,this.__name__=t,this.info.name=t,this.__extends__=i,this.__methods__=n,r&&(r.name=t,this.__init__=r),types.type||(this.__type__=this)}}export class ESNumber extends ESPrimitive{constructor(e=0){super(e,types.number),this.str=()=>new ESString(this.valueOf().toString()),this.__add__=e=>e instanceof ESNumber?new ESNumber(this.valueOf()+e.valueOf()):new TypeError(Position.unknown,"Number",e.typeOf().valueOf(),e.valueOf()),this.__subtract__=e=>e instanceof ESNumber?new ESNumber(this.valueOf()-e.valueOf()):new TypeError(Position.unknown,"Number",e.typeOf().valueOf(),e.valueOf()),this.__multiply__=e=>e instanceof ESNumber?new ESNumber(this.valueOf()*e.valueOf()):new TypeError(Position.unknown,"Number",e.typeOf().valueOf(),e.valueOf()),this.__divide__=e=>e instanceof ESNumber?new ESNumber(this.valueOf()/e.valueOf()):new TypeError(Position.unknown,"Number",e.typeOf().valueOf(),e.valueOf()),this.__pow__=e=>e instanceof ESNumber?new ESNumber(Math.pow(this.valueOf(),e.valueOf())):new TypeError(Position.unknown,"Number",e.typeOf().valueOf(),e.valueOf()),this.__eq__=e=>new ESBoolean(e instanceof ESNumber&&this.valueOf()===e.valueOf()),this.__gt__=e=>e instanceof ESNumber?new ESBoolean(this.valueOf()>e.valueOf()):new TypeError(Position.unknown,"Number",e.typeOf().valueOf(),e.valueOf()),this.__lt__=e=>e instanceof ESNumber?new ESBoolean(this.valueOf()<e.valueOf()):new TypeError(Position.unknown,"Number",e.typeOf().valueOf(),e.valueOf()),this.__bool__=()=>new ESBoolean(this.valueOf()>0),this.clone=()=>new ESNumber(this.valueOf())}}export class ESString extends ESPrimitive{constructor(e=""){super(e,types.string),this.str=()=>this,this.__add__=e=>e instanceof ESString?new ESString(this.valueOf()+e.valueOf()):new TypeError(Position.unknown,"String",e.typeOf().valueOf(),e.valueOf()),this.__multiply__=e=>e instanceof ESNumber?new ESString(this.valueOf().repeat(e.valueOf())):new TypeError(Position.unknown,"Number",e.typeOf().valueOf(),e.valueOf()),this.__eq__=e=>new ESBoolean(e instanceof ESString&&this.valueOf()===e.valueOf()),this.__gt__=e=>e instanceof ESString?new ESBoolean(this.valueOf().length>e.valueOf().length):new TypeError(Position.unknown,"String",e.typeOf().valueOf(),e.valueOf()),this.__lt__=e=>e instanceof ESString?new ESBoolean(this.valueOf().length<e.valueOf().length):new TypeError(Position.unknown,"String",e.typeOf().valueOf(),e.valueOf()),this.__bool__=()=>new ESBoolean(this.valueOf().length>0),this.len=()=>new ESNumber(this.valueOf().length),this.clone=()=>new ESString(this.valueOf()),this.__getProperty__=e=>{if(e instanceof ESString&&this.hasOwnProperty(e.valueOf().toString()))return this[e.valueOf().toString()];if(!(e instanceof ESNumber))return new ESString;let t=e.valueOf();for(;t<0;)t=this.valueOf().length+t;return t<this.valueOf().length?new ESString(this.valueOf()[t]):new ESString}}__setProperty__(e,t){if(!(e instanceof ESNumber))return;t instanceof ESString||(t=ESPrimitive.wrap(t));let n=e.valueOf();for(;n<0;)n=this.valueOf().length+n;const i=t.str().valueOf();let r=this.__value__.substr(0,n),s=this.__value__.substr(n+i.length);this.__value__=r+i+s}}export class ESUndefined extends ESPrimitive{constructor(){super(void 0,types.undefined),this.str=()=>new ESString("<Undefined>"),this.__eq__=e=>new ESBoolean(e instanceof ESUndefined||void 0===e||void 0===e.valueOf()),this.__bool__=()=>new ESBoolean(!1),this.clone=()=>new ESUndefined,this.info={name:"undefined",description:"Not defined, not a value.",file:"built-in",isBuiltIn:!0}}}export class ESErrorPrimitive extends ESPrimitive{constructor(e=new ESError(Position.unknown,"Unknown","error type not specified")){super(e,types.error),this.str=()=>new ESString(`<Error: ${this.valueOf().str}>`),this.__eq__=e=>new ESBoolean(e instanceof ESErrorPrimitive&&this.valueOf().constructor===e.valueOf().constructor),this.__bool__=()=>new ESBoolean(!0),this.clone=()=>new ESErrorPrimitive(this.valueOf())}}export class ESFunction extends ESPrimitive{constructor(e=(()=>{}),t=[],n="(anonymous)",i=new ESObject,r=types.any,s=global){super(e,types.function),this.clone=()=>new ESFunction(this.__value__,this.arguments_,this.name,this.this_,this.returnType,this.__closure__),this.valueOf=()=>this,this.str=()=>new ESString(`<Func: ${this.name}>`),this.__eq__=e=>new ESBoolean(e instanceof ESFunction&&this.__value__===e.__value__),this.__bool__=()=>new ESBoolean(!0),this.__call__=(e=[])=>{var t,n,i,r,s;const o=this.__closure__,a=this.__value__;if(a instanceof Node){const l=generateESFunctionCallContext(e,this,o);if(l instanceof ESError)return l;let _=null!==(t=this.this_)&&void 0!==t?t:new ESObject;if(!(_ instanceof ESObject))return new TypeError(Position.unknown,"object",typeof _,_,"'this' must be an object");let u=l.set("this",_);if(u instanceof ESError)return u;const f=a.interpret(l);return f.error?f.error:(void 0!==f.funcReturn&&(f.val=f.funcReturn,f.funcReturn=void 0),this.returnType.includesType(null!==(i=null===(n=f.val)||void 0===n?void 0:n.__type__)&&void 0!==i?i:types.any)?f.val?f.val:new ESUndefined:new TypeError(Position.unknown,this.returnType.__name__,(null===(r=f.val)||void 0===r?void 0:r.typeOf().valueOf())||"undefined",null===(s=f.val)||void 0===s?void 0:s.str().valueOf(),"(from function return)"))}if("function"==typeof a){for(let t=e.length;t<a.length;t++)e.push(new ESUndefined);const t=a({context:o},...e);return t instanceof ESError?t:ESPrimitive.wrap(t)}return new TypeError(Position.unknown,"function",typeof a)},this.arguments_=t,this.info.name=n,this.this_=i,this.returnType=r,this.__closure__=null!=s?s:new Context,this.info.returnType=str(r),this.info.args=t.map((e=>({name:e.name,defaultValue:str(e.defaultValue),type:e.type.info.name,required:!0})))}get name(){var e;return null!==(e=this.info.name)&&void 0!==e?e:"(anonymous)"}set name(e){this.info.name=e}}export class ESBoolean extends ESPrimitive{constructor(e=!1){super(!!e,types.bool),this.__eq__=e=>e instanceof ESBoolean?new ESBoolean(this.valueOf()===e.valueOf()):new TypeError(Position.unknown,"Boolean",e.typeOf().str().valueOf(),e.valueOf()),this.__bool__=()=>this,this.__and__=e=>new ESBoolean(this.bool().valueOf()&&e.bool().valueOf()),this.__or__=e=>new ESBoolean(this.bool().valueOf()||e.bool().valueOf()),this.str=()=>new ESString(this.valueOf()?"true":"false"),this.clone=()=>new ESBoolean(this.valueOf()),this.info={name:str(e),description:`Boolean global constant which evaluates to ${str(e)}, the opposite of ${str(!e)}`,file:"built-in",isBuiltIn:!0,helpLink:"https://en.wikipedia.org/wiki/Boolean_expression"}}}export class ESObject extends ESPrimitive{constructor(e={}){super(e,types.object),this.str=()=>{let e=str(this.valueOf());return"\n"===e[e.length-1]&&(e=e.substr(0,e.length-1)),new ESString(`<ESObject ${e}>`)},this.__eq__=e=>e instanceof ESObject?new ESBoolean(this.valueOf()===e.valueOf()):new ESBoolean,this.__bool__=()=>new ESBoolean(!0),this.__getProperty__=e=>e instanceof ESString&&this.valueOf().hasOwnProperty(e.valueOf())?this.valueOf()[e.valueOf()]:this.hasOwnProperty(e.valueOf())?this[e.valueOf()]:new ESUndefined,this.clone=()=>{let e={},t=this.valueOf();for(let n in t)try{e[n]=t[n].clone()}catch(e){throw Error("Couldn't clone "+str(t[n]))}return new ESObject(e)}}__setProperty__(e,t){e instanceof ESString&&(t instanceof ESPrimitive||(t=ESPrimitive.wrap(t)),this.__value__[e.valueOf()]=t)}}export class ESArray extends ESPrimitive{constructor(e=[]){super(e,types.array),this.str=()=>new ESString(str(this.valueOf())),this.__eq__=e=>e instanceof ESArray?new ESBoolean(this.valueOf()===e.valueOf()):new ESBoolean,this.__bool__=()=>new ESBoolean(this.valueOf().length>0),this.__getProperty__=e=>{var t;if(e instanceof ESString&&this.hasOwnProperty(e.valueOf()))return this[e.valueOf()];if(!(e instanceof ESNumber))return new ESUndefined;let n=e.valueOf();for(;n<0;)n=this.valueOf().length+n;return n<this.valueOf().length?null===(t=this.valueOf()[n])||void 0===t?void 0:t.valueOf():new ESUndefined},this.add=(e,t=new ESNumber(this.len-1))=>(this.len++,this.__value__.splice(t.valueOf(),0,e),new ESNumber(this.len)),this.contains=e=>{for(let t of this.__value__)if(e.valueOf()==t.valueOf())return!0;return!1},this.clone=()=>new ESArray(this.valueOf().map((e=>e.clone()))),this.len=e.length}__setProperty__(e,t){if(!(e instanceof ESNumber))return;t instanceof ESPrimitive||(t=ESPrimitive.wrap(t));let n=e.valueOf();for(;n<0;)n=this.valueOf().length+n;this.__value__[n]=t}}export class ESNamespace extends ESPrimitive{constructor(e,t,n=!1){super(t,types.object),this.clone=()=>{let e={},t=this.valueOf();for(let n in t)try{e[n]=t[n].clone()}catch(e){throw Error("Couldn't clone "+str(t[n]))}return new ESNamespace(this.name,e)},this.str=()=>{const e=Object.keys(this.valueOf());return new ESString(`<Namespace ${str(this.name)}: ${e.slice(0,5)}${e.length>=5?"...":""}>`)},this.__eq__=e=>new ESBoolean(this===e),this.__bool__=()=>new ESBoolean(!0),this.__getProperty__=e=>{if(e instanceof ESString&&this.valueOf().hasOwnProperty(e.valueOf())){const t=this.valueOf()[e.valueOf()];if(t.isAccessible)return t.value}return this.hasOwnProperty(e.valueOf())?ESPrimitive.wrap(this[e.valueOf()]):new ESUndefined},this.info.name=e.valueOf(),this.mutable=n}get name(){return new ESString(this.info.name)}set name(e){this.info.name=e.valueOf()}__setProperty__(e,t){if(!(e instanceof ESString))return;let n=str(e);if(!this.mutable)return new TypeError(Position.unknown,"mutable","immutable",`${str(this.name)}`);t instanceof ESPrimitive||(t=ESPrimitive.wrap(t));const i=this.__value__[n];return i?i.isConstant?new TypeError(Position.unknown,"mutable","immutable",`${str(this.name)}.${n}`):i.isAccessible?void(i.value=t):new TypeError(Position.unknown,"accessible","inaccessible",`${str(this.name)}.${n}`):new ESError(Position.unknown,"SymbolError",`Symbol ${n} is not declared in namespace ${str(this.name)}.`)}}export let types={};types.type=new ESType(!0,"Type"),types[void 0]=new ESType(!0,"Undefined"),types.string=new ESType(!0,"String"),types.array=new ESType(!0,"Array"),types.number=new ESType(!0,"Number"),types.any=new ESType(!0,"Any"),types.function=new ESType(!0,"Function"),types.bool=new ESType(!0,"Boolean"),types.object=new ESType(!0,"Object"),types.error=new ESType(!0,"Error"),types.any.info={name:"any",description:"Matches any other type",file:"built-in",isBuiltIn:!0},types.number.info={name:"any",description:"The ES Number type. Is a a double-precision 64-bit binary format IEEE 754 value, like double in Java and c#",file:"built-in",isBuiltIn:!0},types.string.info={name:"string",description:"The ES String type. Holds an array of characters, and can be defined with any of ', \" and `. Can be indexed like an array.",file:"built-in",isBuiltIn:!0},types.bool.info={name:"bool",description:"The ES Bool type. Exactly two instances exist, true and false.",file:"built-in",isBuiltIn:!0},types.function.info={name:"function",description:"The ES Function type. Is a block of code which executes when called and takes in 0+ parameters.",file:"built-in",isBuiltIn:!0},types.array.info={name:"array",description:"The ES Array type. Defines a set of items of any type which can be accessed by an index with [].",file:"built-in",isBuiltIn:!0},types.object.info={name:"object",description:"The ES Object type. Similar to JS objects or python dictionaries.",file:"built-in",isBuiltIn:!0},types.error.info={name:"error",description:"The ES Error type. Call to throw an error.",file:"built-in",isBuiltIn:!0},types.type.info={name:"type",description:"The ES Type type. Call to get the type of a value at a string.",file:"built-in",isBuiltIn:!0};